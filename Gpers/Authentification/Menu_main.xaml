<UserControl x:Class="Authentification.Menu_main"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Authentification"
             mc:Ignorable="d" 
             xmlns:converters="http://metro.mahapps.com/winfx/xaml/shared"
              xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
              xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
              xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             d:DesignHeight="300" d:DesignWidth="300">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- MahApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive! -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <!-- Accent and AppTheme setting -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Themes/HamburgerMenuTemplate.xaml" />

            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="LargeTileStyle" TargetType="Controls:Tile">
                <Setter Property="Height" Value="125" />
                <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
                <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
                <Setter Property="TitleFontSize" Value="14" />
                <Setter Property="Width" Value="300" />
            </Style>

            <Style x:Key="SmallTileStyle" TargetType="Controls:Tile">
                <Setter Property="Height" Value="125" />
                <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
                <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
                <Setter Property="TitleFontSize" Value="10" />
                <Setter Property="Width" Value="147" />
            </Style>

            

            <!--  This is the template for all menu items. In this sample we use the glyph items.  -->
            <DataTemplate x:Key="HamburgerMenuItem" DataType="{x:Type Controls:HamburgerMenuGlyphItem}">
                <Grid Height="48"  >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="48" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Image Margin="12"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Source="{Binding Glyph}"
                           Stretch="UniformToFill" />
                    <TextBlock Grid.Column="1"
                               VerticalAlignment="Center"
                               FontSize="16"
                               Text="{Binding Label}" />
                </Grid>
            </DataTemplate>

            <!--  This is the template for all option menu items.  -->
            <DataTemplate x:Key="HamburgerOptionsMenuItem" DataType="{x:Type Controls:HamburgerMenuItem}">
                <Grid Height="48">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="48" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <ContentControl Grid.Column="0"
                                    Content="{Binding Tag}"
                                    Focusable="False"
                                    IsTabStop="False" />
                    <TextBlock Grid.Column="1"
                               VerticalAlignment="Center"
                               FontSize="16"
                               Text="{Binding Label}" />
                </Grid>
            </DataTemplate>

            <ObjectDataProvider x:Key="DisplayModeEnumValues"
                                MethodName="GetValues"
                                ObjectType="{x:Type Controls:SplitViewDisplayMode}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="Controls:SplitViewDisplayMode" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <ObjectDataProvider x:Key="VisibilityEnumValues"
                                MethodName="GetValues"
                                ObjectType="{x:Type Visibility}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="Visibility" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <Style x:Key="HamburgerMenuCreatorsItemStyle"
                   BasedOn="{StaticResource HamburgerMenuItemStyle}"
                   TargetType="{x:Type ListBoxItem}">
                <Setter Property="Controls:ItemHelper.ActiveSelectionBackgroundBrush" Value="{DynamicResource AccentBaseColorBrush}" />
                <Setter Property="Controls:ItemHelper.ActiveSelectionForegroundBrush" Value="{DynamicResource AccentBaseColorBrush}" />
                <Setter Property="Controls:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource GrayNormalBrush}" />
                <Setter Property="Controls:ItemHelper.DisabledSelectedBackgroundBrush" Value="Transparent" />
                <Setter Property="Controls:ItemHelper.DisabledSelectedForegroundBrush" Value="{DynamicResource GrayNormalBrush}" />
                <Setter Property="Controls:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource GrayBrush9}" />
                <Setter Property="Controls:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource GrayBrush9}" />
                <Setter Property="Controls:ItemHelper.SelectedBackgroundBrush" Value="{DynamicResource AccentBaseColorBrush}" />
                <Setter Property="Controls:ItemHelper.SelectedForegroundBrush" Value="{DynamicResource AccentBaseColorBrush}" />
            </Style>

            <Style x:Key="HamburgerMenuCreatorsStyle"
                   BasedOn="{StaticResource {x:Type Controls:HamburgerMenu}}"
                   TargetType="{x:Type Controls:HamburgerMenu}">
                <Setter Property="ItemContainerStyle" Value="{StaticResource HamburgerMenuCreatorsItemStyle}" />
                <Setter Property="OptionsItemContainerStyle" Value="{StaticResource HamburgerMenuCreatorsItemStyle}" />
                <Setter Property="PaneBackground" Value="{DynamicResource WhiteBrush}" />
                <Setter Property="PaneForeground" Value="{DynamicResource TextBrush}" />
                <Setter Property="ShowSelectionIndicator"  Value="True" />
            </Style>


        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

       

        <Border Grid.Column="0"
                Margin="0 0 0 0"
                BorderBrush="{DynamicResource IdealForegroundColorBrush}"
                
                BorderThickness="0,0,0,0"
                >

            <Controls:HamburgerMenu x:Name="HamburgerMenuControl"
                                    HamburgerVisibility="Visible"
                                    HamburgerWidth="48"
                                    IsPaneOpen="True"
                                    ItemInvoked="HamburgerMenuControl_OnItemInvoked"
                                    ItemTemplate="{StaticResource HamburgerMenuItem}"
                                    OptionsItemTemplate="{StaticResource HamburgerOptionsMenuItem}"
                                    SelectedIndex="0"
                                    
                                    VerticalScrollBarOnLeftSide="False">
                <!--  Items  -->
                <Controls:HamburgerMenu.ItemsSource >
                    <Controls:HamburgerMenuItemCollection>
                        <Controls:HamburgerMenuGlyphItem Glyph="img/home.png"  Label="Accueil" >
                            <Controls:HamburgerMenuGlyphItem.Tag>
                                <local:welcome_acceil></local:welcome_acceil>
                            </Controls:HamburgerMenuGlyphItem.Tag>
                        </Controls:HamburgerMenuGlyphItem>

                        <Controls:HamburgerMenuGlyphItem Glyph="img/icons8-contacts-filled.png" Label="Personnel" >
                            <Controls:HamburgerMenuGlyphItem.Tag>
                                <local:personel_tiles></local:personel_tiles>
                            </Controls:HamburgerMenuGlyphItem.Tag>
                        </Controls:HamburgerMenuGlyphItem>
                        <Controls:HamburgerMenuGlyphItem Glyph="img/airplane-take-off.png" Label="Congés" >
                            <Controls:HamburgerMenuGlyphItem.Tag>
                                <local:Congées_tiles></local:Congées_tiles>
                            </Controls:HamburgerMenuGlyphItem.Tag>
                        </Controls:HamburgerMenuGlyphItem>
                        <Controls:HamburgerMenuGlyphItem  Glyph="img/81182-200.png" Label="Recrutement" >
                            <Controls:HamburgerMenuGlyphItem.Tag>
                                <local:recrutement_tiles></local:recrutement_tiles>
                            </Controls:HamburgerMenuGlyphItem.Tag>
                        </Controls:HamburgerMenuGlyphItem>
                        <Controls:HamburgerMenuGlyphItem  Glyph="img/target.png" Label="Objectifs et évaluation" >
                            <Controls:HamburgerMenuGlyphItem.Tag>
                                <local:objectif_tiles></local:objectif_tiles>
                            </Controls:HamburgerMenuGlyphItem.Tag>
                        </Controls:HamburgerMenuGlyphItem>
                    </Controls:HamburgerMenuItemCollection>
                </Controls:HamburgerMenu.ItemsSource>


                <!--  Content  -->
                <Controls:HamburgerMenu.ContentTemplate>
                    <DataTemplate>
                        <Grid x:Name="ContentGrid">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="48" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0">
                                <TextBlock x:Name="Header"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           FontSize="24"
                                           Text="{Binding Label}" />
                            </Border>
                            <ContentControl x:Name="TheContent"
                            Grid.Row="1"
                            Focusable="False"
                            Content="{Binding Tag}" />
                            <Controls:TransitioningContentControl Grid.Row="1"
                                                                  Content="{Binding Tag}"
                                                                  RestartTransitionOnContentChange="True"
                                                                  Transition="Default">
                                <Controls:TransitioningContentControl.ContentTemplate>
                                    <DataTemplate>
                                        <Image Source="{Binding Mode=OneWay, Converter={converters:NullToUnsetValueConverter}}" />
                                    </DataTemplate>
                                </Controls:TransitioningContentControl.ContentTemplate>
                            </Controls:TransitioningContentControl>
                        </Grid>
                    </DataTemplate>
                </Controls:HamburgerMenu.ContentTemplate>

            </Controls:HamburgerMenu>

        </Border>
    </Grid>
</UserControl>
