<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.SfSpreadsheet.WPF</name>
    </assembly>
    <members>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase">
            <summary>
            Represents the base cell renderer for cell types used in SfSpreadsheet. 
            <para/>
            If you want to implement a renderer with support for live UIElements inside the cell you should derive from the 
            <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase"/> or grid adapted SpreadsheetVirtualizingCellRendererBase classes.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer">
            <summary>
            Provides the functionality for all cell renderers in the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.     
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer.Arrange(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.UIElement,System.Windows.Rect)">
            <summary>
            Invoked when the visual children of cell is arranged in view. 
            </summary>
            <param name="cellRowColumnIndex">
            The Coordinates of the cell.
            </param>
            <param name="uiElement">
            The corresponding UIElement that is to be arranged.
            </param>
            <param name="cellRect">
            The corresponding size of cell element for arranging the UIElement.
            </param>       
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer.Measure(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.UIElement,System.Windows.Size)">
            <summary>
            Determines the size of the current cell in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="cellRowColumnIndex">Coordinates of a cell.</param>
            <param name="uiElement">Corresponing UI element to measure .</param>
            <param name="availableSize">The size of element.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer.PrepareUIElements(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,Syncfusion.UI.Xaml.CellGrid.GridCell,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,System.Boolean)">
            <summary>
            Invoked when the UIElement for cell is prepared to render it in view .
            <see cref="!: Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase"/> overrides this method and
            creates new UIElements and wires them with the parent cells control.
            </summary>
            <param name="cellRowColumnIndex">Coordinates of a cell.</param>
            <param name="cellContainer">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>.</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.</param>
            <param name="isInEdit">True or False.</param>
            <returns>An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer.UpdateCellStyle(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,Syncfusion.UI.Xaml.CellGrid.GridCell,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,System.Boolean)">
            <summary>
            Updates the style for the current cell in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="cellRowColumnIndex">Coordinates of cell.</param>
            <param name="uiElement">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>.</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.</param>
            <param name="isInEdit">True or False.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer.UnloadUIElements(Syncfusion.UI.Xaml.CellGrid.GridCell)">
            <summary>
            Invoked when the cell is scrolled out of view or unloaded from the view.
            <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2"/> overrides this method and either removes the cell renderer visuals from the parent
            or hide them and reuse it later in same element depending on whether <see cref="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2.AllowRecycle"/>  was set.
            </summary>
            <param name="uiElement">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer.GetFormattedText(Syncfusion.XlsIO.IStyle)">
            <summary>
            Used to get the formatted text for the particular cell
            </summary>
            <param name="style">An instance of <see cref="T:Syncfusion.XlsIO.IStyle"/>.</param>
            <returns>An empty string</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer.BeginEdit(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,Syncfusion.UI.Xaml.CellGrid.GridCell,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Invoked when the current cell in the view starts the editing process.
            </summary>
            <param name="CellRowColumnIndex">Coordinates of a cell.</param>
            <param name="EditElement">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>.</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.</param>
            <returns>Returns <b>true</b> if the current cell starts an editing; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer.EndEdit(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,Syncfusion.UI.Xaml.CellGrid.GridCell,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Ends the editing operation occuring in the cell.
            </summary>
            <param name="cellRowColumnIndex">Cooridantes of a cell.</param>
            <param name="cellElement">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>.</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.</param>
            <returns>Returns <b>true</b> if the edit ends on the cell ; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer.SetCurrentCellState(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.UIElement,System.Boolean,System.Boolean)">
            <summary>
            Set the current cell state when the current cell is active.
            </summary>
            <param name="currentCellIndex">Coordinates of a current cell</param>
            <param name="currentCellElement">An instance of <see cref="T:System.Windows.UIElement"/>.</param>
            <param name="isInEditing">True or False .</param>
            <param name="isFocused">True or False .</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer.ResetCurrentCellState">
            <summary>
            Resets or updates the current cell state and style.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer.ClearRecycleBin">
            <summary>
            Clears all the items from RecycleBin.
            </summary> 
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer.RaiseSaveChanges">
            <summary>
            Invoked to save the current cell changes in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>
            </summary>  
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer.SetFocus(System.Boolean)">
            <summary>
            Used to invoke the Focus method to set the focus on the given UIElement.
            </summary>
            <param name="needToFocus">True or False .</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer.SetControlValue(System.Object)">
            <summary>
            Used to set the value for the current cell.
            </summary>
            <param name="value">Current cell value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer.GetControlValue">
            <summary>
            Used to get the control value for the current cell.
            </summary>
            <returns>null.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer.ShouldGridTryToHandleKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Handles all the key down operations for the current cell in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.KeyEventArgs">KeyEventArgs</see> that contains the event data.</param>
            <returns>True or False.</returns> 
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
            <summary>
            Invoked when the element gets input text.
            </summary>
            <param name="args">An <see cref="T:System.Windows.Input.TextCompositionEventArgs">TextCompositionEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer.Render(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Media.DrawingContext,System.Windows.Rect,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,System.Object)">
            <summary>
            Draws or renders the content of the given text element in the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.
            </summary>
            <param name="CellRowColumnIndex">Coordinates of a cell.</param>
            <param name="dc">An instance of <see cref="T:System.Windows.Media.DrawingContext"/>.</param>
            <param name="cellRect">An instance <see cref="T:System.Windows.Rect"/> of cell.</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.</param>
            <param name="textElement">User defined text element.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer.AllowEditInFormulaBar">
            <summary>
            Gets or sets the value indicating whether the user is allowed to edit the cell using formula bar or not.
            </summary>
            <value>True if the cell can be edited using formula bar; otherwise false.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer.HasCurrentCellState">
            <summary>
            Gets a value indicating whether the current cell renderer is set or not.
            </summary>
            <value>
            Returns <b>true</b> if the current cell state is maintained; otherwise , <b>false</b>.
            </value> 
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer.Grid">
            <summary>
            Gets or sets the value indicating the instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.SfCellGrid"/>.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.SfCellGrid"/></value>.
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer.SupportDrawingOptimization">
            <summary>
            Gets or sets a value whether the cell content should be drawn or not. If true, draw its content else loads display element to display its content.
            </summary>
            <value><see langword="true"/> if the user wants to draw the content instead of loading the display uiElement; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer.SupportRenderOptimization">
            <summary>
            Gets or sets a value indicates whether the edit element directly loads to display the content even the cell is not in edit mode. 
            </summary>      
            <value>
            <b>true</b> if the renderer supports directly to the drawing context ; otherwise, <b>false</b>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer.DisplayElementOptimization">
            <summary>
            Gets or sets a value indicating whether to load the UIElement to display its content or not.
            </summary>
            <value><see langword="true"/> it will loads the display element for the cell only when it have content which should not empty; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer.UseOnlyRendererElement">
            <summary>
            Gets or sets a value indicates whether to use the cell element (GridCell) to display its content.
            </summary>      
            <value>
            <b>true</b> if the grid cell is placed inside the renderer element; otherwise, <b>false</b>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer.CurrentCellRendererElement">
            <summary>
            Gets a value indicating edit UIElement of current cell. It should be null when current cell is not in editing.
            </summary>
            <value>An instance of <see cref="T:System.Windows.UIElement"/></value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer.CurrentCellElement">
            <summary>
            Gets a value indicating the current cell(<see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>) UIElement in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <value>An instance of <see cref="T:System.Windows.UIElement"/></value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase">SpreadsheetCellRendererBase</see> class. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.OnRender(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Media.DrawingContext,System.Windows.Rect,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,System.Object)">
            <summary>
            Used to render the content of the cell. It must be override in derived class, and use their own logic to render the content.
            </summary>
            <param name="cellRowColumnIndex">Coordinates of a cell.</param>
            <param name="dc">The drawing instructions for a specific element. This context is provided to the layout system.</param>
            <param name="cellRect">An instance <see cref="T:System.Windows.Rect"/> of cell.</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.</param>
            <param name="textElement">User defined text element.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.OnArrange(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.UIElement,System.Windows.Rect)">
            <summary>
            Invoked when the visual children of cell is arranged in view. 
            </summary>
            <param name="cellRowColumnIndex">
            The Coordinates of the cell.
            </param>
            <param name="uiElement">
            The corresponding UIElement that is to be arranged
            </param>
            <param name="cellRect">
            The corresponding size of cell element for arranging the UIElement
            </param>       
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.OnMeasure(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.UIElement,System.Windows.Size)">
            <summary>
            Determines the size of the current cell in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="cellRowColumnIndex">Coordinates of a cell.</param>
            <param name="uiElement">Corresponing UI element to measure .</param>
            <param name="availableSize">The size of element.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.OnPrepareUIElements(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,Syncfusion.UI.Xaml.CellGrid.GridCell,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,System.Boolean)">
            <summary>
            Invoked when the UIElement for cell is prepared to render it in view .
            <see cref="!: Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase"/> overrides this method and
            creates new UIElements and wires them with the parent cells control.
            </summary>
            <param name="cellRowColumnIndex">Coordinates of a cell.</param>
            <param name="cellContainer">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>.</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.</param>
            <param name="isInEdit">True or False.</param>
            <returns>An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.OnUnloadUIElements(Syncfusion.UI.Xaml.CellGrid.GridCell)">
            <summary>
            Invoked when the cell is scrolled out of view or unloaded from the view.
            <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2"/> overrides this method and either removes the cell renderer visuals from the parent
            or hide them and reuse it later in same element depending on whether <see cref="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2.AllowRecycle"/>  was set.
            </summary>
            <param name="uiElement">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.GetFormattedText(Syncfusion.XlsIO.IStyle)">
            <summary>
            Used to get the formatted text for the particular cell.
            </summary>
            <param name="style">An instance of <see cref="T:Syncfusion.XlsIO.IStyle"/>.</param>
            <returns>An empty string</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.BeginEdit(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,Syncfusion.UI.Xaml.CellGrid.GridCell,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Invoked when the current cell in the view starts the editing process.
            </summary>
            <param name="CellRowColumnIndex">Coordinates of a cell.</param>
            <param name="cellContainer">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>.</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.</param>
            <returns>Returns <b>true</b> if the current cell starts an editing; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.EndEdit(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,Syncfusion.UI.Xaml.CellGrid.GridCell,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Ends the editing operation occuring in the cell.
            </summary>
            <param name="cellRowColumnIndex">Cooridantes of a cell.</param>
            <param name="cellContainer">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>.</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.</param>
            <returns>Returns <b>true</b> if the edit ends on the cell ; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.ShouldGridTryToHandleKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Handles all the key down operations for the current cell in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.KeyEventArgs">KeyEventArgs</see> that contains the event data.</param>
            <returns>True or False.</returns>       
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.CurrentCellValueChanged(System.String)">
            <summary>
            Invoked when the current cell value is changed in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="ChangedText">Text to be changed.</param>
            <remarks>It also updates the floating cell with current text size.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.OnSaveChanges">
            <summary>
            Updates the changes of current cell in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.RefreshContent">
            <summary>
            Refreshes the content of the current cell in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.SetControlValue(System.Object)">
            <summary>
            Used to set the value for the current cell.
            </summary>
            <param name="value">Current cell's value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.GetControlValue">
            <summary>
            Used to get the control value for the current cell.
            </summary>
            <returns>null.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.SetFocus(System.Windows.UIElement,System.Boolean)">
            <summary>
            Invoked to set the focus to the UIElement.
            </summary>
            <param name="uiElement">An instance of <see cref="N:System.Windows"/>.</param>
            <param name="needToFocus"><see langword="true"/>if keyboard focus and logical focus were set to this element; <see langword="false"/> if only logical focus was set to this element, or if the call to this method did not force the focus to change. </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.UpdateCellStyle(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,Syncfusion.UI.Xaml.CellGrid.GridCell,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,System.Boolean)">
            <summary>
            Updates the style for the current cell in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="cellRowColumnIndex">Coordinates of cell.</param>
            <param name="uiElement">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>.</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.</param>
            <param name="isInEdit">True or False.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.ClearRecycleBin">
            <summary>
            Clears all the items from RecycleBin.
            </summary>     
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.Arrange(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.UIElement,System.Windows.Rect)">
            <summary>
            Invoked when the visual children of cell is arranged in view. 
            </summary>
            <param name="cellRowColumnIndex">
            The Coordinates of the cell.
            </param>
            <param name="uiElement">
            The corresponding UIElement that is to be arranged
            </param>
            <param name="cellRect">
            The corresponding size of cell element for arranging the UIElement
            </param>       
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.Measure(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.UIElement,System.Windows.Size)">
            <summary>
            Determines the size of the current cell in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>
            </summary>
            <param name="cellRowColumnIndex">Coordinates of a cell</param>
            <param name="uiElement">Corresponing UI element to measure </param>
            <param name="availableSize">The size of element</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.PrepareUIElements(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,Syncfusion.UI.Xaml.CellGrid.GridCell,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,System.Boolean)">
            <summary>
            Invoked when the UIElement for cell is prepared to render it in view .
            <see cref="!: Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase"/> overrides this method and
            creates new UIElements and wires them with the parent cells control.
            </summary>
            <param name="cellRowColumnIndex">Coordinates of a cell</param>
            <param name="cellContainer">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/></param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/></param>
            <param name="isInEdit">True or False</param>
            <returns>An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.UnloadUIElements(Syncfusion.UI.Xaml.CellGrid.GridCell)">
            <summary>
            Invoked when the cell is scrolled out of view or unloaded from the view.
            <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2"/> overrides this method and either removes the cell renderer visuals from the parent
            or hide them and reuse it later in same element depending on whether <see cref="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2.AllowRecycle"/>  was set.
            </summary>
            <param name="uiElement">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
            <summary>
            Invoked when the element gets input text
            </summary>
            <param name="args">An <see cref="T:System.Windows.Input.TextCompositionEventArgs">TextCompositionEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.TextInput(System.Windows.Input.TextCompositionEventArgs)">
            <summary>
            Invoked when the element gets input through keyboard
            </summary>
            <param name="args">An <see cref="T:System.Windows.Input.TextCompositionEventArgs">TextCompositionEventArgs</see> that contains the event data.</param>
            <remarks>This function checks if the input text is backspace, then empty text is set; else the entered input is set</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.Render(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Media.DrawingContext,System.Windows.Rect,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,System.Object)">
            <summary>
            Draws or renders the content of the given text element in the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>
            </summary>
            <param name="CellRowColumnIndex">Coordinates of a cell</param>
            <param name="dc">An instance of <see cref="T:System.Windows.Media.DrawingContext"/></param>
            <param name="cellRect">An instance <see cref="T:System.Windows.Rect"/> of cell</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/></param>
            <param name="textElement">Text element</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.UpdateCurrentCellState(System.Windows.UIElement,System.Boolean)">
            <summary>
            Updates the current cell state for the specified current cell renderer element.
            </summary>
            <param name="currentRendererElement">Current cell renderer element.</param>
            <param name="isInEdit">True or False</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.SetCurrentCellState(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.UIElement,System.Boolean,System.Boolean)">
            <summary>
            Set the current cell state when the current cell is active.
            </summary>
            <param name="currentCellIndex">Coordinates of a current cell.</param>
            <param name="currentCellElement">An instance of System.Windows.UIElement.</param>
            <param name="isInEditing">True or False .</param>
            <param name="isFocused">True or False .</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.ResetCurrentCellState">
            <summary>
            Resets or updates the current cell state and style.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.RaiseSaveChanges">
            <summary>
            Invoked to save the current cell changes in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>     
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.SetFocus(System.Boolean)">
            <summary>
            Used to invoke the Focus method to set the focus on the given UIElement.
            </summary>
            <param name="needToFocus">True or False .</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase">SpreadsheetCellRendererBase</see>.
            </summary>
            <remarks>Performs application-defined tasks associated with freeing, releasing, or
            resetting unmanaged resources.</remarks>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.PreviewInputText">
            <summary>
            Gets or sets a value indicating the input text for the renderer .
            </summary>
            <value>The text for the renderer</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.IsEditable">
            <summary>
            Gets or sets a value indicating whether the user can perform editing on this cell type.
            </summary>
            <value><see langword="true"/> if the user able to perform edit operation ; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.IsFocusible">
            <summary>
            Gets or sets a value indicating whether the user is able to focus the UIElement or not .
            </summary>
            <value><see langword="true"/> if the user can able to focus the element ; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.HasCurrentCellState">
            <summary>
            Gets a value indicating whether the current cell renderer is set or not.
            </summary>
            <value>
            Returns <b>true</b> if the current cell state is maintained; otherwise , <b>false</b>.
            </value> 
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.CurrentCellIndex">
            <summary>
            Gets a value indicating the current cell's coordinates.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/></value>
            <exception cref="T:System.InvalidOperationException"> 
            Thrown when the CurrentCellIndex is accessed before the current cell is maintained. 
            </exception>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.CurrentCellElement">
            <summary>
            Gets a value indicating the current cell(<see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>) UIElement in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>
            </summary>
            <value>An instance of <see cref="T:System.Windows.UIElement"/></value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.CurrentCellRendererElement">
            <summary>
            Gets a value indicating edit UIElement of current cell. It should be null when current cell is not in editing.
            </summary>
            <value>An instance of <see cref="T:System.Windows.UIElement"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.CurrentStyle">
            <summary>
            Gets a value indicating the style information for the current cell in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.XlsIO.IStyle"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.IsInEditing">
            <summary>
            Gets or sets a value indicating whether the current cell is in editing or not.
            </summary>
            <value><see langword="true"/> if the user can perform the editing in the current cell; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.IsFocused">
            <summary>
            Gets or sets a value indicating whether the focus is set on the current cell in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/> .
            </summary>
            <value><see langword="true"/> if the focus is set on current cell ; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.DisplayElementOptimization">
             <summary>
            Gets or sets a value indicating whether to load the UIElement to display its content or not.
             </summary>
             <value><see langword="true"/> if it loads the display Element for the cell only when the content is not empty; otherwise, <see langword="false"/>.</value>
             <remarks>If true, it will loads the display element for the cell only when it have content. It the cell is empty, then it doesn’t load the display element.</remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.SupportRenderOptimization">
             <summary>
            Gets or sets a value indicates whether the edit element directly loads to display the content even the cell is not in edit mode. 
             </summary>      
             <value>
             <b>true</b> if the renderer supports directly to the drawing context ; otherwise, <b>false</b>.
             </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.UseOnlyRendererElement">
            <summary>
            Gets or sets a value indicates whether to use the cell element (GridCell) to display its content.
            </summary>      
            <value>
            <b>true</b> if the grid cell is placed inside the renderer element; otherwise, <b>false</b>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.SupportDrawingOptimization">
            <summary>
            Gets or sets a value whether the cell content should be drawn or not. 
            </summary>
            <value><see langword="true"/> draw its content; else  loads display element to display its content.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.MoveCurrentCell">
            <summary>
            Gets or sets a value whether the current cell can be moved by pressing the arrow keys while editing.
            </summary>
            <value>True or False</value>
            <remarks>Set as true, when current cell is first time edit the text or directly edit the text if that cell is not in edit mode whether cell is empty or not empty.
            And also if true, then only move the current cell when up or down key is pressed otherwise not move.
            Otherwise set as false.</remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.AllowEditInFormulaBar">
            <summary>
            Gets or sets the value indicating whether the user is allowed to edit the cell using formula bar or not
            </summary>
            <value>True if the cell can be edited using formula bar; otherwise false</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.Grid">
            <summary>
            Gets or sets the value indicating the instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.SfCellGrid"/>
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.SfCellGrid"/></value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection">
            <summary>
            Represents a collection of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase"/> objects in the view.
            </summary>
            <remarks>
            The <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection"/> uses standard <see cref="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.Add(System.String,Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer)"/> and <see cref="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.Remove(System.String)"/>
            methods to manipulate the collection.
            Use the Contains method to determine if a specific cell type exists in the collection.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection">SpreadsheetCellRendererCollection</see> class. 
            </summary>
            <param name="cellgrid">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Component and optionally releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</param>
            <remarks>See the documentation for the <see cref="N:System.ComponentModel"/> class and its Dispose member.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.Add(System.String,Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer)">
            <summary>
            Add the Renderers to the Renderer dictionary.
            </summary>
            <param name="key">Key to the SpreadsheetCellRenderer Collection.</param>
            <param name="renderer">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.Remove(System.String)">
            <summary>
            Remove the Renderer from dictionary for corresponding key value.
            </summary>
            <param name="key">Key to the SpreadsheetCellRenderer Collection.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.ContainsKey(System.String)">
            <summary>
            Checks whether the Renderer Dictionary contains the corresponding renderer Key.
            </summary>
            <param name="key">Key to the SpreadsheetCellRenderer Collection.</param>
            <returns>True if the collection contains the key;otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.ContainsValue(Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer)">
            <summary>
            Checks whether the Renderer Dictionary contains the corresponding renderer.
            </summary>
            <param name="cellRenderer">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase"/>. </param>
            <returns>True if the collection contains specific value; otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.CopyTo(Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer[],System.Int32)">
            <summary>
            Copies the renderer elements of the System.Collections.ICollection to an System.Array, starting at a particular System.Array index.
            </summary>
            <param name="array">Collection of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase"/>.</param>
            <param name="index">Index of the renderer element.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.Clear">
            <summary>
            Clears the values in Renderer Dictionary.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an
            <see cref="T:System.Array" />, starting at a particular <see
            cref="T:System.Array" /> index.
            </summary>
            <param name="index">The zero-based index in <paramref name="array" /> at which
            copying begins. </param>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is
            the destination of the elements copied from <see
            cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" />
            must have zero-based indexing. </param>
            <filterpriority>2</filterpriority>
            <exception cref="T:System.ArgumentException"><paramref name="array" /> is
            multidimensional.-or- The number of elements in the source <see
            cref="T:System.Collections.ICollection" /> is greater than the available space
            from <paramref name="index" /> to the end of the destination <paramref
            name="array" />.-or-The type of the source <see
            cref="T:System.Collections.ICollection" /> cannot be cast automatically to the
            type of the destination <paramref name="array" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" />
            is less than zero. </exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="array" /> is
            null. </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.GetEnumerator">
            <summary>
            Returns the Enumerator that iterates through collection for retriving the values.
            </summary>
            <returns>Content of the SpreadsheetCellRenderer collection </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.Item(System.String)">
            <summary>
            Gets or sets the value indicating the Indexer which will return the renderer for the corresponding key value.
            </summary>
            <param name="key">An Index of the renderer.</param>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.Values">
            <summary>
            Gets the value indicating the renderers in the collection.
            </summary>
            <value>The values in the hashtable.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.Keys">
            <summary>
            Gets the value indicating the keys in the renderer collection.
            </summary>
            <value>Keys in the hashtable.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.Count">
            <summary>
            Gets the number of elements contained in the <see
            cref="T:System.Collections.ICollection" />.
            </summary>
            <returns>
            The number of elements contained in the <see
            cref="T:System.Collections.ICollection" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see
            cref="T:System.Collections.ICollection" /> is synchronized (thread safe).
            </summary>
            <returns>
            true if access to the <see cref="T:System.Collections.ICollection" /> is
            synchronized (thread safe); otherwise, false.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see
            cref="T:System.Collections.ICollection" />.
            </summary>
            <returns>
            An object that can be used to synchronize access to the <see
            cref="T:System.Collections.ICollection" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2">
            <summary>
            VirtualizingCellRendererBase is an abstract base class for cell renderers
            that need live UIElement visuals displayed in a cell. You can derive from
            this class and provide the type of the UIElement you want to show inside cells
            as type parameter. The class provides strong typed virtual methods for 
            initializing content of the cell and arranging the cell visuals.
            <para/>
            The class manages the creation 
            of cells UIElement objects when the cell is scrolled into view and also 
            unloading of the elements. The class offers an optimization in which 
            elements can be recycled when <see cref="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2.AllowRecycle"/> is set. 
            In this case when a cell is scrolled out of view
            it is moved into a recycle bin and the next time a new element is scrolled into
            view the element is recovered from the recycle bin and reinitialized with the
            new content of the cell.<para/>
            when the user moves the mouse over the cell or if the UIElement is needed for
            other reasons.<para/>
            After a UIElement was created the virtual methods <see cref="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2.WireEditUIElement(`1)"/> 
            and <see cref="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2.UnwireEditUIElement(`1)"/> are called to wire any event listeners.
            <para/>
            Updates to appearance and content of child elements, creation and unloading
            of elements will not trigger ArrangeOverride or Render calls in parent canvas.
            <para/>
            </summary>
            <typeparam name="D">The type of the UIElement that should be placed inside cells in display mode.</typeparam>
            <typeparam name="E">The type of the UIElement that should be placed inside cells in edit mode.</typeparam>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2.DisplayRecycleBin">
            <summary>
            Creates a new instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.VirtualizingCellUIElementBin`1"/> class.
            </summary>     
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2.TemplateRecycleBin">
            <summary>
            Creates a new instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.VirtualizingCellUIElementBin`1"/> class. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2.EditRecycleBin">
            <summary>
            Creates a new instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.VirtualizingCellUIElementBin`1"/> class. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2">SpreadsheetVirtualizingCellRendererBase</see> class. 
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2.OnPrepareUIElements(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,Syncfusion.UI.Xaml.CellGrid.GridCell,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,System.Boolean)">
            <summary>
            Invoked when the UIElement for cell is prepared to render it in view .
            <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase"/> overrides this method and
            creates new UIElements and wires them with the parent cells control.
            </summary>
            <param name="cellRowColumnIndex">Coordinates of a cell.</param>
            <param name="cellContainer">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>.</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.</param>
            <param name="isInEdit">Specifies whether the element is editable or not.</param>
            <returns>An instance of new <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2.UpdateCellStyle(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,Syncfusion.UI.Xaml.CellGrid.GridCell,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,System.Boolean)">
            <summary>
            Updates the style for the current cell in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="cellRowColumnIndex">Coordinates of cell.</param>
            <param name="uiElement">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>.</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.</param>
            <param name="isInEdit">True or False</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2.BeginEdit(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,Syncfusion.UI.Xaml.CellGrid.GridCell,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Invoked when the current cell in the view starts the editing process.
            </summary>
            <param name="cellRowColumnIndex">Coordinates of a cell.</param>
            <param name="cellContainer">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>.</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.</param>
            <returns>Returns <b>true</b> if the current cell starts an editing; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2.OnEnteredEditMode(System.Windows.UIElement)">
            <summary>
            Invoked when the cell is being entered into the edit mode.
            </summary>
            <param name="currentRendererElement">An instance of <see cref="T:System.Windows.UIElement"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2.OnEditingComplete(System.Windows.UIElement)">
            <summary>
            Invoked when the editing operation is completed on the cell.
            </summary>
            <param name="currentRendererElement">An instance of <see cref="T:System.Windows.UIElement"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2.EndEdit(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,Syncfusion.UI.Xaml.CellGrid.GridCell,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Ends the editing operation occuring in the cell.
            </summary>
            <param name="cellRowColumnIndex">Cooridantes of a cell.</param>
            <param name="cellContainer">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>.</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.</param>
            <returns>Returns <b>true</b> if the edit ends on the cell ; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2.OnUnloadUIElements(Syncfusion.UI.Xaml.CellGrid.GridCell)">
            <summary>
            Invoked when the cell is scrolled out of view or unloaded from the view.
            <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2"/> overrides this method and either removes the cell renderer visuals from the parent
            or hide them and reuse it later in same element depending on whether <see cref="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2.AllowRecycle"/>  was set.
            </summary>
            <param name="uiElement">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2.OnArrange(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.UIElement,System.Windows.Rect)">
            <summary>
            Invoked when the visual children of cell is arranged in view. 
            </summary>
            <param name="cellRowColumnIndex">
            The Coordinates of the cell.
            </param>
            <param name="uiElement">
            The corresponding UIElement that is to be arranged.
            </param>
            <param name="cellRect">
            The corresponding size of cell element for arranging the UIElement.
            </param>        
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2.OnMeasure(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.UIElement,System.Windows.Size)">
            <summary>
            Invoked to determine the size of the current cell.
            </summary>
            <param name="cellRowColumnIndex">Coordinates of a cell.</param>
            <param name="uiElement">The corresponding UIElement to measure.</param>
            <param name="availableSize">The size of element.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2.ClearRecycleBin">
            <summary>
            Clears all the items from RecycleBin.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase">SpreadsheetVirtualizingCellRendererBase</see>.
            </summary>
            <remarks>Performs application-defined tasks associated with freeing, releasing, or
            resetting unmanaged resources.</remarks>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2.OnCreateEditUIElement">
            <summary>
            Creates a new UIElement for the edit mode of cell.
            </summary>
            <returns>A UIElement for the edit mode.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2.OnCreateDisplayUIElement">
            <summary>
            Creates a new UIElement for the display mode of cell.
            </summary>
            <returns>A UIElement for the display mode.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2.OnCreateTemplateUIElement">
            <summary>
            Creates a new template UIElement for the cell.
            </summary>
            <returns>An instance of System.Windows.Controls.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2.OnUpdateCellStyle(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,`0,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Updates the style and content for display element.
            </summary>
            <param name="cellRowColumnIndex">Coordinates of a cell.</param>
            <param name="uiElement">UIelement of the Display mode.</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2.OnUpdateTemplateElement(System.Windows.Controls.ContentControl,Syncfusion.XlsIO.IStyle)">
            <summary>
            Updates the Template UIElement with particular style info.
            </summary>
            <param name="uiElement">Corresponding UIElement to update the template element.</param>
            <param name="style">An instance of <see cref="T:Syncfusion.XlsIO.IStyle"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2.OnUpdateEditCellStyle(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,`1,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Updates the style and content for the edit element.
            </summary>
            <param name="cellRowColumnIndex">Coordinates of a cell.</param>
            <param name="uiElement">Corresponding UIElement to update the edit element.</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2.OnWireEditUIElement(`1)">
            <summary>
            Wires the events associated with edit UIElement.
            </summary>
            <param name="uiElement">
            The corresponding edit UIElement to wire its events.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2.OnUnwireEditUIElement(`1)">
            <summary>
            Unwires the events associated with edit UIElement.
            </summary>
            <param name="uiElement">
            The corresponding edit UIElement to unwire its events.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2.OnWireDisplayUIElement(`0)">
            <summary>
            Wires the events associated with display UIElement.
            </summary>
            <param name="uiElement">
            The corresponding display UIElement to wire its events.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2.OnUnwireDisplayUIElement(`0)">
            <summary>
            Unwires the events associated with display UIElement.
            </summary>
            <param name="uiElement">
            The corresponding display UIElement to unwire its events.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2.OnWireTemplateUIElement(System.Windows.Controls.ContentControl)">
            <summary>
            Wires the events associated with template UIElement.
            </summary>
            <param name="uiElement">
            The corresponding template UIElement to wire its events.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2.OnUnWireTemplateUIElement(System.Windows.Controls.ContentControl)">
            <summary>
            Unwires the events associated with template UIElement.
            </summary>
            <param name="uiElement">
            The corresponding template UIElement to unwire its events.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2.OnEditElementLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when the Edit UIElement loaded in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:System.Windows.RoutedEventArgs">RoutedEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2.OnEditElementLostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when the Edit UIElement loses its logical focus.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:System.Windows.RoutedEventArgs">RoutedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2.OnInitializeDisplayElement(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,`0,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Invoked when the display element is initialized on the cell.
            </summary>
            <param name="rowColumnIndex">Coordinates of cell.</param>
            <param name="uiElement">The display UIElement.</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2.OnInitializeEditElement(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,`1,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Invoked when the edit element is initialized on the cell
            </summary>
            <param name="rowColumnIndex">&gt;Coordinates of cell</param>
            <param name="uiElement">The edit UIElement</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2.InitializeEditElement(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,`1,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Invoked when the edit element is initialized on the cell.
            </summary>
            <param name="rowColumnIndex">&gt;Coordinates of cell.</param>
            <param name="uiElement">The edit UIElement.</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2.InitializeDisplayElement(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,`0,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Invoked when the display element is initialized on the cell.
            </summary>
            <param name="rowColumnIndex">Coordinates of cell.</param>
            <param name="uiElement">The display UIElement.</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`2.AllowRecycle">
            <summary>
            Gets or sets a value indicating whether elements can be recycled when scrolled out of view.
            In this case when a cell is scrolled out of view
            it is moved into a recycle bin and the next time a new element is scrolled into
            view the element is recovered from the recycle bin and reinitialized with the
            new content of the cell. The default value is false.
            </summary>
            <value><c>true</c> if elements can be recycled when scrolled out of view; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.NamespaceDoc">
            <summary>
            Contains interface and classes to create the renderers for all supported cell types. 
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.VirtualizingCellUIElementBin`1">
            <summary>
            This class implements a cache of UIElement of the given type parameter T. It is used
            by the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.VirtualizingCellUIElementBin`1"/> renderer to recycle UIElement 
            elements for cells that were scrolled out of view and delay unloading of UIElements.
            This reduces the number of times the UIElement needs to be created or unloaded and
            instead only the contents of the UIElement will be reinitialized with cell contents. <para/>
            </summary>
            <typeparam name="T">Type of the Element</typeparam>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.VirtualizingCellUIElementBin`1.Enqueue(Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer,`0)">
            <summary>
            Enqueues the specified UI element.
            </summary>
            <param name="renderer">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer"/>.</param>
            <param name="uiElement">The UIElement.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.VirtualizingCellUIElementBin`1.Dequeue(Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer)">
            <summary>
            Dequeues an UIElement from the specified canvas.
            </summary>
            <param name="renderer">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer"/>.</param>
            <returns>An UIElement</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.VirtualizingCellUIElementBin`1.Item(Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer)">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.Queue`1"/> for the specified Renderer.
            </summary>
            <value>An instance of <see cref="T:System.Collections.Generic.Queue`1"/>. </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.NamespaceDoc">
            <summary>
            Contains classes and dialog windows to perform all user actions.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandBase">
            <summary>
            Base Command used for defining commands
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandBase.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for CommandBase class
            </summary>
            <param name="spreadsheetControl">The Spreadhsheet Control</param>
            <param name="commandName">The Spreadhsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandBase.OnCanExecute(System.Object)">
            <summary>
            returns  
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandBase.Execute(System.Object)">
            <summary>
            used to Execute the CommandBase
            </summary>
            <param name="parameter">true or false</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandBase.OnExecute(System.Object)">
            <summary>
            Used to Execute the Specified Command
            </summary>
            <param name="parameter">returns true or false</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandBase.SfSpreadsheet">
            <summary>
            The SfSpreadsheet Control
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandBase.CanExecuteChanged">
            <summary>
            Event is used to handle when OnCanExecute is changed
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandExtensions">
            <summary>
            Provides the Interaction logic for commands in SfSpreadsheet
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandExtensions.FocusActiveGrid(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Set the Focus to the Active SpreadsheetGrid<see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>
            </summary>
            <param name="spreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandExtensions.ChangeFontFamily(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Changes the font family for the selected cell/range of cells.
            </summary>
            <param name="SfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/> </param>
            <param name="fontFamily">Name of the FontFamily to be changed</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandExtensions.ChangeFontSize(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.Double)">
            <summary>
            Changes the size of the font for the selected cell/range of cells.
            </summary>
            <param name="SfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
            <param name="size">Size of the Font to be changed</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandExtensions.ChangeFillColor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.Windows.Media.Color)">
            <summary>
            Fills the color for the Selected cell/range of cells.
            </summary>
            <param name="SfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
            <param name="fillColor">Color to be Filled in the selected range</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandExtensions.ChangeFontColor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.Windows.Media.Color)">
            <summary>
            Changes the color of the font for the selected cell/range of cells.
            </summary>
            <param name="SfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
            <param name="fontColor">Font Color to be changed</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandExtensions.FormatIndent(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.Boolean)">
            <summary>
            For changing the alignment of the selected cell/range of cells.
            </summary>
            <param name="spreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
            <param name="canincrease">True or False</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandExtensions.FormatIndentLevel(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.Int32)">
            <summary>
            Set the indent based on the indent level value for the selected cell/range of cells
            </summary>
            <param name="spreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
            <param name="size">The indent level for the range</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandExtensions.FormatOrientation(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.Int32)">
            <summary>
            Changing the Orientation for the selected cell/range of cells.
            </summary>
            <param name="spreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
            <param name="angle"> Text rotation angle</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandExtensions.ConvertColor(System.Windows.Media.Color)">
            <summary>
            Converts ARGB to the color 
            </summary>
            <param name="color">Color to be converted</param>
            <returns>Color</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandExtensions.ChangeNumberFormat(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Sets the NumberFormat for the selected cell/range of cells
            </summary>
            <param name="SfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
            <param name="numberFormat">The number format to be set for the cell</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandExtensions.SetDatesOccuringConditionalFormat(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.XlsIO.IWorksheet,Syncfusion.XlsIO.IRange,System.String,Syncfusion.XlsIO.CFTimePeriods)">
            <summary>
            Set the dates occuring conditional formats in range based on the input from conditional format ribbon window.
            </summary>
            <param name="currentworksheet">current spreadsheet</param>
            <param name="range">XlsIO range</param>
            <param name="style">style name</param>
            <param name="timeperiodtype">XlsIO time period type </param>
            <param name="sfspreadsheet"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandExtensions.SetContainsConditionalFormat(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.XlsIO.IWorksheet,Syncfusion.XlsIO.IRange,System.String,System.String,Syncfusion.XlsIO.ExcelComparisonOperator)">
            <summary>
            Set the contains text conditional formats in range based on the input from conditional format ribbon window.
            </summary>
            <param name="currentworksheet">current spreadsheet</param>
            <param name="range">XlsIO range</param>
            <param name="value">condition value</param>
            <param name="style">style name</param>
            <param name="Operator">XlsIO operator such as greater,less</param>
            <param name="sfspreadsheet"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandExtensions.SetConditionConditionalFormat(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.XlsIO.IWorksheet,Syncfusion.XlsIO.IRange,System.String,System.String,System.String,Syncfusion.XlsIO.ExcelComparisonOperator)">
            <summary>
            Set the conditional formats based on the cell value in range with input from conditional format ribbon window.
            </summary>
            <param name="currentworksheet">current spreadsheet</param>
            <param name="range">XlsIO range</param>
            <param name="value1">condition value1</param>
            <param name="value2">condition value2</param>
            <param name="style">style name</param>
            <param name="Operator">XlsIO operator such as greater,less</param>
            <param name="sfspreadsheet"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandExtensions.SetConditionalFormatStyle(System.String,Syncfusion.XlsIO.IConditionalFormat)">
            <summary>
            Set the conditional format style into XlsIO based on the style option chosen from conditionalformat style ribbon combobox.
            </summary>
            <param name="style">different combination of styles</param>
            <param name="condition">XlsIO IConditionalFormat</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandExtensions.ApplyDataValidation(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.XlsIO.IWorksheet,Syncfusion.XlsIO.IRange,Syncfusion.XlsIO.ExcelDataType,Syncfusion.XlsIO.ExcelDataValidationComparisonOperator,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Apply the data validation for the selected range of cells with the specified criterias
            </summary> 
            <param name="spreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
            <param name="worksheet">Current worksheet</param>
            <param name="validationRange">Range where the data validation applied</param>
            <param name="allowType">Type of Validation test to be performed</param>
            <param name="ComparisonOperator">The comparison Operation for the data validation</param>
            <param name="conditionvalue1">Condition set for the first part of data validation</param>
            <param name="conditionvalue2">Condition set for the second part of data validation</param>
            <param name="PromptBoxTitle">Title of the PromptBox</param>
            <param name="PromptBoxText">Text in the PromptBox</param>
            <param name="ErrorBoxTitle">Title in the ErrorBox</param>
            <param name="ErrorBoxText">Text in the ErrorBox</param>
            <param name="ShowPromptBox">True if PromptBox need to be shown, else False</param>
            <param name="ShowErrorBox">True if ErrorBox need to be shown, else False</param>
            <param name="IgnoreBlank">True if empty values are allowed, else False</param>
            <param name="InCellDropDown">True if the dropdown needs to be visible, else False</param>
            <returns>True or False</returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.DV_ExcelDataTypeInfo">
            <summary>
            Represents a class that is to maintain the information about different data types for DataValidation
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DV_ExcelDataTypeInfo.#ctor">
            <summary>
            Initializes a new instance of DV_ExcelDataTypeInfo class
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.DV_ExcelDataTypeInfo.DV_ExcelDataTypeName">
            <summary>
            Gets or sets the name of the data types in DataValidation 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.DV_ExcelDataTypeInfo.DV_ExcelDataType">
            <summary>
            Gets or sets the type of the data in DataValidation
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.DV_ComparisionOperatorInfo">
            <summary>
            Represents a class that is to maintain the information about the comparison operators in DataValidation
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DV_ComparisionOperatorInfo.#ctor">
            <summary>
            Initializes a new instance of DV_ComparisionOperatorInfo
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.DV_ComparisionOperatorInfo.DV_ComparisionOperatorName">
            <summary>
            Gets or sets the name of the comparison operator in DataValidation
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.DV_ComparisionOperatorInfo.DV_ComparisionOperator">
            <summary>
            Gets or sets the comparison operators in DataValidation
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.OnSheetNavigating">
            <summary>
            Used to Notify when sheet nagivated
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.OnCurrentCellEditing">
            <summary>
            Used to Notify when Current Cell is in Editing
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.OnCurrentCellEndEdit">
            <summary>
            Used to Notify when Editing complete for the Currentcell
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.OnCellClick">
            <summary>
            Used to Notify when the cell is clicked
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.OnSelectionChanged">
            <summary>
            Used to Notify when Selection is Changed
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.OnClipboardCopy">
            <summary>
            used to notify when copy the content
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.OnProtectSheet(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Used to Notigt when Protecting Sheet
            </summary>
            <param name="worksheet">Worksheet to be protected</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.OnUnProtectSheet(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Used to Notify when UnProtecting sheet
            </summary>
            <param name="worksheet"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.OnProtecWorkbook">
            <summary>
            Used to Notify when Protecting Workbook
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.OnUnProtectWorkbook">
            <summary>
            Used to Notify when Unprotecting Workbook
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.OnCommentEditing">
            <summary>
            Used to Notify when Comment is in Editing
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.OnCommentEndEdit">
            <summary>
            Used to Notify when Editing Comment gets complete
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.OnDeleteComment">
            <summary>
            Used to Notify when deleting the Comment from the Current cell
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.OnFontSizeChanged">
            <summary>
            Used to Notify when Increase/Decrease the font size.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.OnOrientationChanged">
            <summary>
            Used to Notify when Orientation changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.OnGraphicCellSelectionChanged">
            <summary>
            Used to Notify when the Grahich Cells is selected
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.OnSheetVisiblityChanged">
            <summary>
            Used to notify when hide the sheet
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.CommandExecuted">
            <summary>
            This event will be triggered after the command is executed.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.CommandExecuting">
            <summary>
            This event will be triggered before executing the command. 
            Command execution can be stopped by setting Cancel property of event argument as true.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.Spreadsheet">
            <summary>
            Gets or sets the instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.IsCommentInEditing">
            <summary>
            Indicates whether the Comment is in Editing, sets true if editing else sets false
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FileOpen">
            <summary>
            Command used for Open the excel files
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FileSaveAs">
            <summary>
            Command used for Save spreadsheet by user given name
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FormatFontBold">
            <summary>
            Command used for Applying Font Weight as Bold
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FormatFontItalic">
            <summary>
            Command  used for Applying Font Style as Italic
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FormatFontUnderline">
            <summary>
            Command used for Applying TextDecorations as Underline
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FormatFontStrikethrough">
            <summary>
            Command used for Applying TextDecorations as Underline
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FormatBorder">
            <summary>
            Command used for Applying Borders for cells
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FormatVerticalAlignment">
            <summary>
            Command used for Vertical aligning of text
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FormatHorizontalAlignment">
            <summary>
            Command used for Horizontal aligning of text
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.IncreaseIndent">
            <summary>
            Command used for Increasing indent for the cells
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.DecreaseIndent">
            <summary>
            Command used for Decreasing indent for the cells
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.Orientation">
            <summary>
            Command used for orientation for the cells
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.GrowFontSize">
            <summary>
            Command used for Increasing font size
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.ShrinkFontSize">
            <summary>
            Command used for Decreasing font size
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.WrapText">
            <summary>
            Command used for Wrapping text in cells
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.MergeCells">
            <summary>
            Command used for Performing Merge Operations like Merge and Center,Merge Across, Merge cells and unmerge cells
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FormatNumber">
            <summary>
            Command used for applying Number Format for the cells
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.IncreaseDecreaseDecimalCommand">
            <summary>
            Command used for Increasing the Decimal Digits
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.ConditonalFormattingHighlightCellsRules">
            <summary>
            Command used for applying Conditions for the cell
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.ConditonalFormattingClearRules">
            <summary>
            Command used for applying Conditions for the cell
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.ConditionalFormattingDataBars">
            <summary>
            Command used for applying the databars for the cells
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.ConditionalFormattingIconSets">
            <summary>
            Command used for applying the databars for the cells
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.ConditionalFormattingColorScales">
            <summary>
            Command used for applying the databars for the cells
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.InsertSheetRows">
            <summary>
            Command used for inserting Rows
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.DeleteSheetRows">
            <summary>
            Command used for deleting rows
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.InsertSheetColumns">
            <summary>
            Command used for inserting columns
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.DeleteSheetColumns">
            <summary>
            Command used for deleting columns
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.InsertSheet">
            <summary>
            Command used for inserting sheets
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.DeleteSheet">
            <summary>
            Command used for deleting the CurrentSheet
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FormatRowHeight">
            <summary>
            Command used for assigning RowHeight for Rows
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FormatColumnWidth">
            <summary>
            Command used for assigning ColumnWidth for Columns
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.HideRows">
            <summary>
            Command used for Hiding/Unhiding Rows
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.HideColumns">
            <summary>
            Command used for Hiding/Unhiding Columns
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.HideSheet">
            <summary>
            Command used for hiding CurrentSheet
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FileSave">
            <summary>
            Command used for Performing Save Operation as Excel File
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FileClose">
            <summary>
            Command used for Exit the Application
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.AutoFitCommand">
            <summary>
            Command used for performing AutoFit Operations for RowHeight and ColumnWidth
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.RenameSheetCommand">
            <summary>
            Command used for Renaming the Current Sheet
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.ProtectSheet">
            <summary>
            Command used for Protecting the Current Sheet
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FileNew">
            <summary>
            Command used for creating a new blank workbook
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FormatCellStyle">
            <summary>
            Command used for applying styles for the Cell
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.ProtectWorkbook">
            <summary>
            Command used for Protecting Workbook
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.InsertHyperlink">
            <summary>
            Command used for navigate cells/sheets using Hyperlinks
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.RemoveHyperlink">
            <summary>
            Command used for remove the hyperlinks from the range.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.OpenHyperlink">
            <summary>
            Command used for open the hyperlink
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.InsertCells">
            <summary>
            Command used for Inseting Rows/Columns
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.DeleteCells">
            <summary>
            Command used for Deleting Rows/Columns
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FileEncrypt">
            <summary>
            Command used for Encrypting the Application with a Password
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FormatDefaultColumnWidth">
            <summary>
            Command used to set Default width
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.NewComment">
            <summary>
            Command used to insert comment
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.EditComment">
            <summary>
            Command used to insert comment
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.DeleteComment">
            <summary>
            Command used to delete comment for the currentcell
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.DataValidation">
            <summary>
            Command used to apply DataValidation
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FindAndReplace">
            <summary>
            Command used to perform the find and replace related actions.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.Filter">
            <summary>
            Command used to apply filtering to the selected ranges.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.NameManager" -->
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.NewNameRange">
            <summary>
            Command used for show the new name range window
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FreezePanes">
            <summary>
            Command used to freeze the rows/columns 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FreezeFirstColumn">
            <summary>
            Command used to freeze the first column
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FreezeTopRow">
            <summary>
            Command used to freeze the top row
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.UnFreezePanes">
            <summary>
            Command used to unfreeze the rows/columns
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.Cut">
            <summary>
            Command used to Perform Cut Operation
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.Copy">
            <summary>
            Command used to Perform Copy Operation
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.Paste">
            <summary>
            Command used to perform Paste Operation
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FormatAsTable">
            <summary>
            Command used to table formats.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.Group">
            <summary>
            Command used for Grouping Rows/Cells
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.Ungroup">
            <summary>
            Command used for Ungrouping Rows/Columns
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.OutlineSettings">
            <summary>
            Command Used to set the Outline Settings
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.ShowGridLines">
            <summary>
            Used to set the GridLinesVisibility
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.ShowHeadings">
            <summary>
            Used to Set the HeaderRowColumn Visibility
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.ShowFormulaBar">
            <summary>
            Used to Set the FormulaBar Visibility
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.ClearContents">
            <summary>
            Clear the contents from the range.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.CollapseAllGroup">
            <summary>
            Used to Collapse all the Group
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.GroupRowExpand">
            <summary>
            Used to Expand/Collapse the Group by Rows
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.GroupColumnExpand">
            <summary>
            Used to Expand/Collapse the Group by Columns
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.LockCell">
            <summary>
            Command used for Lock or UnLock the cells
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.FormatCells">
            <summary>
            Commands used for formatting cells window.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.HiddenCell">
            <summary>
            Command used for formula hidden in formula bar.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandBaseWindow.SfSpreadsheet">
            <summary>
            Gets or sets the SfSpreadsheet Control
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.CommandBaseWindow.WorkSheet">
            <summary>
            Gets or sets the SheetName to be Protected
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.AlignmentCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for Alignment Command.
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.AlignmentCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if Horizontal/VerticalAlignment, Increase/Decrease indent, MergeCells, WrapText Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.AlignmentCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the Horizontal/VerticalAlignment, Increase/Decrease indent, MergeCells, WrapText command.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.AutoFitCommand">
            <summary>
            To Set AutoFit for RowHeight/ColumnWidth
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for FormatCommand.
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the  command.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.AutoFitCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for AutoFitCommand
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.AutoFitCommand.OnCanExecute(System.Object)">
            <summary>
            returns true when the AutoFit Command can be Executed else false
            </summary>
            <param name="parameter">pass parameter as RowHeight when RowHeight is to be executed else pass parameter as ColumnWidth</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.AutoFitCommand.OnExecute(System.Object)">
            <summary>
            used to Execute the Command AutoFit RowHeight/ AutoFit ColumnWidth
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.ClearCommand">
            <summary>
            Commands used for clear the contents or complete content with format based on the parameter.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ClearCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ClearCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the ClearContentsCommand.
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ClipboardCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for ClipboardCommand.
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ClipboardCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if Cut, Copy and Paste Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ClipboardCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the cut, copy and paste command.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.CollapseAllGroupCommand">
            <summary>
            Collapses or Expands the group by rows/columns based on the outlinelevel value
            </summary>
            <example>
            The following code illustrates how to collapse and expand the group in the Sfspreadsheet
            <code>
            
            //Collapse group
            SfSpreadsheet.ActiveSheet.Range["A3:A6"].CollapseGroup(ExcelGroupBy.ByRows)
            SfSpreadsheet.ActiveGrid.RowHeights.SetHidden(3, 6, true);
            SfSpreadsheet.RefreshOutlines(true,false);
            SfSpreadsheet.ActiveGrid.InvalidateCells();
            
            //Expand group
            SfSpreadsheet.ActiveSheet.Range["A3:A6"].ExpandGroup(ExcelGroupBy.ByRows)
            SfSpreadsheet.ActiveGrid.RowHeights.SetHidden(3, 6, false);
            SfSpreadsheet.RefreshOutlines(true,false);
            SfSpreadsheet.ActiveGrid.InvalidateCells();
            </code>
            </example> 
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.OutlineCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for OutlineCommand.
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.OutlineCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if Group, UnGroup, OutlineSetting, GroupColumnExpand, GroupRowExpand and CollapseAllGroup Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.OutlineCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the Group, UnGroup, OutlineSetting, GroupColumnExpand, GroupRowExpand and CollapseAllGroup command.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CollapseAllGroupCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.Int32,Syncfusion.XlsIO.ExcelGroupBy,Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Initializes a new instance of CollapseAllGroupCommand class 
            </summary>
            <param name="SfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
            <param name="labelNo">Outlinelevel value</param> 
            <param name="groupBy">Group Type</param>
            <param name="workSheet">An instance of <see cref="T:Syncfusion.XlsIO.IWorksheet"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CollapseAllGroupCommand.OnCanExecute(System.Object)">
            <summary>
            Determines whether the CollapseAllGroupCommand Can be executed or not
            </summary>
            <param name="parameter">True or False</param>
            <returns>True or False</returns>
            <remarks>This command cannot be executed if the worksheet is protected</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CollapseAllGroupCommand.OnExecute(System.Object)">
            <summary>
            Executes the CollapseAllGroupCommand
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormattingCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for ConditionalFormattingCommand.
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormattingCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if HighlightCellRules, DataBars, ColorScales and IconSets Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormattingCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the HighlightCellRules, DataBars, ColorScales and IconSets command.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormattingClearRulesCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for ConditionalFormattingClearRulesCommand
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormattingClearRulesCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if ClearRules Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormattingClearRulesCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the ClearRules command.
            </summary>
            <param name="parameter">SelectedCells or EntireSheet</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormattingColorScalesCommand">
            <summary>
            Set the conditional formatting of Color Scales for ranges.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormattingColorScalesCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for ConditionalFormattingColorScalesCommand Command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormattingColorScalesCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if ColorScales Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormattingColorScalesCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the ColorScales command.
            </summary>
            <param name="parameter">Different Color sets</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormattingDataBarsCommand">
            <summary>
            Set the conditional formatting of data bars for ranges.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormattingDataBarsCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for ConditionalFormattingDataBarsCommand Command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormattingDataBarsCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if DataBars Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormattingDataBarsCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the DataBars command.
            </summary>
            <param name="parameter">Colors for data bar either Gradient or Solid</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormattingIconSetsCommand">
            <summary>
            Set the conditional formatting of Icon sets for ranges.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormattingIconSetsCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for ConditionalFormattingIconSetsCommand Command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormattingIconSetsCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if IconSets Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormattingIconSetsCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the IconSets command.
            </summary>
            <param name="parameter">IconSets type from ExcelIconSetType</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditonalFormattingHighlightCellsRulesCommand">
            <summary>
            To set the conditionalformat for the range of cells
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditonalFormattingHighlightCellsRulesCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for ConditionalFormat Command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditonalFormattingHighlightCellsRulesCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if HighlightCellsRules Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditonalFormattingHighlightCellsRulesCommand.OnExecute(System.Object)">
            <summary>
            Used to Execute the HighlightCellsRules Command
            </summary>
            <param name="parameter">Passes parameter as ExcelComparison Operator such as NotBetween,Between, Greater than, Equal To,etc..,</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.CutCommand">
            <summary>
            Command Used to Cut the Cells in the Range
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CutCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if Cut Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CutCommand.OnExecute(System.Object)">
            <summary>
            Used to Execute the Cut Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.CopyCommand">
            <summary>
            Command used to copy the values in the Range
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CopyCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if Copy Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.CopyCommand.OnExecute(System.Object)">
            <summary>
            Used to Execute the Copy Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.PasteCommand">
            <summary>
            Command used to Paste the Values 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.PasteCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if Paste Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.PasteCommand.OnExecute(System.Object)">
            <summary>
            Used to Execute the Paste Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.DataValidationCommand">
            <summary>
            Command used for Applying DataValidation for the range
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteCellsCommand">
            <summary>
            Command used to Delete a row/column
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for Delete Command.
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if DeleteCells, DeleteSheetRows, DeleteSheetColumns and DeleteSheet Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the DeleteCells, DeleteSheetRows, DeleteSheetColumns and DeleteSheet command.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteCellsCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for DeleteCells
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteCellsCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if DeleteCells Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteCellsCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the DeleteCells Command
            </summary>
            <param name="parameter">Pass parameter as DeleteCells if Rows/Columns are to be inserted else pass parameter as DeleteCells
            to delete entire row/column</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteCommentCommand">
            <summary>
            Command used to Delete the Comment in the Range
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteCommentCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if the DeleteComment can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteCommentCommand.OnExecute(System.Object)">
            <summary>
            Executed the DeleteComment
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteSheetColumnsCommand">
            <summary>
            To delete the columns from the sheet
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteSheetColumnsCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for Delete Column Command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteSheetColumnsCommand.OnCanExecute(System.Object)">
            <summary>
            returns true when DeleteColumn Command can be Executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteSheetColumnsCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the DeleteColumn Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteSheetCommand">
            <summary>
            To delete the Current Sheet
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteSheetCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for DeleteSheet
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteSheetCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if DeleteCurrentSheet command can be Executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteSheetCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the DeleteCurrentSheet Command
            </summary>
            <param name="parameter">Null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteSheetRowsCommand">
            <summary>
            To delete the Rows from the sheet
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteSheetRowsCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for DelteRowCommand
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteSheetRowsCommand.OnCanExecute(System.Object)">
            <summary>
            returns true when DeleteSheetRows can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DeleteSheetRowsCommand.OnExecute(System.Object)">
            <summary>
            Used to Execute the Delete Row Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileCloseCommand">
            <summary>
            To exit the Application
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileCloseCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for FileClose
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileCloseCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if FileClose can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileCloseCommand.OnExecute(System.Object)">
            <summary>
            Used to Execute the Exit command
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileEncryptCommand">
            <summary>
            Command used for Encrypt the Application with a Password
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileEncryptCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for Encrypt Command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileEncryptCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if Encrypt Command can be Executed
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileEncryptCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the Encrypt command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileNewCommand">
            <summary>
            Command used for Creating a NewWorkbook
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileNewCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for FileNew
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileNewCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if FileNew can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileNewCommand.OnExecute(System.Object)">
            <summary>
            used to execute the Newcommand
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileNewCommand.ShowDialog">
            <summary>
            Method used to display the message whether to save the changes or not, if ok is clicked it saves the changes else rejects the changes
            and create a New Workbook
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileOpenCommand">
            <summary>
            To import the Excel File
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileOpenCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for ImportFromExcelCommand
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileOpenCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if ImportFromExcelCommand can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileOpenCommand.OnExecute(System.Object)">
            <summary>
            Used to Execute ImportFromExcel Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileSaveAsCommand">
            <summary>
            To Export the Application to Excel
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileSaveAsCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for FileSaveAsCommand
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileSaveAsCommand.OnExecute(System.Object)">
            <summary>
            Used to Execute the FileSaveAsCommand Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileSaveCommand">
            <summary>
            Command used to save the Current Workbook
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileSaveCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for FileSave
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileSaveCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if FileSave can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FileSaveCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the FileSave
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FilterCommand">
            <summary>
            Command which is used to perform the Filter related actions.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FilterCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FilterCommand">FilterCommand</see> class.
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FilterCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if filter command is executed, else return false.
            </summary>
            <param name="parameter">Command parameter</param>
            <returns>Returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FilterCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the Filter commands.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceCommand">
            <summary>
            Command which is used to perform the find and replace related actions.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceCommand.findAndReplaceWindow">
            <summary>
            Below FindAndReplace variable is used to maintain the instance of find and replace window.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceCommand.gotoWindow">
            <summary>
            Below gotoWindow variable is used to maintain the instance of GoTo window. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceCommand">FindAndReplaceCommand</see> class.
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if FindAndReplace can be executed, else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the Find and Replace commands.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceCommand.Dispose">
            <summary>
            Dispose all the instance.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceCommand.FindFormulas">
            <summary>
            Check the formulas contained cells and added into spreadsheet grid's selection ranges when select the Formulas from find and select's ribbon menu item.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceCommand.OpenGoToDialogWindow">
            <summary>
            Show GoTo window when select the GoTo from find and select's ribbon menu item.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceCommand.FindConstants">
            <summary>
            Check the constants contained cells and added into spreadsheet grid's selection ranges when select the Constants from find and select's ribbon menu item.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceCommand.FindDataValidation">
            <summary>
            Check the Datavalidation applied cells and added into spreadsheet grid's selection ranges when select the DataValidation from find and select's ribbon menu item.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceCommand.FindConditionalFormatting">
            <summary>
            Check the conditional Formatting applied cells and added into spreadsheet grid's selection ranges when select the ConditionalFormatting from find and select's ribbon menu item.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FontCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for Font Command.
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FontCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if Bold, Italic, Underline, GrowFontSize, ShrinkFontSize and Border Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FontCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the Bold, Italic, Underline, GrowFontSize, ShrinkFontSize and Border command.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatAsTableCommand">
            <summary>
            To Apply Table formats in the sheet
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatBorderCommand">
            <summary>
            To set borders for the range of cells
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatBorderCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for Border Command
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatBorderCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if Border Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatBorderCommand.OnExecute(System.Object)">
            <summary>
            used to execute the Border command
            </summary>
            <param name="parameter">Type of Borders such as BottomBorder, TopBorder, LeftBorder, RightBorder, AllBorder, OutSideBorder
            ThickBoxBorder, ThickBottomBorder, TopAndBottomBorder, TopAndThickBottomBorder, OutsideBorder
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatBorderCommand.ChangeBorder(Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatBorderCommand.ExcelBorderStyle,System.Drawing.Color,Syncfusion.XlsIO.ExcelLineStyle)">
            <summary>
            Sets the border for the Cells or for a range
            </summary>
            <param name="excelBorderStyle">Type of Borders</param>
            <param name="excelbordercolor"> Borders color</param>
            <param name="excel_linestyle"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatBorderCommand.ChangeCellBorder(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatBorderCommand.ExcelBorderStyle,System.Drawing.Color,Syncfusion.XlsIO.ExcelLineStyle)">
            <summary>
            Sets the Border for the Current Excel range
            </summary>
            <param name="range">Current Excel Range</param>
            <param name="excelBorderStyle">Type of Borders</param>
            <param name="excelbordercolor"></param>
            <param name="linestyle"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatBorderCommand.ExcelBorderStyle">
            <summary>
            Gets the type of BorderStyles
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for FormatCommand.
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the  command.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsCommand.GetNumberFormatType(System.String)">
            <summary>
            Get the numberformat type based on the numberformat read form xlsio.
            </summary>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsCommand.FindNumberFormat">
            <summary>
            Find the numberformat from the selected ranges.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsCommand.GetStyleFromExcel">
            <summary>
            Returns the horizontal alignment from the selected ranges.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsCommand.HasMultipleCells">
            <summary>
            Set the visibility of inside button icon in format cells window based on the cells in the selected ranges.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsCommand.ApplyHorizontalAlignment(System.Int32)">
            <summary>
            Set the horizontal alignment to range.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsCommand.ApplyVerticalAlignment(System.Int32)">
            <summary>
            Set the vertical alignment to xlsio range.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsCommand.ApplyWrapText(System.Boolean)">
            <summary>
            Set the wrap text to the xlsio range.
            </summary>
            <param name="haswraptext"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsCommand.ApplyMergeCells(System.Boolean)">
            <summary>
            Set the merge cells to the xlsio range.
            </summary>
            <param name="hasmerged"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsCommand.ApplyFontStyle(System.Int32)">
            <summary>
            Set the font style to the xlsio range.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsCommand.ApplyUnderline(System.Int32)">
            <summary>
            Set the underline to the xlsio range.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsCommand.ApplyCellBorders(Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatBorderCommand.ExcelBorderStyle,System.Windows.Shapes.Line)">
            <summary>
            Set the cellborders to the xlsio range.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsCommand.AddItemToCommandList(System.String)">
            <summary>
            Commands should be executed based on the items in the command list instead of all the commands,so we have maintained the list and
            items are added if the changes happens on specified command.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsCommand.ApplyLockedCells(System.Boolean)">
            <summary>
            Set the locked to the xlsio range.
            </summary>
            <param name="haslocked"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsCommand.ApplyHiddenCells(System.Boolean)">
            <summary>
            Set the hidden cell to the xlsio range.
            </summary>
            <param name="haslocked"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsCommand.ApplyBorderLineStyle(Syncfusion.XlsIO.ExcelLineStyle,System.Windows.Shapes.Line,System.Windows.Media.Color)">
            <summary>
            Apply the styles to the line.
            </summary>
            <param name="linestyle"></param>
            <param name="line"></param>
            <param name="bordercolor"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellStyleCommand">
            <summary>
            To set styles for the cell
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellStyleCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for FormatCellStyle
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellStyleCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the CellStyle Command
            </summary>
            <param name="parameter">BuiltuInStyles such as Normal, Bad, Good, Accent1, Accent 2, etc..,</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatColumnWidthCommand">
            <summary>
            To set the Column Width for the range of cells
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatColumnWidthCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for the Column Width Command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatColumnWidthCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if ColumnWidth Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatColumnWidthCommand.OnExecute(System.Object)">
            <summary>
            used to execute the ColumnWidth Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatDefaultColumnWidthCommand">
            <summary>
            Setting the default width of the column in SfSpreadsheet
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatDefaultColumnWidthCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Initializes a new instance of the FormatDefaultColumnWidthCommand class
            </summary>
            <param name="spreadsheetControl">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
            <param name="commandName">Name of the command</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatDefaultColumnWidthCommand.OnCanExecute(System.Object)">
            <summary>
            Determines the FormatDefaultColumnWidthCommand can be executed or not
            </summary>
            <param name="parameter">True or False</param>
            <returns>True or False</returns>
            <remarks>This command will not be executed when the current sheet is protected or the cell is in edit mode </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatDefaultColumnWidthCommand.OnExecute(System.Object)">
            <summary>
            Executes the FormatDefaultColumnWidthCommand to set the default width for the selected columns in SfSpreadsheet
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatFontBoldCommand">
            <summary>
            To set Bold for the range of Cells
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatFontBoldCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for Bold Command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatFontBoldCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if Bold Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatFontBoldCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the Bold Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatFontItalicCommand">
            <summary>
            To Set Italic Style for the range of cells
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatFontItalicCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for FormatFontItalic
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatFontItalicCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if Italic Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatFontItalicCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the Italic Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatFontStrikethroughCommand">
            <summary>
            Command used to Strikethrough the text in the Cell 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatFontStrikethroughCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for FormatFontStrikethrough
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatFontStrikethroughCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if FormatFontStrikethrough can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatFontStrikethroughCommand.OnExecute(System.Object)">
            <summary>
            Used to execute strikethrough Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatFontUnderlineCommand">
            <summary>
            Command used to Underline the text in the Cell 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatFontUnderlineCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for FormatFontUnderline
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatFontUnderlineCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if FormatFontUnderline can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatFontUnderlineCommand.OnExecute(System.Object)">
            <summary>
            Used to execute Underline Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatHorizontalAlignmentCommand">
            <summary>
            To set the Horizontal Alignment for the Range of cells
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatHorizontalAlignmentCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for HorizontalAlignment Command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatHorizontalAlignmentCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if HorizontalAlignment Commmand can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatHorizontalAlignmentCommand.OnExecute(System.Object)">
            <summary>
            Used to Execute the HorizontalAlignment Command
            </summary>
            <param name="parameter">Passes type of Horizontal Alignment like Center, Right and Left</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatNumberCommand">
            <summary>
            To apply the number format for the range of cells
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NumberCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for Number Command.
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NumberCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if NumberFormat and IncreaseDecreaseDecimal Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NumberCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the NumberFormat and IncreaseDecreaseDecimal command.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatNumberCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for NumberFormat Command
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatNumberCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if NumberFormat Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatNumberCommand.OnExecute(System.Object)">
            <summary>
            used to execute the NumberFormat Command
            </summary>
            <param name="parameter">passes the parameter as Format as string values</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatRowHeightCommand">
            <summary>
            To set the RowHeight of the cell/range of cellsS
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatRowHeightCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for RowHeight Command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatRowHeightCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if RowHeigth Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatRowHeightCommand.OnExecute(System.Object)">
            <summary>
            Used to exeute the Row Height Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatVerticalAlignmentCommand">
            <summary>
            Command used to set the Vertical Alignment for the cell
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatVerticalAlignmentCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for VerticalAlignment Command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatVerticalAlignmentCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if VerticalAlignment command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatVerticalAlignmentCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the VerticalAlignment Command
            </summary>
            <param name="parameter">Pass parameter as type of Vertical Alignment such as Top, Center and Bottom </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormulaBarVisibilityCommand.OnCanExecute(System.Object)">
            <summary>
            returns true when the AutoFit Command can be Executed else false
            </summary>
            <param name="parameter">pass parameter as RowHeight when RowHeight is to be executed else pass parameter as ColumnWidth</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormulaBarVisibilityCommand.OnExecute(System.Object)">
            <summary>
            used to Execute the Command AutoFit RowHeight/ AutoFit ColumnWidth
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.WindowCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for WindowCommand
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.WindowCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the WindowCommand
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FreezeFirstColumnCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for FreezeFirstColumn command
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FreezeFirstColumnCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the FreezeFirstColumn command
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FreezePanesCommand">
            <summary>
            To Set Frozen Rows and Frozen Columns
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FreezePanesCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for FreezePanesCommand
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FreezePanesCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the FreezePanesCommand.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FreezeTopRowCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for FreezeTopRow command
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FreezeTopRowCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the FreezeTopRow command
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.GridLinesVisibilityCommand">
            <summary>
            Used to Set the Grid Lines Visibility
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GridLinesVisibilityCommand.OnCanExecute(System.Object)">
            <summary>
            returns true when the AutoFit Command can be Executed else false
            </summary>
            <param name="parameter">pass parameter as RowHeight when RowHeight is to be executed else pass parameter as ColumnWidth</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GridLinesVisibilityCommand.OnExecute(System.Object)">
            <summary>
            used to Execute the Command AutoFit RowHeight/ AutoFit ColumnWidth
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.GroupColumnExpandCommand">
            <summary>
            Collapses or Expands the group by columns based on summary columns
            </summary>
            <example>
            The following code illustrates how to collapse and expand the group by columns
            <code>
            
            //Collapse group
            SfSpreadsheet.ActiveSheet.Range["A3:A6"].CollapseGroup(ExcelGroupBy.ByColumns)
            SfSpreadsheet.ActiveGrid.ColumnWidths.SetHidden(3, 6, true);
            SfSpreadsheet.RefreshOutlines(false,true);
            SfSpreadsheet.ActiveGrid.InvalidateCells();
            
            //Expand group
            SfSpreadsheet.ActiveSheet.Range["A3:A6"].ExpandGroup(ExcelGroupBy.ByColumns)
            SfSpreadsheet.ActiveGrid.SetColumnWidth(3, 6,SfSpreadsheet.ActiveGrid.GetColumnWidthFromSheet(3));
            SfSpreadsheet.RefreshOutlines(false,true);
            SfSpreadsheet.ActiveGrid.InvalidateCells();
            </code>
            </example>  
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GroupColumnExpandCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.GroupColumnExpandCommand">GroupColumnExpandCommand</see> class. 
            </summary>
            <param name="SfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GroupColumnExpandCommand.OnCanExecute(System.Object)">
            <summary>
            Determines whether the GroupColumnExpandCommand can be executed or not
            </summary>
            <param name="parameter">True or False</param>
            <returns>True or false</returns>
            <remarks>This command cannot be executed if the worksheet is protected</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GroupColumnExpandCommand.OnExecute(System.Object)">
            <summary>
            Executes the GroupColumnExpandCommand
            </summary>
            <param name="parameter">null</param>
            <remarks>The grouping range can be collapsed or expanded based on the summary columns</remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.GroupCommand">
            <summary>
            Command Used for Group by Rows/Columns
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GroupCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if the Group Command can be Executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GroupCommand.OnExecute(System.Object)">
            <summary>
            Executes the Group Command
            </summary>
            <param name="parameter">true</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.GroupRowExpandCommand">
            <summary>
            Collapses or Expands the group by columns based on summary rows
            </summary>
            <example>
            The following code illustrates how to collapse and expand the group by rows
            <code>
            
            /Collapse group
            SfSpreadsheet.ActiveSheet.Range["A3:A6"].CollapseGroup(ExcelGroupBy.ByRows)
            SfSpreadsheet.ActiveGrid.RowHeights.SetHidden(3, 6, true);
            SfSpreadsheet.RefreshOutlines(true,false);
            SfSpreadsheet.ActiveGrid.InvalidateCells();
            
            //Expand group
            SfSpreadsheet.ActiveSheet.Range["A3:A6"].ExpandGroup(ExcelGroupBy.ByRows)
            SfSpreadsheet.ActiveGrid.RowHeights.SetHidden(3, 6, false);
            SfSpreadsheet.RefreshOutlines(true,false);
            SfSpreadsheet.ActiveGrid.InvalidateCells();
            </code>
            </example>  
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GroupRowExpandCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.GroupRowExpandCommand">GroupRowExpandCommand</see> class. 
            </summary>
            <param name="SfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
            <param name="commandName"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GroupRowExpandCommand.OnCanExecute(System.Object)">
            <summary>
            Determines whether the GroupRowExpandCommand can be executed or not
            </summary>
            <param name="parameter">True or False</param>
            <returns>True or false</returns>
            <remarks>This command cannot be executed if the worksheet is protected</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GroupRowExpandCommand.OnExecute(System.Object)">
            <summary>
            Executes the GroupRowExpandCommand
            </summary>
            <param name="parameter">null</param>
            <remarks>The grouping range can be collapsed or expanded based on the summary rows</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GrowFontSizeCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for GrowFontSize Command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GrowFontSizeCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if GrowFontSize Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GrowFontSizeCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the GrowFontSize command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.HeadingsVisibilityCommand">
            <summary>
            Used to set the HeaderRowColumn Visibility
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HeadingsVisibilityCommand.OnCanExecute(System.Object)">
            <summary>
            returns true when the AutoFit Command can be Executed else false
            </summary>
            <param name="parameter">pass parameter as RowHeight when RowHeight is to be executed else pass parameter as ColumnWidth</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HeadingsVisibilityCommand.OnExecute(System.Object)">
            <summary>
            used to Execute the Command AutoFit RowHeight/ AutoFit ColumnWidth
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HiddenCellCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for LockCellCommand
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HiddenCellCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if LockCell Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HiddenCellCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the LockCellCommand
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.HideColumnsCommand">
            <summary>
            To Hide the Selected columns from the sheet
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HideColumnsCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for HideColumn command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HideColumnsCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if HideColumn Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HideColumnsCommand.OnExecute(System.Object)">
            <summary>
            Used to Execute HideColumn Command
            </summary>
            <param name="parameter">pass true if Column(s) are to be Hided and pass false if Column(s) are to be Unhided</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.HideRowsCommand">
            <summary>
            To hide the Selected Rows from the sheet
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HideRowsCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for HideRows
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HideRowsCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if HideRows can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HideRowsCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the HideRow Command
            </summary>
            <param name="parameter">passes true if Rows are to be hided else pass false if Rows are to be unhided</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.HideSheetCommand">
            <summary>
            To Hide the CurrentSheet
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HideSheetCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for HideCurrentSheet Command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HideSheetCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if HideCurrentSheet Command is to be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HideSheetCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the HideCurrentSheet Command
            </summary>
            <param name="parameter">pass true when Sheet is to be hided and pass false when sheet is to be unhided</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HyperlinkCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for Hyperlink command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HyperlinkCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if Hyperlink Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HyperlinkCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the Hyperlink Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.IncreaseDecreaseDecimalCommand">
            <summary>
            To increase the Decimal digit of a number
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.IncreaseDecreaseDecimalCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for IncreaseDecimalCommand
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.IncreaseDecreaseDecimalCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if IncreaseDecreaseDecimalCommand can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.IncreaseDecreaseDecimalCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the IncreaseDecreaseDecimalCommand
            </summary>
            <param name="parameter">true if decimal digits are to be increased else false if decimal digits are to decreased</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.IncreaseDecreaseDecimalCommand.GetNumberFormat(Syncfusion.XlsIO.IRange,System.Boolean)">
            <summary>
            To Get the number format for the Current Excel Range
            </summary>
            <param name="range">Range to get the number format</param>
            <param name="increase">Whether to increase or decrease the decimal digits of a number</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.IncreaseIndentCommand">
            <summary>
            To increase indent level of the cell/range of cells
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.IncreaseIndentCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for IncreaseIndent Command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.IncreaseIndentCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if IncreaseIndent can be Executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.IncreaseIndentCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the Increase Indent Command
            </summary>
            <param name="parameter">true if indent level to be incresed else false if indent level to be decreased</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DecreaseIndentCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for IncreaseIndent Command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DecreaseIndentCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if IncreaseIndent can be Executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DecreaseIndentCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the Increase Indent Command
            </summary>
            <param name="parameter">true if indent level to be incresed else false if indent level to be decreased</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for Insert Command.
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if InsertCells, InsertSheetRows, InsertSheetColumns and InsertSheet Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the InsertCells, InsertSheetRows, InsertSheetColumns and InsertSheet command.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertCellsCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for InsertCells
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertCellsCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if InsertCells Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertCellsCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the InsertCells Command
            </summary>
            <param name="parameter">Pass parameter as InsertCells if Rows/Columns are to be inserted
            to delete entire row/column</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertCommentCommandBase">
            <summary>
            Command used to Insert/Add Comment for the CurrentCell
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertCommentCommandBase.OnExecute(System.Object)">
            <summary>
            Executes the InsertComment Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.NewCommentCommand">
            <summary>
            Command used to Insert a new Comment for the CurrentCell
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.EditCommentCommand">
            <summary>
            Command used to edit an existing cell comment
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertHyperlinkCommand">
            <summary>
            Command used to Add, Edit or Delete Hyperlink
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertHyperlinkCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for Hyperlink command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertHyperlinkCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if Hyperlink Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertHyperlinkCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the Hyperlink Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertSheetColumnsCommand">
            <summary>
            To insert column in the sheet
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertSheetColumnsCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for InsertColumn Command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertSheetColumnsCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if InsertSheetColumns can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertSheetColumnsCommand.OnExecute(System.Object)">
            <summary>
            Used to Execute the InsertSheetColumns
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertSheetCommand">
            <summary>
            To insert/add the sheet in the workbook
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertSheetCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for InsertSheet
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertSheetCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if InsertSheetComamnd can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertSheetCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the InsertSheet command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertSheetRowsCommand">
            <summary>
            To insert rows in the sheet
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertSheetRowsCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for InsertSheetRows
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertSheetRowsCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if InsertSheetRows can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertSheetRowsCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the InsertRow Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.LockCellCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for LockCellCommand
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.LockCellCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if LockCell Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.LockCellCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the LockCellCommand
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.MergeCellsCommand">
            <summary>
            To perform merge operations for the range of cells
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.MergeCellsCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for MergeCells
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.MergeCellsCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if MergeCells can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.MergeCellsCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the MergeCells
            </summary>
            <param name="parameter">Merge options such as MergeAndCenter,MergeAcross,MergeCells,UnMerge</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.MergeCellsCommand.FindSelectionOverlapped(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            returns true if the Selection overlapped else false
            </summary>
            <param name="activerange">active range</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.MergeCellsCommand.CanMerge(Syncfusion.XlsIO.IRange)">
            <summary>
            Merges the cells.
            </summary>
            <param name="range">Specifies the mergeoptions like MergeAcross, MergeAndCenter, MergeCells and UnMergeCells</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerCommand">
            <summary>
            Commands used for Adding,Editing, Managing the Name Range used in the Workbook
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if NameManager can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the MergeCells
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.NewNameRangeCommand">
            <summary>
            Commands used for Adding,Editing, Managing the Name Range used in the Workbook
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NewNameRangeCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if NameManager can be executed else false.
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NewNameRangeCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the NameManager.
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.OpenHyperlinkCommand">
            <summary>
            Commands used for Adding,Editing, Managing the Name Range used in the Workbook
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.OpenHyperlinkCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if NameManager can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.OpenHyperlinkCommand.OnExecute(System.Object)">
            <summary>
            Used to open the hyperlink for the contextmenu open option.
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.OrientationCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for Orientation Command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.OrientationCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if Orientation command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.OrientationCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the Orientation Command
            </summary>
            <param name="parameter">true if change the orientation else false not</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.OutlineSettingsCommand">
            <summary>
            Command used to set the Outline Settings
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.OutlineSettingsCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if the OutlineSettings can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.OutlineSettingsCommand.OnExecute(System.Object)">
            <summary>
            Executes the OutlineSettings
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectSheetCommand">
            <summary>
            To Protect the current sheet from the Workbook
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectSheetCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for ProtectCurrentSheet Command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectSheetCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if ProtectCurrenteSheet command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectSheetCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the ProtectCurrentSheet command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectWorkbookCommand">
            <summary>
            Command used for Protecting the Workbook
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectWorkbookCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for ProtectWorkbook
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectWorkbookCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if ProtectWorkbook command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectWorkbookCommand.OnExecute(System.Object)">
            <summary>
            used to execute the ProtectWorkbook Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.RemoveHyperlinkCommand">
            <summary>
            Commands used for remove hyperlink from workbook.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.RemoveHyperlinkCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.RemoveHyperlinkCommand.OnExecute(System.Object)">
            <summary>
            Used to remove the hyperlink from the range
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.RenameSheetCommand">
            <summary>
            To rename the current sheet from the workbook
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.RenameSheetCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for RenameSheet
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.RenameSheetCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if RenameSheet Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.RenameSheetCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the RenameSheet Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ShrinkFontSizeCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for ShrinkFontSize Command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ShrinkFontSizeCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if ShrinkFontSize Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ShrinkFontSizeCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the ShrinkFontSize command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.UnFreezePanesCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for UnFreezePanesCommand command
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.UnFreezePanesCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the UnFreezePanesCommand command
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.UngroupCommand">
            <summary>
            Command used for Ungroup the Row/Column
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.UngroupCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if the Ungroup Commmand Can be Executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.UngroupCommand.OnExecute(System.Object)">
            <summary>
            Executes the Ungroup Command 
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.WrapTextCommand">
            <summary>
            Command used to set TextWrapping
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.WrapTextCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Constructor for WrapText
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.WrapTextCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if WrapText can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.WrapTextCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the WrapText
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.BetweenNotBetweenCondition">
            <summary>
            Interaction logic for BetweenNotBetweenCondition.xaml
            </summary>
            <summary>
            BetweenNotBetweenCondition
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.BetweenNotBetweenCondition.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.BetweenNotBetweenCondition.Description">
            <summary>
            Gets or Sets the Description to be displayed in the conditionalformat window
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.BetweenNotBetweenCondition.Operator">
            <summary>
            Gets or sets the ExcelComparison Operator to be used for conditional formatting
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.Commands.BetweenNotBetweenCondition.PropertyChanged">
            <summary>
            Event to handle if the Property is Changed
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormatWindow">
            <summary>
            Interaction logic for ConditionalFormatWindow.xaml
            </summary>
            <summary>
            ConditionalFormatWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormatWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormatWindow.Description">
            <summary>
            Gets or Sets the Description to be displayed in the conditionalformat window
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormatWindow.Operator">
            <summary>
            Gets or sets the ExcelComparison Operator to be used for conditional formatting
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.Commands.ConditionalFormatWindow.PropertyChanged">
            <summary>
            Event to handle if the Property is Changed
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.DataValidationWindow">
            <summary>
            Interaction logic for DataValidationWindow.xaml
            </summary>
            <summary>
            DataValidationWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DataValidationWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.DataValidationWindow.ValidationRange">
            <summary>
            Gets or Sets the Range of the Cells where DataValidation is applied or to be applied
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.DateOccurringCondition">
            <summary>
            Interaction logic for DateOccurringCondition.xaml
            </summary>
            <summary>
            DateOccurringCondition
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DateOccurringCondition.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.DateOccurringCondition.Description">
            <summary>
            Gets or Sets the Description to be displayed in the conditionalformat window
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.DateOccurringCondition.Operator">
            <summary>
            Gets or sets the ExcelComparison Operator to be used for conditional formatting
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.Commands.DateOccurringCondition.PropertyChanged">
            <summary>
            Event to handle if the Property is Changed
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.DefaultWidthWindow">
            <summary>
            Interaction logic for DefaultWidthWindow.xaml
            </summary>
            <summary>
            DefaultWidthWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.DefaultWidthWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.EncryptCommandWindow">
            <summary>
            Interaction logic for EncryptCommandWindow.xaml
            </summary>
            <summary>
            EncryptCommandWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.EncryptCommandWindow.#ctor">
            <summary>
            Constructor for EncryptCommandWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.EncryptCommandWindow.Apply_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event raised when ok button is clicked
            </summary>
            <param name="sender">The source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.EncryptCommandWindow.Cancel_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event raised when Cancel Button is clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.EncryptCommandWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceWindow">
            <summary>
            Window that provides user interaction support to perform find and replace operations.
            </summary>
            <summary>
            FindAndReplaceWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceWindow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceWindow">FindAndReplaceWindow</see> class. 
            </summary>  
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceWindow._foundRanges">
            <summary>
            Below variable is used to maintain the found ranges.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceWindow.ribbonItem">
            <summary>
            Below string variable is used to identify whether click Find or Replace option in the Ribbon menu items.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceWindow.found_Ranges">
            <summary>
            Below IRange array variable is used to maintain the returned ranges from Find All function.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceWindow.found_Range">
            <summary>
            Below IRange variable is used to maintain the returned range from Find Next and Replace function.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceWindow.isHeightChanged">
            <summary>
            Below boolean flag is used to ensure whether height is changed or not when resizing Find and Replace window.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceWindow.OnWindowVisible">
            <summary>
            Invoked when Find and Replace window is open.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceWindow.Dispose">
            <summary>
            Dispose all the instance.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceWindow.OnLoaded">
            <summary>
            Set the focus to find Search comboBox or replace search comboBox based on selected items in ribbon menu. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceWindow.OnInitialized(System.EventArgs)">
            <summary>
            Set the Find and Replace window is resizable when window is initialized.
            <param name="e"></param>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceWindow.WireEvents">
            <summary>
            Invoke all the events.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceWindow.UnWireEvents">
            <summary>
            Unwired all the events.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceWindow.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Invoke when Find and Replace window is going to close.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceWindow.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Prevent the window close when press escape button.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceWindow.OnApplySettings">
            <summary>
            Instead of close the Find and Replace window, focus is set to FindNext button when press the Enter key.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceWindow.LookinOption">
            <summary>
            Used to returns ExcelFindType based on selected item in Lookin ComboBox.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceWindow.MoveCurrentCell(Syncfusion.XlsIO.IRange)">
            <summary>
            Used to move the current cell when perform Find Next and Replace operation.
            </summary>
            <param name="found_Range">which represent the current cell navigation range.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceWindow.SearchByOption">
            <summary>
            Used to returns SearchBy option based on  selected item in Search by ComboBox.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceWindow.FindAndReplaceWindow_StateChanged(System.Object,System.EventArgs)">
            <summary>
            Raised event when Find and Replace window state is changed that is raised when window maximize and minimized.
            <param name="e"></param>
            <param name="sender"></param>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceWindow.ExcelTabControl_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Raised when excel tab is changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceWindow.ActiveGrid_CurrentCellEndEdit(System.Object,Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellEndEditEventArgs)">
            <summary>
            Raised event when current cell EndEdit.At the time DataGrid refreshed and show the changed values in DataGrid.
            <param name="sender"></param>
            <param name="args"></param>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceWindow.FindAllDetailGrid_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Raised event when change the selected row in DataGrid.
            <param name="sender"></param>
            <param name="args"></param>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceWindow.ComboBox_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Raised event when Comb0Box selected item changed.
            <param name="e"></param>
            <param name="sender"></param>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceWindow.FindAllButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Raised event when FindAll Button is clicked.
            <param name="e"></param>
            <param name="sender"></param>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceWindow.ReplaceAllButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Raised event when Replace All button is clicked.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceWindow.FindNextButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Raised event when FindNext Button is clicked.
            <param name="e"></param>
            <param name="sender"></param>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceWindow.ReplaceButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Raised event when Replace Button is clicked.
            <param name="e"></param>
            <param name="sender"></param>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceWindow.FindAndReplace_SizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Raised event when Find and Replace window size is changed.
            <param name="e"></param>
            <param name="sender"></param>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceWindow.tabcontrol_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Raised event when tab control's tab item changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceWindow.OptionButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Raised event when option button is clicked.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceWindow.FindMatchCase_Checked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Raised event when MatchCase checkbox is checked.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceWindow.FindMatchEntireCellContents_Checked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Raised event when MatchEntireCellContents checkbox is checked.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceWindow.FindMatchCase_Unchecked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Raised event when Matchcase checkbox is unchecked.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceWindow.FindMatchEntireCellContents_Unchecked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Raised event when MatchEntireCellContents checkbox is unchecked.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceWindow.CloseButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Raised event when close button is clicked.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.FindAndReplaceWindow.FoundRanges">
            <summary>
            Gets or sets the value indicating the found ranges in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatAsTableWindow">
            <summary>
            Interaction logic for FormatAsTableWindow.xaml
            </summary>
            <summary>
            FormatAsTableWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatAsTableWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatAsTableWindow.IsRangeSingleCell">
            <summary>
            Gets or sets the value of IsRangeIntersectCell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatAsTableWindow.IsIntersectCell">
            <summary>
            Gets or sets the value of IsIntersectCell.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow">
            <summary>
            Interaction logic for FormatAsTableWindow.xaml
            </summary>
            <summary>
            FormatCellsWindow
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.oldnumberformat">
            <summary>
            We have shown the sample text in window by getting the display text after applying the numberformats directly into
            range so we have to maintain it for the purpose to revert the number format if the user cancel the operation.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.numberformat">
            <summary>
            currentexcelrange numberformat
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.selectedtabindex">
            <summary>
            Need to open the window with different tab in active.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.#ctor">
            <summary>
            Initialize the values from the constructor
            </summary>
            <param name="spreadsheet"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.OnClosed(System.EventArgs)">
            <summary>
            close the window.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.WireEvents">
            <summary>
            Hook the required events from this method.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Hidden_CheckBox_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Add the hidden item to command list to execute command.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Locked_CheckBox_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Add the locked item to command list to execute command.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.FontSize_TxtBox_TextChanged(System.Object,System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Add the Fontsize item to command list to execute command.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.FontType_TxtBox_TextChanged(System.Object,System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Add the Fonttype item to command list to execute command.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.FontStyle_TxtBox_TextChanged(System.Object,System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Add the Fontstyle item to command list to execute command.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Merge_CheckBox_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Add the mergecells item to command list to execute command.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Wrap_CheckBox_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Add the wraptext item to command list to execute command.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Vertical_Combo_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Add the vertical item to command list to execute command.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Horizontal_Combo_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
             Add the horizontal item to command list to execute command.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.NormalFont_Check_Checked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Underline_Combo_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Update the underline in preview window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.StrikeThrough_Check_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Update the strikethrough in preview window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.TypeList_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Update the numberformat based on the selected numberformat.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Border_VCenterBtn_Unchecked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Clear the vertical center border in preview border window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Border_VCenterBtn_Checked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Set the vertical center border in preview border window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Border_TopBtn_Unchecked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Clear the top border in preview border window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Border_TopBtn_Checked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Set the top border in preview border window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Border_RightBtn_Unchecked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Clear the right border in preview border window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Border_RightBtn_Checked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Set the right border in preview border window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Border_HCenterBtn_Unchecked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Clear the horizontal center border in preview border window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Border_HCenterBtn_Checked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Set the horizontal center border in preview border window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Border_BottomBtn_Unchecked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Clear the bottom border in preview border window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Border_BottomBtn_Checked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Set the bottom border in preview border window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Border_LeftBtn_Unchecked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            clear the left border in preview border window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Border_LeftBtn_Checked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Set the left border in preview border window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Border_OutsideBtn_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Set the borders(left,right,top,bottom) borders in preview border window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Border_InsideBtn_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Make the center border in preview border window
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Border_NoneBtn_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Clear the borders in preview border window
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.ApplyButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Need to apply the settings after press the Ok button.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.FillColor_Palette_PreviewMouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Excel like toggle button should be unchecked if mouse pressed in fillcolor palette.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.NoColor_Btn_Checked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Excel like default color should be applied when click the NoColor toggle button.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Indent_UpDown_ValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Excel like Horizontal combobox option should be changed when Indent value was changed.
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.CustomTypeTextBox_PreviewKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Excel like delete button should be enabled when try to edit the custom textbox.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.DeleteBtn_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Delete the items from the custom type list.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.CustomTypeList_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Delete button should be enable if the selected listvalue is not default one.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.NegativeNumberList_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Need to update the numberformat based on the selected negativenumberlist value.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Separator_Checkbox_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Need to update the values in the preview text if the checkbox value changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.DecimalPlaces_UpDown_ValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Need to update the values in the sample text if the decimalupdown values are changed.
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.NegativeNumberList_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Initialize the negative numberlist.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.BorderColorPicker_ColorChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Color picker dropdown should be closed once choose the value.
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.FontColor_Palette_ColorChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Color picker dropdown should be closed once choose the value.
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Category_List_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Change the displaying values in window based on the selected items from category list.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.ShowNumberFormatItems">
            <summary>
            Visibilty of items in numberformat tab customized based on the selected item in category list such as Number,Currency, etc..
            </summary>
            <param name="selectedvalue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.RefreshNumberTabItems">
            <summary>
            Reset the visibilities of items.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.UpdateNumberFormat">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.FormatCellsWindow_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Initilize the all the tab items values while loading the window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.UnWireEvents">
            <summary>
            unhook the all the hooked events from this method.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.InitializeAlignmentTabItems(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initialize the alignment tab item values.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.UpdateTextDecorations">
            <summary>
            
            </summary>
            <param name="hasstrikethrough"></param>
            <param name="index"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.InitializeFontTabItems(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initialize the font tab item values.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.ApplyFontStyles(System.Boolean,System.Boolean,System.Double,Syncfusion.XlsIO.ExcelUnderline)">
            <summary>
            Set the font styles such as font size,underline,bold or italic in formatcells window.
            </summary>
            <param name="hasbold"></param>
            <param name="hasitalic"></param>
            <param name="fontsize"></param>
            <param name="underline"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.GetBorderLineStyle(System.Int32)">
            <summary>
            returns the border style based on the selected border index in the borders collection in window.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.InitializeBorderTabItems(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initialize the borders in format cells window.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.InitializeFillTabItems(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initialize the fill tab item values.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.InitializeProtectionTabItems(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initialize the protection tab item values.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.InitializeNumberTabItems(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Intializes the items in number tab of format cell window.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.CalculateNumberFormat">
            <summary>
            Generate unique numberformats based on the selected values in number tab.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.CalculateDecimalDigitsCount(System.String)">
            <summary>
            calculate the decimal digits count based on the numberformat to set into decima updown control value.
            </summary>
            <param name="numberformat"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.InitializeNegativeNumberList">
            <summary>
            Generate the negative number list values for number tab.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.InitializeValues">
            <summary>
            Load the default values while loading the format cell window.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.Apply_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Need to apply the settings to xlsio range by using command.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.CancelButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Need to revert the changes after press the cancel button.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.OnApplySettings">
            <summary>
            Apply the required changes into xlsio range by using commands.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatCellsWindow.SelectedTabIndex">
            <summary>
            Need to open the window with different tab in active.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatWindow">
            <summary>
            Interaction logic for FormatWindow.xaml
            </summary>
            <summary>
            FormatWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatWindow.#ctor">
            <summary>
            Constructor for FormatWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatWindow.ChangeColumnWidth(System.Double)">
            <summary>
            Used to Change the Column Width for the Specified range
            </summary>
            <param name="width">Width to be set for the Specified range</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatWindow.ChangeRowHeight(System.Double)">
            <summary>
            Change the Row Height for the Specified range
            </summary>
            <param name="height">height to be set for the specified range</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatWindow.CellFormat">
            <summary>
            Gets or sets the Format of the CurrentCell either RowHeight or ColumnWidth
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatWindow.Description">
            <summary>
            Gets or sets the Description for the FormatWindow
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatWindow.Value">
            <summary>
            Gets or sets the value to be displayed for rowheight or columnwidth
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.Commands.FormatWindow.PropertyChanged">
            <summary>
            Event to handle if the Property is Changed
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.GetPasswordWindow">
            <summary>
            Interaction logic for GetPasswordWindow.xaml
            </summary>
            <summary>
            GetPasswordWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GetPasswordWindow.#ctor">
            <summary>
            Constructor for GetPasswordWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GetPasswordWindow.Apply_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event raised when ok button is clicked
            </summary>
            <param name="sender">The Source</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GetPasswordWindow.Cancel_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event raised when Cancel button is clicked
            </summary>
            <param name="sender">The Source</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GetPasswordWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.GetPasswordWindow.Text">
            <summary>
            Gets or Sets the Text
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.GetPasswordWindow.FileName">
            <summary>
            Gets or sets the Name of the File is Protected
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.Commands.GetPasswordWindow.PropertyChanged">
            <summary>
            Event to handle if the Property is Changed
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.GoToWindow">
            <summary>
            Window that provides user interaction support to navigate the cell reference in the workbook.
            </summary>
            <summary>
            GoToWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GoToWindow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.GoToWindow">FindAndReplaceGoToWindow</see> class. 
            </summary>  
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GoToWindow.OnWindowVisible">
            <summary>
            Invoked when GoTo window is visible.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GoToWindow.Dispose">
            <summary>
            Dispose all the instance.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GoToWindow.OnLoaded">
            <summary>
            Invoked when GoTo window opened.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GoToWindow.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Raised below event when Enter key is pressed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GoToWindow.WireEvents">
            <summary>
            Invoke all the events.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GoToWindow.UnWireEvents">
            <summary>
            Unwired all the events.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GoToWindow.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Invoked on GoTo window closing and which method hide the GoTo window instead of close.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GoToWindow.OnApplySettings">
            <summary>
            Focus set to Ok button instead of close the window when press the enter key.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GoToWindow.GoToReferenceListView_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Raised when selected item in goto reference list is changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GoToWindow.GoToReferenceListView_MouseDoubleClick(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
             Raised the event to move the current cell to selected cell address in the List view on mouse double click.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GoToWindow.CancelButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Raised event to Hide the GoTo window when press cancel button.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GoToWindow.OkButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Raised event when Ok button is clicked.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GoToWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.GroupWindow">
            <summary>
            Interaction logic for GroupWindow.xaml
            </summary>
            <summary>
            GroupWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GroupWindow.Apply_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event raised when the OkButton is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GroupWindow.Cancel_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event Raised when the Cancel Button is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.GroupWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.GroupWindow.Rows">
            <summary>
            Gets or Sets true if the Rows are to be Grouped else false
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.GroupWindow.Columns">
            <summary>
            Gets or sets true if the Columns are to be Grouped else false
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.GroupWindow.NeedToGroup">
            <summary>
            Gets or Sets true if the Rows/Columns are to be grouped else false
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.HyperlinkWindow">
            <summary>
            Interaction logic for HyperlinkWindow.xaml
            </summary>
            <summary>
            HyperlinkWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HyperlinkWindow.radiobuttons_Checked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle the hyperlink okay button enable property in different usecases.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HyperlinkWindow.displaytext_changed(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Commit the displaytext when changes made in display textbox.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HyperlinkWindow.emailtxt_KeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Encode the email address with "mailto" text.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HyperlinkWindow.refbtn_Unchecked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Set the default display text when change over to other buttons from place in document button.       
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HyperlinkWindow.ReferenceBtn_Checked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Maintain the default display text in place in document option as "sheet1!A1" when 
            hyperlink display text is empty or null.        
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HyperlinkWindow.address_TextChanged(System.Object,System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Enable or disable the hyperlink okay button when address was changed and encode the address with "http:"
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HyperlinkWindow.hyperlinkok_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle the different type of hyperlink operations when okay button is pressed in hyperlink window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HyperlinkWindow.hyperlinkcancel_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Hadle to close the window when cancel button pressed in hyperlink window
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HyperlinkWindow.removebtn_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle to remove the existing hyperlink from the currentcell range when remove 
            button pressed in hyperlink window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HyperlinkWindow.hyperbrowsebtn_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle the browse button operation in ExistingFile or webpage option.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HyperlinkWindow.ChangeButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle the change button operation in Create New Window option.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.HyperlinkWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertCommentWindow">
            <summary>
            Interaction logic for InsertCommentWindow.xaml
            </summary>
            <summary>
            InsertCommentWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertCommentWindow.AddComment">
            <summary>
            Used to Add a comment for the CurrentCell
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertCommentWindow.WireEvents">
            <summary>
            Used to hook the events
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertCommentWindow.UnWireEvents">
            <summary>
            Used to Unhook the Events
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertCommentWindow.InsertCommentWindow_Closed(System.Object,System.EventArgs)">
            <summary>
            Event raised when the Window is to be closed
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertCommentWindow.CommentTextBox_PreviewLostKeyboardFocus(System.Object,System.Windows.Input.KeyboardFocusChangedEventArgs)">
            <summary>
            Event raised when the comment textbox loses its focus
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertCommentWindow.InsertCommentWindow_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event raised when the insert comment window is to be loaded.
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertCommentWindow.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Used to Handle the Key Down Operations
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertCommentWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertCommentWindow.SfSpreadsheet">
            <summary>
            Gets or sets the SfSpreadsheet Control
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertDeleteCellsWindow">
            <summary>
            Interaction logic for InsertDeleteCellsWindow.xaml
            </summary>
            <summary>
            InsertDeleteCellsWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertDeleteCellsWindow.#ctor">
            <summary>
            Constructor for InsertDeleteCellsWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertDeleteCellsWindow.Cancel_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event raised when Cancel Button is clicked
            </summary>
            <param name="sender">The Source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertDeleteCellsWindow.Apply_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event raised when Ok Button is clicked
            </summary>
            <param name="sender">OkButton</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertDeleteCellsWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.InsertDeleteCellsWindow.InsertDeleteCells">
            <summary>
            Gets or Sets whether the cell is to be inserted or deleted. If ture, it will delete.and returns false when the Cells is to be deleted
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow">
            <summary>
            Interaction logic for NameManagerWindow.xaml
            </summary>
            <summary>
            NameManagerWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.Editor_KeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Event Raised When the Key is Pressed when the Editor TextBox in Focus
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.Input.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.EndEditButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event Raised When the EndEdit Button is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.CancelEditButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event Raised when the CancelEdit Button is Clicked
            </summary>
            <param name="sender">The Soruce.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.CloseButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event Raised when the Close Button is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.NameRanges_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Event raised when the Selection is changed in the DataGrid
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.Controls.SelectionChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.Delete_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event Raised When the Delete Button is clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.Edit_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event Raised when the Edit Button is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.New_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event Raised When the New Button is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.ClearFilter_Click_1(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event Raised When the ClearFilter MenuItem is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.ScopedtoWorksheet_Click_1(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event Raised when ScopedtoWorksheet MenuItem is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.NameswithErrors_Click_1(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event Raised When the NamesWithErrors MenuItem is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.NameswithoutErrors_Click_1(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event Raised when the NamesWithOutErrors Menu Item is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.DefinedNames_Click_1(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event Raised when the DefinedNames Menu Item is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.TableNames_Click_1(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event Raised when the TableNames Menu Item is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.ScopedtoWorkbook_Click_1(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event Raised when the ScopedtoWorkbook Menu Item is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.FilterButton_MouseDown_1(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Event Raised When the Filter Button is clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.NameRanges_MouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Event Raised when the DataGrid is clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.NameRanges_MouseDoubleClick(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Event Raised when the Double click operation is performed on the DataGrid
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.ApplyFilter">
            <summary>
            To Apply Filter for the Data used in DataGrid
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.ComputeValue(Syncfusion.XlsIO.IName)">
            <summary>
            To Compute the Value for the Given Name
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Used to Handle the Key Down Operations
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.Commit_textValue">
            <summary>
            Commit the values entered to edit name range or create a new namerange
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.UpdateNameRangeReference(Syncfusion.XlsIO.IName,Syncfusion.UI.Xaml.Spreadsheet.NameRange)">
            <summary>
            Update edited name ranges of the workbook.
            </summary>
            <param name="name">Specified Name which have to update</param>
            <param name="selectedItem">Selected item of the NameRanges grid</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.AllFilter(System.Object)">
            <summary>
            Filters the name ranges
            </summary>
            <param name="filter"></param>
            <returns>Filtered results</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.DataGrid_SelectedIndex">
            <summary>
            Gets or sets the DataGrid Selected Item's index.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.SelectedAddress">
            <summary>
            Gets or sets the SelectedAddress from the gridselected item.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.Commands.NameManagerWindow.PropertyChanged">
            <summary>
            Property changed handler listens to the changes made to the properties.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.NewNameRangeWindow">
            <summary>
            Interaction logic for NewNameRangeWindow.xaml
            </summary>
            <summary>
            NewNameRangeWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NewNameRangeWindow.DisplayMessageBox">
            <summary>
            Displaying error message when try to inserting a name range that has been already exist in the name collection.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NewNameRangeWindow.Cancel_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event Raised when the Cancel Button is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NewNameRangeWindow.RangeToAddress(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Converts the Grid Range to the Address (e.g) 'Sheet1' !$A$1
            </summary>
            <param name="range">Current Grid Range</param>
            <returns>returns the string value as Address (e.g) 'Sheeet1' !$A$1</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NewNameRangeWindow.GetCellRef(System.Int32,System.Int32)">
            <summary>
            Get Cell Reference of the specified row,col index. 
            </summary>
            <param name="col"></param>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NewNameRangeWindow.OnClosed(System.EventArgs)">
            <summary>
            Used to Show the NameManagerWindow when the current window is Closed
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.NewNameRangeWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.NewNameRangeWindow.NameManagerWindow">
            <summary>
            Gets or sets the instance for the NameManagerWindow
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.NewNameRangeWindow.RefersTO">
            <summary>
            Gets or sets the Cell Address for the Named Ranges.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.NewNameRangeWindow.ComboBox_SelectedItem">
            <summary>
            Gets or Sets the the Combox SelectedItem , i.e Scope for the NamedRanges.    
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.NewNameRangeWindow.NamedRangeText">
            <summary>
            Gets or Sets the Name of the Selected NamedRanges.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.NewNameRangeWindow.RangeAddress">
            <summary>
            Gets or sets the Cell address of the Selected NamedRanges.
            for ex: RangeAddress = "=Sheet1!$A$1".
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.NewNameRangeWindow.Scope">
            <summary>
            Gets or sets the Scope for the Named Ranges.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.NewNameRangeWindow.IsEditName">
            <summary>
            gets or sets true if the NameRange is to be Edited else false
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.OutlineSettingsWindow">
            <summary>
            Interaction logic for OutlineSettingsWindow.xaml
            </summary>
            <summary>
            OutlineSettingsWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.OutlineSettingsWindow.Apply_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event raised when the OkButton is Clicked
            </summary>
            <param name="sender">The Soruce.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.OutlineSettingsWindow.Cancel_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event raised when the Cancel Button is Clicked
            </summary>
            <param name="sender">The source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.OutlineSettingsWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.OutlineSettingsWindow.IsSummaryColumnAtRight">
            <summary>
            Gets or Sets true if the Summary Column to displayed at the right 
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectSheetWindow">
            <summary>
            Interaction logic for ProtectSheetCommand.xaml
            </summary>
            <summary>
            ProtectSheetWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectSheetWindow.#ctor">
            <summary>
            Constructor for ProtectSheetCommand
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectSheetWindow.GetProtectSheetOptions">
            <summary>
            To get the protect sheet options
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectSheetWindow.Cancel_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This event is fired when cancel button is clicked in protect window
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectSheetWindow.Apply_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This event is fired when ok button is clicked in protect window
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectSheetWindow.UnlockedChkBox_Unchecked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This event is fired when unlock selected cells checkbox is clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectSheetWindow.LockedChkBox_Checked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This event is fired when locked selected cells checkbox is clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectSheetWindow.OnLoaded">
            <summary>
            This function is called when the window is loaded
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectSheetWindow.OnApplySettings">
            <summary>
            This function is invoked to apply the protection to the sheet based on options
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectSheetWindow.UnWireEvents">
            <summary>
            To unhook the events
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectSheetWindow.WireEvents">
            <summary>
            To hook the events
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectSheetWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectWorkbookWindow">
            <summary>
            Interaction logic for ProtectWorkbookWindow.xaml
            </summary>
            <summary>
            ProtectWorkbookWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectWorkbookWindow.#ctor">
            <summary>
            Constructor for ProtectWorkbookWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectWorkbookWindow.Apply_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event raised when the Ok Button is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectWorkbookWindow.Cancel_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event raised when the cancel Button is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectWorkbookWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectWorkbookWindow.IsStructure">
            <summary>
            Gets or Sets true if the Structure is to be Protected else false
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectWorkbookWindow.IsWindows">
            <summary>
            Gets or Set true if the Window is to be protected else false
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.Commands.ProtectWorkbookWindow.PropertyChanged">
            <summary>
            Event to handle if the Property is Changed
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.UnHideWindow">
            <summary>
            Interaction logic for UnHideWindow.xaml
            </summary>
            <summary>
            UnHideWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.UnHideWindow.#ctor">
            <summary>
            Constructor for UnHide Window
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.UnHideWindow.Cancel_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event Raised when the Cancel Button is Clicked.
            </summary>
            <param name="sender">The Source of the Event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.UnHideWindow.Apply_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event Raised when the Ok Button is clicked.
            </summary>
            <param name="sender">The source of the Event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.UnHideWindow.sheetListBox_MouseDoubleClick(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Event raised when the ListBoxItem is double clicked
            </summary>
            <param name="sender">The Source of the Event.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.UnHideWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.UnprotectSheetWindow">
            <summary>
            Interaction logic for UnprotectSheet.xaml
            </summary>
            <summary>
            UnprotectSheetWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.UnprotectSheetWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.UnprotectWorkbookWindow">
            <summary>
            Interaction logic for UnprotectWorkbookWindow.xaml
            </summary>
            <summary>
            UnprotectWorkbookWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.UnprotectWorkbookWindow.#ctor">
            <summary>
            Constructor for UnprotectWorkbookWindow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.UnprotectWorkbookWindow.Apply_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event Raised when the Ok Button is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.UnprotectWorkbookWindow.Cancel_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event raised when the Cancel Button is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Commands.UnprotectWorkbookWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.PasteOptions">
            <summary>
            Defines copypaste options for <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.PasteOptions.Paste">
            <summary>
            Copies the values,formats,formulas..etc.,
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.PasteOptions.Formula">
            <summary>
            Copies the Formula alone without any formatting
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.PasteOptions.Value">
            <summary>
            Copies the values alone without any formatting
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.PasteOptions.Format">
            <summary>
            Copies only the formatting alone without any values
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.PasteOptions.FormulaFormat">
            <summary>
            Copies the formulas along with its formats
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.PasteOptions.ValueFormat">
            <summary>
            Copies the values along with its formats
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem">
            <summary>
            Represents the class that uses a control template to design an interface for copy paste options.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem.copyPaste">
            <summary>
            To access the methods,properties of SpreadsheetCopyPaste.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem.pasteOption">
            <summary>
            To open and close the list popup, when pastebutton clicked
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem">PasteDropDownItem</see> class. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem.#ctor(Syncfusion.UI.Xaml.Spreadsheet.IPasteOptionChanged)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem">PasteDropDownItem</see> class. 
            </summary>
            <param name="changedHandler">An instance for the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.IPasteOptionChanged"/> </param>        
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem.OnApplyTemplate">
            <summary>
            Builds the visual tree for the PasteDropDownItem when a new template is applied.
            </summary>  
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem.PasteOptionPopup_Closed(System.Object,System.Object)">
            <summary>
            Occurs when popup closed
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem.PasteButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This event fires when the pasteoption popup button is clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem.PasteFormulaButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This event is fired when formula button is clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem.PasteValueButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This event is fired when value button is clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem.PasteAllButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This event is fired when value button is clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem.PasteFormulaFormatButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This event is fired when Formula and SourceFormatting button is clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem.PasteValueFormatButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This event is fired when value and SourceFormatting button is clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem.PasteFormatButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This event is fired when Format only button is clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem.WireEvents">
            <summary>
            To hook Events
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem.UnWireEvents">
            <summary>
            To unhook the events
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem.Dispose">
            <summary>
            Dispose all the resources used by the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem.PasteOptionChangedHandler">
            <summary>
            To get or set the pasteoptions
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.IPasteOptionChanged">
            <summary>
            Interface for paste options.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste">
            <summary>
             Represents the class which performs all the clipboard operations such as Cut/Copy/Paste in SfSpreadsheet.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.isActivated">
            <summary>
            Determines whether the popup is activated in app or not
            </summary>      
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.isOptionChanged">
            <summary>
            Determines whether to copy the targetworkbookrange to tempworkbookrange or not
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.option">
            <summary>
            Maintains the pasteoption which the user selects, by default the option is Paste
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.#ctor">
            <summary>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.ClearSourceRange">
            <summary>
            Clears the SourceRange.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.OnGridLoaded">
            <summary>
            This function invoked when grid is loaded
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.OnCurrentCellActivated">
            <summary>
            This function is called when current cell is activated
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.OnCurrentCellBeginEdit">
            <summary>
            This function invoked when cell enters into edit mode
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.HasCopiedContent(System.Boolean@,System.Boolean@)">
            <summary>
            Used to enable copy paste option in context menu
            </summary>
            <param name="hasSourceRangeContent"></param>
            <param name="isCutContent"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.ShowPasteOptionPopup(System.Double,System.Double)">
            <summary>
            To set the horizontal and vertical offset
            </summary>
            <param name="vOffset">To set the Vertical Offset</param>
            <param name="hOffset">To set the Horizontal Offset</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.ShowPasteOptionListPopup(System.Double,System.Double)">
            <summary>
            To set the horizontal and vertical offset for listpopup
            </summary>
            <param name="vOffset">To set the Vertical Offset</param>
            <param name="hOffset">To set the Horizontal Offset</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.HidePopup">
            <summary>
            To hide the popup when ribbon interaction
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.ShowHidePastePopup(System.Boolean)">
            <summary>
            To show or hide popup when app activated/ deactivated.
            </summary>
            <param name="show">True indicates the app is activated or else deactivated</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.ResetPastePopupPosition(System.Double,System.Double,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            To set the position of the popup in the grid
            </summary>
            <param name="xPos">represents X position of container</param>
            <param name="yPos">represents Y position of container</param>
            <param name="Grid">represents the current grid</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.ActivateGrid(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            To activate the grid and worksheet
            </summary>
            <param name="grid">current grid</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.Copy(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,System.Boolean)">
            <summary>
            Copy the values from the given range.
            </summary>
            <param name="range">Currently selected range.</param>
            <param name="needToCut">Determines whether to cut/copy.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.Cut">
            <summary>
            This function performs the cut operation in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.Copy">
            <summary>
            This function performs the copy operation in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the.
            <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste">SpreadsheetCopyPaste</see>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.Paste">
            <summary>
            This function Performs the Paste operation in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.PasteFromClipboard(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Pastes the text from clipboard.
            </summary>
            <param name="range">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.PasteOptionChanged(Syncfusion.UI.Xaml.Spreadsheet.PasteOptions)">
            <summary>
            This function is invoked when the pasteoptions button is clicked.
            </summary>
            <param name="e"> Option which the user selects.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.Paste(Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList)">
            <summary>
            To paste the values in the given range.
            </summary>
            <param name="range">Selected rangelist.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.Paste(Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList,Syncfusion.UI.Xaml.Spreadsheet.PasteOptions)">
            <summary>
            To paste the values based on the option in the given range.
            </summary>
            <param name="range">List of selected ranges.</param>
            <param name="e">Selected Option.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.GetPasteDropDownItem">
            <summary>
            To get the PasteDropDown control.
            </summary>
            <returns>An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem"/>.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.ClearClipboard(System.Boolean)">
            <summary>
            To clear the clipboard values.
            </summary>
            <param name="clear">If true, clears the clipboard.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.CanCut">
            <summary>
            Checks if the selected range can be cut or copied to the clipboard.
            </summary>
            <returns>True or False.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.CanCopy">
            <summary>
            Checks whether the selected range can be copied or not
            </summary>
            <returns>True or False.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.CanPaste(Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList)">
            <summary>
            Checks whether the copied ranges can be pasted.
            </summary>
            <param name="mrangeList">Currently selected rangelist.</param>
            <returns>True or False.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.OnCopying(Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetCopyingEventArgs)">
            <summary>
            Invoked while copying the content from  <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="args">A <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetCopyingEventArgs"/> that contains the event data.</param>
            <remarks>This method raises the <see cref="E:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.Copying"/> event.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.OnCopied(Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetCopiedEventArgs)">
            <summary>
            Invoked after copied the content from  <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="args">A <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetCopiedEventArgs"/> that contains the event data.</param>
            <remarks>This method raises the <see cref="E:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.Copied"/> event.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.OnPasting(Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetPastingEventArgs)">
            <summary>
            Invoked while pasting the content in  <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="args">A <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetPastingEventArgs"/> that contains the event data.</param>
            <remarks>This method raises the <see cref="E:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.Pasting"/> event.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.OnPasted(Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetPastedEventArgs)">
            <summary>
            Invoked after pasted the content in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="args">A <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetPastedEventArgs"/> that contains the event data.</param>
            <remarks>This method raises the <see cref="E:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.Pasted"/> event.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.CopyToClipboard(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Copies the text to the clipboard.
            </summary>
            <param name="copyRange">Copied range.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.MoveToTargetrange(System.Collections.ICollection)">
            <summary>
            Move the specified source range into target range.
            </summary>
            <param name="rangeList">Selected ranges to paste.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.CopyToTemprange(System.Collections.ICollection,System.String)">
            <summary>
            Copy the specified source range into target range.
            </summary>
            <param name="rangeList">Selected ranges to paste.</param>
            <param name="excelTargetRange">Excel range to paste.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.UpdateMergeRange">
            <summary>
            Update the pasted merge range.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.UpdateSelection(System.Collections.Generic.IEnumerable{Syncfusion.UI.Xaml.CellGrid.GridRangeInfo})">
            <summary>
            Updates the selection frame in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.
            </summary>
            <param name="mrangeList">List of the pasted ranges.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.CommitTransaction(Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList)">
            <summary>
            Commit transaction.
            </summary>
            <param name="rangeList">List of pasted ranges</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.CopyToTargetrange(Syncfusion.UI.Xaml.Spreadsheet.PasteOptions)">
            <summary>
            Perform the paste operation based on the option provided.
            </summary>
            <param name="e">Selected paste option.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.UpdateTargetRange(System.String)">
            <summary>
            Updates the target range.
            </summary>
            <param name="excelTargetRange">Selected excel range.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.CheckMergedCells">
            <summary>
            Determines whether the merged cells is present in the pasted region and updates the pasted range.
            </summary>
            <returns>True or false.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.CheckPasswordProtected(Syncfusion.XlsIO.IRange)">
            <summary>
            Returns the specified range is locked or not.
            </summary>
            <param name="range">Selected range.</param>
            <returns>True or False.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.UpdateTableSelectedRange">
            <summary>
            Returns Table range selected partially or not?.
            </summary>
            <returns>True or False.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.GetExpandedRange(Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList)">
            <summary>
            Expands the Range list when it is Table, Rows, Cols to Cells.
            </summary>
            <param name="rangeList">The currently selected range.</param>
            <returns>List of selected ranges.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.GetClipboardText">
            <summary>
            Gets the Clipboard text which is stored when copied range of cells from spreadhsheet  
            or any external source such as excel,notepad..etc
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.DefaultPasteOption">
            <summary>
            Gets or sets the default paste option.
            </summary>
            <value>One of the enum option in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.PasteOptions"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.AllowPasteOptionPopup">
            <summary>
            Gets or sets whether the paste option popup will be shown or not after pasting.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.SourceGrid">
            <summary>
            Gets or sets the copied range from grid.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.SourceRange">
            <summary>
            Gets or sets the selected range which is used for copy/cut operation.
            </summary>
            <value>Selected range.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.TargetRange">
            <summary>
            Gets or sets the selected ranges which is used for paste operation.
            </summary>
            <value>Selected range.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.PasteRangeList">
            <summary>
            Gets or sets the ranges which are selected for pasting.
            </summary>
            <value>List of ranges.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.ClipboardText">
            <summary>
            Gets or sets the copied text in clipboard when we perform paste operation.
            </summary>
            <value>Copied text.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.SourceRangeText">
            <summary>
            Gets or sets the copied text in clipboard when we perform cut/copy operation.
            </summary>
            <value>Copied text.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.SourceWorkbookRange">
            <summary>
            Gets or sets the active sheet range of workbook when we perform cut/copy operation.
            </summary>
            <value>Sheet range.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.TargetWorkbookRange">
            <summary>
            Gets or sets the active sheet range of workbook when we perform paste operation.
            </summary>
            <value>Sheet range.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.TempWorkbookRange">
            <summary>
            Gets or sets the temp sheet range of workbook when we perform paste operation.
            </summary>
            <value>Sheet range.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.PasteDropdownItem">
            <summary>
            Gets or sets the dropdownitem of paste operation.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.PasteDropDownItem"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.ActiveWorksheet">
            <summary>
            Gets or sets the active worksheet.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.ActiveGrid">
            <summary>
            Gets or sets the current grid
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.PasteOptionPopup">
            <summary>
             Gets or sets the paste popup.
            </summary>
            <value>An instance of <see cref="T:System.Windows.Controls.Primitives.Popup"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.PasteOptionListPopup">
            <summary>
            To get or set the pastelist popup
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.Copying">
            <summary>
            Occurs while copying the content from the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.Copied">
            <summary>
            Occurs after copied the content from the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.Pasting">
            <summary>
            Occurs while pasting the content into <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste.Pasted">
            <summary>
            Occurs after the content is pasted into <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.FillDropDownItem">
            <summary>
            Represents the class that uses a control template to design an interface for fill series elements
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillDropDownItem.#ctor">
            <summary>
            Initializes a new instance of FillDropDownItem class
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillDropDownItem.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Initializes a new instance of FillDropDownItem class with the specified SpreadsheetGrid
            </summary>
            <param name="grid"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillDropDownItem.OnApplyTemplate">
            <summary>
            Builds the visual tree for the FillDropDownItem when a new template is applied.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillDropDownItem.Dispose">
            <summary>
            Dispose all the resources used by the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.FillDropDownItem"/> class
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.MovingDirection">
            <summary>
            Enum to determine the direction of the CopyCells and FillSeries
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController">
            <summary>
            Represents the class that provides support for extending the selection and auto fill the cells with data that completes a pattern in the Selected region.
            </summary>
            <remarks>
            Fills the selected range of cells in the spreadsheet with a series of numbers, characters, or dates. The content of the first cell in the selected range is used as the starting value for the series.
            </remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.spreadsheetGrid">
            <summary>
            Instance of the SpreadsheetGrid
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.coveredRange">
            <summary>
            Covered range is the range which contains the covered cells in the selected range.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.extendFillRange">
            <summary>
            It holds the dragged ranges from the selected ranges.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.hitTestPrecision">
            <summary>
            Used to show the fill series cursor when move the mouse pointer on the cell corner.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.initialPoint">
            <summary>
            Initial point of the mouse when do drag and fill the series.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.keepCoveredRange">
            <summary>
            The boolean variable is set as true when do the fillSeries for mergedCells. otherwise which is false.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.fillOption">
            <summary>
            The variable is used to choose which operation do you want to perform.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.backup">
            <summary>
            The boolean variable is set as true when the backup is done. otherwise which is false.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.tempBackUpRange">
            <summary>
            The variable which is used to store the range for temporary purpose.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.copyTempRange">
            <summary>
            The range which is used to copy the temporary range.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.fillPopupActivated">
            <summary>
            The boolean variable is set as true when the fillOptionPopup is set as false. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.initialCell">
            <summary>
            OriginalRange bottom cell.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.changedCell">
            <summary>
            FillRange bottom cell.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Initializes a new instance of FillSeriesController Class with the specified SpreadsheetGrid
            </summary>
            <param name="spreadsheetGrid">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.spreadsheetGrid_SelectionChanged(System.Object,Syncfusion.UI.Xaml.CellGrid.Helpers.SelectionChangedEventArgs)">
            <summary>
             SelectionChanged Event used to close the popup and clear the temp range
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.spreadsheetGrid_CurrentCellActivated(System.Object,Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellActivatedEventArgs)">
            <summary>
             CurrentCellActivated Event used to close the popup and clear the temp range
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.AutoScroller_AutoScrollerValueChanged(System.Object,Syncfusion.UI.Xaml.CellGrid.AutoScrollerValueChangedEventArgs)">
            <summary>
            When Auto Scrolling FillRange is updated 
            </summary>
            <param name="sender">sender</param>
            <param name="args">AutoScrollerValueChangedEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.FillOptionPopup_MouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            To change the cursor when the pointer is moved over the popup.
            </summary>
            <param name="sender">sender</param>
            <param name="e">MouseEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.UpdateFillRangeOnAutoScrolling(Syncfusion.UI.Xaml.CellGrid.AutoScrollerValueChangedEventArgs)">
            <summary>
            To update the FillRange on auto scrolling.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.PointerPressed(System.Windows.Input.MouseEventArgs)">
            <summary>
            Determines the pressed position of pointer of the FillSeriesController
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> that contains the event data</param>
            <returns>True or False</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.IsPasswordProtected(Syncfusion.XlsIO.IRange)">
            <summary>
            Returns the specified range is locked or not
            </summary>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.PointerReleased(System.Windows.Input.MouseEventArgs)">
            <summary>
            Determines the released position of pointer of the FillSeriesController
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> that contains the event data</param>
            <returns>True or False</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.ShowFillOptionListPopup(System.Double,System.Double)">
            <summary>
            To set the vertical and horizontal offset position for FillOptionListPopup
            </summary>
            <param name="vOffset"></param>
            <param name="hOffset"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.ShowFillOptionPopup(System.Double,System.Double)">
            <summary>
            To set the vertical and horizontal offset position for FillOptionPopup
            </summary>
            <param name="vOffset"></param>
            <param name="hOffset"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.HidePopup">
            <summary>
            To hide the FillOptionPopup
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.ShowHideFillPopup(System.Boolean)">
            <summary>
             To show or hide popup when app activated/ deactivated.
            </summary>
            <param name="show"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.ResetFillPopupPosition(System.Double,System.Double)">
            <summary>
            Resets the Popup Position.
            </summary>
            <param name="xPos"></param>
            <param name="yPos"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.FillHeaderSelection(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            FillHeaderSelection has invoked when select and drag the row or column header.
            </summary>
            <param name="cell"></param>
            <param name="OriginalRange"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.CopyCells(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Copys the OldRange to newRange based on the fillOption
            </summary>
            <param name="oldRange">OldRange</param>
            <param name="newRange">NewRange that has been selected</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.AddCoveredCellsIntoGrid">
            <summary>
            Add merged ranges of the specified grid
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.IsFillRangeIntersectsMergeCell">
            <summary>
            To check whether the fill range intersects any merge range in worksheet
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.FillSeries(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Fills the Selected range based upon the content of the cell Like Numbers, string, Formula or DateTime
            </summary>
            <param name="oldRange">OldRange</param>
            <param name="newRange">NewRange that has been selected</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.SplitRange(Syncfusion.XlsIO.IWorksheet,System.Int32,System.Int32,System.String@,System.Collections.Generic.List{Syncfusion.UI.Xaml.CellGrid.GridRangeInfo}@)">
            <summary>
            Split the mixed combination of values in to ranges.
            </summary>
            <param name="sheet">Current worksheet</param>
            <param name="top">Row index</param>
            <param name="left">Column index</param>
            <param name="previousRangeType">Type of the previous cell value</param>
            <param name="rangeList">List of ranges in the seleced range</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.ProcessFillSeries(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Fills the cell value based on the content of the cell.
            </summary>
            <param name="oldRange">OldRange</param>
            <param name="newRange">NewRange that has been selected</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.CopyToRange(Syncfusion.XlsIO.IRange,Syncfusion.XlsIO.IRange,Syncfusion.XlsIO.ExcelCopyRangeOptions)">
            <summary>
            Used to copy excel ranges
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <param name="option">Option</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.ProcessFillSeriesDragSelection(System.Windows.Input.MouseEventArgs)">
            <summary>
            Determines the state of the mouse position and the selected range of the FillSeries
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> that contains the event data</param>
            <returns>True or False</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.FillOptionChanged(System.String)">
            <summary>
            Determines the operation to be performed based on the selected fillseries option
            </summary>
            <param name="Content">The option to determine the operation</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.HitTest(System.Windows.Input.MouseEventArgs)">
            <summary>
            Hit Test for the FillSeriesController
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.CheckClearHeader(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            To check that the selection is at the top edge or at the left side edge
            </summary>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.WireEvents">
            <summary>
            Wire the events
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.UnWireEvents">
            <summary>
            Unwire the events associated with FillSeriesController
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.Dispose">
            <summary>
            Dispose all the resources used by the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController"/> class
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.Worksheet">
            <summary>
            Returns the <see cref="T:Syncfusion.XlsIO.IWorksheet"/> of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.IsFillSelection">
            <summary>
            The boolean property is set as true when drag and fill the slection.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.SelectionClear">
            <summary>
            Selected cells are dragged in reverse direction which clears the cell selection and also skip the fillSeries operation.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.IsReverseFill">
            <summary>
            The boolean variable is set as true when reverse fill the selection.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.MouseMovePoint">
            <summary>
            Returns the moving point of the mouse 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.TempFillRange">
            <summary>
            The property is used to stores the FillRange for temporary purpose
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.TempOriginalRange">
            <summary>
            The property is used to stores the OriginalRange for temporary purpose
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.ClearedRange">
            <summary>
            The property holds the range to clear in the reverse direction.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.MoveDirection">
            <summary>
            Returns the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.MovingDirection"/> of drag fill.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.FillRange">
            <summary>
            Returns the range for which has to be filled.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.OriginalRange">
            <summary>
            OriginalRange is the range which is obtained before filling the data.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.AllowFillSeries">
            <summary>
            Determines whether to allow fill series or copy series operation
            </summary>
            <value>True or False</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.ShowFillOptions">
            <summary>
            Determines whether fill options popup will be displayed or not after drag fill operation.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.FillSeriesHelper">
            <summary>
            Holds the instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController"/> Used to perform fill series operation for numbers, string, date time, alphanumeric string.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.HasCombination">
            <summary>
            The boolean property is set as true when the oldrange range has mixed combinations
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.FillOptionPopup">
            <summary>
            Gets or sets the popup for fill options. It will be opened after performing drag fill operation.
            When click on this popup, it will open <seealso cref="P:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.FillOptionListPopup"/> which contains list of fill options.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesController.FillOptionListPopup">
            <summary>
            Gets or sets the popup for various fill option list. When click on any option, 
            it will re-update the filled range accordingly.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesHelper.numberValue">
            <summary>
            Below variable holds the numeric value after split from the alphanumeric string.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesHelper.value1">
            <summary>
            Numeric value obtained from the alphanumeric string.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesHelper.value2">
            <summary>
            String value split from the alphanumeric string
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesHelper.isFirstCell">
            <summary>
            The boolean variable is used to calculate and set the intercept value at the first immediate cell of the oldRange.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesHelper.hasZeroDifference">
            <summary>
            The variable is used to calculate and add the intercept and stepValue then printed after the adjacent cell of the oldRange.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesHelper.fillSeriesController">
            <summary>
            Instance of FillSeriesController.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesHelper.spreadsheetGrid">
            <summary>
            Instance of SpreadsheetGrid.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesHelper.DateTimeCalculation(System.Int32,System.Int32,Syncfusion.XlsIO.IWorksheet,System.String,System.Double)">
            <summary>
            Calculate the date time values 
            </summary>
            <param name="top">Row index</param>
            <param name="left">Column index</param>
            <param name="sheet">Current worksheet</param>
            <param name="result">Final value</param>
            <param name="difference">Difference of date time value</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesHelper.StringValueCalculation(System.Int32,System.Int32,Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,System.Boolean)">
            <summary>
            To calculate the alphanumeric value when the height/width of the oldrange is one.
            </summary>
            <param name="top">Row index</param>
            <param name="left">Column index</param>
            <param name="sheet">Current worksheet</param>
            <param name="oldRange">OldRange</param>
            <param name="newRange">NewRange that has been selected</param>
            <param name="isZero">It is used to avoid the negative value while dragging left and up direction</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesHelper.PrintStringValue(System.Int32,System.Int32,Syncfusion.XlsIO.IWorksheet,System.String,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Set the alphanumeric string value in the appropriate cell.
            </summary>
            <param name="top">Row index</param>
            <param name="left">Column index</param>
            <param name="sheet">Current worksheet</param>
            <param name="result">Final resultant value</param>
            <param name="oldRange">OldRange</param>
            <param name="newRange">NewRange that has been selected</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesHelper.CalculateValues(System.Int32,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,Syncfusion.XlsIO.IWorksheet,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            Calculate the Intercept and step value for number combination in all direction (Down,Up,Right,Left).
            </summary>
            <param name="index">Row index or Column index</param>
            <param name="oldRange">OldRange</param>
            <param name="newRange">NewRange that has been selected</param>
            <param name="sheet">Current worksheet</param>
            <param name="stepValue">Formula calculated value</param>
            <param name="intercept">Formula calculated value</param>
            <param name="difference">Formula calculated value</param>
            <param name="count">count of the numeric cell value of slected ranges in the particular row /column</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesHelper.SetValue(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,Syncfusion.XlsIO.IWorksheet,System.Int32,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            To set the cell value for each cell in the new range
            </summary>
            <param name="oldRange">OldRange</param>
            <param name="newRange">NewRange that has been selected</param>
            <param name="sheet">Current worksheet</param>
            <param name="index">Row index/Column index </param>
            <param name="stepValue">Formula calculated value</param>
            <param name="intercept">Formula calculated value</param>
            <param name="difference">Formula calculated value</param>
            <param name="count">count of the numeric cell value of slected ranges in the particular row /column</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesHelper.DateTimeDifferenceCalculation(System.Int32,System.Int32,Syncfusion.XlsIO.IWorksheet,System.Double)">
            <summary>
            To calculate the difference for the DateTime values.
            </summary>
            <param name="rowIndex">Row index</param>
            <param name="columnIndex">Column index</param>
            <param name="sheet">Current worksheet</param>
            <param name="difference">Difference value</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesHelper.GetNumericValue(Syncfusion.XlsIO.IWorksheet,System.Int32,System.Int32,System.String,System.String,System.String@,System.Double@)">
            <summary>
            To get the numeric value from the alpha numeric string.
            </summary>
            <param name="sheet">Current worksheet</param>
            <param name="top">Row index</param>
            <param name="index">Column index</param>
            <param name="value">Cell Value</param>
            <param name="value1">Number value</param>
            <param name="value2">String value split from the alphanumeric string</param>
            <param name="numberValue">Numeric value split from the alphanumeric string</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesHelper.ComputeValue(System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.String)">
            <summary>
            To calculate the intermediate values for the number combination.
            </summary>
            <param name="a">Formula calculated value</param>
            <param name="b">Formula calculated value</param>
            <param name="c">Formula calculated value</param>
            <param name="count">Count value has increased based on the number of cell having numeric values in the selected rows or columns</param>
            <param name="oldRangeTotal">Formula calculated value</param>
            <param name="value">Current cell range</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesHelper.LeftRightValue(Syncfusion.XlsIO.IWorksheet,System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Double@,System.Double@,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Calculate the value for the left and right direction
            </summary>
            <param name="sheet">Current worksheet</param>
            <param name="h">height or width of original range</param>
            <param name="index">Row index</param>
            <param name="left">Column index</param>
            <param name="count">count of the numeric cell value of slected ranges in the particular row /column</param>
            <param name="stepValue">Formula calculated value</param>
            <param name="intercept">Formula calculated value</param>
            <param name="difference">Formula calculated value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesHelper.UpDownValue(Syncfusion.XlsIO.IWorksheet,System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Double@,System.Double@,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Calculate the value for the up and down direction
            </summary>
            <param name="sheet">Current worksheet</param>
            <param name="h">height or width of original range</param>
            <param name="top">Row index</param>
            <param name="index">Column index</param>
            <param name="count">count of the numeric cell value of slected ranges in the particular row /column</param>
            <param name="stepValue">Formula calculated value</param>
            <param name="intercept">Formula calculated value</param>
            <param name="difference">Formula calculated value</param>
            <param name="newRange">>NewRange that has been selected</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesHelper.InvokeFillSeries(Syncfusion.XlsIO.IWorksheet,System.Int32,System.Int32,System.Double,System.Double,System.Double@,System.Double)">
            <summary>
            To calculate and set the final value in the particular cell for the number combination
            </summary>
            <param name="sheet">Current worksheet</param>
            <param name="rowIndex">Row index</param>
            <param name="columnIndex">Column index</param>
            <param name="count">count of the numeric cell value of slected ranges in the particular row /column</param>
            <param name="stepValue">Formula calculated value</param>
            <param name="intercept">Formula calculated value</param>
            <param name="difference">Formula calculated value</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesHelper.AppendStringValue(Syncfusion.XlsIO.IWorksheet,System.Int32,System.Int32,System.String)">
            <summary>
            To concatenate the string and numeric value
            </summary>
            <param name="sheet">Current worksheet</param>
            <param name="rowIndex">Row index</param>
            <param name="columnIndex">Column index</param>
            <param name="result">Final resultant value to be print</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCopyPasteController">
            <summary>
            Represents a class which is used to perform clipboard operations on ShapeImpl<see cref="T:Syncfusion.XlsIO.IShape"/> (TextBox, Picture, Charts, etc.).
            </summary>
            <remarks>Provides support to move and copy the shapes in Spreadsheet.
            </remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCopyPasteController.count">
            <summary>
            Count is used for name the graphic objects.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCopyPasteController.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCopyPasteController">GraphicCopyPasteController</see> class. 
            </summary>
            <param name="spreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>             
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCopyPasteController.CanCutCopy">
            <summary>
            This function checks the condition to enable cut and copy operation on <see cref="T:Syncfusion.XlsIO.IShape">Shape</see>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCopyPasteController.CanPaste">
            <summary>
            This function checks the condition to enable paste operation on <see cref="T:Syncfusion.XlsIO.IShape"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCopyPasteController.CanDelete">
            <summary>
            This function checks the condition to enable delete operation on <see cref="T:Syncfusion.XlsIO.IShape"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCopyPasteController.Copy">
            <summary>
            This function used to perform copy operations on <see cref="T:Syncfusion.XlsIO.IShape">ShapeImpl</see> (TextBox, Picture, Charts, etc.).
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCopyPasteController.Paste">
            <summary>
            This function used to perform paste operations on <see cref="T:Syncfusion.XlsIO.IShape">ShapeImpl</see> (TextBox, Picture, Charts, etc.). 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCopyPasteController.Cut">
            <summary>
            This function used to perform cut operations on <see cref="T:Syncfusion.XlsIO.IShape">ShapeImpl</see> (TextBox, Picture, Charts, etc.).
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCopyPasteController.AddGraphicObject(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject,Syncfusion.XlsIO.IShape)">
            <summary>
            This function adds the graphicObject in GraphicModel
            </summary>
            <param name="graphicObject"></param>
            <param name="shape"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCopyPasteController.SetShapeName(Syncfusion.XlsIO.IShape)">
            <summary>
            Sets name for the pasted shapes
            </summary>
            <param name="shape"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCopyPasteController.RemoveShape(Syncfusion.XlsIO.IShape,Syncfusion.XlsIO.IShape)">
            <summary>
            Remove the Cut shapes from ShapesCollection and GraphicObject
            </summary>
            <param name="graphicObject"></param>
            <param name="shape"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCopyPasteController.SetPosition(System.Windows.Rect,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject,System.Int32)">
            <summary>
            This function sets the position for the Shapes to be pasted
            </summary>
            <param name="currentCellRect">current cell rect</param>
            <param name="graphicObject">graphic object</param>
            <param name="index">index of the copiedshapes</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCopyPasteController.Dispose">
            <summary>
            Dispose all the resources used by the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCopyPasteController"/>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCopyPasteController.spreadsheet">
            <summary>
            Gets or Set the instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCopyPasteController.pastedShapes">
            <summary>
            Gets or sets the shapes that are pasted currently.Used for adding the selection for Pasted Shapes
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCopyPasteController.NeedToCut">
            <summary>
            Gets or sets as true when cut operation is performed <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCopyPasteController"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCopyPasteController.CopiedShapes">
            <summary>
            Gets or sets the list of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject"/> that is copied.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.AdvancedFilterControl">
            <summary>
            Class that represent a control to provides advanced filter options to filter the data.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.AdvancedFilterControl.FilterTypeComboItemsProperty">
            <summary>
            Identifies the Syncfusion.UI.Xaml.Spreadsheet.AdvancedFilterControl.FilterTypeComboItems dependency property.
            </summary>  
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.AdvancedFilterControl.#ctor">
            <summary>
            Set the default style of the AdvancedFilterControl class and initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.AdvancedFilterControl">AdvancedFilterControl</see> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.AdvancedFilterControl.OnApplyTemplate">
            <summary>
            Builds the visual tree for the AdvancedFilterControl when a new template is applied.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.AdvancedFilterControl.InvokeAdvancedFilter">
            <summary>
            Below method having logic for invoke the advanced filter.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.AdvancedFilterControl.Dispose">
            <summary>
            Disposes all the resources used by the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.AdvancedFilterControl"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.AdvancedFilterControl.Dispose(System.Boolean)">
            <summary>
            Disposes all the resources used by the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.AdvancedFilterControl"/> class.
            </summary>
            <param name="isdisposing">Indicates whether the call is from Dispose method or from a finalizer.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.AdvancedFilterControl.FilterTypeComboItems">
            <summary>
            Gets or sets the ItemsSource for Filter type ComboBox.
            </summary>        
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.CheckboxFilterControl">
            <summary>
            Class that represents a control that provides excel like CheckBoxFilter interface for filter the data.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.CheckboxFilterControl.SearchTextBlockVisibilityProperty">
            <summary>
            Identifies the Syncfusion.UI.Xaml.Spreadsheet.CheckboxFilterControl.SearchTextBlockVisibility dependency property.
            </summary> 
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.CheckboxFilterControl.ItemsSourceProperty">
            <summary>
            Identifies the Syncfusion.UI.Xaml.Spreadsheet.CheckboxFilterControl.ItemsSource dependency property. which maintained to hold the itemsSource for the checkBoxFilter control.
            </summary> 
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.CheckboxFilterControl.IsItemSourceLoadedProperty">
            <summary>
            Identifies the Syncfusion.UI.Xaml.Grid.CheckboxFilterControl.IsItemSourceLoaded dependency property. Based on the property loading animation is visible in the checkBoxFilter control.
            </summary> 
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CheckboxFilterControl.#ctor">
            <summary>
            Set the default style for the CheckBoxFilter class and initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.CheckboxFilterControl">AdvancedFilterControl</see> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CheckboxFilterControl.OnCheckboxFilterControlLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Raised when checkBoxFilterControl comes to visible in the SpreadsheetFilterControl and wire all the events for the checkBoxFilterControl.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CheckboxFilterControl.CheckboxFilterControl_Unloaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Raised when checkBoxFilterControl visiblility goes to collapsed state and call the UnWireEvents method to unload the events.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CheckboxFilterControl.DeleteButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Raised when click the delete button in the spreadsheetFilterControl.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Windows.UI.Xaml.RoutedEventArgs">RoutedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CheckboxFilterControl.OnSearchTextBoxTextChanged(System.Object,System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Raised when search TextBox's text has been changed. That is search the mathced text given in the searchTextBox with the FilterListBox items and set the result items as itemsource to the checkBoxFilter Control.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CheckboxFilterControl.SearchTextBox_GotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Collapsed the SearchTextBlock waterMark visibility when click SearchTextBox got focused.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CheckboxFilterControl.SearchTextBox_LostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Set the SearchTextBlock waterMark visibility to visible when SearchTextBox lost the focus.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CheckboxFilterControl.SearchTextBox_PreviewKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            When press the down and up arrow within the SearchTextBox then focus move to the next or previous element in the spreadsheetFilterControl.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CheckboxFilterControl.OnSelectAllUnchecked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when select all checkBox state moved to unchecked state.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CheckboxFilterControl.OnSelectAllChecked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when select all checkBox state moved to checked state.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CheckboxFilterControl.InvokeCheckboxFilter">
            <summary>
            Methods called when filter applied by the checkboxFilter control.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CheckboxFilterControl.UpdateSearchTextBox">
            <summary>
            Update the searchTextBlock waterMark visibility to visible after cleared the search text.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CheckboxFilterControl.MaintainSelectAllCheckBox">
            <summary>
            Select All checkBox state is moved to selected or unselected or Tristate based on the CheckboxItems checked states.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CheckboxFilterControl.WireEvents">
            <summary>
            Wire all the Events of the CheckBoxFilterControl.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CheckboxFilterControl.UnWireEvents">
            <summary>
            Unwired all the Events.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CheckboxFilterControl.OnApplyTemplate">
            <summary>
            Builds the visual tree for the CheckboxFilterControl when a new template is applied.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CheckboxFilterControl.Dispose">
            <summary>
            Disposes all the resources used by the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.CheckboxFilterControl"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CheckboxFilterControl.Dispose(System.Boolean)">
            <summary>
            Disposes all the resources used by the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.CheckboxFilterControl"/> class.
            </summary>
            <param name="isdisposing">Indicates whether the call is from Dispose method or from a finalizer.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CheckboxFilterControl.SearchTextBlockVisibility">
            <summary>
            Gets or sets a value indicating the Search watermark Visibility of the search TextBox.
            </summary>
            <value>
            One of the <see cref="T:System.Windows.Visibility"/> enumeration that specifies the visibility of Search watermark.
            The default mode is <see cref="F:System.Windows.Visibility.Visible"/>. 
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CheckboxFilterControl.ItemsSource">
            <summary>
            Gets or sets the collection that is used to generate the content of the CheckboxFilterControl.
            </summary>
            <value>
            The collection that is used to generate the content of the CheckboxFilterControl.The default value is <b>null</b>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.CheckboxFilterControl.IsItemSourceLoaded">
            <summary>
            Gets or sets a value that indicates whether ItemsSource is loaded in the CheckboxFilterControl or not.
            </summary>
            <value>
            <b>true</b> if ItemsSource is loaded in CheckboxFilterControl; otherwise,<b>false</b>. The default value is <b>false</b>.
            </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.TextVisibilityConverter">
            <summary>
            TextVisibiltyConverter is used to set the visibilty of search icon to visible when searchTextBox is empty. And set the visibilty of deleteIcon to visible when SearchTextBox is not empty.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.TextVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            If string is empty the searchIcon visibility enabled otherwise delete button icon is enabled.
            </summary>
            <param name="value">SearchText given in the SearchTextBox</param>
            <param name="targetType">SearchIcons and DeleteButtonIcons</param>
            <param name="parameter">SearchIcon and deletebtn</param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.ReverseVisibilityConverter">
            <summary>
            ReverseVisibilityConverter bind with checkBoxFilter control that is When IsAdvancedFilterVisibile property is true then CheckBoxFilter control visibilty set to collapsed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.ReverseVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Set the CheckboxFilter control visibility to visible when AdvancedFilterControl is Visible,
            </summary>
            <param name="value">IsAdvancedFilter property value</param>
            <param name="targetType">CheckBoxFilter</param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.LoadingVisiblityConverter">
            <summary>
            LoadingVisibilityConverter is used to set the visibilty of busyIndicator to visible until ItemSource set to the CheckBoxFilter control.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.LoadingVisiblityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Show the BusyIndicator until itemsource set the checkBoxFilterControl.
            </summary>
            <param name="value">ItemSource</param>
            <param name="targetType">BusyIndicator Icon</param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.ListItemsVisiblityConverter">
            <summary>
            ListItemVisibilty Converters is used to set the Visibilty of the No Mathces TextBlock when Searched text not match with CheckBoxFilter items. oherwise show the items in the CheckBoxFilter control.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.ListItemsVisiblityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Set the Visibility to the No matches textBlock.
            </summary>
            <param name="value"> ItemSource</param>
            <param name="targetType">CheckBoxFilerControl</param>
            <param name="parameter">ItemsControl and NoMatchText is the parameters based on this TextBlock visibility enabled and disabled.</param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.HeightToMarginConverter">
            <summary>
            HeightToMarginConverter is used to set the Height of the checkBoxFilterControl items based on the CheckBox's Actual height.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.HeightToMarginConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Covert and set the margin to the SelectAll checkBox based on the checkBox ActualHeight.
            </summary>
            <param name="value">Actual Height of the CheckBox</param>
            <param name="targetType">CheckBox</param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.FilteringHelper">
            <summary>
            FilteringHelper class having SpreadsheetFilterControls interaction logic that is used to check whether the cell has applied by checkBoxFilter and check whether cell is filtered or Unfiltered etc..
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FilteringHelper.IsFilterApplied(Syncfusion.XlsIO.Implementation.WorksheetImpl,System.Int32,System.Int32)">
            <summary>
            Check whether spreasheet having filter applied cells or not.
            </summary>
            <param name="worksheet">Worksheet</param>
            <param name="RowIndex">spreadsheet row index</param>
            <param name="ColumnIndex">spreadsheet column index</param>
            <returns>Return true, If spreadsheet having filter applied cell otherwise returns false</returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.AdvancedFilterType">
            <summary>
            Defines the constants that specify the possible Advanced filter type in SpreadsheetFilterControl.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.FilterElement">
            <summary>
            Class which is used to provide the information about filter value
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FilterElement.RaisePropertyChanged(System.String)">
            <summary>
            Raises when the IsSelected property of the Filtered element has changed.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FilterElement.RowIndex">
            <summary>
            Maintain the Rowindex of the filteredElements from the XlsIO.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FilterElement.RowHeight">
            <summary>
            Gets or sets the RowHeight of the filteredElements from the XlsIO.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FilterElement.DisplayText">
            <summary>
            Gets or sets the display Text of the filteredElements from the XlsIO.
            </summary>
            <value>The displayText.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FilterElement.ActualValue">
            <summary>
            Gets or sets the actual value of the filteredElements from the XlsIO.
            </summary>
            <value>The actual value of the displayText.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FilterElement.IsSelected">
            <summary>
            Gets or sets a value indicating whether the CheckBoxFiltered items is selected or not.
            </summary>
            <value>
            <c>true</c> if this instance is selected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.FilterElementAscendingOrder">
            <summary>
            To order the FilterElement collection in ascending order. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FilterElementAscendingOrder.Compare(Syncfusion.UI.Xaml.Spreadsheet.FilterElement,Syncfusion.UI.Xaml.Spreadsheet.FilterElement)">
            <summary>
            Compare the two filterElement and perform the ascending order sorting.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.FilterControlEqualityComparer`1">
            <summary>
            FilterControlEquality comparer is used to remove the duplicates from the filtered elements collection.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FilterControlEqualityComparer`1.Equals(`0,`0)">
            <summary>
            Compare the two display Text and remove the duplicates from the filterElement collection.
            </summary>
            <param name="x">Display Text</param>
            <param name="y">Display Text</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetFilterControl">
            <summary>
            Represents a control that contains filter popup to filter the data in SpreadsheetFilterControl
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetFilterControl.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.Windows.Controls.Primitives.Popup)">
            <summary>
            Set the Default Style for the spreadsheetFilterControl and initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetFilterControl">SpreadsheetFilterControl</see> class.
            </summary>
            <param name="spreadsheet">Spreadsheet instance</param>
            <param name="filterPopup">FilterPopup instance</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetFilterControl.bgWorker_DoWork(System.Object,System.ComponentModel.DoWorkEventArgs)">
            <summary>
            Generate item source in the background for display the items in the checkBoxFilter control.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetFilterControl.bgWorker_RunWorkerCompleted(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)">
            <summary>
            Set the itemsource to the checkBoxFilter in the Background.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetFilterControl.IsAdvancedFilterVisibleProperty">
            <summary>
            Identifies the Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetFilterControl.IsAdvancedFilterVisible dependency property.
            </summary>    
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetFilterControl.FilterPopupHeightProperty">
            <summary>
            DependencyProperty registration for FilterPopupHeight. Set the initial spreadsheetFilterPopup height.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetFilterControl.FilterPopupWidthProperty">
            <summary>
            DependencyProperty registration for FilterPopupWidth which set the intial popup width for the spreadsheetFilterControl.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetFilterControl.WireEvents">
            <summary>
            Wires the events.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetFilterControl.UnWireEvents">
            <summary>
            UnWires the events.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetFilterControl.OnFilterPopUpOpened(System.Object,System.Object)">
            <summary>
            Called when [filter pop up opened] and update the Ascending and Descending sort string of the spreadsheetFilterControl. 
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetFilterControl.OnClearFilterButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when click the ClearFilter button and reset the checkBoxFilter control items to unchecked state.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetFilterControl.ClearAllFilters(Syncfusion.XlsIO.IRange)">
            <summary>
            Clear the all filter applied columns.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetFilterControl.OnSortAscendingButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Sort the column values in the ascending order when click the sort ascending button.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetFilterControl.OnSortDescendingButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Sort the values in the descending order when click the sort descending button.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetFilterControl.ApplySortAscendingState(System.Boolean)">
            <summary>
            Apply Visiual state of SortAscending Button and Descending button based on the sorting order.
            </summary>
            <param name="isSorted"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetFilterControl.ApplySorting(Syncfusion.XlsIO.OrderBy)">
            <summary>
            Sort the column data based on the given sorting order.
            </summary>
            <param name="sortingOrder">Ascending or Descending</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetFilterControl.OnCloseFilterPopup">
            <summary>
            Close the Filter popup when press escape key and close button.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetFilterControl.OnClearFilters">
            <summary>
            Clear the filters when click the clear filter button in the filter popup.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetFilterControl.InitializeGridFilterPane">
            <summary>
            Called when FilterPopup opened and set the FilterPopup height, width and visibility state of the CheckBoxFilterControl and AdvancedFilterControl.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetFilterControl.GenerateItemSource">
            <summary>
            Generate the items to display in the CheckBoxFilter control.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetFilterControl.SetItemsSource">
            <summary>
            Set the ItemSource for the CheckBoxFilter control when open the spreadsheet FilterPopup.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetFilterControl.OnFilterElementPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raised when checkbox filter items checked state has been changed. That is which raised when checkBoxFilterItems checked states has been changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetFilterControl.OnAdvancedFiltersButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [AdvancedFilter button click] and update the CheckBoxFilter or Advanced filter visibility to visible and also update the searchTextBox visibility.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetFilterControl.ResetVisbleFilteringControl">
            <summary>
            Reset the visual states of the checkboxFilterControl and Advanced Filter Control.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetFilterControl.OnFilterOkButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when click the ok button and apply the filter based on selected option in the CheckBoxFilter control or Advanced filter control.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetFilterControl.OnFilterDropDownUnloaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            UnWire all the events when FilterDropDown unloaded.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Windows.UI.Xaml.RoutedEventArgs">RoutedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetFilterControl.OnFilterCancelButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Set the FilterPopup IsOpen property is false when click the cancel button in the spreadsheetFilterControl.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetFilterControl.OnResizingThumbMoved(System.Object,System.Windows.Controls.Primitives.DragDeltaEventArgs)">
            <summary>
            Called when FilterPopup is resized and set the resized height and width to the spreadsheetFilterControl.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetFilterControl.OnSpreadsheetFilterControlLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Wire all the events when spreadsheetFilterControl is loaded.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetFilterControl.OnApplyTemplate">
            <summary>
            Builds the visual tree for the SpreadsheetFilterControl when a new template is applied.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetFilterControl.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Handled when key press on the Keyboard. That is when press the left and Up key, focus is moved to previous element in the spreadsheetFilterControl.
            when press right, Tab and down arrow key, focus is moved to the next element in the spreadsheetFilterControl.
            When press the escape key filter popup should be closed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetFilterControl.Dispose">
            <summary>
            Disposes all the resources used by the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetFilterControl"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetFilterControl.Dispose(System.Boolean)">
            <summary>
            Disposes all the resources used by the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetFilterControl"/> class.
            </summary>
            <param name="isdisposing">Indicates whether the call is from Dispose method or from a finalizer.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetFilterControl.AdvancedFilterType">
            <summary>
            Gets or sets AdvancedFilterType for SpreadsheetFilterControl. That is set the TextFilter or NumberFilter or DateFilter based on the column elements type. 
            </summary>
            <value>
            One of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.AdvancedFilterType"/> enumeration that specifies which Advanced filter type needs to be loaded.
            The default value is <see cref="F:Syncfusion.UI.Xaml.Spreadsheet.AdvancedFilterType.TextFilter"/>.
            </value>        
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetFilterControl.IsAdvancedFilterVisible">
            <summary>
            Gets or sets a value indicating whether AdvancedFilter should be visible or not.
            </summary>
            <value>
            <b>true</b> if AdvancedFilter is visible; otherwise,<b>false</b>. The default value is <b>false</b>. 
            </value>  
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetFilterControl.FilterColumnType">
            <summary>
            Gets or sets a value indicating FilterColumnType in SpreadsheetFilterControl.That is TextFilter or NumberFilter or DateFilter.
            </summary>
            <value>
            A string that specifies FilterColumnType of SpreadsheetFilterControl
            The default value is TextFilters. 
            </value> 
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetFilterControl.FilterPopupHeight">
            <summary>
            Gets or sets height for Filter popup height.
            </summary>
            <value>Filter popup height</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetFilterControl.FilterPopupWidth">
            <summary>
            Gets or sets width for filter popup.
            </summary>
            <value>Filter popup width</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController">
            <summary>
            Represents a class which is used to control/handle the selection of the GraphicCells
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController.#ctor(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController">GraphicSelectionController</see> class. 
            </summary>
            <param name="model">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel"/></param>       
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController.AddSelection(System.Collections.Generic.List{Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl})">
            <summary>
            Adds the selection to the mentioned shapes.
            </summary>
            <param name="shapes"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController.HandlePointerOperations(Syncfusion.UI.Xaml.CellGrid.GridPointerEventArgs,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell)">
            <summary>
            Handles the pointer operations
            </summary>
            <param name="args"></param>
            <param name="cell"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController.HandleKeyDown(System.Windows.Input.KeyEventArgs,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell)">
            <summary>
            Handles the KeyDown operation.
            </summary>
            <param name="e"></param>
            <param name="cell"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController.RaiseSelectionChangingEvent(System.Collections.Generic.List{Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl},System.Collections.Generic.List{Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl},Syncfusion.UI.Xaml.CellGrid.Helpers.ActivationTrigger)">
            <summary>
            Helper method to raise the <see cref="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController.RaiseSelectionChangingEvent(System.Collections.Generic.List{Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl},System.Collections.Generic.List{Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl},Syncfusion.UI.Xaml.CellGrid.Helpers.ActivationTrigger)"/> event.
            </summary>
            <param name="oldshapes"></param>
            <param name="newshapes"></param>
            <param name="trigger"></param>
            <returns>Returns true, if event is not canceled</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController.RaiseSelectionChangedEvent(System.Collections.Generic.List{Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl},System.Collections.Generic.List{Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl},Syncfusion.UI.Xaml.CellGrid.Helpers.ActivationTrigger)">
            <summary>
            Helper method to raise the <see cref="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController.RaiseSelectionChangedEvent(System.Collections.Generic.List{Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl},System.Collections.Generic.List{Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl},Syncfusion.UI.Xaml.CellGrid.Helpers.ActivationTrigger)"/> event.
            </summary>
            <param name="oldshapes"></param>
            <param name="newshapes"></param>
            <param name="trigger"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController.ProcessTabKeyNavigation(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell)">
            <summary>
            The selection operations performed in SfSpreadsheet while pressing the Tab key on the Graphic Cell
            </summary>
            <param name="cell">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController.OnPointerPressed(System.Windows.Input.MouseButtonEventArgs,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell)">
            <summary>
            Invoked when the pointer is pressed on <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell"/> and performs the operations.
            </summary>
            <param name="args">An <see cref="T:System.Windows.Input.MouseButtonEventArgs">MouseButtonEventArgs</see> that contains the event data.</param>
            <param name="cell">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell"/></param>      
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController.MoveSelectionToGrid">
            <summary>
            Adds the selection and current cell on the SpreadsheetGrid.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController.RemoveSelectedGraphicCells">
            <summary>
            Remove the selected GraphicCells
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController.SelectAllGraphicCells">
            <summary>
            Used to select all GraphicCells.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController.SetCurrentGraphicObject(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell)">
            <summary>
            Used to set the current <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject"/> to renderer.
            </summary>
            <param name="cell"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController.BringShapeIntoView(Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl)">
            <summary>
            Scrolls the grid to bring the selected <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell"/> into view.
            </summary>
            <param name="shape"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController.WireEvents">
            <summary>
            Hook the events
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController.UnWireEvents">
             <summary>
            UnHook the events
             </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController.CellGrid_CellClick(System.Object,Syncfusion.UI.Xaml.CellGrid.Helpers.GridCellClickEventArgs)">
            <summary>
            This method is used to remove the selection from <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell"/>
            when click on the <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController.Grid_SelectionChanging(System.Object,Syncfusion.UI.Xaml.CellGrid.Helpers.SelectionChangingEventArgs)">
            <summary>
            Need to clear the selection from GraphicCells when click on GridCell.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController.ProcessPointerSelection(System.Windows.Input.MouseButtonEventArgs,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell)">
            <summary>
            Used to select the GraphicCells when pointer pressed [WPF and WF] or released[UWP].
            </summary>
            <param name="args">An <see cref="T:System.Windows.Input.MouseButtonEventArgs">MouseButtonEventArgs</see> that contains the event data.</param>
            <param name="cell">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController.Dispose">
            <summary>
            Dispose all the resources used by the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController"/> class
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController.Model">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionController.SelectedShapes">
            <summary>
            Gets or sets the collection of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/> which are selected.
            </summary>
            <value>List of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/> collection</value>      
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.MoveResizeController">
            <summary>
            Helper Control which is used to resize the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.MoveResizeController.#ctor(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.MoveResizeController">MoveResizeController</see> class. 
            </summary>
            <param name="graphicModel">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.MoveResizeController.OnPointerPressed(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Occurs when a pointer pressed within this element
            </summary>
            <param name="e"></param>
            <param name="control"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.MoveResizeController.OnPointerReleased(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Occurs when a pointer released after press action within this element.
            </summary>
            <param name="e"></param>
            <param name="control"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.MoveResizeController.OnPointerMoved(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl,System.Windows.Input.MouseEventArgs)">
            <summary>
            Occurs when a pointer moves while the pointer remains within the hit test area of this element.
            </summary>
            <param name="e"><see cref="T:System.Windows.Input.MouseEventArgs"/></param>
            <param name="control"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.MoveResizeController.OnPointerExited(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl,System.Windows.Input.MouseEventArgs)">
            <summary>
            Occurs when a pointer leaves the hit test area of this element.
            </summary>
            <param name="e"></param>
            <param name="control"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.MoveResizeController.HandleKeyDown(System.Windows.Input.KeyEventArgs,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl)">
            <summary>
            Used to handle key down operations
            </summary>
            <param name="e"></param>
            <param name="graphicCellControl"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.MoveResizeController.MoveUsingKey(System.Windows.Input.KeyEventArgs,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl)">
            <summary>
             Move the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/> when appropriate key is pressed
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.KeyEventArgs">KeyEventArgs</see> that contains the event data.</param>
            <param name="graphicCellControl">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.MoveResizeController.ResizeUsingKey(System.Windows.Input.KeyEventArgs,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl)">
            <summary>
            Used to resize the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/> when appropriate key is pressed
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.KeyEventArgs">KeyEventArgs</see> that contains the event data.</param>
            <param name="graphicCellControl">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.MoveResizeController.Resize(System.Int32,System.Int32,Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl)">
            <summary>
            To resize the <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/> with X and Y axis.
            </summary>
            <param name="diffX">X-axis difference</param>
            <param name="diffY">Y-axis difference</param>
            <param name="shape">An instance of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.MoveResizeController.Move(System.Int32,System.Int32,Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl)">
            <summary>
            Method to move the <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/>.
            </summary>
            <param name="diffX">X-axis difference</param>
            <param name="diffY">Y-axis difference</param>
            <param name="shape">An instance of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.MoveResizeController.Resize(System.Windows.Point,Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl)">
            <summary>
            Helper method to resize the <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/>.
            </summary>
            <param name="pointerPos"></param>
            <param name="shape"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.MoveResizeController.Move(System.Windows.Point,Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl)">
            <summary>
            Helper method to move the <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/>.
            </summary>
            <param name="pointerPos"></param>
            <param name="shape"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.MoveResizeController.AutoScroller_AutoScrollerValueChanged(System.Object,Syncfusion.UI.Xaml.CellGrid.AutoScrollerValueChangedEventArgs)">
            <summary>
            Used to move/resize the GraphicCell when the element is dragged over auto scroll bounds
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.MoveResizeController.GetResizeLocation(System.Windows.Point)">
            <summary>
            Used to get the resize area based on pointer position and also set the 
            cursor based on resize area
            </summary>
            <param name="pointerPos">Pointer position</param>
            <returns><see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.ResizeLocation"/></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.MoveResizeController.CanDrag(System.Windows.Point,Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl)">
            <summary>
            Used to determines whether the pointer is in correct position
            to start drag/move <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/>
            </summary>
            <param name="pointerPos">Pointer position</param>
            <returns><param name="shape"/><see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.MoveResizeController.SetCursor(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.CursorsType)">
            <summary>
            Hepler method to set the cursor
            </summary>
            <param name="cursorType"><see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.CursorsType"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.MoveResizeController.Dispose">
            <summary>
            Dispose all the resources used by the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.MoveResizeController"/> class
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.ResizeLocation">
            <summary>
            Used to determines the starting location of resizing.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.CursorsType">
            <summary>
            Enumeration for type of cursors
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell">
            <summary>
            Represents a class that is used to maintain/reuse the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell.#ctor(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel)">
            <summary>
            Initializes a new instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell"/> class with the specified GraphicModel.
            </summary>
            <param name="model">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell.SetFocus">
            <summary>
            Used to set the focus to <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell.UpdateGraphicCell">
            <summary>
            Used to update the information(Renderer, GraphicCellControl, etc.) of GraphicCell.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell.UpdateGraphicCell(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl@,System.Boolean)">
            <summary>
            Used to update the the renderer and <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/>.
            </summary>
            <param name="control"><see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/></param>
            <param name="isSelected">Sets true, if GraphicCell is selected</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell.UpdateRenderer(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl@)">
            <summary>
            Used to update the renderer of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell"/>
            and unload the UIElement if renderer is changed.
            </summary>
            <param name="graphicObject"><see cref="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell.GraphicObject"/></param>
            <param name="control"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell.Dispose">
            <summary>
            Dispose all the resources used by the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell"/> class
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell.Region">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicRegion"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell.Control">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/> which is placed in normal scrollable area
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell.FrozenRowControl">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/> which is placed in frozen row area.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell.FrozenColumnControl">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/> which is placed in frozen column area
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell.FrozenControl">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/> which is placed in non scrollable area.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell.Renderer">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer"/> based on cell type.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell.GraphicObject">
            <summary>
            Gets or sets the GraphicObject of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell"/>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell.IsEnsured">
            <summary>
            Determines whether the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell"/> is ensured or not
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell.Visibility">
            <summary>
            Sets the visibility of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicRegion">
            <summary>
            Determines the regions of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell"/>.
            (i.e., Where the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell"/> is placed (Frozen row area, Frozen column area and scrollable area).
            Load the duplicate controls based on the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicRegion"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicRegion.Normal">
            <summary>
            Set if <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell"/> is placed in normal scrollable area.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicRegion.Frozen">
            <summary>
            Set if <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell"/> is placed in non scrollable area.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicRegion.FrozenRow">
            <summary>
            Set if <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell"/> is placed in Frozen rows area.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicRegion.FrozenColumn">
            <summary>
            Set if <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell"/> is placed in Frozen columns area.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl">
            <summary>
            ContentControl which is used to load the content of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl.#ctor">
            <summary>
            Initializes a new instance of the GraphicCellControl class
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl.IsSelectedProperty">
            <summary>
            Identifies the Syncfusion.UI.Xaml.Spreadsheet.GraphicCellControl dependency property.
            </summary>        
            <remarks>
            The identifier for the Syncfusion.UI.Xaml.Spreadsheet.GraphicCellControl dependency property.
            </remarks>        
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl.OnApplyTemplate">
            <summary>
            Builds the visual tree for the GraphicCellControl when a new template is applied.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown"/> attached routed event
            reaches an element in its route that is derived from this class. Implement this
            method to add class handling for this event. 
            </summary>
            <remarks>Occurs when a pointer pressed within this element</remarks>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/>
            that contains the event data. The event data reports that one or more mouse
            buttons were pressed.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseMove"/> attached event reaches an element in its route that is derived from this
            class. Implement this method to add class handling for this event. 
            </summary>
            <remarks>Occurs when the mouse moves while the pointer remains within the hit test area of this element.</remarks>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> that
            contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseUp"/> routed event reaches an element in its route that is derived from this class.
            Implement this method to add class handling for this event. 
            </summary>
            <remarks>Occurs when a pointer released after press action within this element.</remarks>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/>
            that contains the event data. The event data reports that the mouse button was
            released.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseLeave"/> attached event is raised on
            this element. Implement this method to add class handling for this event.
            </summary>
            <remarks>
            Occurs when a pointer leaves the hit test area of this element.
            </remarks>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> that
            contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
            <summary>
            Invoked whenever an unhandled <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening"/> routed event reaches
            this class in its route. Implement this method to add class handling for this
            event.
            </summary>
            <remarks>
            The contextmenu opens while right click on the graphic cells.
            </remarks>
            <param name="e">The <see cref="T:System.Windows.Controls.ContextMenuEventArgs"/>
            that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Invoked when an unhandled Keyboard.KeyDown attached event reaches an element in its route that is derived from this class. 
            Implement this method to add class handling for this event.         
            </summary>
            <remarks>Occurs when a key pressed within the element from this class</remarks>
            <param name="e">The <see cref="T:System.Windows.Input.KeyEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl.Dispose">
            <summary>
            Dispose all the resources used by the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/> class
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl.IsSelected">
            <summary>
            Determines whether the GraphicCellControl is selected or not.
            </summary>
            <value>True or False</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionControl">
            <summary>
            Represents a control which is used to show the selection on GraphicCellControl
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionControl.#ctor">
            <summary>
            Initializes an instance of <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.GraphicSelectionControl"/>
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicsPanel">
            <summary>
            A custom virtualizing panel used to load the graphic cells.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicsPanel.#ctor(System.String)">
            <summary>
            creates an instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicsPanel"/>
            </summary>
            <param name="name">Name of the panel</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicsPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arrange the GraphicCellControl which are only in viewable area.
            </summary>
            <param name="finalSize">finalsize of the panel</param>
            <returns><see cref="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicsPanel.ArrangeOverride(System.Windows.Size)"/></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicsPanel.ArrangeGraphicCells(System.Windows.Size)">
            <summary>
            Arrange the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell"/> which are only in viewable area.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicsPanel.ArrangeChartAsGraphiCell(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell,System.Windows.Size)">
            <summary>
            Used to Arrange the IChart
            </summary>
            <param name="graphicCell"></param>
            <param name="finalSize"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicsPanel.ArrangeGraphicCellControl(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl,System.Windows.Rect,System.Windows.Rect)">
            <summary>
            Clip and arrange the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/> into the specified rect.
            </summary>
            <param name="graphicCell"><see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell"/></param>
            <param name="control"></param>
            <param name="containerRect"></param>
            <param name="cellRect"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicsPanel.EnsureGraphicCells(System.Windows.Size)">
            <summary>
            Based on the current viewable area, create/update the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/> and load its content based on celltype. 
            And then measure <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicsPanel.EnsureChartAsGraphicCell(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject,System.Windows.Size)">
            <summary>
            Create or measure the IChart
            </summary>
            <param name="graphicObject"></param>
            <param name="availableSize"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicsPanel.MeasureGraphicCells(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl,Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl)">
            <summary>
            Rotate and measure the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/>.
            </summary>
            <param name="graphicCell"><see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell"/></param>
            <param name="control"><see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/></param>
            <param name="shape"><see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicsPanel.CreateGraphicCell(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicRegion)">
            <summary>
            Create a new <see cref="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicsPanel.CreateGraphicCell(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicRegion)"/> or recycle it from RecycleGraphicElementsBin
            </summary>
            <param name="obj">GraphicCell</param>
            <returns><param name="region"/></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicsPanel.Grid">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicsPanel.Container">
            <summary>
            Gets the container from grid.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1">
            <summary>
            Defines the default implementation of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer"/>.
            You can create the custom GraphicCell renderer with this as a base class.
            </summary>
            <typeparam name="T">Element type of the Custom <see cref="N:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells"/></typeparam>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer">
            <summary>
            An interface for a graphic cell renderer.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer.Arrange(System.Windows.UIElement,System.Windows.Rect)">
            <summary>
            Arrange the element of GraphicCell
            </summary>
            <param name="uiElement"></param>
            <param name="cellRect"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer.Measure(System.Windows.UIElement,System.Windows.Size)">
            <summary>
            Measure the element of GraphicCell
            </summary>
            <param name="uiElement"></param>
            <param name="availableSize"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer.PrepareUIElements(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject)">
            <summary>
            Creates a <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/> and its content
            </summary>
            <param name="cellContainer"></param>
            <param name="graphicObject"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer.InitializeElement(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject)">
            <summary>
            Initialize the element of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/>.
            </summary>
            <param name="cellcontainer"></param>
            <param name="graphicObject"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer.UnloadUIElements(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl)">
            <summary>
            Unload the content of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/>.
            </summary>
            <param name="uiElement"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer.RaiseSaveChanges">
            <summary>
            Raised when want to save the changes
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer.GetControlValue">
            <summary>
            Used to get the current value from control
            </summary>
            <returns>value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer.ShouldTryToHandleKeyDown(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl,System.Windows.Input.KeyEventArgs)">
            <summary>
            Used for RendererElement to handle the keydown.
            </summary>
            <param name="e"></param>
            <param name="control"></param>
            <returns>Returns true, if renderer element handles the key down</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer.HandlePointerOperations(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl,Syncfusion.UI.Xaml.CellGrid.GridPointerEventArgs)">
            <summary>
            This method is used to handle the mouse pointer operations.
            </summary>
            <param name="control">An instance of<see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/>that loads the content. </param>
            <param name="args">An instance of<see cref="T:Syncfusion.UI.Xaml.CellGrid.GridPointerEventArgs"/> that indicates mouse point operations </param>
            <returns>Return true,if the GraphicCell contains hyperlink;else false.</returns>  
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer.CurrentRendererElement">
            <summary>
            Gets or sets the rendered element of current <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer.CurrentGraphicObject">
            <summary>
            Gets or sets the current <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject"/>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer.IsEditable">
            <summary>
            Determines whether the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer"/> is editable or not
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer.GraphicModel">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.UI.Xaml.CellGrid.SfCellGrid"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.RaiseSaveChanges">
            <summary>
            Raised when want to save the changes
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.GetControlValue">
            <summary>
            Used to get the current value from control
            </summary>
            <returns>value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.Arrange(System.Windows.UIElement,System.Windows.Rect)">
            <summary>
            Arrange the element of GraphicCell
            </summary>
            <param name="uiElement"></param>
            <param name="cellRect"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.Measure(System.Windows.UIElement,System.Windows.Size)">
            <summary>
            Measure the element of GraphicCell
            </summary>
            <param name="uiElement"></param>
            <param name="availableSize"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.ShouldTryToHandleKeyDown(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl,System.Windows.Input.KeyEventArgs)">
            <summary>
            Used for RendererElement to handle the keydown.
            </summary>
            <param name="e"></param>
            /// <param name="control"></param>
            <returns>Returns true, if renderer element handles the key down</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.PrepareUIElements(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject)">
            <summary>
            Creates a <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/> and its content
            </summary>
            <param name="cellContainer"></param>
            <param name="graphicObject"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.InitializeElement(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject)">
            <summary>
            Initialize the element of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/>.
            </summary>
            <param name="cellcontainer"></param>
            <param name="graphicObject"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.OnInitializeElement(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl,`0,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject)">
            <summary>
            Initialize or update the properties of <see cref="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.OnInitializeElement(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl,`0,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject)"/> and it s content.
            </summary>
            <param name="container"><see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/></param>
            <param name="element">content of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/></param>
            <param name="graphicObject"><see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.CreateOrRecycleElement(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject)">
            <summary>
            Create or recycle the UIElement.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.OnCreateElement(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject)">
            <summary>
            Creates the new UIElement.
            </summary>
            <param name="obj"><see cref="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.OnCreateElement(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject)"/></param>
            <returns>UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.WireUIElement(`0)">
            <summary>
            Hook events
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.UnWireUIElement(`0)">
            <summary>
            Unhook events
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.UnloadUIElements(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl)">
            <summary>
            Unload the content of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/>.
            </summary>
            <param name="uiElement"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.Dispose">
            <summary>
            Dispose the live instances of <see cref="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.#ctor"/>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.HandlePointerOperations(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl,Syncfusion.UI.Xaml.CellGrid.GridPointerEventArgs)">
            <summary>
            This method is used to handle the mouse pointer operations.
            </summary>
            <param name="control">An instance of<see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/>that loads the content. </param>
            <param name="args">An instance of<see cref="T:Syncfusion.UI.Xaml.CellGrid.GridPointerEventArgs"/> that indicates mouse point operations </param>
            <returns>Return true,if the GraphicCell contains hyperlink;else false.</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.CurrentRendererElement">
            <summary>
            Gets or sets the rendered element of current <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.CurrentGraphicObject">
            <summary>
            Gets or sets the current <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject"/>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.IsEditable">
            <summary>
            Determines whether the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer"/> is editable or not
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.GraphicModel">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.UI.Xaml.CellGrid.SfCellGrid"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellUIElementBin`1">
            <summary>
            This class implements a cache of UIElement of the given type parameter T. It is used
            by the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererBase`1"/> renderer to recycle UIElement 
            elements for cells that were scrolled out of view and delay unloading of UIElements.
            This reduces the number of times the UIElement needs to be created or unloaded and
            instead only the contents of the UIElement will be reinitialized with cell contents. <para/>
            </summary>
            <typeparam name="T">Type of the Element</typeparam>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellUIElementBin`1.Enqueue(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer,`0)">
            <summary>
            Enqueues the specified UI element.
            </summary>
            <param name="uiElement">The UI element.</param>
            <param name="renderer"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellUIElementBin`1.Dequeue(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer)">
            <summary>
            Dequeues an UIElement from the specified canvas.
            </summary>
            <param name="renderer">The canvas.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellUIElementBin`1.Item(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer)">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.Queue`1"/> for the specified Renderer.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererCollection">
            <summary>
            Collection of IGrapihcCellRenderer
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererCollection.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Component and optionally releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
            <remarks>See the documentation for the System.ComponentModel.Component class and its Dispose member.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererCollection.Add(System.String,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer)">
            <summary>
            Add the Renderes to the Renderer dictionary.
            </summary>
            <param name="key"></param>
            <param name="renderer"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererCollection.Remove(System.String)">
            <summary>
            Remove the Renderer from dictionary for corresponding key vallue
            </summary>
            <param name="key"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererCollection.ContainsKey(System.String)">
            <summary>
            Checks whether the Renderer Dictionary contains the Corresponding Renderer Key.
            </summary>
            <param name="key"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererCollection.ContainsValue(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer)">
            <summary>
            Cheks whether the Render Dictionary contains the corresponding renderer.
            </summary>
            <param name="cellRenderer"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererCollection.CopyTo(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer[],System.Int32)">
            <summary>
            Copy the Renderer values to Array.
            </summary>
            <param name="array"></param>
            <param name="index"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererCollection.Clear">
            <summary>
            Clears the values in Renderer Dictionary.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an
            <see cref="T:System.Array" />, starting at a particular <see
            cref="T:System.Array" /> index.
            </summary>
            <param name="index">The zero-based index in <paramref name="array" /> at which
            copying begins. </param>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is
            the destination of the elements copied from <see
            cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" />
            must have zero-based indexing. </param>
            <filterpriority>2</filterpriority>
            <exception cref="T:System.ArgumentException"><paramref name="array" /> is
            multidimensional.-or- The number of elements in the source <see
            cref="T:System.Collections.ICollection" /> is greater than the available space
            from <paramref name="index" /> to the end of the destination <paramref
            name="array" />.-or-The type of the source <see
            cref="T:System.Collections.ICollection" /> cannot be cast automatically to the
            type of the destination <paramref name="array" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" />
            is less than zero. </exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="array" /> is
            null. </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererCollection.GetEnumerator">
            <summary>
            Returns the Enumerator for retriving the values.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererCollection.Item(System.String)">
            <summary>
            Indexer will return the correspoding renderer for the corresponding Key value.
            </summary>
            <param name="key"></param>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererCollection.Values">
            <summary>
            Gets the Renderes in the collection
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererCollection.Keys">
            <summary>
            Get the Key values of Renderes
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererCollection.Count">
            <summary>
            Gets the number of elements contained in the <see
            cref="T:System.Collections.ICollection" />.
            </summary>
            <returns>
            The number of elements contained in the <see
            cref="T:System.Collections.ICollection" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see
            cref="T:System.Collections.ICollection" /> is synchronized (thread safe).
            </summary>
            <returns>
            true if access to the <see cref="T:System.Collections.ICollection" /> is
            synchronized (thread safe); otherwise, false.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see
            cref="T:System.Collections.ICollection" />.
            </summary>
            <returns>
            An object that can be used to synchronize access to the <see
            cref="T:System.Collections.ICollection" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicImageCellRenderer">
            <summary>
            Custom GraphicCellRenderer for <see cref="T:System.Windows.Controls.Image"/> celltype.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicImageCellRenderer.OnCreateElement(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject)">
            <summary>
            Creates a new <see cref="T:System.Windows.Controls.Image"/>.
            </summary>
            <param name="graphicObject"><see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject"/></param>
            <returns><see cref="T:System.Windows.Controls.Image"/></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicImageCellRenderer.OnInitializeElement(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl,System.Windows.Controls.Image,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject)">
            <summary>
            Initialize or update the properties of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/> and its content.
            </summary>
            <param name="container"><see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/></param>
            <param name="element"><see cref="T:System.Windows.Controls.Image"/></param>
            <param name="graphicObject"><see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicImageCellRenderer.HandlePointerOperations(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl,Syncfusion.UI.Xaml.CellGrid.GridPointerEventArgs)">
            <summary>
            This method is used to handle the mouse pointer operations.
            </summary>
            <param name="control">An instance of<see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/>that loads the content. </param>
            <param name="args">An instance of<see cref="T:Syncfusion.UI.Xaml.CellGrid.GridPointerEventArgs"/> that indicates mouse point operations </param>
            <returns>Return true,if the GraphicCell contains hyperlink;else false.</returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicRichTextCellRenderer">
            <summary>
            Custom GraphicCellRenderer for <see cref="T:System.Windows.Controls.RichTextBox"/> celltype.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicRichTextCellRenderer.OnCreateElement(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject)">
            <summary>
            Creates a new <see cref="T:System.Windows.Controls.RichTextBox"/>.
            </summary>
            <param name="graphicObject"><see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject"/></param>
            <returns><see cref="T:System.Windows.Controls.RichTextBox"/></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicRichTextCellRenderer.OnInitializeElement(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl,System.Windows.Controls.RichTextBox,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject)">
            <summary>
            Initialize or update the properties of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/> and its content.
            </summary>
            <param name="container"><see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/></param>
            <param name="element"><see cref="T:System.Windows.Controls.RichTextBox"/></param>
            <param name="graphicObject"><see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicRichTextCellRenderer.WireUIElement(System.Windows.Controls.RichTextBox)">
            <summary>
            Hook events
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicRichTextCellRenderer.UnWireUIElement(System.Windows.Controls.RichTextBox)">
            <summary>
            Unhook events 
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicRichTextCellRenderer.ShouldTryToHandleKeyDown(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl,System.Windows.Input.KeyEventArgs)">
            <summary>
            Used for RendererElement to handle the keydown.
            </summary>
            <param name="control">GraphicCellControl</param>
            <param name="e"></param>
            <returns>Returns true, if renderer element handles the key down</returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.NamespaceDoc">
            <summary>
            Contains classes which required to load the GraphicCells(Pictures, Charts and TextBoxes) into the Spreadsheet.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel">
            <summary>
            Holds that all information about Graphic Cells and offers many events to notify the actions
            or to modify the behavior of the Graphic cells.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel">GraphicModel</see> class. 
            </summary>
            <param name="grid">An instance of the <see cref="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.SpreadsheetGrid"/></param>        
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.CommitValue(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject,System.Object)">
            <summary>
            Used to commit the edited value into the <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/>.
            </summary>
            <param name="graphicObject"></param>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.SetFocus">
            <summary>
            Used to set the focus to <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellControl"/> while switching the ActiveGrid.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.OnGraphicCellContextMenuOpening(System.Object,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellContextMenuOpeningEventArgs)">
             <summary>
            Helper method used to check GraphicCellContextMenuOpening.
             </summary>
             /// <param name="sender">Spreadsheet.ActiveGrid.GraphicModel</param>
             <param name="e">GraphicCellContextMenuOpeningEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.InitializeCellRendererCollection">
            <summary>
            Initialize the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererCollection"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.GetCellRenderer(Syncfusion.XlsIO.ExcelShapeType,Syncfusion.XlsIO.IChart)">
            <summary>
            Used to get the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer"/> based on celltype of <see cref="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.GetCellRenderer(Syncfusion.XlsIO.ExcelShapeType,Syncfusion.XlsIO.IChart)"/>
            </summary>
            <param name="shape"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.Is3DChart(Syncfusion.XlsIO.IChart)">
            <summary>
            Check whether the chart type is 3D or not.
            </summary>
            <param name="chart"></param>
            <returns> Return True if chart type is 3D otherwise return as False</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.OnGraphicSelectionChanging(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionChangingEventArgs)">
            <summary>
            Helper method to trigger the <see cref="E:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.GraphicSelectionChanging"/> event.
            </summary>
            <param name="args"></param>
            <returns>Returns false, if the selection changing is canceled.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.OnGraphicSelectionChanged(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionChangedEventArgs)">
            <summary>
            Helper method to trigger the <see cref="E:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.GraphicSelectionChanged"/> event.
            </summary>
            <param name="args"><see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionChangedEventArgs"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.InvalidateGraphicVisual">
            <summary>
            Invalidates the visual layout of GraphicCell.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.AddSelectedShapes(Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl)">
            <summary>
            Adds the selected shapes in the list
            </summary>
            <param name="shape">An instance of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.ClearSelection">
            <summary>
            Clears the selection from shapes and move the selection to Grid
            </summary>       
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.InvalidateGraphicObjects">
            <summary>
            Invalidates or clears the cached content of GraphicObjects.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.Dispose">
            <summary>
            Dispose all the resources used by the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel"/> class
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.CopyPaste">
            <summary>
            Gets or sets the instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCopyPasteController"/> which performs
            the graphic cell cut,copy,paste operation.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.GraphicObjects">
            <summary>
            Returns the collection of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.GraphicCellRenderers">
            <summary>
            Gets the collection of <see cref="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.GraphicCellRenderers"/> objects for the
            current grid view method.
            </summary>
            <value>
            Returns the instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellRendererCollection"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.SpreadsheetGrid">
            <summary>
            Gets the instance of <see cref="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.SpreadsheetGrid"/> which displays the data in SfSpreadsheet.
            </summary>
            <value>An instance of <see cref="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.SpreadsheetGrid"/></value>       
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.GraphicSelectionController">
            <summary>
            Gets the instance of <see cref="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.GraphicSelectionController"/> which handles
            the selection of Graphic Cells .
            </summary>
            <value>
            An instance of <see cref="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.GraphicSelectionController"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.SelectedShapes">
            <summary>
            Gets or sets the collection of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/> which are selected .
            </summary>
            <value>
            List of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/> collection
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.Spreadsheet">
            <summary>
            Returns the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.MoveResizeController">
            <summary>
            Returns the move/resize controller of GraphicCells
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.GraphicCellContextMenuOpening">
            <summary>
            This event will occur before opening the context menu for GraphicCells<see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject"/>.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.GraphicSelectionChanging">
            <summary>
            This event occurs before the selection of GraphicCells to be changed. 
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel.GraphicSelectionChanged">
            <summary>
            This event occurs after the selection of GraphicCells changed.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject">
            <summary>
            Represents a class that maintains the information about the GraphicObject (Shape, Value and Name).
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject.#ctor(Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl,System.Object)">
            <summary>
            Initializes an instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject"/>.
            </summary>
            <param name="shape">An instance of<see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/></param>
            <param name="content">Content of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject.Clone(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Used to Clone the Shapes<see cref="T:Syncfusion.XlsIO.IShape"/>
            </summary>
            <param name="grid"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject.Shape">
            <summary>
            Gets or sets the instance of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/> which holds the information about implementation of Shapes.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/></value>        
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject.Chart">
            <summary>
            Gets or sets the instance of <see cref="T:Syncfusion.XlsIO.IChart"/> which
            represents a chart sheet.
            </summary>
            <value>
            An instance of <see cref="T:Syncfusion.XlsIO.IChart"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject.Content">
            <summary>
            Gets or sets the content of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/> which holds the information
            about implementation of Shapes.
            </summary>
            <remarks>
            Contents like TextBox, Image,..
            </remarks>
            <value>
            Content of the <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicObject.Name">
            <summary>
            Gets or sets the name of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/> which holds the information
            about implementation of Shapes..
            </summary>
            <value>Name of the shape</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.BoolToVisiblityConverter">
            <summary>
            Converter class which is used to convert <see cref="T:System.Boolean"/> to <see cref="T:System.Windows.Visibility"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionChangingEventHandler">
            <summary>
            Event handler to denotes the selection changing of GraphicCell
            </summary>
            <param name="sender"><see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel"/></param>
            <param name="args"><see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionChangingEventArgs"/></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionChangingEventArgs">
            <summary>
            Provides data for the <see cref="!:GraphicSelectionChanging"/> event
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionChangingEventArgs.OldSelectedShapes">
            <summary>
            Gets or sets the collection of previously selected shapes.
            </summary>
            <value>The list of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/> collection</value>  
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionChangingEventArgs.NewSelectedShapes">
            <summary>
            Gets or sets the collection of currently selected shapes.
            </summary>
            <value>The list of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/> collection</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionChangingEventArgs.SelectionTrigger">
            <summary>
            Gets or sets how the selection is triggered in Graphic Cells .
            </summary>
            <value>One of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.ActivationTrigger"/> that specifies the activation options</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionChangedEventHandler">
            <summary>
            Event handler to denotes the selection changed of GraphicCell
            </summary>
            <param name="sender"><see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicModel"/></param>
            <param name="args"><see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionChangedEventArgs"/></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionChangedEventArgs">
            <summary>
            Provides data for the <see cref="!:GraphicSelectionChanged"/> event.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionChangedEventArgs.OldSelectedShapes">
            <summary>
            Gets or sets the collection of previously selected shapes.
            </summary>
            <value>The list of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/> collection</value>       
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionChangedEventArgs.NewSelectedShapes">
            <summary>
            Gets or sets the collection of currently selected shapes.
            </summary>
            <value>The list of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/> collection</value>       
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicSelectionChangedEventArgs.SelectionTrigger">
            <summary>
            Gets or sets how the selection is triggered in Graphic Cells .
            </summary>
            <value>One of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.ActivationTrigger"/> that specifies the activation options</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellContextMenuOpeningEventArgs">
            <summary>
            Event Handler to Handle the GraphicCellContextMenuOpening Event which can be marked as Handled.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellContextMenuOpeningEventArgs.#ctor(Syncfusion.XlsIO.IShape)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellContextMenuOpeningEventArgs">GraphicCellContextMenuOpeningEventArgs</see>class.
            </summary>
            <param name="Shape">An instance of <see cref="T:Syncfusion.XlsIO.IShape"/></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellContextMenuOpeningEventArgs.GraphicContextMenu">
            <summary>
            Gets or sets the Context Menu items for GraphicCells
            </summary>
            <value>An instance of <see cref="T:System.Windows.Controls.ContextMenu"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellContextMenuOpeningEventArgs.Shape">
            <summary>
            Gets Shape of the cell.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.XlsIO.IShape"/>.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellContextMenuOpeningEventHandler">
            <summary>
            Event handler to denote the opening of GraphicCell context menu
            </summary>
            <param name="sender"><see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCell"/></param>
            <param name="e"><see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellContextMenuOpeningEventArgs"/></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellHelper">
            <summary>
            Helper class for GraphicCells related stuffs.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellHelper.AddGraphicChartCellRenderer(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer)">
            <summary>
            Add <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer"/> for charts, if charts need to be loaded into Spreadsheet
            </summary>
            <param name="spreadsheet">SfSpreadsheet</param>
            <param name="renderer">CellRenderer for Chart</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellHelper.Add3DGraphicChartCellRenderer(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer)">
            <summary>
            Add <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.IGraphicCellRenderer"/> for 3D-charts, if 3D-charts need to be loaded into Spreadsheet
            </summary>
            <param name="spreadsheet">SfSpreadsheet</param>
            <param name="renderer">CellRenderer for 3D-Chart</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellHelper.AddSparklineCellRenderer(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer)">
            <summary>
            Add <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer"/> for sparklines, if sparklines need to be loaded into Spreadsheet
            </summary>
            <param name="spreadsheet">SfSpreadsheet</param>
            <param name="renderer">CellRenderer for Sparkline</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellHelper.AddImage(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.IO.Stream)">
            <summary>
            Add an image to worksheet
            </summary>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
            <param name="sheet">An instance of <see cref="T:Syncfusion.XlsIO.IWorksheet"/></param>
            <param name="rowColIndex">RowColumnIndex where an image is to be placed</param>
            <param name="stream">file stream</param>
            <returns>An instance of <see cref="!:Syncfusion.XlsIO.Implementaion.Shapes.ShapesImpl"/></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellHelper.AddChart(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Add Chart to worksheet
            </summary>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
            <param name="sheet">An instance of <see cref="T:Syncfusion.XlsIO.IWorksheet"/></param>
            <returns>An instance of <see cref="T:Syncfusion.XlsIO.IChart"/></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellHelper.AddTextBox(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Size,System.String)">
            <summary>
            Add TextBox to worksheet
            </summary>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
            <param name="worksheet">An instance of <see cref="T:Syncfusion.XlsIO.IWorksheet"/></param>
            <param name="rowColumnIndex">rowColumnIndex where TextBox is to be placed</param>
            <param name="size">size of the RichTextBox</param>
            <param name="richText">rich text</param>
            <returns>An instance of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.TextBoxShapeImpl"/></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellHelper.GetShapeHeight(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl)">
            <summary>
            Used to get the shape height which is adjusted based on zoom scale.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellHelper.GetShapeWidth(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl)">
            <summary>
            Used to get the shape width which is adjusted based on zoom scale.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellHelper.GetChartHeight(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.IChart)">
            <summary>
            Used to get the chart height which is adjusted based on zoom scale.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellHelper.GetChartWidth(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.IChart)">
            <summary>
            Used to get the chart width which is adjusted based on zoom scale.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellHelper.SetShapeTop(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl,System.Double)">
            <summary>
            Used to set the top position for the shape by adjustinig the DPI values.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellHelper.SetShapeLeft(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl,System.Double)">
            <summary>
            Used to set the left position for the shape by adjustinig the DPI values.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellHelper.GetShapeLeft(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl)">
            <summary>
            Used to get the shape left position which is adjusted based on zoom scale.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellHelper.GetShapeTop(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl)">
            <summary>
            Used to get the shape top position which is adjusted based on zoom scale.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Converter.NamespaceDoc">
            <summary>
            Conatins classes to convert the XlsIO worksheet into grid.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Converter.SpreadsheetImportExtension">
            <summary>
            Represents a class which holds the functions for importing the worksheets from excel workbook into SpreadsheetGrid.
            </summary>
            <remarks>This class imports the formulas,charts, sparklines, images, merge cells, named ranges, border, background colors, etc., from the worksheet using XlsIO into SpreadsheetGrid.  </remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.Converter.SpreadsheetImportExtension.SheetFamilyId">
            <summary>
            Sheet family id - This is used to identify a family of grids.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Converter.SpreadsheetImportExtension.ImportExcelToGrid(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.XlsIO.IWorkbook,System.Int32)">
            <summary>
            Imports all worksheets from excel workbook to GridCollection.
            </summary>
            <param name="workbook">The Workbook.</param>
            <param name="spreadsheet"></param>
            <param name="SheetFamilyId"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Converter.SpreadsheetImportExtension.ImportWorksheetToGrid(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Imports single sheets from excel worbook to <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.
            </summary>
            <param name="grid">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.</param>
            <param name="sheet">An instance of <see cref="T:Syncfusion.XlsIO.IWorksheet"/>.</param>
            <remarks>Sets the grid lines and headers visibility, importing of rows/columns, merges, images, textboxes  and charts in the workbook.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Converter.SpreadsheetImportExtension.ImportChartToGrid(Syncfusion.XlsIO.IChart,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Import chart sheet into the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>
            </summary>
            <param name="chart">IChart</param>
            <param name="grid">SpreadsheetGrid</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Converter.SpreadsheetImportExtension.ImportImagesToGrid(Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Import pictures into the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>
            </summary>
            <param name="sheet">IWorksheet</param>
            <param name="grid">SpreadsheetGrid</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Converter.SpreadsheetImportExtension.ImportTextBoxesToGrid(Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Import textboxes into the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>
            </summary>
            <param name="sheet">IWorksheet</param>
            <param name="grid">SpreadsheetGrid</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Converter.SpreadsheetImportExtension.ImportChartsToGrid(Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Import charts into the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>
            </summary>
            <param name="sheet">IWorksheet</param>
            <param name="grid">SpreadsheetGrid</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Converter.SpreadsheetImportExtension.ImportRowsAndColumns(Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Used to import the row and column information(row/column count, height, width). 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Converter.SpreadsheetImportExtension.ResetHeightAndWidth(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Used to reset the row height and column width of the Grid.
            </summary>
            <param name="grid"></param>
            <param name="sheet"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Converter.SpreadsheetImportExtension.GetHeight(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.Double)">
            <summary>
            Returns the adjusted height based on dpi value and zoom factor.
            </summary>
            <param name="grid">SpreadsheetGrid</param>
            <param name="height">Actual height</param>
            <returns>Adjusted height.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Converter.SpreadsheetImportExtension.GetWidth(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.Double)">
            <summary>
            Returns the adjusted width based on dpi value and zoom factor.
            </summary>
            <param name="grid">SpreadsheetGrid</param>
            <param name="height">Actual width</param>
            <returns>Adjusted width.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Converter.SpreadsheetImportExtension.ImportNamedRange(Syncfusion.UI.Xaml.CellGrid.FormulaEngine,Syncfusion.XlsIO.IWorkbook)">
            <summary>
            Copies the named range from Workbook into formula engine.
            </summary>
            <param name="engine">Specified FormmulaEngine</param>
            <param name="workbook">Specified workbook , which need to import named ranges</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Converter.SpreadsheetImportExtension.ImportMergesToGrid(Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.CellGrid.SfCellGrid)">
            <summary>
            Copies merged ranges into grid.
            </summary>
            <param name="sheet">Destination worksheet.</param>
            <param name="grid">Source grid.</param>       
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Converter.SpreadsheetImportExtension.GetFormat(System.String)">
            <summary>
            convert the excel format into grid supports formats.
            </summary>
            <param name="format">The format.</param>
            <returns>The format</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Converter.SpreadsheetImportExtension.ConvertColorToBrush(System.Drawing.Color)">
            <summary>
            Converts the <see cref="T:System.Drawing.Color"/> into corresponding <see cref="T:System.Windows.Media.SolidColorBrush"/>.
            </summary>
            <param name="excelColor">An instance of <see cref="T:System.Drawing.Color"/>.</param>
            <returns>An instance of <see cref="T:System.Windows.Media.SolidColorBrush"/>.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Converter.SpreadsheetImportExtension.GetBorderWidth(Syncfusion.XlsIO.ExcelLineStyle)">
            <summary>
            Returns border width based on the border's linestyle. 
            </summary>
            <param name="lineStyle">Border's linestyle.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Converter.SpreadsheetImportExtension.ConvertExcelBorder(Syncfusion.XlsIO.ExcelLineStyle,System.Drawing.Color)">
            <summary>
            Converts excel border into Pen.
            </summary>
            <param name="lineStyle">Border to convert.</param>
            <param name="color">Border color</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.NamespaceDoc">
            <summary>
            Contains classes and enumerators that simplify the programming with predefined methods and events 
            for common functionalities.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ConditionalFormatHelper">
            <summary>
            Represents a helper class which performs the operations of conditional formatting rules in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <remarks>Conditional Formatting rules includes HighlightCellRules, IconSets, DataBars, ColorScales etc.,</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ConditionalFormatHelper.ApplyHighlightedCellsRules(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,System.String,Syncfusion.XlsIO.IConditionalFormat,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,System.Boolean@,System.Boolean@)">
            <summary>
            Render the hightlighted cell rules conditional formatting.
            </summary>
            <param name="value">Cell value</param>
            <param name="excelConditionalFormat">Excel conditional formats for hightlighted rules</param>
            <param name="address">Its indicates the conditional formatting range</param>
            <param name="isBackgroundApplied">If true, background is applied for the cell</param>
            <param name="isStyleApplied">If true, the excel style is already is created.</param>
            <param name="column"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ConditionalFormatHelper.ApplyColorScales(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,Syncfusion.XlsIO.IColorScale,System.String,System.String,System.Boolean@)">
            <summary>
            Apply the color scales based on getting IColorScale from XlsIO.
            </summary>
            <param name="column">Current column</param>
            <param name="colorScale">Color Scale object from XlsIO</param>
            <param name="value">Cell value</param>
            <param name="formatRange">The selected range for conditional formats</param>
            <param name="isStyleApplied">If True, ExcelStyle is applied</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ConditionalFormatHelper.GetVisualBrush(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,Syncfusion.XlsIO.IIconSet,System.String,System.Double)">
            <summary>
            Get the visual brush for icon sets.
            </summary>
            <param name="column">Current column</param>
            <param name="iconSet">Icon Set object</param>
            <param name="formatRange">Icon Sets format range</param>
            <param name="cellValue">Current cell value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ConditionalFormatHelper.GetVisualBrushOnReverseOrder(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,Syncfusion.XlsIO.IIconSet,System.String,System.Double)">
            <summary>
            Gete the visual brush for the icons Sets reverse order.
            </summary>
            <param name="column">Current column</param>
            <param name="iconSet">Icon Set object</param>
            <param name="formatRange">Icon Sets format range</param>
            <param name="cellValue">Current cell value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ConditionalFormatHelper.GetDataBar(System.Collections.Generic.IEnumerable{Syncfusion.XlsIO.IConditionalFormat},System.String,Syncfusion.XlsIO.IDataBar@,System.String@)">
            <summary>
            Get the dataBar.
            </summary>
            <param name="dataBarFormats">collection of databars formats</param>
            <param name="address">databar format ranges</param>
            <param name="dataBar">data bar object</param>
            <param name="dataBarRange">databar range</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ConditionalFormatHelper.GetIconSets(System.Collections.Generic.IEnumerable{Syncfusion.XlsIO.IConditionalFormat},System.String,Syncfusion.XlsIO.IIconSet@,System.String@)">
            <summary>
            Get the IconSets
            </summary>
            <param name="iconSetFormats">Collection of iconsets formats</param>
            <param name="address">iconset format ranges</param>
            <param name="iconSets">icon sets object</param>
            <param name="iconSetsRange">icon sets range</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ConditionalFormatHelper.GetColorScales(System.Collections.Generic.IEnumerable{Syncfusion.XlsIO.IConditionalFormat},System.String,Syncfusion.XlsIO.IColorScale@,System.String@)">
            <summary>
            Get the ColorScales
            </summary>
            <param name="colorScalesFormats">Collection of color scales formats</param>
            <param name="address">Color scales format ranges</param>
            <param name="colorScales">color scale object</param>
            <param name="colorScaleRange">color scales range</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ConditionalFormatHelper.UpdateExcelStyle(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Updates the excel Style from ExcelRange.CellStyle if ExcelStyle is null and ExcelRange.HasStyle. Otherwise create the detault style.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ConditionalFormatHelper.GetIconSetIcon(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,Syncfusion.XlsIO.IIconSet,System.String,System.String)">
            <summary>
            Get the iconset icon.
            </summary>
            <param name="column">Current column</param>
            <param name="iconSet">Icon set object</param>
            <param name="value">Current cell value</param>
            <param name="formatRange">Icon set format range</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ConditionalFormatHelper.GetCellValue(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,System.String,System.Double@)">
            <summary>
            Get the cell value double.
            </summary>
            <param name="value">Cell value</param>
            <param name="result">Return the double value if parsed.</param>
            <param name="column"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ConditionalFormatHelper.TryGetPointValue(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,Syncfusion.XlsIO.IConditionValue,System.String,System.Double@)">
            <summary>
            Get the conditional value for different format types for conditional formats.
            </summary>
            <param name="column">Indicates the current column</param>
            <param name="condition">Conditional value for conditional format objects (DataBar, IconSets, ColorScales)</param>
            <param name="range">Indicates the selected range for conditional format</param>
            <param name="result">Returns the value if present in the condition object. Otherwise returns 0</param>
            <returns>Returns true if value present in the condition object otherwise returns false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ConditionalFormatHelper.TryGetMinValue(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.String,System.Double@)">
            <summary>
            Get the min value from the selected range for conditional formats
            </summary>
            <param name="spreadsheetGrid">SpreadsheetGrid</param>
            <param name="range">Indicates the selected range</param>
            <param name="result">Returns the min value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ConditionalFormatHelper.TryGetMaxValue(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.String,System.Double@)">
            <summary>
            Get the max value from the selected range for conditional formats
            </summary>
            <param name="spreadsheetGrid">SpreadsheetGrid</param>
            <param name="range">Indicates the selected range</param>
            <param name="result">Returns the max value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ConditionalFormatHelper.EvaluateColorScaleColor(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,System.String,Syncfusion.XlsIO.IColorScale,System.Double)">
            <summary>
            Evaluate the color scales color
            </summary>
            <param name="column">Current SpreadsheetColumn</param>
            <param name="range">Indicates the format range when selected</param>
            <param name="colorScale">Color Scale object from XlsIO</param>
            <param name="cellValue">Cell value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ConditionalFormatHelper.GetGradientColor(System.Double,Syncfusion.XlsIO.IDataBar,System.Boolean)">
            <summary>
            Get the gradient color for DataBar
            </summary>
            <param name="axisBarPosition">Which indicates the negative bar axis position</param>
            <param name="dataBar"></param>
            <param name="isNegativeBar">Indicates whether its negative bar or not.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ConditionalFormatHelper.EvaluateDataBarLength(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,Syncfusion.XlsIO.IDataBar,System.Double,System.Windows.Rect,System.String,System.Double@,System.Boolean@)">
            <summary>
            Evaluate the data bar length based on min and max value by format types
            </summary>
            <param name="dataBar"></param>
            <param name="value">Its denote cell value.</param>
            <param name="dataBarRect">Indicates the cell rect</param>
            <param name="axisBarPosition">Which indicates the negative bar axis position</param>
            <param name="isNegativeBar">Indicates whether its negative bar or not.</param>
            <param name="column"></param>
            <param name="formatRange"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ConditionalFormatHelper.ResetFormattingRangeMinMaxValue(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.String)">
            <summary>
            Reset the max and min value of formatting range. Because while cell value changed need to updated max or min based on updated value, so reset it and which is calculated in EvaluateDataBarLength
            </summary>
            <param name="formatRange">Which indicates selected cells range</param>
            <param name="grid"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ConditionalFormatHelper.GetIconSetConditionValue(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,Syncfusion.XlsIO.IConditionValue,System.String,System.Boolean@)">
            <summary>
            Get the condition value and check the operator of condition
            </summary>
            <param name="column">Current column</param>
            <param name="condition">Icon Set condition</param>
            <param name="formatRange">Icon set format range</param>
            <param name="isGreaterThan">If true, the operator is greaterThan, else greater than equalto</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ConditionalFormatHelper.EvaluateColor(System.Double,System.Double,System.Double,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Evaluate the color for color scales.
            </summary>
            <param name="cellValue">Indicates the cell value</param>
            <param name="minValue">Indicates the min value in the selected range</param>
            <param name="maxValue">Indicates the max value in the selected range</param>
            <param name="lowestColor">Indicates the loweset color that applied for color scales range</param>
            <param name="highestColor">Indicates the highest color that applied for color scales range</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper">
            <summary>
            Making an optimized formula calculation -> Initially formulas are parsed in engine and saved in ParsedFormulas collection.
            Now engine will add precedent cells and dependent cells as per the parsed formula. While editing any cell , now look at the precendent cells.
            If it is available in the hashtable , all the dependencies will be recalculated by using the method RecalculateDependencyCells.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.OpenWorkbookInZipArchive(System.IO.Stream,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Open file stream in ZipArchiveExt
            All the elements are saved in the collection of xmlItems.
            CalcChainXml holds the collection of formula cells only
            SpreadsheetCalcChain holds the collection of the formula cells
            Workbook.xml holds the collection of sheets,defined names, etc.
            </summary>
            <param name="fileStream"></param>
            <param name="sfSpreadsheet"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.ReadCalcChainXMLElements(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            After 2003 excel version , excel has a CalcChain xml, that maintains the information about formula cells. So we could get formula cells only from that xml.
            Parse the formula and stored in list for future usage. While calculating specified cell, the parsed formula read from list.
            </summary>
            <param name="xml">CalcChain text</param>
            <param name="sfSpreadsheet">owner</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.ParseXLSFormatFormulas(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Parse xls format formula cells. 
            Xls format don't have CalcChain xml so we couldn't able to find which are formula cells.
            Read used cells to avoid unwanted iteration
            </summary>
            <param name="sfSpreadsheet"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.ParseCalcChainFormulas(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.String,System.String)">
            <summary>
            Formula Parsing in grid engine
            </summary>
            <param name="sfSpreadsheet">Owner</param>
            <param name="grid"></param>
            <param name="cellRef">Cell reference</param>
            <param name="excelRange">Specified excel range</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.OnEndEdit(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell)">
            <summary>
            If a cell is formula cell , that needs to be parsed into engine and compute the value.
            In before editing, if the cell contains formula, previously parsed formula need to be removed from ParsedFormulas list.
            </summary>
            <param name="grid"></param>
            <param name="cell"></param>
            <param name="spreadsheet"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.OnCommitCellValue(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.String,System.Int32,System.Int32)">
            <summary>
            Compute value for a specified cell
            While entering formula in a cell,it should be calculated.
            </summary>
            <param name="grid"></param>
            <param name="currentCell">Specified Cell</param>
            <param name="row"></param>
            <param name="col"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.RefreshDependencyCells(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.String)">
            <summary>
            Recalculate dependency cells.
            RecalculateDependencyCells() will be recalculated for dependency cells. 
            </summary>
            <param name="grid"></param>
            <param name="precedentCell">PrecedentCell</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.RecalculateDependencyCells(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.String)">
            <summary>
            When a precedent cell value changed, that dependency cells should be recalculated. 
            </summary>
            <param name="grid"></param>
            <param name="precedentCell">PrecedentCell</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.RefreshCell(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.XlsIO.Implementation.WorksheetImpl,System.String,System.Int32,System.Int32)">
            <summary>
            Refresh cell will updated dependency cells when it's as precedent cell
            it parse and compute value when it's as formula cell
            It will compute value if it already parsed in engine
            </summary>
            <param name="grid"></param>
            <param name="sfSpreadsheet"></param>
            <param name="worksheet"></param>
            <param name="cell"></param>
            <param name="row"></param>
            <param name="col"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.OnPaste(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            On paste formula cells thats need to be parsed and compute the cell value.
            </summary>
            <param name="grid"></param>
            <param name="gridRangeInfo"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.OnFillSeries(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            On performing fill series, formula cells need parse and compute the cell value.
            </summary>
            <param name="grid"></param>
            <param name="gridRangeInfo"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.ParseandComputeRange(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Parse and compute value for specified range.
            Iterate the range and parse and computed value for formula cells
            </summary>
            <param name="grid"></param>
            <param name="range"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.Parse(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.Implementation.WorksheetImpl,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Parse a specified formula and stored in parsed formulas list for feature usage
            </summary>
            <param name="grid"></param>
            <param name="worksheet"></param>
            <param name="cell"></param>
            <param name="key"></param>
            <param name="formula"></param>
            <param name="row"></param>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.ParseandCompute(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.Implementation.WorksheetImpl,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Parse the specified range formulas and stored in parsed formula list.
            Compute an every formula cell and stored in specified worksheet.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.ComputeValue(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.Implementation.WorksheetImpl,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Compute formula cell and stored in specified worksheet.
            </summary>
            <param name="grid"></param>
            <param name="worksheet"></param>
            <param name="cell"></param>
            <param name="parsedFormula"></param>
            <param name="row"></param>
            <param name="col"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.MarkDirtyCells(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.String)">
            <summary>
            Mark dirty cells for recalculation.
            When a precedent cell value updated, The dependency cells of the precedent cell should be recalcuated.
            Listed dirty cell collections in a list. this will helps to avoid unwanted calculation. 
            Example-> B2 formula => =A1+B1, A1 => 5 , B1=> C1+D1. When update the A1 cell value, in OnGetDependent methos will try 
            to calculate the value of the C1+D1. This is unwanted calculation. We can get the value from directly from worksheet.
            </summary>
            <param name="sfSpreadsheet"></param>
            <param name="grid"></param>
            <param name="precedentCell"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.UpdateDirtyCells(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            Listed dirty cells of the specified precedent cell.
            Mark dirty cells for recalculation.
            When a precedent cell value updated, The dependency cells of the precedent cell should be recalcuated.
            Listed dirty cell collections in a list. this will helps to avoid unwanted calculation. 
            Example-> B2 formula => =A1+B1, A1 => 5 , B1=> C1+D1. When update the A1 cell value, in OnGetDependent method will try 
            to calculate the value of the C1+D1. This is unwanted calculation. We can get the value from directly from worksheet.
            </summary>
            <param name="grid"></param>
            <param name="dirtyCells"></param>
            <param name="precedentCell"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.OnGetDependentCellValue(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.Int32,System.Int32)">
            <summary>
            GetDependentCellValue
            Gets the depedent cell of the specified cell index.
            If value already computed, it can get form calculated list
            </summary>
            <param name="spreadsheet">Owner</param>
            <param name="grid">Grid of the specified range</param>
            <param name="rowIndex">Specified RowIndex</param>
            <param name="colIndex">Specified ColIndex</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.SetCalculatedValue(Syncfusion.XlsIO.Implementation.WorksheetImpl,System.Int32,System.Int32,System.String)">
            <summary>
            Set the formatted text excel range. When applied number formats, the calculated value should be converted as per the format.
            </summary>
            <param name="row">Row index of the specified range</param>
            <param name="col">Col index of the specified range</param>
            <param name="mWorksheet">Worksheet of the specified range</param>
            <param name="value">CalculatedValue</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.ReCalculateAllFormulaCells(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.Boolean)">
            <summary>
            To re-parse or recalculate all the formula cells in a workbook after insert/delete the rows and columns.
            </summary>
            <param name="grid"></param>
            <param name="needToCompute"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.UpdateInsertDeleteFormulaCells(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,System.Boolean)">
            <summary>
            Calculte the dependentcells of selected deleted range precedent cells.
            </summary>
            <param name="grid"></param>
            <param name="gridrange"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.GetDependentCellData(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.String,System.String@,System.Int32@,System.Int32@,System.String@,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid@)">
            <summary>
            Get the below particular of the specific cell.
            </summary>
            <param name="grid"></param>
            <param name="cell"></param>
            <param name="cellsheet"></param>
            <param name="cellrow"></param>
            <param name="cellcol"></param>
            <param name="cellkeytext"></param>
            <param name="dependentcell_grid"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.RecursiveSetCalculatedValue(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.Collections.Hashtable,System.Collections.Hashtable,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Recursively set the display text of chain formula cells of precedent cells.
            </summary>
            <param name="grid"></param>
            <param name="precedentcells"></param>
            <param name="cell"></param>
            <param name="gridrange"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.UpdateDependentPrecedentCells(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,System.Collections.Hashtable,System.Boolean,System.Boolean)">
            <summary>
            Update the precedent cells and dependent cells collection after delete/insert rows/columns 
            </summary>
            <param name="grid">spreadsheetgrid</param>
            <param name="gridrange">insert/delete range</param>
            <param name="precedentcells"></param>
            <param name="isPrecedentCells"></param>
            <param name="isDelete"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.OnUpdateColumn(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetQueryRangeEventArgs)">
            <summary>
            For hug workbook, the formulas can't be parsed immediately. so resolve this problem,  ReverseParsing is proposed.
            Here view layout formula cells parsed initially. suppose if any formula cell depend in out of view, that will be parsed immediately.
            </summary>
            <param name="args"></param>
            <param name="grid"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.ReverseRecursiveParsing(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.String)">
            <summary>
            If initial parsing didn't completed,Viewlayout cells will be parsed immediately. Suppose if cell referred out of viewlayout , that will be parsed by using reverse recursive parsing.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.GetGrid(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Gets Grid from Grid collection
            </summary>
            <param name="sfSpreadsheet"></param>
            <param name="sheetName">specified name</param>
            <returns>Specified grid</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.SetWorksheetNames(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Set worksheets name in a collection
            </summary>
            <param name="xml"></param>
            <param name="sfSpreadsheet"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.OnInsertingNameRange(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Update error formulas after inserted a name or updated name.
            Normally name error may occur due to incorrect name reference. So while inserting a new name or updating existing name we should ensure this.
            </summary>
            <param name="sfSpreadsheet">Owner</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.OnDeletingNameRange(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Recalculate the dependency cells of the deleted name range
            </summary>
            <param name="sfSpreadsheet"></param>
            <param name="referToRange"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.RecalculateEditedCells(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Recalculate edited cells. 
            For a hug sheet, initial formula parsing does not get complete immediately. So edited cells has been stored and once completed the parsing 
            we should recalculate all the dependency cells of the edited cells.
            </summary>
            <param name="sfSpreadsheet"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.GetExcelExportType(Syncfusion.XlsIO.IRange)">
            <summary>
            Returns excel export type of the specified range
            </summary>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.HasFormula(Syncfusion.XlsIO.IWorksheet,System.Int32,System.Int32)">
            <summary>
            returns specified cell is formula or not? 
            </summary>
            <param name="worksheet"></param>
            <param name="row"></param>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.OnDisposingOldInstance(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            OnDisposingOldInstance, all the formula related variables should be initialized.
            </summary>
            <param name="sfSpreadsheet"></param>
            <param name="grid"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.RegisterIntoFormulaEngine(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.String,System.Int32)">
            <summary>
            Register grid into formula engine.
            </summary>
            <param name="grid"></param>
            <param name="name"></param>
            <param name="sheetFamilyId"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.UnregisterFromFormulaEngine(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Unrigister old instance from formula engine
            </summary>
            <param name="sfSpreadsheet">Owner</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.OnSheetDeleting(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Removing deleted sheet parsed formulas from the ParsedFormula list. If not cleared, it will be maintained unnecessarily.
            </summary>
            <param name="sheetRef">Delete sheet key</param>
            <param name="spreadsheet">Owner</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.GetCellReference(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.Int32,System.Int32)">
            <summary>
            Get the Cell reference of the specified grid.
            </summary>
            <param name="grid"></param>
            <param name="row"></param>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.FormulaHelper.GetSheetToken(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.Boolean)">
            <summary>
            Get sheet token of the specified grid
            </summary>
            <param name="grid"></param>
            <param name="canThrowException"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZipArchiveExt">
            <summary>
            Class for opening an excel file and convert its elements as list.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZipArchiveExt.XMLItems">
            <summary>
            Holds the collection of workbook and CalcChain xml.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZipArchiveExt.GetAllRelation">
            <summary>
            Read all the elements from excel and stored in list
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.CustomXmlPartExt">
            <summary>
            Class used to create a custom xml and store formula cells index for optimized parsing.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.CustomXmlPartExt.SaveFormulaCellsInXML(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Save all the formula cells in XML list with sheet cell reference. When re-open the workbook by XlsIO this will help to get all the formula cells for parsing.
            </summary>
            <param name="sfSpreadsheet"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.CustomXmlPartExt.CreateXMLFile(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.Xml.Linq.XElement)">
            <summary>
            Create an custom XML file in the XlsIO workbook. To get the formula cells only.
            </summary>
            <param name="formulaCells"></param>
            <param name="sfSpreadsheet"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.CustomXmlPartExt.ReadCalcChainXMLElements(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.IO.Stream)">
            <summary>
            CalcChain.xml support not available in XlsIO. So we have maintained formula cells manually and stored as Custom.Xml.
            Whenever reopen by SfSpreadsheet, formula cells can read from Custom.xml.
            </summary>
            <param name="sfSpreadsheet"></param>
            <param name="mStream"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper">
            <summary>
            Helper class to convert grid range to excel range, and excel range to grid range.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.ConvertToGlobalWorkbookRange(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Converts the grid range to workbook range (Address Global = "'Sheet1'!$A$1").
            </summary>
            <param name="range">Current grid range.</param>
            <param name="grid">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.</param>
            <returns>Global Address of the Workbook.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.ConvertExcelRangeToGridRange(Syncfusion.XlsIO.IRange)">
            <summary>
            Coverts the excel range to the corresponding grid range.
            </summary>
            <param name="range">Excel range which is to be converted to grid range.</param>
            <returns>Grid range.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.ConvertExcelRangeToGridRange(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Convert the excel range to the corresponding grid range types either of rows/columns/table/cells.
            </summary>
            <param name="range">Excel range to be converted as grid range.</param>
            <param name="grid">Active instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.</param>
            <returns>Grid range.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.ConvertExcelRangeToGridRange(System.String)">
            <summary>
            Convert to grid range from the excel range as string.
            </summary>
            <param name="range">excel range by string</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.ConvertExcelRangeToGridRangeList(System.String)">
            <summary>
            Convert to GridRangeInfoList from the range as string. 
            Use this, if string contains multiple ranges which are separated by comma(,).
            </summary>
            <param name="ranges">excel range by string</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.RowIndex(System.String)">
            <summary>
            Parse the rowIndex.
            </summary>
            <param name="s">row index</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.ColumnIndex(System.String)">
            <summary>
            Parse the column index
            </summary>
            <param name="s">column index</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.OpenHyperlink(Syncfusion.XlsIO.IHyperLink,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.String)">
            <summary>
            This method is used to open the hyperlink contained in the text or image in the cell.
            </summary>
            <param name="hyperlink">An instance of<see cref="T:Syncfusion.XlsIO.IHyperLink"/>represent a hyperlink </param>
            <param name="Grid">An instance of<see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>used for displaying data </param>
            <param name="address">An instance of<see cref="T:System.String"/>represents url of the hyperlink</param>
            <returns>Return true,if the hyperlink is opened, else false.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.ConvertGridRangeToExcelRange(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Converts the Grid range to the corresponding Excel range.
            </summary>
            <param name="gridRangeInfo">Grid range to be converted as excel range.</param>
            <param name="grid">Active instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.</param>
            <returns>Converted excel range in string format.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.IsRangeContainsHyperlink(Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Determines whether the hyperlink is present in the selected ranges of the active SpreadsheetGrid.
            </summary>
            <param name="selectedranges">Ranges which are selected.</param>
            <param name="grid">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.</param>
            <returns>True, if the selected range contains hyperlink; otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.IsRangeContainsComment(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Determines whether the range contains comment or not.
            </summary>
            <param name="grid">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.</param>
            <param name="range">Ranges which are selected.</param>
            <returns>True, if the selected range contains comment; otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.GetExpandRange(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Gets the Expanded range when the column/row/table is selected in active SpreadsheetGrid.
            </summary>
            <param name="range">Range to be expanded.</param>
            <param name="grid">Current instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.</param>
            <returns>Expanded grid range.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.GetConditionalFormats(Syncfusion.XlsIO.IRange)">
            <summary>
            Get the conditional formats from the range.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.GetCellValue(Syncfusion.XlsIO.IRange)">
            <summary>
            Get the cell value
            </summary>
            <param name="excelRange">Excel range</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.UpdateRowHeight(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            To autofit a cell if it contains wrap text
            </summary>
            <param name="range">range</param>
            <param name="grid">active grid</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.CanSelectUnLockedCells(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Returns true when protect sheet option is Select Unlocked cells
            </summary>
            <param name="sheet">current sheet</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.CanSelectLockedCells(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Returns true when protect sheet option is select locked cells
            </summary>
            <param name="sheet">current sheet</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.CanFormatRows(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Returns true when protect sheet option is Format rows
            </summary>
            <param name="sheet">current sheet</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.CanFormatColumns(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Returns true when protect sheet option is Format columns
            </summary>
            <param name="sheet">current sheet</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.CanFormatCells(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Returns true when protect sheet option is Format cells
            </summary>
            <param name="sheet">current sheet</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.CanDeleteRows(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Returns true when protect sheet option is Delete rows
            </summary>
            <param name="sheet">current sheet</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.CanDeleteColumns(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Returns true when protect sheet option is Delete columns
            </summary>
            <param name="sheet">current sheet</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.CanInsertRows(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Returns true when protect sheet option is Insert rows
            </summary>
            <param name="sheet">current sheet</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.CanInsertColumns(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Returns true when protect sheet option is Insert columns
            </summary>
            <param name="sheet">current sheet</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.CanEditObjects(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Returns true when protect sheet option is Edit objects
            </summary>
            <param name="sheet">current sheet</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.CanInsertHyperlink(Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Returns True when protect sheet option is insert hyperlink and and cell should be unlocked.
            </summary>
            <param name="sheet"></param>
            <param name="spreadsheet"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.HasSelectedShapes(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Return true when graphics objects are selected or worksheet gets null.
            </summary>
            <param name="grid"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.CanModifyArrayFormula(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.Boolean,System.Boolean)">
            <summary>
            To display the error message while inserting/deleting if the selected range contains array formula.
            </summary>
            <param name="grid">The Active SpreadsheetGrid.</param>
            <param name="isInsertRow">If the command is insert row, then it is true,else false.</param>
            <param name="isInsertCol">If the command is insert column, then it it true, else false.</param>
            <returns>True, if the error box shown. Else, false.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.GridExcelHelper.CheckforFormulaArray(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.String,System.Int32@,System.Int32@)">
            <summary>
            Checks if any part of the selected range contains array formula.
            </summary>
            <param name="grid">Active SpreadsheetGrid.</param>
            <param name="excelrange">Selected range.</param>
            <param name="row">Row Index.</param>
            <param name="col">Column Index.</param>
            <returns>True, if any of range is array formula;else, False.</returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.RichTextBoxHelper">
            <summary>
            Helper class which maintains the richtextbox operations involving the editing, conversion of rich text into flow document and drawing of richtext box 
            in the specified cell of SfSpreadsheet.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.RichTextBoxHelper.DrawRichText(System.Windows.Media.DrawingContext,System.Windows.Rect,System.Windows.Documents.FlowDocument,Syncfusion.XlsIO.IStyle)">
            <summary>
            Draw the richtextbox with specified flow content and style in the particular range.
            </summary>
            <param name="dc">An instance of <see cref="T:System.Windows.Media.DrawingContext"/>.</param>
            <param name="rc">An instance <see cref="T:System.Windows.Rect"/> of cell.</param>
            <param name="document">An instance of <see cref="T:System.Windows.Documents.FlowDocument"/>.</param>
            <param name="excelstyle">An instance of <see cref="T:Syncfusion.XlsIO.IStyle"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.RichTextBoxHelper.GetVisualBrush(System.Windows.Size,System.Windows.Documents.FlowDocument,Syncfusion.XlsIO.IStyle)">
            <summary>
            convert the richtextbox to visualbrush to draw the richtextbox cell.
            </summary>
            <param name="size">cell rect size</param>
            <param name="fd">flowdocument</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.RichTextBoxHelper.SetRichTextString(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.IRichTextString,System.Windows.Documents.FlowDocument,System.String)">
            <summary>
            Sets the rich text string in the specified SpreadsheetGrid.
            </summary>
            <param name="grid">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.</param>
            <param name="richText">The rich text string.</param>
            <param name="flowdocument">An instance of <see cref="T:System.Windows.Documents.FlowDocument"/>.</param>
            <param name="formattedtext">Specified text.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.RichTextBoxHelper.ConvertRunToIFont(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.Windows.Documents.Run,Syncfusion.XlsIO.IFont)">
            <summary>
            ConvertRunToIFont() method converts the formatting from Run to IFont. 
            </summary>
            <param name="run"></param>
            <param name="fontstyle"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.RichTextBoxHelper.ApplyPreviewInputTextFormat(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.String,Syncfusion.XlsIO.IRichTextString)">
            <summary>
            Set the preview text when edit the richtext.
            </summary>
            <param name="text"></param>
            <param name="richText"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.RichTextBoxHelper.ConvertRichTextToFlowDocument(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.IStyle,Syncfusion.XlsIO.IRichTextString)">
            <summary>
            Create the flowdocument from the richtext of required content.
            </summary>
            <param name="grid">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.</param>
            <param name="excelstyle">Styles of current excelrange.</param>
            <param name="richText"> The richtext string.</param>
            <returns>The flow conent of the text.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.RichTextBoxHelper.AppendFormat(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.IFont,System.Windows.Documents.Run)">
             <summary>
             This method returns <see cref="T:System.Windows.Documents.Run"/> which append the next character when both have same font format. 
             </summary>
            <param name="grid">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.</param>
            <param name="charfont">An instance of <see cref="T:Syncfusion.XlsIO.IFont"/>.</param>
            <param name="run">An instance of <see cref="T:System.Windows.Documents.Run"/>.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.LogicalTreeUtility">
            <summary>
            Represents a class which has methods to get the collection of objects.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.LogicalTreeUtility.GetChildren(System.Windows.DependencyObject,System.Boolean)">
            <summary>
             Returns the collection of immediate child objects of the specified object
             by processing the logical tree.
            </summary>
            <param name="obj">The object from which to start processing the logical tree.</param>
            <param name="allChildrenInHierachy">True or False.</param>
            <returns>The enumerable collection of immediate child objects from the logical tree
            of the specified object.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.LogicalTreeUtility.GetChildren``1(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Returns the child object from the collection based on the return type.
            </summary>
            <param name="obj">The object from which to start processing the logical tree.</param>
            <param name="allChildrenInHierachy">True or False.</param>
            <returns>The enumerable collection of immediate child objects based on the return type.</returns>
            <typeparam name="TReturnType">Return type of the object.</typeparam>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetQueryRangeEventHandler">
            <summary>
            Represents the method that will handle the QueryRange event. 
            </summary>
            <param name="sender">The source of the event.</param>
            <param name=" e">A <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetQueryRangeEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetQueryRangeEventArgs">
            <summary>
            Represents the class which holds the properties of the QueryRange event.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetQueryRangeEventArgs.#ctor(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.String,System.Object,Syncfusion.XlsIO.IWorksheet,Syncfusion.XlsIO.IRange,Syncfusion.XlsIO.IStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetQueryRangeEventArgs">SpreadsheetQueryRangeEventArgs</see> class. 
            </summary>
            <param name="cell">Coordinates of a cell.</param>
            <param name="celltype">Type of cell.</param>
            <param name="value">The value of the cell.</param>
            <param name="sheet">The current worksheet.</param>
            <param name="range">The XlsIO range of the sheet.</param>
            <param name="style">A style description for the specified range.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetQueryRangeEventArgs.Cell">
            <summary>
            Gets the value indicating the instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/> of cell.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetQueryRangeEventArgs.CellValue">
            <summary>
            Gets or sets the value of the specified cell.
            </summary>
            <value>Value of cell.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetQueryRangeEventArgs.CellType">
            <summary>
            Gets or sets the type of the cell.
            </summary>
            <value>Cell Type.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetQueryRangeEventArgs.Worksheet">
            <summary>
            Gets the <see cref="T:Syncfusion.XlsIO.IWorksheet"/> of the cell.
            </summary>
            <value>An instance of the <see cref="T:Syncfusion.XlsIO.IWorksheet"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetQueryRangeEventArgs.ExcelRange">
            <summary>
            Gets the <see cref="T:Syncfusion.XlsIO.IRange"/> of the cell.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.XlsIO.IRange"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetQueryRangeEventArgs.ExcelStyle">
            <summary>
            Gets the <see cref="T:Syncfusion.XlsIO.IStyle"/> of the cell.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.XlsIO.IStyle"/>.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetCopyingEventHandler">
            <summary>
            Represents the method that will handle the Copying event. 
            </summary>
            <param name="sender">The source of the event.</param>
            <param name=" e">A <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetCopyingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetCopyingEventArgs">
            <summary>
            Represents the class which holds the properties of SpreadsheetCopying event.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetCopyingEventArgs.#ctor(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,System.Boolean,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetCopyingEventArgs">SpreadsheetCopyingEventArgs</see> class. 
            </summary>
            <param name="range">Copying range.</param>
            <param name="iscut">If True, cut operation, else copy operation.</param>
            <param name="grid">Current grid.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetCopyingEventArgs.Range">
            <summary>
            Gets or sets the range to be copied.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> class.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetCopyingEventArgs.IsCut">
            <summary>
            Gets or sets the boolean flag for copy/cut operation.
            </summary>
            <value>If true, cut operation;else copy operation.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetCopyingEventArgs.Grid">
            <summary>
            Gets the active grid in SfSpreadsheet.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetCopiedEventHandler">
            <summary>
            Represents the method that will handle the Copied event. 
            </summary>
            <param name="sender">The source of the event.</param>
            <param name=" e">A <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetCopiedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetCopiedEventArgs">
            <summary>
            Represents the class which holds the properties of SpreadsheetCopied event.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetCopiedEventArgs.#ctor(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,System.Boolean,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetCopiedEventArgs">SpreadsheetCopiedEventArgs</see> class. 
            </summary>
            <param name="range">Copied range.</param>
            <param name="iscut">If True, cut operation, else copy operation.</param>
            <param name="grid">Current grid.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetCopiedEventArgs.Range">
            <summary>
            Gets the Copied range.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> class.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetCopiedEventArgs.IsCut">
            <summary>
            Gets the boolean flag for copy/cut operation.
            </summary>
            <value>If true, cut operation;else copy operation.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetCopiedEventArgs.Grid">
            <summary>
            Gets  the active grid in SfSpreadsheet.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetPastingEventHandler">
            <summary>
            Represents the method that will handle the Pasting event. 
            </summary>
            <param name="sender">The source of the event.</param>
            <param name=" e">A <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetPastingEventArgs"/> that contains the event data.</param>    
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetPastingEventArgs">
            <summary>
            Represents the class which holds the properties of SpreadsheetPasting event.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetPastingEventArgs.#ctor(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,System.Boolean,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.UI.Xaml.Spreadsheet.PasteOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetPastingEventArgs">SpreadsheetPastingEventArgs</see> class. 
            </summary>
            <param name="range">Copied range.</param>
            <param name="range1">Pasted range.</param>
            <param name="iscut">If True, cut operation, else copy operation.</param>
            <param name="grid">Current grid.</param>
            <param name="option">One of the enum option <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.PasteOptions"/>.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetPastingEventArgs.SourceRange">
            <summary>
            Gets  the Copied range.
            </summary>
            <value>A <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> object.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetPastingEventArgs.TargetRange">
            <summary>
            Gets or sets the Pasted range.
            </summary>
            <value>A <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> object.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetPastingEventArgs.IsCut">
            <summary>
            Gets or sets the boolean flag for copy/cut operation.
            </summary>
            <value>If true, cut operation;else copy operation.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetPastingEventArgs.Grid">
            <summary>
            Gets  the active grid in SfSpreadsheet.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetPastingEventArgs.PasteOption">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.PasteOptions"/> enum for paste operation .
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.PasteOptions"/>.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetPastedEventHandler">
            <summary>
            Represents the method that will handle the Pasted event. 
            </summary>
            <param name="sender">The source of the event.</param>
            <param name=" e">A <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetPastedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetPastedEventArgs">
            <summary>
            Represents the class which holds the properties of SpreadsheetPasted event.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetPastedEventArgs.#ctor(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,System.Boolean,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.UI.Xaml.Spreadsheet.PasteOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetPastedEventArgs">SpreadsheetPastedEventArgs</see> class. 
            </summary>
            <param name="range">Copied range.</param>
            <param name="range1">Pasted range.</param>
            <param name="iscut">If True, cut operation; else copy operation.</param>
            <param name="grid">Current grid.</param>
            <param name="option">One of the enum option <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.PasteOptions"/>.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetPastedEventArgs.SourceRange">
            <summary>
            Gets  the Copied range.
            </summary>
            <value>A <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> object.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetPastedEventArgs.TargetRange">
            <summary>
            Gets  the Pasted range.
            </summary>
            <value>A <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> object.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetPastedEventArgs.IsCut">
            <summary>
            Gets  the boolean flag for copy/cut operation.
            </summary>
            <value>If true, cut operation;else copy operation.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetPastedEventArgs.Grid">
            <summary>
            Gets  the active grid in SfSpreadsheet.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetPastedEventArgs.PasteOption">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.PasteOptions"/> enum for paste operation .
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.PasteOptions"/>.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorkbookCreatingEventHandler">
            <summary>
            Represents a method that will handle the WorkbookCreating Event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorkbookCreatingEventArgs">WorkbookCreatingEventArgs</see> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorkbookCreatingEventArgs">
            <summary>
            Represents the class which holds the properties of WorkbookCreating event.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorkbookCreatingEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorkbookCreatingEventArgs">WorkbookCreatingEventArgs</see> class. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorkbookCreatingEventArgs.SheetCount">
            <summary>
            Gets the <see cref="T:Syncfusion.XlsIO.IWorksheet"/> count of the workbook.
            </summary>
            <value>The worksheet count.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetRemovingEventHandler">
            <summary>
            Represents the method that will handle the WorksheetRemoving Event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetRemovingEventArgs">WorksheetRemovingEventArgs</see> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetRemovingEventArgs">
            <summary>
            Represents the class which holds the properties of WorksheetRemoving event.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetRemovingEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetRemovingEventArgs">WorksheetRemovingEventArgs</see> class. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetRemovingEventArgs.SheetName">
            <summary>
            Gets the name of the <see cref="T:Syncfusion.XlsIO.IWorksheet"/> that is to be removed.
            </summary>
            <value>Name of the Worksheet.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetRemovingEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether to stop removing the sheet or else proceed further to remove the sheet.
            </summary>
            <value><see langword="true"/> if the removal of the worksheet should be stopped; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetRemovedEventHandler">
            <summary>
            Represents a method that will handle the WorksheetRemoved Event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetRemovedEventArgs">WorksheetRemovedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetRemovedEventArgs">
            <summary>
            Represents the class which holds the properties of WorksheetRemoved event
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetRemovedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetRemovedEventArgs">WorksheetRemovedEventArgs</see> class. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetRemovedEventArgs.SheetName">
            <summary>
            Gets the name of the <see cref="T:Syncfusion.XlsIO.IWorksheet"/> that is removed.
            </summary>
            <value>Name of the Worksheet.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetAddingEventHandler">
            <summary>
            Represents a method that will handle the WorksheetAdding Event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetAddingEventArgs">WorksheetAddingEventArgs</see> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetAddingEventArgs">
            <summary>
            Represents the class which holds the properties of WorksheetAdding Event.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetAddingEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetAddingEventArgs">WorksheetAddingEventArgs</see> class. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetAddingEventArgs.SheetName">
            <summary>
            Gets or sets the name of the <see cref="T:Syncfusion.XlsIO.IWorksheet"/> that is going to be added.
            </summary>
            <value>Name of the sheet.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetAddingEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether to stop adding the sheet or else proceed further to add the sheet.
            </summary>
            <value><see langword="true"/> if the insertion of sheet has to be stopped ; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetAddedEventHandler">
            <summary>
            Represents a method that will handle the WorksheetAdded Event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetAddedEventArgs">WorksheetAddedEventArgs</see> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetAddedEventArgs">
            <summary>
            Represents a class which holds the properties of WorksheetAdded event.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetAddedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetAddedEventArgs">WorksheetAddedEventArgs</see> class. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetAddedEventArgs.SheetName">
            <summary>
            Gets the name of newly added <see cref="T:Syncfusion.XlsIO.IWorksheet"/>.
            </summary>
            <value>Name of the sheet.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorkbookLoadedEventHandler">
            <summary>
            Represents a method that will handle the WorkbookLoaded Event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorkbookLoadedEventArgs">WorkbookLoadedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorkbookLoadedEventArgs">
            <summary>
            Represents a class which holds the properties of WorkbookLoaded event.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorkbookLoadedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorkbookLoadedEventArgs">WorkbookLoadedEventArgs</see> class. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorkbookLoadedEventArgs.#ctor(Syncfusion.XlsIO.IWorkbook,System.Collections.Generic.List{Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid})">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorkbookLoadedEventArgs">WorkbookLoadedEventArgs</see> class. 
            </summary>
            <param name="workbook">An instance of <see cref="T:Syncfusion.XlsIO.IWorkbook"/>.</param>
            <param name="gridCollection">Collection of Grid.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorkbookLoadedEventArgs.Workbook">
            <summary>
            Gets the instance of <see cref="T:Syncfusion.XlsIO.IWorkbook"/> .
            </summary>
            <value>An instance of <see cref="T:Syncfusion.XlsIO.IWorkbook"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorkbookLoadedEventArgs.GridCollection">
            <summary>
            Gets the collection of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/> .
            </summary>
            <value>A collection.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorkbookUnloadedEventHandler">
            <summary>
            Represents a method that will handle the WorkbookUnloaded event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorkbookUnloadedEventArgs">WorkbookUnloadedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorkbookUnloadedEventArgs">
            <summary>
            Represents a class which holds the properties of WorkbookUnloaded event
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorkbookUnloadedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorkbookUnloadedEventArgs">WorkbookUnloadedEventArgs</see> class. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorkbookUnloadedEventArgs.#ctor(Syncfusion.XlsIO.IWorkbook,System.Collections.Generic.List{Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid})">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorkbookUnloadedEventArgs">WorkbookUnloadedEventArgs</see> class. 
            </summary>
            <param name="workbook"><see cref="T:Syncfusion.XlsIO.IWorkbook"/>.</param>
            <param name="gridCollection">Collection of SpreadsheetGrid.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorkbookUnloadedEventArgs.Workbook">
            <summary>
            Gets the instance of <see cref="T:Syncfusion.XlsIO.IWorkbook"/> .
            </summary>
            <value>An instance of <see cref="T:Syncfusion.XlsIO.IWorkbook"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorkbookUnloadedEventArgs.GridCollection">
            <summary>
            Gets the collection of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/> .
            </summary>
            <value>A collection.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZoomTrigger">
            <summary>
            Specifies the trigger options in Zoom.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZoomTrigger.MouseWheel">
            <summary>
            Zoom using Mouse.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZoomTrigger.Touch">
            <summary>
            Zoom using Touch mode.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZoomTrigger.Program">
            <summary>
            Zoom through programmatically.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZoomFactorChangingEventHandler">
            <summary>
            Represents a method that will handle the ZoomFactorChanging Event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZoomFactorChangingEventArgs">ZoomFactorChangingEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZoomFactorChangingEventArgs">
            <summary>
            Represents the class which holds the properties of ZoomFactorChanging event.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZoomFactorChangingEventArgs.#ctor(System.String,System.Int32,Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZoomTrigger)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZoomFactorChangingEventArgs">ZoomFactorChangingEventArgs</see> class. 
            </summary>
            <param name="sheetName">Name of the sheet.</param>
            <param name="zoomfactor">Size to zoom.</param>
            <param name="trigger">One of the enum options to trigger.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZoomFactorChangingEventArgs.SheetName">
            <summary>
            Gets the name of the <see cref="T:Syncfusion.XlsIO.IWorksheet"/> that is to be zoom in or out.
            </summary>
            <value>Name of the sheet.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZoomFactorChangingEventArgs.ZoomFactor">
            <summary>
            Gets the zoom factor.
            </summary>
            <value>Size to zoom.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZoomFactorChangingEventArgs.ZoomTrigger">
            <summary>
            Gets the trigger option to zoom in or out.
            </summary>
            <value>One of the enum option to trigger.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZoomFactorChangedEventHandler">
            <summary>
            Represents the method that will handle the ZoomFactorChanged event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZoomFactorChangedEventArgs">ZoomFactorChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZoomFactorChangedEventArgs">
            <summary>
            Represents the class which holds the properties of ZoomFactorChanged event.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZoomFactorChangedEventArgs.#ctor(System.String,System.Int32,Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZoomTrigger)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZoomFactorChangedEventArgs">ZoomFactorChangedEventArgs</see> class. 
            </summary>
            <param name="sheetName">Name of the sheet.</param>
            <param name="zoomfactor">Size to zoom.</param>
            <param name="trigger">One of the enum options to trigger.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZoomFactorChangedEventArgs.SheetName">
            <summary>
            Gets the name of the <see cref="T:Syncfusion.XlsIO.IWorksheet"/> that zooms in or out.
            </summary>
            <value>Name of the sheet.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZoomFactorChangedEventArgs.ZoomFactor">
            <summary>
            Gets the zoom factor.
            </summary>
            <value>Size to zoom.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZoomFactorChangedEventArgs.ZoomTrigger">
            <summary>
            Gets the trigger option to zoom in or out.
            </summary>
            <value>One of the enum option to trigger.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.CommandExecutionEventArgs">
            <summary>
            Represents the class which provides data for the <see cref="!:CommandExecuted"/> and <see cref="!:CommandExecuting"/> events.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.CommandExecutionEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the CommandExecutionEventArgs class with the command name.
            </summary>
            <param name="commandName">Command Name</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.CommandExecutionEventArgs.CommandName">
            <summary>
            Gets or sets the name of the command.
            </summary>
            <value>Name of the command.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.CommandExecutionEventHandler">
            <summary>
            Represents the method that will handle the <see cref="!:CommandExecuted"/> and <see cref="!:CommandExecuting"/> events. 
            </summary>
            <param name="sender">The source of the event</param>
            <param name="args">A <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.CommandExecutionEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.CommandExecutingEventArgs">
            <summary>
            Represents the class which provides data for the <see cref="E:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.CommandExecuting"/> events. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.CommandExecutingEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the CommandExecutionEventArgs class with the command name.
            </summary>
            <param name="commandName">Command Name</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Helpers.CommandExecutingEventArgs.CommandName">
            <summary>
            Gets or sets the name of the command.
            </summary>
            <value>Name of the command.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.CommandExecutingEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands.CommandExecuting"/> events. 
            </summary>
            <param name="sender">The source of the event</param>
            <param name="args">A <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.CommandExecutionEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetTextBoxPaint.MeasureText(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.String,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,System.Double,System.Boolean,System.Int32,System.Object@)">
            <summary>
            Measures the size of the text using either FormattedText or GlyphRun.
            </summary>
            <param name="grid">SpreadsheetGrid</param>
            <param name="text">Text which size is to be measured</param>
            <param name="column">SpreadsheetColumn</param>
            <param name="cellWidth">Width of the cell</param>
            <param name="wraptext">True, if text is wrapped in a cell</param>
            <param name="lineCount">If text is wrapped, maximum possible line count</param>
            <param name="textElement">Returns the TextElement(GlyphRun or FormattedText) which used to measure</param>
            <returns>Size of the text</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetTextBoxPaint.MeasureTextUsingFormattedText(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.String,Syncfusion.XlsIO.IStyle,System.Double,System.Boolean,System.Int32,System.Object@)">
            <summary>
            Measures the size of the text using FormattedText.
            </summary>
            <param name="grid">SpreadsheetGrid</param>
            <param name="text">Text which size is to be measured</param>
            <param name="excelStyle">IStyle of the cell</param>
            <param name="cellWidth">Width of the cell</param>
            <param name="wraptext">True, if text is wrapped in a cell</param>
            <param name="lineCount">If text is wrapped, maximum possible line count</param>
            <param name="textElement">Returns the TextElement(FormattedText) which used to measure</param>
            <returns>Size of the text</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetTextBoxPaint.MeasureTextUsingGlyphs(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.String,Syncfusion.XlsIO.IStyle,System.Boolean@,System.Object@)">
            <summary>
            Measures the size of the text using GlyphRun which is faster than FormattedText.
            </summary>
            <param name="grid">SpreadsheetGrid</param>
            <param name="text">Text which size is to be measured</param>
            <param name="excelStyle">IStyle of the cell</param>
            <param name="isCalculated">True, if size is calculated</param>
            <param name="textElement">Returns the TextElement(FormattedText) which used to measure</param>
            <returns>Size of the text</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetTextBoxPaint.DrawText(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Media.DrawingContext,System.Windows.Rect,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,System.Object)">
            <summary>
            Draw the text using GlyphRun or FormattedText based on the style and text.
            </summary>
            <param name="grid">SpreadsheetGrid</param>
            <param name="rowcolIndex">RowColumnIndex</param>
            <param name="dc">DrawingContext where the text is to be drawn</param>
            <param name="cellRect">Rect of the cell</param>
            <param name="column">SpreadsheetColumn</param>
            <param name="textElement">TextElement(GlyphRun or FormattedText), if already got while measuring the text</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetTextBoxPaint.DrawFormattedText(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Media.DrawingContext,System.Windows.Rect,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,System.Object)">
            <summary>
            Draw the text using FormattedText
            </summary>
            <param name="grid">SpreadsheetGrid</param>
            <param name="rowcolIndex">RowColumnIndex</param>
            <param name="dc">DrawingContext where the text is to be drawn</param>
            <param name="cellRect">Rect of the cell</param>
            <param name="column">SpreadsheetColumn</param>
            <param name="textElement">TextElement(FormattedText), if already got while measuring the text</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetTextBoxPaint.DrawGlyphs(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Media.DrawingContext,System.Windows.Rect,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,System.Object)">
            <summary>
            Draw the text using GlyphRun, which is faster than DrawFormattedText.
            </summary>
            <param name="grid">SpreadsheetGrid</param>
            <param name="rowcolIndex">RowColumnIndex</param>
            <param name="dc">DrawingContext where the text is to be drawn</param>
            <param name="cellRect">Rect of the cell</param>
            <param name="column">SpreadsheetColumn</param>
            <param name="textElement">TextElement(GlyphRun), if already got while measuring the text</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetTextBoxPaint.ConvertExcelHorizontalAlignment(Syncfusion.XlsIO.ExcelHAlign)">
            <summary>
            Converts ExcelHAlign into TextAlignment.
            </summary>
            <param name="excelHAlign"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetTextBoxPaint.GetTypefaceFromExcel(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.IStyle)">
            <summary>
            Used to get the Typeface from font properties in the provided IStyle
            </summary>
            <param name="excelStyle"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetTextBoxPaint.GetTextDecorationsFromExcel(Syncfusion.XlsIO.IStyle)">
            <summary>
            Used to get the TextDecorationCollection from the IStyle. 
            </summary>
            <param name="excelStyle"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetTextBoxPaint.CreateFormattedText(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.String,Syncfusion.XlsIO.IStyle,System.Double@)">
            <summary>
            Creates the FormattedText
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetTextBoxPaint.AddTextMargin(System.Windows.Rect,System.Windows.Thickness)">
            <summary>
            Used to adjust the cellRect based on margin.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetTextBoxPaint.GetFontLineHeightValue(System.Windows.Media.FontFamily,System.Double)">
            <summary>
            Used to get the lineheight of the font.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetTextBoxPaint.ApplyTextOrientation(System.Double,System.Double,System.Double)">
            <summary>
            Apply the text orientation based on horizontal and vertical alignment
            </summary>
            <param name="excelStyle">excel Style from XlsIO</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetTextBoxPaint.GetRotateTextXPosition(System.Windows.Rect,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,System.Windows.TextAlignment,System.Double,System.Double,System.Double@)">
            <summary>
            Get the rotated text X position for Glyphs
            </summary>
            <param name="cellRect">Cell rect</param>
            <param name="column">Current column</param>
            <param name="textAlign">Horizantal alignment</param>
            <param name="adjustedLineHeight">Text line height</param>
            <param name="textWidth">Text width</param>
            <param name="xPos">Adjusted X position</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetTextBoxPaint.GetRotateTextYPosition(System.Windows.Rect,Syncfusion.XlsIO.IStyle,System.Windows.VerticalAlignment,System.Double,System.Double,System.Double@)">
            <summary>
            Get the rotated text Y position for Glyphs
            </summary>
            <param name="cellRect">Cell Rect</param>
            <param name="column">Current Column</param>
            <param name="excelAlign">Vertical Alignment</param>
            <param name="adjustedLineHeight">Text line height</param>
            <param name="textWidth">Text width</param>
            <param name="yPos">Adjusted Y position</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetTextBoxPaint.GetRotateTextXPosition(System.Windows.Media.FormattedText,Syncfusion.XlsIO.IStyle,System.Windows.Rect,System.Windows.TextAlignment,System.Double,System.Double,System.Double,System.Double@)">
            <summary>
            Get the rotated text X position for FormattedText.
            </summary>
            <param name="excelStyle">Excel Style from XlsIO</param>
            <param name="cellRect">Cell Rect</param>
            <param name="textAlign">Horizontal alignment</param>
            <param name="width">Text width</param>
            <param name="fontSize">Font size</param>
            <param name="lineHeight">Text line height</param>
            <param name="xPos">X position for draw rotated text</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetTextBoxPaint.GetRotateTextYPosition(System.Windows.Media.FormattedText,Syncfusion.XlsIO.IStyle,System.Windows.Rect,System.Double,System.Double,System.Windows.VerticalAlignment,System.Double,System.Double@)">
            <summary>
            Get the rotated text Y position for FormattedText.
            </summary>
            <param name="excelStyle">Excel style from XlsIO</param>
            <param name="cellRect">Cell rect</param>
            <param name="lineHeight">Text line height</param>
            <param name="width">Text width</param>
            <param name="excelVAlign">Vertical Alignment</param>
            <param name="fontSize">Font size</param>
            <param name="yPos">Y position for draw rotated text</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetTextBoxPaint.GetFontSize(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.IStyle)">
            <summary>
            Used to get the font size which is adjusted based on zoom.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetTextBoxPaint.GetDisplayText(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,System.Windows.Size)">
            <summary>
            Used to convert the formula error, datetime or number value into exponential format or replace
            its all character with "#" to fit the displaytext into cellsize.
            </summary>
            <param name="grid"></param>
            <param name="column"></param>
            <param name="cellSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetTextBoxPaint.CanRotateText(Syncfusion.XlsIO.IStyle,System.Double@)">
            <summary>
            Can rotate the text based on orientation
            </summary>
            <param name="excelStyle">Excel style from XlsIO</param>
            <param name="angle">No need to rotate the text if angle is 0 otherwise must rotate the text</param>
            <returns>Rotate the text if true else not.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetTextBoxPaint.GetRotatedTextSize(Syncfusion.XlsIO.IStyle,System.Windows.Size,System.Boolean)">
            <summary>
            Get the rotated text width
            </summary>
            <param name="excelStyle">Excel style from XlsIO</param>
            <param name="textSize">Measured text size</param>
            <param name="shouldCalHeight"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.TableFormatHelper">
            <summary>
            TableFormats are applied based on the specific table style type such as lighttablestyles,darktablestyles,mediumtablestyles.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.TableFormatHelper.ClearStyles(Syncfusion.XlsIO.IStyle)">
            <summary>
            Clear the existing table style before apply the new table style.
            </summary>
            <param name="TableStyle">Where we have maintain the table format style</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.TableFormatHelper.ApplyTableHeaderStyle(Syncfusion.XlsIO.IListObject,Syncfusion.XlsIO.IStyle,Syncfusion.XlsIO.IRange,Syncfusion.XlsIO.TableBuiltInStyles)">
            <summary>
            Applies the header style to cell for excel version 2013.
            </summary>
            <param name="table">The Table.</param>
            <param name="excelStyle">The CellStyle from XlsIO range.</param>
            <param name="excelRange">current excel range</param>
            <param name="tablestyle">The Tablestyle.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.TableFormatHelper.ApplyTableHeaderStyle1(Syncfusion.XlsIO.IListObject,Syncfusion.XlsIO.IStyle,Syncfusion.XlsIO.IRange,Syncfusion.XlsIO.TableBuiltInStyles)">
            <summary>
            Applies the header style to cell for Excel Version below 2013.
            </summary>
            <param name="table">The Table.</param>
            <param name="excelStyle">The CellStyle from XlsIO range.</param>
            <param name="excelRange">current excel range</param>
            <param name="tablestyle">The Tablestyle.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.TableFormatHelper.ApplyTableContentStyle(Syncfusion.XlsIO.IListObject,Syncfusion.XlsIO.IStyle,Syncfusion.XlsIO.IRange,Syncfusion.XlsIO.TableBuiltInStyles)">
            <summary>
            Table format content styles such as table format background,border applied based on associeated table format name.
            </summary>
            <param name="table">IListObject from the XlsIO.</param>
            <param name="excelStyle">XlsIO cell style.</param>
            <param name="excelRange">Current XlsIO cell range</param>
            <param name="tablestyle">TableFormatStyle</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.TableFormatHelper.ApplyTableContentBorders(Syncfusion.XlsIO.TableBuiltInStyles,Syncfusion.XlsIO.IStyle,Syncfusion.XlsIO.IRange,Syncfusion.XlsIO.IListObject,System.Int32)">
            <summary>
            Apply the table content borders based on the table style name and border style was changed in different cases such
            banded rows,banded columns,first column,last column.
            </summary>
            <param name="tableStyle">where we have maintain the table style based on the table style name.</param>
            <param name="excelStyle">XlsIO cell style.</param>
            <param name="excelRange">XlsIO cell range.</param>
            <param name="table">list object from the xlsio</param>
            <param name="row">used whether it is even or odd.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.TableFormatHelper.GetTableContentForeground(Syncfusion.XlsIO.TableBuiltInStyles)">
            <summary>
            Gets the table content foreground for Excel version 2013.
            </summary>
            <param name="tablestyle">Table style name like in MSExcel.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.TableFormatHelper.GetTableContentForeground1(Syncfusion.XlsIO.TableBuiltInStyles)">
            <summary>
            Gets the table content foreground  for Excel version below 2010.
            </summary>
            <param name="tablestyle">Table style name like in MSExcel.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.TableFormatHelper.GetTableContentBackGround(Syncfusion.XlsIO.TableBuiltInStyles,System.Drawing.Color@,System.Drawing.Color@,System.Drawing.Color@,System.Boolean@)">
            <summary>
            Gets the table content background for Excel version 2013.
            </summary>
            <param name="tablestyle">The Tablestyle.</param>
            <param name="firstBackgroundColor">First color of the background.</param>
            <param name="secondBackgroundColor">Color of the second background.</param>
            <param name="headerBackgroundColor">Color for the header background.</param>
            <param name="entireRow">if set to <c>true</c> apply bockground to entire row.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Helpers.TableFormatHelper.GetTableContentBackGround1(Syncfusion.XlsIO.TableBuiltInStyles,System.Drawing.Color@,System.Drawing.Color@,System.Drawing.Color@,System.Boolean@)">
            <summary>
            Gets the table content background for Excel version below 2010.
            </summary>
            <param name="tablestyle">The Tablestyle.</param>
            <param name="firstBackgroundColor">First color of the background.</param>
            <param name="secondBackgroundColor">Color of the second background.</param>
            <param name="headerBackgroundColor">Color for the header background.</param>
            <param name="entireRow">if set to <c>true</c> apply bockground to entire row.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryAutoFitColumnCommand">
            <summary>
            Class which holds the memory transaction history of AutofitColumn Command.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommand">
            <summary>
            A class that encapsulates a command to be executed at a later point in time.
            </summary>
            <remarks>
            The <see cref="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommandBase.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)"/> method is overriden in specialized command classes and
            performs the command that is saved in this command.
            </remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommandBase">
            <summary>
            An abstract class that encapsulates a command to be executed at a later point in time.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommandBase.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommandBase.SfSpreadsheet"/>.
            </summary>
            <param name="mode">Current transaction mode.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommandBase.Description">
            <summary>
            Gets a description for the command.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommandBase.Range">
            <summary>
            Gets  the specified excel range for performing undo/redo action
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommandBase.SfSpreadsheet">
            <summary>
            Gets  the instance of <see cref="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommandBase.SfSpreadsheet"/> .
            </summary>
            <value>An instance of <see cref="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommandBase.SfSpreadsheet"/>.</value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommand.#ctor">
            <overload>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommand"/>.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommand"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommand"/> and associates it with a <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridModel"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommand.Pop(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
            Returns a reference to the latest command in the stack and removes the command from the stack.
            </summary>
            <returns>A reference to the latest <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommandBase"/> command.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommand.SetDescription(System.String)">
            <summary>
            Changes the description of this command.
            </summary>
            <param name="value">The new description text.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommand.Description">
            <override/>
            <summary>Gets a description for the command.</summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryAutoFitColumnCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryAutoFitColumnCommand">HistoryAutoFitColumnCommand</see> class. 
            </summary>
            <param name="range">Range to autofit.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.</param>
            <param name="isAutofit">True or False.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryAutoFitColumnCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
             Execute the command in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryAutoFitRowHeightCommand">
            <summary>
            Class which holds the memory transaction history of AutofitRow Command.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryAutoFitRowHeightCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryAutoFitRowHeightCommand">HistoryAutoFitRowHeightCommand</see> class. 
            </summary>
            <param name="range">Range to autofit.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.</param>
            <param name="isAutofit">True or False .</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryAutoFitRowHeightCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryAutoFitRowHeightCommand.IsAutofit">
            <summary>
            Gets or sets whether is auto fit row or not.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryAutoFitRowHeightCommand.OldHeight">
            <summary>
            Holds the row height for memory transaction
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryAutoFitRowHeightCommand.IsBadFontHeight">
            <summary>
            Gets or sets the whether the height of the row has changed or not.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryBoldCommand">
            <summary>
            Class which holds the memory transaction history of Bold Command.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryBoldCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryBoldCommand">HistoryBoldCommand</see> class. 
            </summary>
            <param name="range">Range in which bold style is applied.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryBoldCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryBoldCommand.IsBold">
            <summary>
            Gets/Sets the bold value for Memory transaction
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryBorderCommand">
            <summary>
            Class which holds the memory transaction history of Borders command.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryBorderCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryBorderCommand">HistoryBorderCommand</see> class. 
            </summary>
            <param name="range">Range in which the style applied. </param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryBorderCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryBorderCommand.TopBorderColor">
            <summary>
            Holds the value of the TopBorderColor
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryBorderCommand.LeftBorderColor">
            <summary>
            Holds the value of the LeftBorderColor
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryBorderCommand.RightBorderColor">
            <summary>
            Holds the value of the RightBorderColor
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryBorderCommand.BottomBorderColor">
            <summary>
            Holds the value of the BottomBorderColor
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryBorderCommand.RightBorderStyle">
            <summary>
            Holds the Value of the RightBorderStyle for memory transaction
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryBorderCommand.BottomBorderStyle">
            <summary>
            Holds the Value of the BottomBorderStyle for memory transaction
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryBorderCommand.LeftBorderStyle">
            <summary>
            Holds the Value of the LeftBorderStyle for memory transaction
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryBorderCommand.TopBorderStyle">
            <summary>
            Holds the Value of the TopBorderStyle for memory transaction
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCellCommentCommand">
            <summary>
            Class which holds the memory transaction history of CellComment Command.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCellCommentCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCellCommentCommand">HistoryCellCommentCommand</see> class. 
            </summary>
            <param name="range">Range in which comment added.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCellCommentCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCellCommentCommand.CellComment">
            <summary>
            Holds the value of the Cell comment for memory transaction
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCellCommentCommand.CommentText">
            <summary>
            Holds the current comment text
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCellCommentCommand.CommentWidth">
            <summary>
            Holds the value of the width of the comment window
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCellCommentCommand.CommentHeight">
            <summary>
            Holds the value of the height of the comment window
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCellValueCommand">
            <summary>
            Class which holds the memory transaction history of CellValue Command. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCellValueCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCellValueCommand">HistoryCellValueCommand</see> class. 
            </summary>
            <param name="range">Range which contains the value.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.</param>
            <param name="parsedFormula">Text which contains formula.</param>
            <param name="cellRef">Address of the cell.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCellValueCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCellValueCommand.OldValue">
            <summary>
            Holds the current text for memory transaction
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCellValueCommand.ParsedFormula">
            <summary>
            Holds the Parsed formula for reuse
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCellValueCommand.CellRef">
            <summary>
            Holds the value CellRef.It contains => sheet+CellIndex.Its used for addding/removing the parsed formula from list.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCalculatedValueCommand">
            <summary>
            Class which is used to perform history transaction with the calculated values of a formula cells.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCalculatedValueCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryClearCommand">
            <summary>
            Class which holds the memory transaction history of Clear Command.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryClearCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryClearCommand">HistoryClearCommand</see> class. 
            </summary>
            <param name="sourceRange">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryClearCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryClipBoardCommand">
            <summary>
            Class which holds the memory transaction history of ClipBoard Command.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryClipBoardCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryClipBoardCommand">HistoryClipBoardCommand</see> class. 
            </summary>
            <param name="sourceRange">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryClipBoardCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryClipBoardCommand.GridRange">
            <summary>
            Holds the value of the Source grid range
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryConditionalFormatCommand">
            <summary>
            Class which holds the memory transaction history of ConditionalFormat Command.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryConditionalFormatCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryConditionalFormatCommand">HistoryConditionalFormatCommand</see> class. 
            </summary>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryConditionalFormatCommand.UpdateConditionalFormats">
            <summary>
            Update the conditional format transaction
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryConditionalFormatCommand.UpdateHightlightCellsRules(Syncfusion.XlsIO.IConditionalFormat,Syncfusion.XlsIO.IConditionalFormat)">
            <summary>
            Update the highlight cells rules properties to XlsIO.
            </summary>
            <param name="condition1"></param>
            <param name="condition"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryConditionalFormatCommand.UpdateDataBars(Syncfusion.XlsIO.IConditionalFormat,Syncfusion.XlsIO.IConditionalFormat)">
            <summary>
            Update the databar properties to XlsIO.
            </summary>
            <param name="condition1"></param>
            <param name="condition"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryConditionalFormatCommand.UpdateIconSets(Syncfusion.XlsIO.IConditionalFormat,Syncfusion.XlsIO.IConditionalFormat)">
            <summary>
            Update the IconSets properties to XlsIO
            </summary>
            <param name="condition1"></param>
            <param name="condition"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryConditionalFormatCommand.UpdateColorScales(Syncfusion.XlsIO.IConditionalFormat,Syncfusion.XlsIO.IConditionalFormat)">
            <summary>
            Set the color scales to XlsIO
            </summary>
            <param name="condition1"></param>
            <param name="condition"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryConditionalFormatCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryConditionalFormatCommand.ConditionalFormats">
            <summary>
            Store the conditional formats from the range.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCopyFillSeriesCommand">
            <summary>
            Class which holds the memory transaction history of  CopyFillSeries Command.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCopyFillSeriesCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCopyFillSeriesCommand">HistoryCopyFillSeriesCommand</see> class. 
            </summary>
            <param name="sourceRange">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCopyFillSeriesCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCopyFillSeriesCommand.GridRange">
            <summary>
            Holds the value of the Source grid range
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryDataValidationCommand">
            <summary>
             Class which holds the memory transaction history of DataValidation Command.
             </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryDataValidationCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryDataValidationCommand">HistoryDataValidationCommand</see> class. 
            </summary>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryDataValidationCommand.CloneValidationRule(Syncfusion.XlsIO.IDataValidation,Syncfusion.XlsIO.IDataValidation)">
            <summary>
            Clone validation rule
            </summary>
            <param name="sourceObject"></param>
            <param name="destinationObject"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryDataValidationCommand.UpdateDataValidation">
            <summary>
            validation transaction
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryDataValidationCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryDataValidationCommand.DataValidationWrapper">
            <summary>
            Holds the validation rule
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryDefaultWidthCommand">
            <summary>
            Class which holds the memory transaction history of Default width command.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryDefaultWidthCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryDefaultWidthCommand">HistoryDefaultWidthCommand</see> class. 
            </summary>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryDefaultWidthCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryDefaultWidthCommand.DefaultWidth">
            <summary>
            Gets/Sets the DefaultWidth value for Memory transaction
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryDeleteCommand">
            <summary/>
             Class which holds the memory transaction history of Delete Command.
            <summary/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryDeleteCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.UI.Xaml.CellGrid.GridRangeInfoType)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryDeleteCommand">HistoryDeleteCommand</see> class. 
            </summary>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.</param>
            <param name="rangeType">Type of grid range such as either rows,columns or Table., etc.,</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryDeleteCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryDeleteCommand.RangeType">
            <summary>
            Holds the Range type for memory trasaction
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryDeleteCommand.GridRange">
            <summary>
            Holds the grid range for memory transaction
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFilterCellCommand">
            <summary>
            Class which holds the memory transaction history of apply and clear the filter from the spreadsheetRibbon.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFilterCellCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.XlsIO.IWorksheet)">
             <summary>
             Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFilterCellCommand">HistoryFilterCellCommand</see> class. 
             </summary>
             <param name="sfSpreadsheet">instance of the spreadsheet </param>
            <param name="activeSheet">ActiveSheet of the workbook </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFilterCellCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFilterCellCommand.ActiveSheet">
            <summary>
            Holds the ActiveSheet for memory transaction history.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFilterCommand">
            <summary>
            Class which holds the memory transaction history of apply filter and clear filter related actions.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFilterCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.XlsIO.IWorksheet,System.Int32,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.Int32,System.Collections.Generic.List{Syncfusion.UI.Xaml.Spreadsheet.FilterElement}}},System.Collections.Generic.List{Syncfusion.UI.Xaml.Spreadsheet.FilterElement},System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFilterCommand">HistoryFilterCommand</see> class. 
             </summary>
            <param name="sfSpreadsheet">Instance of spreadsheet </param>
            <param name="activeSheet">ActiveSheet of the workbook </param>
            <param name="filterCellColumnIndex"> Index of the filtered column </param>
            <param name="checkboxFilterItems"> CheckboxFilter items collection </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFilterCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFilterCommand.HideRows(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.Boolean)">
            <summary>
            UnHide the rows when perform undo operation and Hide the rows when perform redo operation.
            </summary>
            <param name="isHidden">It is false for undo operation and true for redo operation </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFilterCommand.OnFilterUndoOperation(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Below method executes when perform undo of HistoryFilterCommand and redo of HistoryFilterClearCommand.
            </summary>
            <param name="ActiveGrid"> ActiveGrid of the Spreadsheet </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFilterCommand.OnFilterRedoOperation(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Below method executes when perform redo of HistoryFilterCommand and undo of HistoryFilterClearCommand.
            </summary>
            <param name="ActiveGrid"> ActiveGrid of the Spreadsheet </param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFilterCommand.ActiveSheet">
            <summary>
            Holds the ActiveSheet for the memory transaction history.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFilterCommand.FilterCellColumnIndex">
            <summary>
            Holds the Filtered column index.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFilterCommand.CheckboxFilterItems">
            <summary>
            Holds the checkboxFilterItems collection of the filtered column for the memory transaction history.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFontCommand">
            <summary>
             Class which holds the memory transaction history of Font Command.
             </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFontCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFontCommand">HistoryFontCommand</see> class. 
            </summary>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFontCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFontCommand.ExistingFontFamily">
            <summary>
            Holds the font family for memory transaction
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFontCommand.ExistingFontSize">
            <summary>
            Holds the font size for memory transaction
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFontCommand.ExistingForeColor">
            <summary>
            Holds the font color memory transaction
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFormatCommand">
            <summary>
             Class which holds the memory transaction history of Format Command.
             </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFormatCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFormatCommand">HistoryFormatCommand</see> class. 
            </summary>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFormatCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFormatCommand.IndentLevel">
            <summary>
            Holds the value of the indent level for memory transaction.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFormatCommand.ExistingBackColor">
            <summary>
            Gets or sets the value indicating the background color of the range.
            </summary>
            <value>Background color of the range.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFormatTableCommand">
            <summary>
            Class which holds the memory transaction history of format table.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFormatTableCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.XlsIO.IRange,System.Boolean,Syncfusion.XlsIO.TableBuiltInStyles,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFormatTableCommand">HistoryFormatTableCommand</see> class. 
            </summary>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.</param>
            <param name="range">Excel range.</param>
            <param name="isNewTable"> True or False.</param>
            <param name="builtInStyles">One of the option in Excel 2007 table built in styles.</param>
            <param name="removeTable"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFormatTableCommand.UpdateTableStyles(System.Boolean,Syncfusion.XlsIO.TableBuiltInStyles)">
            <summary>
            Store the table style for memory transaction
            </summary>
            <param name="isNewTable"></param>
            <param name="builtInStyles"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFormatTableCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFormatTableCommand.RemoveTable">
            <summary>
            Gets/Sets the values to find removeTable or not?.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFormatTableCommand.IsNewTable">
            <summary>
            Gets/Sets the values to find isNewTable or not?.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFormatTableCommand.RowIndex">
            <summary>
            Gets/Sets Row index of the specified excel range
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFormatTableCommand.ColumnIndex">
            <summary>
            Gets/Sets the Col index of the specified excel range
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFormatTableCommand.GridRanges">
            <summary>
            Gets/Sets the gird ranges of the specified grid.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryFormatTableCommand.BuiltInStyles">
             <summary>
            Applied table styles 
             </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryHAlignCommand">
            <summary>
             Class which holds the memory transaction history of Horizontal Alignment command.
             </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryHAlignCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryHAlignCommand">HistoryHAlignCommand</see> class. 
            </summary>
            <param name="range">Excel range</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryHAlignCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryHAlignCommand.HorizontalAlignment">
            <summary>
            Holds the horizontal alignment for memory transaction.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryHiddenCellCommand">
            <summary>
            Class which holds the memory transaction history of Hidden Cell command.
            </summary> 
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryHiddenCellCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryHiddenCellCommand">HistoryHiddenCellCommand</see> class. 
            </summary>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryHiddenCellCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryHiddenCellCommand.IsHidden">
            <summary>
            Gets/Sets the bold value for Memory transaction
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryHyperlinkCommand">
            <summary>
             Class which holds memory transaction history of Hyperlink Command.
             </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryHyperlinkCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryHyperlinkCommand">HistoryHyperlinkCommand</see> class. 
            </summary>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryHyperlinkCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryHyperlinkCommand.IsEmpty">
            <summary>
            Holds the value to find out the empty link or not.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryHyperlinkCommand.RowIndex">
            <summary>
            Gets/Sets the Row index of the hyperlink
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryHyperlinkCommand.ColumnIndex">
            <summary>
            Gets/Sets the Col index of the hyperlink
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryHyperlinkCommand.GridRanges">
            <summary>
            Grid ranges of the hyperlink
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryHyperlinkCommand.Type">
            <summary>
            Gets/Sets the type of the hyperlink
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryHyperlinkCommand.Address">
            <summary>
            Gets/Sets the hyperlink address
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryHyperlinkCommand.TextToDisplay">
            <summary>
            Gets/Sets the display text of the hyperlink.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryHyperlinkCommand.IsEmptyCell">
            <summary>
            Gets/Sets the value to find out in empty cell or not.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryInsertCommand">
            <summary>
             Class which holds  memory transaction history of Insert Command.
             </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryInsertCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryInsertCommand">HistoryInsertCommand</see> class. 
            </summary>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryInsertCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.UI.Xaml.CellGrid.GridRangeInfoType)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryInsertCommand">HistoryInsertCommand</see> class. 
            </summary>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.</param>
            <param name="rangeType">Type of grid range either rows, cols or table,etc.,</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryInsertCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryInsertCommand.Cell">
            <summary>
            Holds the value of the current cell for memory transaction
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryInsertCommand.RangeType">
            <summary>
            Holds the value of the range type for transaction
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryInsertCommand.GridRange">
            <summary>
            Holds the GridRange for memory transaction
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryItalicCommand">
            <summary>
             Class which holds the memory transaction history of Italic Command.
             </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryItalicCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryItalicCommand">HistoryItalicCommand</see> class. 
            </summary>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryItalicCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryItalicCommand.IsItalic">
            <summary>
            Holds the value of the italic for memory transaction.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryLockCellCommand">
            <summary>
            Class which holds the memory transaction history of Lock Cell command.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryLockCellCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryLockCellCommand">HistoryLockCellCommand</see> class. 
            </summary>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryLockCellCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryLockCellCommand.IsLocked">
            <summary>
            Gets/Sets the bold value for Memory transaction
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.NamespaceDoc">
            <summary>
            Contains classes which are required to perform undo and redo.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager">
            <summary>
            Represents class which manages the undo and redo operations in <see cref="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.SfSpreadsheet"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager">HistoryManager</see> class. 
            </summary>
            <param name="sfSpreadsheet">An instance of <see cref="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.SfSpreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.Pop(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
            Pop the commands from the respective stack.
            </summary>
            <param name="mode">One of the transaction mode(either Undo or Redo).</param>
            <returns>The command at the top of the respective stack.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.Push(Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommandBase)">
            <overload>
            Pushes a command onto the undo stack.
            </overload>
            <summary>
            Pushes a command onto the undo stack.
            </summary>
            <param name="cmd">The <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommandBase"/> with undo information.</param>
            <remarks>
            When the spredsheet performing an <see cref="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.Undo"/>, the command will be pushed onto the redo stack. Otherwise, 
            commands are pushed onto the undo stack.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.BeginTransaction(System.String)">
            <summary>
            Starts a transaction that combines several subsequent commands into one transaction.
            </summary>
            <param name="s">A description for the transaction. This text can appear for example as "Undo" information in a menu 
            to give feedback to the user about command on the undo stack.
            </param>
            <remarks>
            is switched into a special mode where new commands will not be pushed onto the undo stack. Instead all new commands
            will be pushed into the current <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryTransactionCommand"/> instance. 
            <para/>
            When you call <see>
                <cref>CommitTrans</cref>
            </see>
                , the current <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryTransactionCommand"/>  command will be pushed
            onto the undo stack and the <see>
                <cref>SpreadsheetCommandManager</cref>
            </see>
                will switch back to its default behavior
            where new commands are pushed onto the undo stack.
            <para/>
            When you call <see cref="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.BeginTransaction(System.String)"/>, an internal counter will increase but no additional <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryTransactionCommand"/> is
            created. Only once you call <see>
                <cref>CommitTrans</cref>
            </see>
                as many times as you have called <see cref="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.BeginTransaction(System.String)"/> will the
            transaction will be considered complete and the current <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryTransactionCommand"/> command will be pushed
            onto the undo stack.
            <para/>
            That means nested transactions are supported. But when you <see cref="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.Undo"/> or <see>
                <cref>Rollback</cref>
            </see>
                a transaction,
            all nested transaction will be treated as one single transaction.
            </remarks> 
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.CommitTransaction">
            <summary>
            Ends a transaction that was started with a previous <see cref="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.BeginTransaction(System.String)"/> call.
            </summary>
            <remarks>
            See <see cref="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.BeginTransaction(System.String)"/> for discussion about transaction in a Spreadsheet.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.CommitTransaction(Syncfusion.XlsIO.IRange[])">
            <summary>
            Ends a transaction that was started with a previous <see cref="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.BeginTransaction(System.String)"/> call.
            </summary>
            <remarks>
            See <see cref="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.BeginTransaction(System.String)"/> for discussion about transaction in a SpreadsheetCommandStack.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.GetExcelRanges">
            <summary>
            Gets the excel ranges
            </summary>
            <returns />
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.Undo">
            <summary>
            Execute the latest command from the undo stack.
            </summary>
            <remarks>
            The redo stack will be cleared.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.Redo">
            <summary>
            Execute the latest command from the redo stack.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
            Pop the command form specified stack.
            </summary>
            <param name="mode">One of the transaction mode(either undo/redo).</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.Reset">
            <summary>
            Removes or clears the commands from undo and redo stack.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.OnkeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Occurs when keyDown on SpreadsheetGrid or VisualContainer
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.Dispose">
            <summary>
            Releases all resources used by the.
            <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager">HistoryManager class.</see>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.TransactionName">
            <summary>
            Gets the name of current transaction. If no transaction is in progress, then returns string.Empty. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.InTransaction">
            <summary>
            Gets/Sets the value to transcation mode.
            If group of the transaction pushed into stack, It should be in enable and initialize once all the commands pushed into stack.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.Enabled">
            <summary>
            Gets or sets the value for enabling the command stack. By default it has been in disabled mode.
            When enabled this, command actions are saved in undo/redo stack for memory transaction.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.SfSpreadsheet">
             <summary>
            Owner of the command stack
             </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.RedoStack">
            <summary>
            Gets the stack with redo commands.
            </summary>
            <value>A collection of commands.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.UndoStack">
            <summary>
            Gets the stack with undo commands .
            </summary>
            <value>A collection of commands.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode">
            <summary>
            Defines the transaction mode in SfSpreadsheet.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode.Undo">
            <summary>
            SfSpreadsheet is currently in process of undoing commands. <see cref="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.Undo"/> will set initialize and reset this state.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode.Redo">
            <summary>
            SfSpreadsheet is currently in process of redoing commands. <see cref="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManager.Redo"/> will set initialize and reset this state.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManagerHelper">
            <summary>
            Represents a helper class which maintains the excel range which is to restore the transaction.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManagerHelper.IsValidRange(Syncfusion.XlsIO.IWorksheet,System.Int32,System.Int32)">
            <summary>
            Gets the value find out the specified row/column has been used or not?.
            </summary>
            <param name="worksheet"></param>
            <param name="row"></param>
            <param name="col"></param>
            <returns>If true , edited cell should push into stack</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManagerHelper.GetTab(System.String,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Gets the specified <see cref="T:System.Windows.Controls.TabItem"/>.
            </summary>
            <param name="name">Name of the tab item.</param>
            <param name="sfSpreadsheet">An instance of SfSpreadsheet.</param>
            <returns>The <see cref="T:System.Windows.Controls.TabItem"/> with the specified name.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManagerHelper.OnDeletingRange(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Removes the table from the selected range in the Worksheet.
            </summary>
            <param name="grid">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManagerHelper.PushClipBoardCommands(Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommandBase,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Push all the commands in memory stack for restore transaction.While handling CutCopyPaste, all the commands need to be restored when applying redo the trasaction.
            </summary>
            <param name="command"></param>
            <param name="range"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManagerHelper.OnRowColDeleting(Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommandBase,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,Syncfusion.UI.Xaml.CellGrid.GridRangeInfoType)">
            <summary>
            Push all the commands in memory stack for restore transaction.
            When handling delete row/column, all the commands need to be restored when applying redo the trasaction.
            </summary>
            <param name="command">Transaction Command</param>
            <param name="range">ExcelRange</param>
            <param name="rangeType">RangeType</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManagerHelper.UpdateGridSelectionFrame(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.Collections.Generic.IEnumerable{Syncfusion.UI.Xaml.CellGrid.GridRangeInfo},System.Int32,System.Int32)">
            <summary>
            Update Grid selection frame while performing undo/redo action
            </summary>
            <param name="sfSpreadsheet">Owner</param>
            <param name="grid">specified grid</param>
            <param name="gridRanges">selected ranges</param>
            <param name="rowIndex">current cell row</param>
            <param name="columnIndex">current cell col</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManagerHelper.SelectionIsCurrentCell(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Check grid selection is current cell or not?.
            </summary>
            <param name="grid"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryManagerHelper.SetGridFocus(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Set focus to grid. When navigating from one sheet into another sheet, current grid can't be focused. So we have to set focus manually.
            </summary>
            <param name="sfSpreadsheet">Owner</param>
            <param name="grid">Current grid</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryMergeCommand">
            <summary>
             Class which holds the memory transaction history of Merge command.
             </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryMergeCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.Collections.Generic.List{Syncfusion.UI.Xaml.CellGrid.GridRangeInfo},System.Collections.Generic.List{Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo},Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryMergeCommand">HistoryMergeCommand</see> class. 
            </summary>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.</param>
            <param name="existingCoveredCells">Existing covered cells in the SpreadsheetGrid.</param>
            <param name="coveredCells">Current covered cell range.</param>
            <param name="grid">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.</param>
            <param name="sourceGrid">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryMergeCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryMergeCommand.CoverdCells">
            <summary>
            Collection of the current cover ranges
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryMergeCommand.ExistingCoveredCells">
            <summary>
            Collection of the existing cover range of the specified range.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryMergeCommand.Grid">
            <summary>
            Grid of the specified action
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryMergeCommand.SourceGrid">
            <summary>
            Parent Grid
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryNameRangeCommand">
            <summary>
             Class which holds the memory transaction history of NameRange command.
             </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryNameRangeCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.UI.Xaml.Spreadsheet.NameRange,Syncfusion.UI.Xaml.Spreadsheet.NameRange)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryNameRangeCommand">HistoryNameRangeCommand</see> class. 
            </summary>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.</param>
            <param name="nameRange">Current NameRange.</param>
            <param name="oldNameRange">Existing NameRange.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryNameRangeCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryNumberFormatCommand">
            <summary>
            Class which holds the memory transaction history of NumberFormat command.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryNumberFormatCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryNumberFormatCommand">HistoryNumberFormatCommand</see> class. 
            </summary>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryNumberFormatCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryNumberFormatCommand.NumberFormat">
            <summary>
            Holds the number format for memory transaction
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryOrientationCommand">
            <summary>
             Class which holds the memory transaction history of Orientation command.
             </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryOrientationCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryOrientationCommand">HistoryOrientationCommand</see> class. 
            </summary>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryOrientationCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryOrientationCommand.RotationAngle">
            <summary>
            Holds the angle of the rotation for memory transaction.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryOutlinesCommand">
            <summary>
            Class which holds the memory transaction history of Outlines command.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryOutlinesCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryOutlinesCommand">HistoryOutlinesCommand</see> class. 
            </summary>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.</param>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryOutlinesCommand.OutlineWrappers">
            <summary>
            Collection of outlines.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryOutlinesCommand.CopyOutlinesFromCollection(Syncfusion.XlsIO.Implementation.WorksheetImpl,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Copy outlines from OutlineWrappers into worksheet OutlineWrappers.
            </summary>
            <param name="sheet"></param>
            <param name="grid"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryOutlinesCommand.ClearOutlines(Syncfusion.XlsIO.Implementation.WorksheetImpl)">
            <summary>
            Clear the outlines.
            </summary>
            <param name="sheet"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryOutlinesCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.Outlines">
            <summary>
            Represents a class which holds the properties related with Outlines.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.Outlines.Range">
            <summary>
            Gets or sets the value indicating the specified excel range.
            </summary>
            <value>Specified excel range.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.Outlines.GroupBy">
            <summary>
            Gets or sets the value indicating the type of group for outlines .
            </summary>
            <value>One of the Grouping Option(either by rows or by columns).</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.Outlines.IsCollapsed">
            <summary>
            Gets or sets a value indicating whether the outlines can be collapsed or not .
            </summary>
            <value><see langword="true"/> if the outlines can be collapsed ; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryResizeColumnCommand">
            <summary>
             Class which holds the memory transaction history of ResizeColumn command.
             </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryResizeColumnCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryResizeColumnCommand">HistoryResizeColumnCommand</see> class. 
            </summary>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryResizeColumnCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryResizeColumnCommand.ColumnWidth">
            <summary>
            Holds the value of the column width memory transaction.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryResizeRowCommand">
            <summary>
             Class which holds the memory transaction history of ResizeRow command.
             </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryResizeRowCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryResizeRowCommand">HistoryResizeRowCommand</see> class. 
            </summary>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryResizeRowCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryResizeRowCommand.RowHeight">
            <summary>
            Holds the row height for memory transaction
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryResizeRowCommand.IsBadFontHeight">
            <summary>
            Gets or sets the whether the height of the row has changed or not.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistorySortCommand">
            <summary>
            Class which holds the memory transaction history of sorting related actions.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistorySortCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.XlsIO.IWorksheet,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistorySortCommand">HistorySortCommand</see> class. 
             </summary>
            <param name="sfSpreadsheet">Instance of spreadsheet </param>
            <param name="activeSheet">ActiveSheet of the workbook </param>
            <param name="isUndoRedo"> Which is false when apply sorting for a column and it is true if undo redo operation has performed.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistorySortCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistorySortCommand.OnItemsSorting(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Push all cell values into stack memory for restore transaction when perform undo redo operation for sorting.
            </summary>
            <param name="range">Sort Range</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistorySortCommand.ActiveSheet">
            <summary>
            Holds the ActiveSheet for the memory transaction history.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistorySortCommand.SortField">
            <summary>
            Holds the SortField of the ActiveSheet for history memory transaction.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryStrikethroughCommand">
            <summary>
             Class which holds the memory transaction history of Strikethrough Command.
             </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryStrikethroughCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryStrikethroughCommand">HistoryStrikethroughCommand</see> class. 
            </summary>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryStrikethroughCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryStrikethroughCommand.IsStrikethrough">
            <summary>
            Holds the value of the strikethrough for memory transaction.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryStyleCommand">
            <summary>
             Class which holds the memory transaction history of Style command.
             </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryStyleCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryStyleCommand">HistoryStyleCommand</see> class. 
            </summary>
            <param name="range">Specified range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryStyleCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryStyleCommand.CellStyle">
            <summary>
            Holds the cell style for memory transaction.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryTransactionCommand">
            <summary>
            Holds a collection of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommandBase"/> objects that should all be executed together as one command
            when the <see>
                <cref>SpreadsheetCommandManager.Undo</cref>
            </see>
                or <see>
                    <cref>SpreadsheetCommandManager.Redo</cref>
                </see>
                of a grid <see>
                    <cref>SpreadsheetCommandManager.CommandStack</cref>
                </see>
                is called.
            </summary>
            <remarks>
            The <see>
                <cref>SpreadsheetCommandManager.BeginTrans</cref>
            </see>
                of a <see>
                    <cref>SpreadsheetCommandManager.CommandStack</cref>
                </see>
                object will create
            a <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryTransactionCommand"/> object and redirect subsequent commands into the current <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryTransactionCommand"/> object 
            until <see>
                <cref>SpreadsheetCommandManager.CommitTrans</cref>
            </see>
                is called.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryTransactionCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.XlsIO.IRange[],Syncfusion.UI.Xaml.CellGrid.GridCurrentCell)">
            <overload>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryTransactionCommand"/> object and associates it with a <see>
                <cref>SpreadsheetCommandManager</cref>
            </see>
                .
            </overload>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryTransactionCommand"/> object and associates it with a <see>
                <cref>SpreadsheetCommandManager</cref>
            </see>
                .
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.</param>
            <param name="ranges">Specified excel ranges.</param>
            <param name="currentCell">Current cell in SpreadsheetGrid.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryTransactionCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,Syncfusion.XlsIO.IRange[],System.Int32,System.Int32,Syncfusion.UI.Xaml.CellGrid.GridColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryTransactionCommand">HistoryTransactionCommand</see> class. 
            </summary>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.</param>
            <param name="ranges">Specified excel ranges.</param>
            <param name="row">Row index of the current cell.</param>
            <param name="col">Column index of the current cell.</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridColumn"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryTransactionCommand.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet,System.String)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryTransactionCommand"/> object and associates it with a <see>
                <cref>SpreadsheetCommandManager</cref>
            </see>
                and sets a description text.
            </summary>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.</param>
            <param name="description">Description of the commands.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryTransactionCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="mode">Current transaction mode.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryTransactionCommand.Push(Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommandBase)">
            <summary>
            Adds a new command to the current transaction.
            </summary>
            <param name="cmd">The Command for the transaction.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryTransactionCommand.Peek">
            <summary>
            Returns a reference to the latest command in the stack and leaves the command on the stack.
            </summary>
            <returns>A reference to the latest <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommandBase"/> command.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryTransactionCommand.Pop(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
            Returns a reference to the latest command in the stack and removes the command from the stack.
            </summary>
            <returns>A reference to the latest <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryCommandBase"/> command.</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryTransactionCommand.Description">
            <override/>
            <summary>Gets a description for the command.</summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryTransactionCommand.Stack">
            <summary>
            Gets a reference to the stack with all commands that belong to this transaction.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryUnderlineCommand">
            <summary>
            Class which holds the memory transaction history of Underline command.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryUnderlineCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryUnderlineCommand">HistoryUnderlineCommand</see> class. 
            </summary>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryUnderlineCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryUnderlineCommand.IsUnderline">
            <summary>
            Holds the value of the underline for memory transaction.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryVAlignCommand">
            <summary>
            Class which holds the memory transaction history of Vertical Alignment command.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryVAlignCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryVAlignCommand">HistoryVAlignCommand</see> class. 
            </summary>
            <param name="range">Specific excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryVAlignCommand.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryVAlignCommand.VerticalAlignment">
            <summary>
            Holds the vertical alignment for memory transaction
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryWrapText">
            <summary>
             Class which holds the memory transaction history of WrapText command
             </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryWrapText.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryWrapText">HistoryWrapText</see> class. 
            </summary>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryWrapText.#ctor(System.Boolean,Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryWrapText">HistoryWrapText</see> class. 
            </summary>
            <param name="isWrapText">True or False .</param>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryWrapText.Execute(Syncfusion.UI.Xaml.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.History.HistoryWrapText.IsWrapText">
            <summary>
            Holds the value of the wrap text
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Resources.NamespaceDoc">
            <summary>
            Contains classes which are used to localize the strings used in the Spreadsheet.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Resources.GridResourceWrapper">
            <summary>
            Represents a class which is used to maintain all the culture-specific data related with ribbon menu items and dialog boxes.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Resources.GridResourceWrapper.SetResources(System.Reflection.Assembly)">
            <summary>
            Set the assembly which having the resource file to localize the Spreadsheet. 
            </summary>
            <param name="assembly">Assembly name </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Resources.GridResourceWrapper.SetResources(System.Reflection.Assembly,System.String)">
            <summary>
            Set the assembly and namespace which having the resource file to localize the Spreadsheet.
            </summary>
            <param name="assembly">Assembly name</param>
            <param name="_namespace">Namespace name</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Resources.SR">
            <summary>
            Represents a class which contains resource manager that provides convenient access to culture-specific
            resources at run time.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Resources.SR.SetResources(System.Reflection.Assembly,System.String)">
            <summary>
            Get and set the resources based on the assembly name and namespace for performing the localization when project have resources in different assembly name and namespace. 
            </summary>
            <param name="assembly">Assembly name</param>
            <param name="_namespace">Namespace name</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Resources.SR.GetLocalizedResourceManager(System.Reflection.Assembly,System.String)">
            <summary>
            Get the resources from the given namespace and assembly name.
            </summary>
            <param name="assembly"> Assembly Name</param>
            <param name="_namespace">Namespace name</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Resources.SR.ReleaseResources">
            <summary>
            Realease all resources used by <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Resources.SR"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Resources.SR.GetString(System.Globalization.CultureInfo,System.String,System.Object[])">
            <summary>
            Returns the value of the string resource localized for the specified culture.
            </summary>
            <param name="culture">An object that represents the culture for which the resource is localized.</param>
            <param name="name">The name of the resource to retrieve.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <returns>The value of the resource localized for the specified culture, or null if
                name cannot be found in a resource set.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Resources.SR.GetString(System.String)">
            <summary>
            Returns the value of the string resource.
            </summary>
            <param name="name">The name of the resource to retrieve.</param>
            <returns>The value of the resource or null if name cannot be found.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Resources.SR.GetString(System.String,System.Object[])">
            <summary>
            Returns the value of the string resource.
            </summary>
            <param name="name">The name of the resource to retrieve.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <returns>The value of the resource or null if name cannot be found.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Resources.SR.GetString(System.Globalization.CultureInfo,System.String)">
            <summary>
            Returns the value of the string resource localized for the specified culture.
            </summary>
            <param name="culture">An object that represents the culture for which the resource is localized.</param>
            <param name="name">The name of the resource to retrieve.</param>
            <returns>The value of the resource or null if name cannot be found.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Resources.SR.GetObject(System.Globalization.CultureInfo,System.String)">
            <summary>
            Gets the value of the specified non-string resource localized for the specified
            culture.
            </summary>
            <param name="culture">The culture for which the resource is localized.</param>
            <param name="name">The name of the resource to get.</param>
            <returns>The value of the resource, localized for the specified culture. If an appropriate
               resource set exists but name cannot be found, the method returns null.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Resources.SR.GetObject(System.String)">
            <summary>
             Returns the value of the specified non-string resource.
            </summary>
            <param name="name">The name of the resource to get.</param>
            <returns>The value of the resource localized for the caller's current culture settings.
                If an appropriate resource set exists but name cannot be found, the method
                returns null.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Resources.SR.GetBoolean(System.Globalization.CultureInfo,System.String)">
            <summary>
            Gets the value of the specified non-string resource localized for the specified
            culture.
            </summary>
            <param name="culture">The culture for which the resource is localized.</param>
            <param name="name">The name of the resource to get.</param>
            <returns>Returns true, if the value of the resource, localized for the specified culture; otherwise false,  If an appropriate
               resource set exists but name cannot be found.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Resources.SR.GetBoolean(System.String)">
            <summary>
            Returns the bool value of the specified non-string resource.
            </summary>
            <param name="name">The name of the resource to get.</param>
            <returns>Returns true, if the value of the resource, localized for the specified culture; otherwise false,  If an appropriate
               resource set exists but name cannot be found.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Resources.SR.GetByte(System.Globalization.CultureInfo,System.String)">
            <summary>
            Gets the byte value of the specified non-string resource localized for the specified
            culture
            </summary>
            <param name="culture">The culture for which the resource is localized.</param>
            <param name="name">The name of the resource to get.</param>
            <returns>The byte value of the resource, localized for the specified culture. If an appropriate
               resource set exists but name cannot be found, the method returns null.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Resources.SR.GetByte(System.String)">
            <summary>
             Returns the byte value of the specified non-string resource.
            </summary>
            <param name="name">The name of the resource to get.</param>
            <returns>The value of the resource, If an appropriate
               resource set exists but name cannot be found, the method returns null. </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Resources.SR.GetChar(System.Globalization.CultureInfo,System.String)">
            <summary>
            Gets the char value of the specified non-string resource localized for the specified
            culture.
            </summary>
            <param name="culture">The culture for which the resource is localized.</param>
            <param name="name">The name of the resource to get.</param>
            <returns>The  value of the resource, localized for the specified culture. If an appropriate
               resource set exists but name cannot be found, the method returns null.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Resources.SR.GetChar(System.String)">
            <summary>
             Returns the char value of the specified non-string resource.
            </summary>
            <param name="name">The name of the resource to get.</param>
            <returns>The value of the resource, If an appropriate
               resource set exists but name cannot be found, the method returns null. </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Resources.SR.GetDouble(System.Globalization.CultureInfo,System.String)">
            <summary>
            Gets the double value of the specified non-string resource localized for the specified
            culture.
            </summary>
            <param name="culture">The culture for which the resource is localized.</param>
            <param name="name">The name of the resource to get.</param>
            <returns>The double value of the resource, localized for the specified culture. If an appropriate
               resource set exists but name cannot be found, the method returns null.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Resources.SR.GetDouble(System.String)">
            <summary>
             Returns the double value of the specified non-string resource.
            </summary>
            <param name="name">The name of the resource to get.</param>
            <returns>The double value of the resource, If an appropriate
               resource set exists but name cannot be found, the method returns null. </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Resources.SR.GetFloat(System.Globalization.CultureInfo,System.String)">
            <summary>
            Gets the float value of the specified non-string resource localized for the specified
            culture.
            </summary>
            <param name="culture">The culture for which the resource is localized.</param>
            <param name="name">The name of the resource to get.</param>
            <returns>The float value of the resource, localized for the specified culture. If an appropriate
               resource set exists but name cannot be found, the method returns null.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Resources.SR.GetFloat(System.String)">
            <summary>
             Returns the float value of the specified non-string resource.
            </summary>
            <param name="name">The name of the resource to get.</param>
            <returns>The float value of the resource, If an appropriate
               resource set exists but name cannot be found, the method returns null. </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Resources.SR.GetInt(System.String)">
            <summary>
             Returns the integer value of the specified non-string resource.
            </summary>
            <param name="name">The name of the resource to get.</param>
            <returns>The integer value of the resource, If an appropriate
               resource set exists but name cannot be found, the method returns null. </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Resources.SR.GetInt(System.Globalization.CultureInfo,System.String)">
            <summary>
            Gets the integer value of the specified non-string resource localized for the specified
            culture.
            </summary>
            <param name="culture">The culture for which the resource is localized.</param>
            <param name="name">The name of the resource to get.</param>
            <returns>The integer value of the resource, localized for the specified culture. If an appropriate
               resource set exists but name cannot be found, the method returns null.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Resources.SR.GetLong(System.String)">
            <summary>
             Returns the long integer value of the specified non-string resource.
            </summary>
            <param name="name">The name of the resource to get.</param>
            <returns>The integer value of the resource, If an appropriate
               resource set exists but name cannot be found, the method returns null. </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Resources.SR.GetLong(System.Globalization.CultureInfo,System.String)">
            <summary>
            Gets the long integer value of the specified non-string resource localized for the specified
            culture.
            </summary>
            <param name="culture">The culture for which the resource is localized.</param>
            <param name="name">The name of the resource to get.</param>
            <returns>The long integer value of the resource, localized for the specified culture. If an appropriate
               resource set exists but name cannot be found, the method returns null.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Resources.SR.GetShort(System.Globalization.CultureInfo,System.String)">
            <summary>
            Gets the short integer value of the specified non-string resource localized for the specified
            culture.
            </summary>
            <param name="culture">The culture for which the resource is localized.</param>
            <param name="name">The name of the resource to get.</param>
            <returns>The short integer value of the resource, localized for the specified culture. If an appropriate
               resource set exists but name cannot be found, the method returns null.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.Resources.SR.GetShort(System.String)">
            <summary>
             Returns the short integer value of the specified non-string resource.
            </summary>
            <param name="name">The name of the resource to get.</param>
            <returns>The integer value of the resource, If an appropriate
               resource set exists but name cannot be found, the method returns null. </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Accounting">
            <summary>
              Looks up a localized string similar to Accounting.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Alignment">
            <summary>
              Looks up a localized string similar to Alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.All">
            <summary>
              Looks up a localized string similar to All.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.AllBorder">
            <summary>
              Looks up a localized string similar to All Borders.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Allow">
            <summary>
              Looks up a localized string similar to Allow :.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.And">
            <summary>
              Looks up a localized string similar to and.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.AngleClockwise">
            <summary>
              Looks up a localized string similar to Angle Clockwise.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.AngleCounterclockwise">
            <summary>
              Looks up a localized string similar to Angle Counterclockwise.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.AnyValue">
            <summary>
              Looks up a localized string similar to Any value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.AutoFitColumnWidth">
            <summary>
              Looks up a localized string similar to AutoFit Column Width.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.AutoFitRowHeight">
            <summary>
              Looks up a localized string similar to AutoFit Row Height.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.AvailableTemplate">
            <summary>
              Looks up a localized string similar to Available Template.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Between">
            <summary>
              Looks up a localized string similar to Between....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Between_Lower">
            <summary>
              Looks up a localized string similar to between.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.BetweenWindowDescription">
            <summary>
              Looks up a localized string similar to Format cells that are BETWEEN:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.BetweenWindowTitle">
            <summary>
              Looks up a localized string similar to Between.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.BlankWorkbook">
            <summary>
              Looks up a localized string similar to Blank workbook.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.BlankWorkbookDescription">
            <summary>
              Looks up a localized string similar to Creates an Empty Workbook.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Border">
            <summary>
              Looks up a localized string similar to Border.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.BottomAlign">
            <summary>
              Looks up a localized string similar to BottomAlign.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.BottomBorder">
            <summary>
              Looks up a localized string similar to Bottom Border.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Cancel">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Caption">
            <summary>
              Looks up a localized string similar to Message.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Caution">
            <summary>
              Looks up a localized string similar to Caution: If you lose or forget the password, it cannot be recovered. It is advisable to keep a list of passwords and their corresponding document names in a safe place.(Remember that passwords are case sensitive.).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Cells">
            <summary>
              Looks up a localized string similar to Cells.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.CellSize">
            <summary>
              Looks up a localized string similar to Cell Size.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.CellStyles">
            <summary>
              Looks up a localized string similar to Cell Styles.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.CenterAlign">
            <summary>
              Looks up a localized string similar to CenterAlign.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.CF_IconSets_Directional">
            <summary>
              Looks up a localized string similar to Directional.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.CF_IconSets_Indicators">
            <summary>
              Looks up a localized string similar to Indicators.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.CF_IconSets_Ratings">
            <summary>
              Looks up a localized string similar to Ratings.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.CF_IconSets_Shapes">
            <summary>
              Looks up a localized string similar to Shapes.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Change">
            <summary>
              Looks up a localized string similar to Change....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ClearAll">
            <summary>
              Looks up a localized string similar to Clear All.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ClearFilter">
            <summary>
              Looks up a localized string similar to Clear Filter.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ClearRules">
            <summary>
              Looks up a localized string similar to Clear Rules.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ClearRules_FromEntireSheet">
            <summary>
              Looks up a localized string similar to Clear Rules from Entire Sheet.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ClearRules_FromSelectedCells">
            <summary>
              Looks up a localized string similar to Clear Rules from Selected Cells.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Clipboard">
            <summary>
              Looks up a localized string similar to Clipboard.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Close">
            <summary>
              Looks up a localized string similar to Close.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ColorScales">
            <summary>
              Looks up a localized string similar to Color Scales.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Columns">
            <summary>
              Looks up a localized string similar to Columns.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ColumnWidth">
            <summary>
              Looks up a localized string similar to Column Width....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ColumnWidthDescription">
            <summary>
              Looks up a localized string similar to Column width:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ColumnWidthTitle">
            <summary>
              Looks up a localized string similar to Column Width.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.CommaStyle">
            <summary>
              Looks up a localized string similar to CommaStyle.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Comment">
            <summary>
              Looks up a localized string similar to Comment:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Comments">
            <summary>
              Looks up a localized string similar to Comments.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ConditionalFormatting">
            <summary>
              Looks up a localized string similar to Conditional Formatting.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ConditionValueError">
            <summary>
              Looks up a localized string similar to Please enter only numeric values, cannot apply condition value as string value..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ContainsTextDescription">
            <summary>
              Looks up a localized string similar to Format cells that contain the text:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ContainsTextTitle">
            <summary>
              Looks up a localized string similar to Text That Contains.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Context_ClearContents">
            <summary>
              Looks up a localized string similar to Clear Contents.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Context_DefineName">
            <summary>
              Looks up a localized string similar to Define Name....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Context_Delete">
            <summary>
              Looks up a localized string similar to Delete....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Context_DeleteComment">
            <summary>
              Looks up a localized string similar to Delete Comment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Context_EditComment">
            <summary>
              Looks up a localized string similar to Edit Comment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Context_EditHyperlink">
            <summary>
              Looks up a localized string similar to Edit Hyperlink....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Context_FormatCells">
            <summary>
              Looks up a localized string similar to Format Cells....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Context_Hyperlink">
            <summary>
              Looks up a localized string similar to Hyperlink....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Context_Insert">
            <summary>
              Looks up a localized string similar to Insert....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Context_InsertComment">
            <summary>
              Looks up a localized string similar to Insert Comment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Context_KeepTextOnly">
            <summary>
              Looks up a localized string similar to Keep Text Only.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Context_OpenHyperlink">
            <summary>
              Looks up a localized string similar to Open Hyperlink.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Context_PasteAll">
            <summary>
              Looks up a localized string similar to Paste.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Context_PasteFormat">
            <summary>
              Looks up a localized string similar to Formatting.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Context_PasteFormulas">
            <summary>
              Looks up a localized string similar to Formulas.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Context_PasteOptions">
            <summary>
              Looks up a localized string similar to PasteOptions.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Context_PasteValues">
            <summary>
              Looks up a localized string similar to Values.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Context_RemoveHyperlink">
            <summary>
              Looks up a localized string similar to Remove Hyperlink.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Context_ValuesAndFormatting">
            <summary>
              Looks up a localized string similar to Values &amp; Formatting.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Copy">
            <summary>
              Looks up a localized string similar to Copy.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Currency">
            <summary>
              Looks up a localized string similar to Currency.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Custom">
            <summary>
              Looks up a localized string similar to Custom.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Cut">
            <summary>
              Looks up a localized string similar to Cut.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Data">
            <summary>
              Looks up a localized string similar to DATA.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DataBars">
            <summary>
              Looks up a localized string similar to Data Bars.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Datatitle">
            <summary>
              Looks up a localized string similar to Data :.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Datatools">
            <summary>
              Looks up a localized string similar to Data Tools.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DataValidation">
            <summary>
              Looks up a localized string similar to Data Validation.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Date">
            <summary>
              Looks up a localized string similar to Date :.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DateAndTime">
            <summary>
              Looks up a localized string similar to Date.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DateError">
            <summary>
              Looks up a localized string similar to The date you entered for the Date is invalid..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DateOccuring">
            <summary>
              Looks up a localized string similar to A Date Occurring....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DateOccuringDescription">
            <summary>
              Looks up a localized string similar to Format cells that contain a date occurring:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DateOccuringTitle">
            <summary>
              Looks up a localized string similar to A Date Occurring.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Decimal">
            <summary>
              Looks up a localized string similar to Decimal.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DecreaseIndent">
            <summary>
              Looks up a localized string similar to DecreaseIndent.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DefaultValidationError">
            <summary>
              Looks up a localized string similar to The value you entered is not valid.                                                                   A user has restricted values that can be entered into this cell..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DefaultValidationMessage">
             <summary>
               Looks up a localized string similar to The value you entered is not valid.
            A user has restricted value that can be entered into this cell..
             </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DefaultWidth">
            <summary>
              Looks up a localized string similar to Default Width...  .
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DefinedNames">
            <summary>
              Looks up a localized string similar to Defined Names.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DelCols">
            <summary>
              Looks up a localized string similar to Delete columns.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Delete">
            <summary>
              Looks up a localized string similar to Delete.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DeleteCells">
            <summary>
              Looks up a localized string similar to Delete Cells....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DeleteColumn">
            <summary>
              Looks up a localized string similar to Delete Sheet Columns.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DeleteComment">
            <summary>
              Looks up a localized string similar to Delete.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DeleteNameRange">
            <summary>
              Looks up a localized string similar to Are you sure you want to delete the name .
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DeleteRow">
            <summary>
              Looks up a localized string similar to Delete Sheet Rows.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DeleteSheet">
            <summary>
              Looks up a localized string similar to Delete Sheet.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DelRows">
            <summary>
              Looks up a localized string similar to Delete rows.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Direction">
            <summary>
              Looks up a localized string similar to Direction.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Document">
            <summary>
              Looks up a localized string similar to Create New Document.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentMask_AppName">
            <summary>
              Looks up a localized string similar to Add an application name.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentMask_Author">
            <summary>
              Looks up a localized string similar to Add an author.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentMask_Category">
            <summary>
              Looks up a localized string similar to Add a category.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentMask_Comments">
            <summary>
              Looks up a localized string similar to Add comments.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentMask_Company">
            <summary>
              Looks up a localized string similar to Specify the company.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentMask_Manager">
            <summary>
              Looks up a localized string similar to Specify the manager.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentMask_Subject">
            <summary>
              Looks up a localized string similar to Specify the subject.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentMask_Tag">
            <summary>
              Looks up a localized string similar to Add a tag.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentMask_Title">
            <summary>
              Looks up a localized string similar to Add a title.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentProperties">
            <summary>
              Looks up a localized string similar to Properties.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentProperty_AppName">
            <summary>
              Looks up a localized string similar to AppName.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentProperty_Author">
            <summary>
              Looks up a localized string similar to Author.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentProperty_Category">
            <summary>
              Looks up a localized string similar to Categories.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentProperty_Comments">
            <summary>
              Looks up a localized string similar to Comments.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentProperty_Company">
            <summary>
              Looks up a localized string similar to Company.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentProperty_Created">
            <summary>
              Looks up a localized string similar to Created.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentProperty_LastModified">
            <summary>
              Looks up a localized string similar to Last Modified.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentProperty_LastModifiedBy">
            <summary>
              Looks up a localized string similar to Last Modified By.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentProperty_LastPrinted">
            <summary>
              Looks up a localized string similar to Last Printed.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentProperty_Manager">
            <summary>
              Looks up a localized string similar to Manager.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentProperty_RelatedDates">
            <summary>
              Looks up a localized string similar to Related Dates.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentProperty_RelatedDocuments">
            <summary>
              Looks up a localized string similar to Related Documents.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentProperty_RelatedPeople">
            <summary>
              Looks up a localized string similar to Related People.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentProperty_Subject">
            <summary>
              Looks up a localized string similar to Subject.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentProperty_Tag">
            <summary>
              Looks up a localized string similar to Tags.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DocumentProperty_Title">
            <summary>
              Looks up a localized string similar to Title.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.DoubleValueError">
            <summary>
              Looks up a localized string similar to Your entry cannot be used. An integer or decimal number may be required..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Edit">
            <summary>
              Looks up a localized string similar to Edit....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EditComment">
            <summary>
              Looks up a localized string similar to Edit Comment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Editing">
            <summary>
              Looks up a localized string similar to Edit Comment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EditLater">
            <summary>
              Looks up a localized string similar to Edit the new document later.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EditName">
            <summary>
              Looks up a localized string similar to Edit Name.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EditNow">
            <summary>
              Looks up a localized string similar to Edit the new document now.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EditObjs">
            <summary>
              Looks up a localized string similar to Edit objects.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EmailAddress">
            <summary>
              Looks up a localized string similar to E-mail address:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EncryptDescription">
            <summary>
              Looks up a localized string similar to Encrypt the contents of this file.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EncryptDocument">
            <summary>
              Looks up a localized string similar to Encrypt Document.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EncryptWithPassword">
            <summary>
              Looks up a localized string similar to Encrypt with Password.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EncryptWithPasswordDesc">
            <summary>
              Looks up a localized string similar to Require a password to open this workbook..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EndDate">
            <summary>
              Looks up a localized string similar to End date :.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EndDateError">
            <summary>
              Looks up a localized string similar to The date you entered for the End Date is invalid..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EndDateErrorText">
            <summary>
              Looks up a localized string similar to You must enter a End Date..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EndDateStartDateErrorText">
            <summary>
              Looks up a localized string similar to You must enter both a End Date and a Start Date.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EndTime">
            <summary>
              Looks up a localized string similar to End time:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EndTimeError">
            <summary>
              Looks up a localized string similar to The time you entered for the End Time is invalid..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EnterDate">
            <summary>
              Looks up a localized string similar to You must enter a Date..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EnterEndDate">
            <summary>
              Looks up a localized string similar to You must enter a End Date..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EnterEndTime">
            <summary>
              Looks up a localized string similar to You must enter a End Time..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EnterFormula">
            <summary>
              Looks up a localized string similar to You must enter a Formula..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EnterLength">
            <summary>
              Looks up a localized string similar to You must enter a Length..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EnterMaximum">
            <summary>
              Looks up a localized string similar to You must enter a Maximum.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EnterMinimum">
            <summary>
              Looks up a localized string similar to You must enter a Minimum..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EnterMinMaxValue">
            <summary>
              Looks up a localized string similar to You must enter both a Maximum and a Minimum. .
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EnterSource">
            <summary>
              Looks up a localized string similar to You must enter a Source..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EnterStartDate">
            <summary>
              Looks up a localized string similar to You must enter a Start Date..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EnterStartEndDate">
            <summary>
              Looks up a localized string similar to You must enter both an End Date and a Start Date..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EnterStartEndTime">
            <summary>
              Looks up a localized string similar to You must enter both an End Time and a Start Time..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EnterStartTime">
            <summary>
              Looks up a localized string similar to You must enter a Start Time..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EnterTime">
            <summary>
              Looks up a localized string similar to You must enter a Time..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EnterValue">
            <summary>
              Looks up a localized string similar to You must enter a Value..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EntireColumn">
            <summary>
              Looks up a localized string similar to Entire column.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EntireRow">
            <summary>
              Looks up a localized string similar to Entire row.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EqualTo">
            <summary>
              Looks up a localized string similar to Equal To....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Equalto_Lower">
            <summary>
              Looks up a localized string similar to equal to.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EqualToWindowDescription">
            <summary>
              Looks up a localized string similar to Format cells that are EQUAL TO:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EqualToWindowTitle">
            <summary>
              Looks up a localized string similar to Equal To.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ErrorAlert">
            <summary>
              Looks up a localized string similar to Error Alert.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ErrorAlertDescription">
            <summary>
              Looks up a localized string similar to When user enters invalid data, show this error alert:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ErrorMessage">
            <summary>
              Looks up a localized string similar to Error message:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ErrorMessage_DeleteSheet">
            <summary>
              Looks up a localized string similar to A workbook must contain atleast one visible sheet.                                  To hide, delete or move the selected sheet(s), you must first insert a new sheet or unhide a sheet which is already hidden..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.EssentialXlsio">
            <summary>
              Looks up a localized string similar to EssentialXlsio.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ExceedColumnWidthWarning">
            <summary>
              Looks up a localized string similar to Column width must be between 0 and 255 characters..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ExceedRowHeightWarning">
            <summary>
              Looks up a localized string similar to Row height must be between 0 and 409.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ExistingName">
            <summary>
              Looks up a localized string similar to Cannot rename a sheet to the same name as other sheet.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Exit">
            <summary>
              Looks up a localized string similar to Exit.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.File">
            <summary>
              Looks up a localized string similar to FILE.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Filter">
            <summary>
              Looks up a localized string similar to Filter.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FindError">
            <summary>
              Looks up a localized string similar to Find and Replace.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ReplaceError">
            <summary>
              Looks up a localized string similar to Find and Replace.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Find_CellsFoundDetail">
            <summary>
              Looks up a localized string similar to cell(s) found.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Find_GoToCellReferenceWarning">
            <summary>
              Looks up a localized string similar to This formula is missing a range reference or a defined name.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Find_RibbonItemsWarning">
            <summary>
              Looks up a localized string similar to No cells were found.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Find_GoToSheetReferenceWarning">
            <summary>
              Looks up a localized string similar to Reference isn't valid.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Find_GoTo">
            <summary>
              Looks up a localized string similar to Go to.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Find_GoToTitle">
            <summary>
              Looks up a localized string similar to Go To.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Find_Reference">
            <summary>
              Looks up a localized string similar to Reference.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Find_FindAndReplace">
            <summary>
              Looks up a localized string similar to Find and Replace.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Find_Find">
            <summary>
              Looks up a localized string similar to Find.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Find_ByRows">
            <summary>
              Looks up a localized string similar to By Rows.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Find_ByColumns">
            <summary>
              Looks up a localized string similar to By Columns.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Find_Workbook">
            <summary>
              Looks up a localized string similar to By Workbook.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Find_RibbonFind">
            <summary>
              Looks up a localized string similar to Find...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Find_FindAll">
            <summary>
              Looks up a localized string similar to Find All.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Find_FindNext">
            <summary>
              Looks up a localized string similar to Find Next.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Find_FindWhat">
            <summary>
              Looks up a localized string similar to Find What.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Find_RibbonGoTo">
            <summary>
              Looks up a localized string similar to GoTo.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Find_RibbonFormulas">
            <summary>
              Looks up a localized string similar to Formulas.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Find_RibbonComments">
            <summary>
              Looks up a localized string similar to Comments.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Find_RibbonConstants">
            <summary>
              Looks up a localized string similar to Constants.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Find_RibbonFindAndSelect">
            <summary>
              Looks up a localized string similar to Find And Select.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Find_Value">
            <summary>
              Looks up a localized string similar to Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Find_Cell">
            <summary>
              Looks up a localized string similar to Cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Find_Name">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Find_Book">
            <summary>
              Looks up a localized string similar to Book.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Font">
            <summary>
              Looks up a localized string similar to Font.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FontSizeError">
            <summary>
              Looks up a localized string similar to Font size must be between 1 and 409 points.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Format">
            <summary>
              Looks up a localized string similar to Format.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatAsTable">
            <summary>
              Looks up a localized string similar to Format as Table.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatAsTableDescription">
            <summary>
              Looks up a localized string similar to Where is the data for your table?.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatAsTableWindowTitle">
            <summary>
              Looks up a localized string similar to Format As Table.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCellAlignment">
            <summary>
              Looks up a localized string similar to Format Cell Alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Formatcells">
            <summary>
              Looks up a localized string similar to Format cells.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Accounting_Instruction">
            <summary>
              Looks up a localized string similar to Accounting formats line up the currency symbols and decimal points in a column..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_BackgroundColor">
            <summary>
              Looks up a localized string similar to Background Color:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Bold">
            <summary>
              Looks up a localized string similar to Bold.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_BoldItalic">
            <summary>
              Looks up a localized string similar to BoldItalic.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Border_FooterText">
            <summary>
              Looks up a localized string similar to The selected border style can be applied by clicking the presets, preview diagram or the buttons above..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Bottom">
            <summary>
              Looks up a localized string similar to Bottom.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Category">
            <summary>
              Looks up a localized string similar to Category:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Center">
            <summary>
              Looks up a localized string similar to Center.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Color">
            <summary>
              Looks up a localized string similar to Color:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Currency_Instruction">
            <summary>
              Looks up a localized string similar to Currency formats are used for general monetary values. Use Accounting formats to align decimal points in a column..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Custom_Instruction">
            <summary>
              Looks up a localized string similar to Type the number format code, using one of the existing codes as a starting point..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Date">
            <summary>
              Looks up a localized string similar to Date.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Date_Instruction">
            <summary>
              Looks up a localized string similar to Date formats display date and time serial numbers as date values. Date formats that begin with an asterisk(*) respond to changes in regional date and time settings that are specified for the operating system. Formats without an asterisk are not affected by operating system settings..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Datelist1">
            <summary>
              Looks up a localized string similar to * wednesday,March 14,2012.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Datelist2">
            <summary>
              Looks up a localized string similar to 14-Mar.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Datelist3">
            <summary>
              Looks up a localized string similar to 14-Mar-12.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Datelist4">
            <summary>
              Looks up a localized string similar to Mar-12.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Datelist5">
            <summary>
              Looks up a localized string similar to March-12.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Datelist6">
            <summary>
              Looks up a localized string similar to March 14,2012.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Datelist7">
            <summary>
              Looks up a localized string similar to 14-Mar-2012.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_DecimalPlaces">
            <summary>
              Looks up a localized string similar to Decimal places:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Degrees">
            <summary>
              Looks up a localized string similar to Degrees.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_DoubleUnderline">
            <summary>
              Looks up a localized string similar to Double.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Effects">
            <summary>
              Looks up a localized string similar to Effects.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Fill">
            <summary>
              Looks up a localized string similar to Fill.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Font">
            <summary>
              Looks up a localized string similar to Font:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Font_FooterText">
            <summary>
              Looks up a localized string similar to This is a true type font. The same font will be used on both your printer and your screen..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_FontSize">
            <summary>
              Looks up a localized string similar to Size:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_FontStyle">
            <summary>
              Looks up a localized string similar to Font Style:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_FractionType1">
            <summary>
              Looks up a localized string similar to Up to one digit(1/4).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_FractionType2">
            <summary>
              Looks up a localized string similar to Up to two digits(21/25).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_FractionType3">
            <summary>
              Looks up a localized string similar to Up to three digits(312/943).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_FractionType4">
            <summary>
              Looks up a localized string similar to As halves(1/2).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_FractionType5">
            <summary>
              Looks up a localized string similar to As quarters(2/4).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_FractionType6">
            <summary>
              Looks up a localized string similar to As eighths(4/8).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_FractionType7">
            <summary>
              Looks up a localized string similar to As sixteenths(8/16).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_FractionType8">
            <summary>
              Looks up a localized string similar to As tenths(3/10).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_FractionType9">
            <summary>
              Looks up a localized string similar to As hundredths(30/100).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_General_Instruction">
            <summary>
              Looks up a localized string similar to General format cells have no specific number format.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_HeaderFont">
            <summary>
              Looks up a localized string similar to Font.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Hidden">
            <summary>
              Looks up a localized string similar to Hidden.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Horizontal">
            <summary>
              Looks up a localized string similar to Horizontal:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Indent">
            <summary>
              Looks up a localized string similar to Indent:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Inside">
            <summary>
              Looks up a localized string similar to Inside.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Italic">
            <summary>
              Looks up a localized string similar to Italic.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Left">
            <summary>
              Looks up a localized string similar to Left.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_LeftIndent">
            <summary>
              Looks up a localized string similar to Left(Indent).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Line">
            <summary>
              Looks up a localized string similar to Line.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Locked">
            <summary>
              Looks up a localized string similar to Locked.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_NegativeNumber">
            <summary>
              Looks up a localized string similar to Negative number:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_NoColor">
            <summary>
              Looks up a localized string similar to No Color.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_None">
            <summary>
              Looks up a localized string similar to None.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_NormalFont">
            <summary>
              Looks up a localized string similar to Normal Font.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Number_Instruction">
            <summary>
              Looks up a localized string similar to Number is used for general display of numbers. Currency And Accounting offer specialized formatting for monetary value..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Outline">
            <summary>
              Looks up a localized string similar to Outline.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Percentage_Instruction">
            <summary>
              Looks up a localized string similar to Percentage formats multiply the cell value by 100 and display the result with a percent symbol..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Presets">
            <summary>
              Looks up a localized string similar to Presets.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Preview">
            <summary>
              Looks up a localized string similar to Preview.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Protection">
            <summary>
              Looks up a localized string similar to Protection.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Protection_FooterText">
            <summary>
              Looks up a localized string similar to Locking cells or hiding formulas has no effect untill you protect the worksheet(View tab,Protect sheet button)..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Regular">
            <summary>
              Looks up a localized string similar to Regular.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Right">
            <summary>
              Looks up a localized string similar to Right.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_RightIndent">
            <summary>
              Looks up a localized string similar to Right(Indent).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Sample">
            <summary>
              Looks up a localized string similar to Sample.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_SeparatorText">
            <summary>
              Looks up a localized string similar to Use 1000 Separator (,).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Single">
            <summary>
              Looks up a localized string similar to Single.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Special_Instruction">
            <summary>
              Looks up a localized string similar to Special formats are useful for tracking list and database values..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Special1">
            <summary>
              Looks up a localized string similar to Zip Code.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Special2">
            <summary>
              Looks up a localized string similar to Zip Code +4.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Special3">
            <summary>
              Looks up a localized string similar to Phone Number.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Special4">
            <summary>
              Looks up a localized string similar to Social Security Number.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Strikethrough">
            <summary>
              Looks up a localized string similar to Strikethrough.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Style">
            <summary>
              Looks up a localized string similar to Style:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Symbol">
            <summary>
              Looks up a localized string similar to Symbol:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_TextAlignment">
            <summary>
              Looks up a localized string similar to Text Alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_TextControl">
            <summary>
              Looks up a localized string similar to Text Control.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Time_Instruction">
            <summary>
              Looks up a localized string similar to Time formats display date and time serial numbers as date values. Date formats that begin with an asterisk(*) respond to changes in regional date and time settings that are specified for the operating system. Formats without an asterisk are not affected by operating system settings..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Title">
            <summary>
              Looks up a localized string similar to Format Cells.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Top">
            <summary>
              Looks up a localized string similar to Top.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Type">
            <summary>
              Looks up a localized string similar to Type:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Underline">
            <summary>
              Looks up a localized string similar to Underline:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCells_Vertical">
            <summary>
              Looks up a localized string similar to Vertical:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatCols">
            <summary>
              Looks up a localized string similar to Format columns.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormatRows">
            <summary>
              Looks up a localized string similar to Format rows.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Formula">
            <summary>
              Looks up a localized string similar to Formula.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormulaBar">
            <summary>
              Looks up a localized string similar to Formula Bar.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FormulaError">
            <summary>
              Looks up a localized string similar to The formula you typed contains an error..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Formulas">
            <summary>
              Looks up a localized string similar to Formulas.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Fraction">
            <summary>
              Looks up a localized string similar to Fraction.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Freeze">
            <summary>
              Looks up a localized string similar to Freeze.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FreezeFirstColumn">
            <summary>
              Looks up a localized string similar to Freeze First Column.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FreezeFirstColumnDescription">
            <summary>
              Looks up a localized string similar to Keep the first column visible while scrolling through the rest of the worksheet.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FreezePanes">
            <summary>
              Looks up a localized string similar to Freeze Panes.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FreezePanesDescription">
            <summary>
              Looks up a localized string similar to Keep rows and columns visible while the rest of the worksheet scrolls(based on current selection)..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FreezeTopRow">
            <summary>
              Looks up a localized string similar to Freeze Top Row.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FreezeTopRowDescription">
            <summary>
              Looks up a localized string similar to Keep the top row visible while scrolling through the rest of the worksheet..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.FullPath">
            <summary>
              Looks up a localized string similar to FullPath:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.General">
            <summary>
              Looks up a localized string similar to General.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.GoodBadNeutral">
            <summary>
              Looks up a localized string similar to Good, Bad and Neutral.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.GradientFill">
            <summary>
              Looks up a localized string similar to Gradient Fill.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.GreaterThan">
            <summary>
              Looks up a localized string similar to Greater Than....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.GreaterThan_Lower">
            <summary>
              Looks up a localized string similar to greater than.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.GreaterThanOrEqualTo_Lower">
            <summary>
              Looks up a localized string similar to greater than or equal to.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.GreaterThanWindowDescription">
            <summary>
              Looks up a localized string similar to Format cells that are GREATER THAN: .
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.GreaterThanWindowTitle">
            <summary>
              Looks up a localized string similar to Greater Than.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.GreenFillWithDarkGreenText">
            <summary>
              Looks up a localized string similar to Green Fill with Dark Green Text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Gridlines">
            <summary>
              Looks up a localized string similar to Gridlines.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Group">
            <summary>
              Looks up a localized string similar to Group.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.H_Workbook">
            <summary>
              Looks up a localized string similar to Workbook.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.H_www">
            <summary>
              Looks up a localized string similar to www..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.H_Xlsx">
            <summary>
              Looks up a localized string similar to .xlsx.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.H_Xlsx2">
            <summary>
              Looks up a localized string similar to (xlsx).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Headings">
            <summary>
              Looks up a localized string similar to Headings.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Hide">
            <summary>
              Looks up a localized string similar to Hide.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HideAndUnhide">
            <summary>
              Looks up a localized string similar to Hide &amp; Unhide.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HideColumns">
            <summary>
              Looks up a localized string similar to Hide Columns.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HideRows">
            <summary>
              Looks up a localized string similar to Hide Rows.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HideSheet">
            <summary>
              Looks up a localized string similar to Hide Sheet.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HighlightCellRules">
            <summary>
              Looks up a localized string similar to Highlight Cells Rules.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_BrowseFilter">
            <summary>
              Looks up a localized string similar to Office Files.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_Change">
            <summary>
              Looks up a localized string similar to Change....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_DefaultCell">
            <summary>
              Looks up a localized string similar to A1.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_Document">
            <summary>
              Looks up a localized string similar to Create New Document.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_EditLater">
            <summary>
              Looks up a localized string similar to Edit the new document later.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_EditNow">
            <summary>
              Looks up a localized string similar to Edit the new document now.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_EditWindowName">
            <summary>
              Looks up a localized string similar to Edit Hyperlink.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_EmailAddress">
            <summary>
              Looks up a localized string similar to E-mail address:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_Exist">
            <summary>
              Looks up a localized string similar to Existing File or Web Page.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_File">
            <summary>
              Looks up a localized string similar to File.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_FullPath">
            <summary>
              Looks up a localized string similar to Full path:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_HyperlinkAddress">
            <summary>
              Looks up a localized string similar to Address:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_InsertWindowName">
            <summary>
              Looks up a localized string similar to Insert Hyperlink.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_LinkTo">
            <summary>
              Looks up a localized string similar to Link to:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_Mail">
            <summary>
              Looks up a localized string similar to E-mail Address.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_MailTo">
            <summary>
              Looks up a localized string similar to mailto.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_Nameofnewdocument">
            <summary>
              Looks up a localized string similar to Name of new document:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_Reference">
            <summary>
              Looks up a localized string similar to Place in This Document.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_RemoveLink">
            <summary>
              Looks up a localized string similar to Remove Link.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_ScreenTip">
            <summary>
              Looks up a localized string similar to ScreenTip:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_SelectInDocument">
            <summary>
              Looks up a localized string similar to &lt;&lt;Selection in Document&gt;&gt;.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_Subject">
            <summary>
              Looks up a localized string similar to Subject:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_TexttoDisplay">
            <summary>
              Looks up a localized string similar to Text to display:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_ToolTip">
            <summary>
              Looks up a localized string similar to Click once to follow .
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_Typethecellreference">
            <summary>
              Looks up a localized string similar to Type the cell reference:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HLink_Whentoedit">
            <summary>
              Looks up a localized string similar to When to edit:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Home">
            <summary>
              Looks up a localized string similar to HOME.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Hyperlink">
            <summary>
              Looks up a localized string similar to Hyperlink.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HyperlinkAddress">
            <summary>
              Looks up a localized string similar to Address:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HyperlinkCancel">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.HyperlinkOk">
            <summary>
              Looks up a localized string similar to OK.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Hyperlinks">
            <summary>
              Looks up a localized string similar to Hyperlinks.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.IconSets">
            <summary>
              Looks up a localized string similar to Icon Sets.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.IgnoreBlank">
            <summary>
              Looks up a localized string similar to Ignore blank.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Illustrations">
            <summary>
              Looks up a localized string similar to Illustrations.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.InCellDropDown">
            <summary>
              Looks up a localized string similar to In-cell Dropdown.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Incorrect">
             <summary>
               Looks up a localized string similar to You typed invalid name for a sheet. Make sure that:
            
            1. The name that you type does not exceed 31 characters.
            2. The name does not contain any of following characters:  : \ / ? * [ or ]
            3. You did not leave the name blank..
             </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.IncreaseIndent">
            <summary>
              Looks up a localized string similar to IncreaseIndent.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Info">
            <summary>
              Looks up a localized string similar to Info.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Information">
            <summary>
              Looks up a localized string similar to Information.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.InformationAbout">
            <summary>
              Looks up a localized string similar to Information about.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.InputMessage">
            <summary>
              Looks up a localized string similar to Input Message.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Inputmessagedesc">
            <summary>
              Looks up a localized string similar to Input message:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.InputmessageDescription">
            <summary>
              Looks up a localized string similar to When cell is selected, show this input message:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.InsCols">
            <summary>
              Looks up a localized string similar to Insert columns.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Insert">
            <summary>
              Looks up a localized string similar to Insert.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.InsertCells">
            <summary>
              Looks up a localized string similar to Insert Cells....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.InsertColumn">
            <summary>
              Looks up a localized string similar to Insert Sheet Columns.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.InsertDeleteCellsError">
            <summary>
              Looks up a localized string similar to Unable to perform this action on multiple ranges. Select a single range and try again..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.InsertRow">
            <summary>
              Looks up a localized string similar to Insert Sheet Rows.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.InsertSheet">
            <summary>
              Looks up a localized string similar to Insert Sheet.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.InsHyper">
            <summary>
              Looks up a localized string similar to Insert hyperlinks.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.InsRows">
            <summary>
              Looks up a localized string similar to Insert rows.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Inthelast7days">
            <summary>
              Looks up a localized string similar to In the last 7 days.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.IsSummaryColumnAtRight">
            <summary>
              Looks up a localized string similar to Summary columns to right of detail.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.IsSummaryRowBelow">
            <summary>
              Looks up a localized string similar to Summary rows below detail.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.LastMonth">
            <summary>
              Looks up a localized string similar to Last Month.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.LastWeek">
            <summary>
              Looks up a localized string similar to Last Week.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.LeftAlign">
            <summary>
              Looks up a localized string similar to LeftAlign.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.LeftBorder">
            <summary>
              Looks up a localized string similar to Left Border.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Length">
            <summary>
              Looks up a localized string similar to Length:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.LessThan">
            <summary>
              Looks up a localized string similar to Less Than....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Lessthan_Lower">
            <summary>
              Looks up a localized string similar to less than.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.LessThanOrEqualTo_Lower">
            <summary>
              Looks up a localized string similar to less than or equal to.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.LessThanWindowDescription">
            <summary>
              Looks up a localized string similar to Format cells that are LESS THAN:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.LessThanWindowTitle">
            <summary>
              Looks up a localized string similar to Less Than.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.LightRedFill">
            <summary>
              Looks up a localized string similar to Light Red Fill.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.LightRedFillWithDarkRedText">
            <summary>
              Looks up a localized string similar to Light Red Fill with Dark Red Text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Links">
            <summary>
              Looks up a localized string similar to Links.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.LinkTo">
            <summary>
              Looks up a localized string similar to LinkTo:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.List">
            <summary>
              Looks up a localized string similar to List.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.LockCell">
            <summary>
              Looks up a localized string similar to Lock Cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Find_Lookin">
            <summary>
              Looks up a localized string similar to Look in.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Locked">
            <summary>
              Looks up a localized string similar to Select locked cells.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.LongDate">
            <summary>
              Looks up a localized string similar to Long Date.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Mail">
            <summary>
              Looks up a localized string similar to E-Mail Address.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Find_MatchCase">
            <summary>
              Looks up a localized string similar to Match case.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Find_MatchEntireCellContents">
            <summary>
              Looks up a localized string similar to Match entire cell contents.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Maximum">
            <summary>
              Looks up a localized string similar to Maximum :.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.MaximumErrorText">
            <summary>
              Looks up a localized string similar to You must enter a Maximum..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.MaxNumericValueError">
            <summary>
              Looks up a localized string similar to The Maximum must be a numeric value, numeric expression, or refer to a cell containing a numeric value..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.MergeAcross">
            <summary>
              Looks up a localized string similar to Merge Across.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.MergeAndCenter">
            <summary>
              Looks up a localized string similar to Merge &amp; Center.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.MergeCells">
            <summary>
              Looks up a localized string similar to Merge Cells.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.MiddleAlign">
            <summary>
              Looks up a localized string similar to MiddleAlign.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Minimum">
            <summary>
              Looks up a localized string similar to Minimum :.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.MinimumErrorText">
            <summary>
              Looks up a localized string similar to You must enter a Minimum..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.MinimumMaximumErrorText">
            <summary>
              Looks up a localized string similar to You must enter both a Maximum and a Minimum..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.MinMaxDateError">
            <summary>
              Looks up a localized string similar to The End Date must be greater than or equal to the Start Date..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.MinMaxError">
            <summary>
              Looks up a localized string similar to The Maximum must be greater than or equal to the Minimum..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.MinMaxTimeError">
            <summary>
              Looks up a localized string similar to The End Time must be greater than or equal to Start Time..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.MinNumericValueError">
            <summary>
              Looks up a localized string similar to The Minimum must be a numeric value, numeric expression, or refer to a cell containing a numeric value..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.MoreBorders">
            <summary>
              Looks up a localized string similar to More Borders....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.MultipleSelectionsError">
            <summary>
              Looks up a localized string similar to The command you chose cannot be performed with multiple selections. Select a single range and click the command again..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Name">
            <summary>
              Looks up a localized string similar to Name:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.NameAlreadyExist">
            <summary>
              Looks up a localized string similar to The name entered already exists. Enter a unique name..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.NameManager">
            <summary>
              Looks up a localized string similar to Name Manager.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Nameofnewdocument">
            <summary>
              Looks up a localized string similar to Name of new document:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.NameRangeError">
            <summary>
              Looks up a localized string similar to A named range you specified cannot be found..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.NamesScopedtoWorkbook">
            <summary>
              Looks up a localized string similar to Names Scoped to Workbook.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.NamesScopedtoWorksheet">
            <summary>
              Looks up a localized string similar to Names Scoped to Worksheet.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.NameswithErrors">
            <summary>
              Looks up a localized string similar to Names with Errors.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.NameswithoutErrors">
            <summary>
              Looks up a localized string similar to Names without Errors.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.New">
            <summary>
              Looks up a localized string similar to New.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.NewComment">
            <summary>
              Looks up a localized string similar to New Comment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.NewName">
            <summary>
              Looks up a localized string similar to New....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.NewNameRange">
            <summary>
              Looks up a localized string similar to New Name.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.NextMonth">
            <summary>
              Looks up a localized string similar to Next Month.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.NextWeek">
            <summary>
              Looks up a localized string similar to Next Week.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.NoBorder">
            <summary>
              Looks up a localized string similar to No Border.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.NotBetween">
            <summary>
              Looks up a localized string similar to Not Between.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Notbetween_Lower">
            <summary>
              Looks up a localized string similar to not between.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.NotBetweenWindowDescription">
            <summary>
              Looks up a localized string similar to Format cells that are NOT BETWEEN:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.NotBetweenWindowTitle">
            <summary>
              Looks up a localized string similar to Not Between.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.NotEqualTo_Lower">
            <summary>
              Looks up a localized string similar to not equal to.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.NotSavedYet">
            <summary>
              Looks up a localized string similar to Not saved yet.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Number">
            <summary>
              Looks up a localized string similar to Number.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.NumberFormat">
            <summary>
              Looks up a localized string similar to Number Format.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.NumericValueError">
            <summary>
              Looks up a localized string similar to The Value must be a numeric value, numeric expression, or refer to a cell containing a numeric value..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Ok">
            <summary>
              Looks up a localized string similar to OK.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Open">
            <summary>
              Looks up a localized string similar to Open.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.OpenFileLocation">
            <summary>
              Looks up a localized string similar to Open File Location.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.OrganizeSheets">
            <summary>
              Looks up a localized string similar to Organize Sheets.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Others">
            <summary>
              Looks up a localized string similar to Others.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Outline">
            <summary>
              Looks up a localized string similar to Outline.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.OutSideBorder">
            <summary>
              Looks up a localized string similar to Outside Borders.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Password">
            <summary>
              Looks up a localized string similar to Password (optional):.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.PasswordTitle">
            <summary>
              Looks up a localized string similar to Password.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.PasswordtoUnProtect">
            <summary>
              Looks up a localized string similar to Password:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Paste">
            <summary>
              Looks up a localized string similar to Paste.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.PasteOptions">
            <summary>
              Looks up a localized string similar to Paste Options:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Percentage">
            <summary>
              Looks up a localized string similar to Percentage.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Permissions">
            <summary>
              Looks up a localized string similar to Permissions.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.PermissionsDescription">
            <summary>
              Looks up a localized string similar to PermissionsDescription.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Picture">
            <summary>
              Looks up a localized string similar to Picture.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Protect">
            <summary>
              Looks up a localized string similar to Protect Sheet....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectCurrentSheet">
            <summary>
              Looks up a localized string similar to Protect Current Sheet.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectCurrentSheetDesc">
            <summary>
              Looks up a localized string similar to Control what types of changes people can make to the current sheet..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Protection">
            <summary>
              Looks up a localized string similar to Protection.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectOptions_Deletecolumns">
            <summary>
              Looks up a localized string similar to Delete columns.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectOptions_Deleterows">
            <summary>
              Looks up a localized string similar to Delete rows.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectOptions_EditObjects">
            <summary>
              Looks up a localized string similar to Edit objects.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectOptions_Formatcells">
            <summary>
              Looks up a localized string similar to Format cells.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectOptions_Formatcolumns">
            <summary>
              Looks up a localized string similar to Format columns.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectOptions_Formatrows">
            <summary>
              Looks up a localized string similar to Format rows.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectOptions_Insertcolumns">
            <summary>
              Looks up a localized string similar to Insert columns.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectOptions_InsertHyperlink">
            <summary>
              Looks up a localized string similar to Insert hyperlinks.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectOptions_Insertrows">
            <summary>
              Looks up a localized string similar to Insert rows.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectOptions_Locked">
            <summary>
              Looks up a localized string similar to Select locked cells.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectOptions_Unlocked">
            <summary>
              Looks up a localized string similar to Select unlocked cells.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectSheet">
            <summary>
              Looks up a localized string similar to Protect Sheet.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectSheetDesc">
            <summary>
              Looks up a localized string similar to Protect worksheet and contents of locked cells.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectSheetDescription">
            <summary>
              Looks up a localized string similar to Password to unprotect sheet:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectSheetLabel">
            <summary>
              Looks up a localized string similar to Allow all users of this worksheet to:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectSheetLarge">
            <summary>
              Looks up a localized string similar to Protect Sheet.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectWorkbook">
            <summary>
              Looks up a localized string similar to Protect Workbook.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectWorkbookDescription">
            <summary>
              Looks up a localized string similar to Protect workbook for.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectWorkbookDescriptionText">
            <summary>
              Looks up a localized string similar to Password:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectWorkbookStructure">
            <summary>
              Looks up a localized string similar to Protect Workbook Structure.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectWorkbookStructureDesc">
            <summary>
              Looks up a localized string similar to Prevent unwanted changes to the structure of the workbook, such as adding sheets..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectWorkbookText">
            <summary>
              Looks up a localized string similar to Control what type of changes people can make to this workbook.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ProtectWorkbookTitle">
            <summary>
              Looks up a localized string similar to Protect Structure and Windows.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.RedBorder">
            <summary>
              Looks up a localized string similar to Red Border.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.RedText">
            <summary>
              Looks up a localized string similar to Red Text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Reference">
            <summary>
              Looks up a localized string similar to Place in This Document.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ReferenceError">
            <summary>
              Looks up a localized string similar to This type of reference cannot be used in a Data Validation formula.  Change the reference to a single cell, or use a reference with worksheet function, such as =SUM(A1:E5)..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Refers_To">
            <summary>
              Looks up a localized string similar to Refers to:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.RemoveLink">
            <summary>
              Looks up a localized string similar to RemoveLink.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Rename">
            <summary>
              Looks up a localized string similar to Rename.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ReplaceProtectedSheetWarning">
            <summary>
             You cannot use this command on a protected sheet, you must first unprotect the sheet (View tab, Unprotect the sheet button). You may prompted for a password.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ReplaceAllWarning">
            <summary>
              Looks up a localized string similar to We couldn't find anything to replace. Click options for more ways to search.
              FYI: It's possible data you're trying to replace is in a protected sheet. Can't relace data in protected sheet.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ReplaceAllStartMessage">
            <summary>
              Looks up a localized string similar to All done. We made
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ReplaceAllEndMessage">
            <summary>
              Looks up a localized string similar to replacements.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.RenameSheet">
            <summary>
              Looks up a localized string similar to Rename Sheet.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Find_OptionsExpand">
            <summary>
              Looks up a localized string similar to Options>>.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Find_OptionsCollapse" -->
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Find_Replace">
            <summary>
              Looks up a localized string similar to Replace.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Find_RibbonReplace">
            <summary>
              Looks up a localized string similar to Replace...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Find_ReplaceAll">
            <summary>
              Looks up a localized string similar to Replace All.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Find_ReplaceWith">
            <summary>
              Looks up a localized string similar to Replace With.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Retry">
            <summary>
              Looks up a localized string similar to Retry.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.RightAlign">
            <summary>
              Looks up a localized string similar to RightAlign.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.RightBorder">
            <summary>
              Looks up a localized string similar to Right Border.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.RotateTextDown">
            <summary>
              Looks up a localized string similar to Rotate Text Down.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.RotateTextUp">
            <summary>
              Looks up a localized string similar to Rotate Text Up.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.RowHeight">
            <summary>
              Looks up a localized string similar to Row Height....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.RowHeightDescription">
            <summary>
              Looks up a localized string similar to Row height:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.RowHeightTitle">
            <summary>
              Looks up a localized string similar to Row Height.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Rows">
            <summary>
              Looks up a localized string similar to Rows.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Save">
            <summary>
              Looks up a localized string similar to Save.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.SaveAs">
            <summary>
              Looks up a localized string similar to Save As.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.SaveChanges">
            <summary>
              Looks up a localized string similar to Do you want to save changes you made to the name reference?.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Scientific">
            <summary>
              Looks up a localized string similar to Scientific.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Scope">
            <summary>
              Looks up a localized string similar to Scope:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ScreenTip">
            <summary>
              Looks up a localized string similar to ScreenTip:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Find_Search">
            <summary>
              Looks up a localized string similar to Search.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.SelectAll">
            <summary>
              Looks up a localized string similar to Test.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Settings">
            <summary>
              Looks up a localized string similar to Settings.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Sheet">
            <summary>
              Looks up a localized string similar to Sheet.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.SheetProtected">
            <summary>
              Looks up a localized string similar to The Cell that you are trying to change is Protected and therefore read only.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ShortDate">
            <summary>
              Looks up a localized string similar to Short Date.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Show">
            <summary>
              Looks up a localized string similar to Show.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ShowAllProperties">
            <summary>
              Looks up a localized string similar to Show All Properties.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ShowErrorMessage">
            <summary>
              Looks up a localized string similar to Show error alert after invalid data is entered.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ShowFewerProperties">
            <summary>
              Looks up a localized string similar to Show Fewer Properties.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ShowInputMessage">
            <summary>
              Looks up a localized string similar to Show input message when cell is selected.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.SolidFill">
            <summary>
              Looks up a localized string similar to Solid Fill.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Source">
            <summary>
              Looks up a localized string similar to Source :.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.SourceErrorText">
            <summary>
              Looks up a localized string similar to You must enter the Source..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Special">
            <summary>
              Looks up a localized string similar to Special.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.StandardWidth">
            <summary>
              Looks up a localized string similar to Standard Width.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.StandardWidthError">
            <summary>
              Looks up a localized string similar to Your entry cannot be used. An integer or decimal number may be required..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.StandardWidthText">
            <summary>
              Looks up a localized string similar to Standard column width:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.StartDate">
            <summary>
              Looks up a localized string similar to Start date :.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.StartDateError">
            <summary>
              Looks up a localized string similar to The date you entered for the Start Date is invalid..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.StartDateErrorText">
            <summary>
              Looks up a localized string similar to You must enter a Start Date..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.StartTime">
            <summary>
              Looks up a localized string similar to Start time:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.StartTimeError">
            <summary>
              Looks up a localized string similar to The time you entered for the Start Time is invalid..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Stop">
            <summary>
              Looks up a localized string similar to Stop.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.String1">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Structure">
            <summary>
              Looks up a localized string similar to Structure.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Style">
            <summary>
              Looks up a localized string similar to Style:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Styles">
            <summary>
              Looks up a localized string similar to Styles.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Subject">
            <summary>
              Looks up a localized string similar to Subject.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.TableFormat_CheckBoxContent">
            <summary>
              Looks up a localized string similar to My table has headers.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.TableFormatDark">
            <summary>
              Looks up a localized string similar to Dark.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.TableFormatLight">
            <summary>
              Looks up a localized string similar to Light.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.TableFormatMedium">
            <summary>
              Looks up a localized string similar to Medium.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.TableFormatTextBlockText">
            <summary>
              Looks up a localized string similar to Where is the data for your table?.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.TableNames">
            <summary>
              Looks up a localized string similar to Table Names.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.TextContains">
            <summary>
              Looks up a localized string similar to Text that Contains....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.TextLength">
            <summary>
              Looks up a localized string similar to Text Length.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.TexttoDisplay">
            <summary>
              Looks up a localized string similar to Text to Display:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ThemedCellStyles">
            <summary>
              Looks up a localized string similar to Themed Cell Styles.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ThickBottomBorder">
            <summary>
              Looks up a localized string similar to Thick Bottom Border.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ThickBoxBorder">
            <summary>
              Looks up a localized string similar to Thick Box Border.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ThisMonth">
            <summary>
              Looks up a localized string similar to This Month.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ThisWeek">
            <summary>
              Looks up a localized string similar to This Week.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Time">
            <summary>
              Looks up a localized string similar to Time.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.TimeError">
            <summary>
              Looks up a localized string similar to The time you entered for the Time is invalid..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Title">
            <summary>
              Looks up a localized string similar to Title:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.TitlesAndHeadings">
            <summary>
              Looks up a localized string similar to Titles and Headings.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Today">
            <summary>
              Looks up a localized string similar to Today.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Tomorrow">
            <summary>
              Looks up a localized string similar to Tomorrow.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.TopAlign">
            <summary>
              Looks up a localized string similar to TopAlign.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.TopAndBottomBorder">
            <summary>
              Looks up a localized string similar to Top And Bottom Border.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.TopandThickBottomBorder">
            <summary>
              Looks up a localized string similar to Top and Thick Bottom Border.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.TopBorder">
            <summary>
              Looks up a localized string similar to Top Border.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Typethecellreference">
            <summary>
              Looks up a localized string similar to Type the cell reference:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.UnfreezePanes">
            <summary>
              Looks up a localized string similar to Unfreeze Panes.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.UnfreezePanesDescription">
            <summary>
              Looks up a localized string similar to Unlock all rows and columns to scroll through the entire worksheet..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Ungroup">
            <summary>
              Looks up a localized string similar to Ungroup.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.UngroupError">
            <summary>
              Looks up a localized string similar to Cannot ungroup. To start an outline, select the detail rows or columns and group them..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.UnHide">
            <summary>
              Looks up a localized string similar to UnHide....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.UnHideColumns">
            <summary>
              Looks up a localized string similar to Unhide Columns.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.UnHideDescription">
            <summary>
              Looks up a localized string similar to Select the Sheet to be hided.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.UnHideRows">
            <summary>
              Looks up a localized string similar to Unhide Rows.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.UnHideSheet">
            <summary>
              Looks up a localized string similar to Unhide Sheet....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.UnhideSheet_Title">
            <summary>
              Looks up a localized string similar to Unhide.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.UnHideSheetDescription">
            <summary>
              Looks up a localized string similar to Unhide Sheet:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Unlocked">
            <summary>
              Looks up a localized string similar to Select unlocked cells.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.UnMergeCells">
            <summary>
              Looks up a localized string similar to Unmerge Cells.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.UnProtect">
            <summary>
              Looks up a localized string similar to UnProtect Sheet....
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.UnProtectSheet">
            <summary>
              Looks up a localized string similar to Unprotect Sheet.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.UnProtectSheetDesc">
            <summary>
              Looks up a localized string similar to Enter Password to UnProtect the Sheet.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.UnprotectWorkbookTitle">
            <summary>
              Looks up a localized string similar to Unprotect Workbook.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Validation_Edit_NameRanges">
            <summary>
              Looks up a localized string similar to The name you entered is invalid. Reasons for this can include :                  1.The name does not begin with a letter or underscore.                              2.The name contains white spaces or special characters.                          3.The name conflicts with an Excel built-in name or the name of another object in the workbook..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Validation_Edit_NameRanges_Refers_To">
            <summary>
              Looks up a localized string similar to The Formula you typed contains an error..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationCriteria">
            <summary>
              Looks up a localized string similar to Validation criteria.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_ClipboardPaste">
            <summary>
              Looks up a localized string similar to The data you&apos;re pasting isn&apos;t the same size as your selection, Do you want to paste anyway?.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_ContainsMutidatavalidation1">
            <summary>
              Looks up a localized string similar to The selection contains more than one type of validation..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_ContainsMutidatavalidation2">
            <summary>
              Looks up a localized string similar to Erase current settings and continue.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_ContainsValidationWithNormalCell">
            <summary>
              Looks up a localized string similar to The selection contains some cells without Data Validation settings. Do you want to extend Data Validation to these results?.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_CreateFiles">
            <summary>
              Looks up a localized string similar to No procedure for creating files of this type is registered with the shell.Do you want to create an empty file.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_CutTablePartially">
            <summary>
              Looks up a localized string similar to This operation is not allowed.The operation is attempting to shift cells in a table on your worksheet.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_DeleteSheet">
            <summary>
              Looks up a localized string similar to You can&apos;t undo deleting sheets, and you might be removing some data. If you don&apos;t need it, click OK..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_EnteredInvalidData">
            <summary>
              Looks up a localized string similar to The value you entered is not a valid number, date, time or string .
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_EnterValidRange">
            <summary>
              Looks up a localized string similar to Enter a valid Range.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_Error">
            <summary>
              Looks up a localized string similar to Error.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_FileExist1">
            <summary>
              Looks up a localized string similar to You already have a file named.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_FileExist2">
            <summary>
              Looks up a localized string similar to Do you want to replace it with this one.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_FileOpen">
            <summary>
              Looks up a localized string similar to Cannot open the specified file..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_InavalidFile">
            <summary>
              Looks up a localized string similar to Invalid file name.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_InCorrectPassword">
            <summary>
              Looks up a localized string similar to The password you supplied is not correct. Verify that the CAPS LOCK key is off and be sure to use correct capitalization..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_InvalidFileVersion">
            <summary>
              Looks up a localized string similar to File version is not supported.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_InvalidRerence">
            <summary>
              Looks up a localized string similar to Reference is not valid.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_MergeCells">
            <summary>
              Looks up a localized string similar to We can&apos;t do that to a merged cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_MergeCutCells">
            <summary>
              Looks up a localized string similar to This operation will cause some merged cells to unmerge, Do you wish to continue?.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_MergedTableFormat">
            <summary>
              Looks up a localized string similar to This operation was not allowed. Merging over the table format cells was restricted..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_MultipleSelections">
            <summary>
              Looks up a localized string similar to That command cannot be used on multiple selections.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_NotEnoughSpaceToPaste">
            <summary>
              Looks up a localized string similar to We can&apos;t paste because the Copy area and paste area aren&apos;t the same size.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_ReadOnlyCells">
            <summary>
              Looks up a localized string similar to The cell that you are trying to change is on a protected sheet and therefore readonly..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_SaveChanges">
            <summary>
              Looks up a localized string similar to Do you want to save changes that you made to this file?.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_TableFormatInvalidFormula">
            <summary>
              Looks up a localized string similar to We found problem with this formula. We couldn&apos;t find a range reference or a defined name..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidationMessage_TableFormatInvalidRange">
            <summary>
              Looks up a localized string similar to This operation is not allowed. The operation is attempting to shift cells in a table on your worksheet..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValidNameRange">
            <summary>
              Looks up a localized string similar to You must enter a Valid reference you want to go to, or type a valid name for selection.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Value">
            <summary>
              Looks up a localized string similar to Value:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.ValueErrorText">
            <summary>
              Looks up a localized string similar to You must enter a Value..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.View">
            <summary>
              Looks up a localized string similar to VIEW.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Visibility">
            <summary>
              Looks up a localized string similar to Visisbility.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Warning">
            <summary>
              Looks up a localized string similar to Warning.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Warning_GroupingWholeTable">
            <summary>
              Looks up a localized string similar to Cannot Group the Whole Table. To start an outline, select the detail rows or columns and group them..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Web">
            <summary>
              Looks up a localized string similar to Existing File or Web Page.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Whentoedit">
            <summary>
              Looks up a localized string similar to When to edit:.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.WholeNumber">
            <summary>
              Looks up a localized string similar to Whole number.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.WholeNumberError">
            <summary>
              Looks up a localized string similar to Decimal values cannot be used for Whole Number conditions..
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Window">
            <summary>
              Looks up a localized string similar to Window.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Windows">
            <summary>
              Looks up a localized string similar to Windows.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.With">
            <summary>
              Looks up a localized string similar to with.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Find_Within">
            <summary>
              Looks up a localized string similar to Within.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.WrapText">
            <summary>
              Looks up a localized string similar to Wrap Text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.WrongPassword">
            <summary>
              Looks up a localized string similar to The Password you supplied is not correct. Verify that CAPSLOCK is off and try again.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.YellowFillWithDarkYellowText">
            <summary>
              Looks up a localized string similar to Yellow Fill with Dark Yellow Text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.Resources.Syncfusion_SfSpreadsheet_Wpf.Yesterday">
            <summary>
              Looks up a localized string similar to Yesterday.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.IndexToBoolConverter">
            <summary>
            Converts the integer value to bool value.
            </summary>
            <remarks>if the value is not equal to "AnyValue" returns true; otherwise false.</remarks>   
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.IndexToBoolConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="value">The value produced by the binding source.</param>
            <param name="language"></param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.IndexToBoolConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="language"></param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.StringToBoolConverter">
            <summary>
            Converts the string value to bool value.
            </summary>
            <remarks>if the value is not equal to "AnyValue" returns true; otherwise false.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.StringToBoolConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="value">The value produced by the binding source.</param>
            <param name="language"></param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.StringToBoolConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Not implemented in this converter; will throw an exception if invoked.
            </summary>      
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.StringToVisibilityConverter">
            <summary>
            Converts the string value to visibility state for the binding object(MinValue TextBox).
            </summary>  
            <remarks> Converts <see cref="T:System.String"/> 
            to <see cref="N:System.Windows"/> or vice versa based on the value.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.StringToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="value">The value produced by the binding source.</param>
            <param name="language"></param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.StringToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Not implemented in this converter; will throw an exception if invoked.
            </summary> 
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.StringToVisibilityforMinValue">
            <summary>
            Converts the string value to visibility state for the binding object(MinValue TextBox).
            </summary>  
            <remarks> Converts <see cref="T:System.String"/> 
            to <see cref="N:System.Windows"/> or vice versa based on the value.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.StringToVisibilityforMinValue.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="value">The value produced by the binding source.</param>
            <param name="language"></param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.StringToVisibilityforMinValue.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Not implemented in this converter; will throw an exception if invoked.
            </summary> 
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.StringToVisibiltyforMaxValue">
            <summary>
            Converts the string value to visibility state for the binding object(MaxValue TextBox).
            </summary>  
            <remarks> Converts <see cref="T:System.String"/> 
            to <see cref="N:System.Windows"/> or vice versa based on the value.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.StringToVisibiltyforMaxValue.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="value">The value produced by the binding source.</param>
            <param name="language"></param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.StringToVisibiltyforMaxValue.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Not implemented in this converter; will throw an exception if invoked.
            </summary> 
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.ExcelDataTypeToStringConverter">
            <summary>
            Converts <see cref="T:Syncfusion.XlsIO.ExcelDataType"/> to String value.
            </summary>
            <remarks>Based on one of the enum <see cref="T:Syncfusion.XlsIO.ExcelDataType"/> options, it returns the corresponding string value.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.ExcelDataTypeToStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="value">The value produced by the binding source.</param>
            <param name="language"></param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.ExcelDataTypeToStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Not implemented in this converter; will throw an exception if invoked.
            </summary> 
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.ExcelDataValidationComparisonOperatorToStringConverter">
            <summary>
            Converts <see cref="T:Syncfusion.XlsIO.ExcelDataValidationComparisonOperator"/> to string value.
            </summary>
            <remarks>Based on one of the enum <see cref="T:Syncfusion.XlsIO.ExcelDataValidationComparisonOperator"/> options, returns the corresponding string value.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.ExcelDataValidationComparisonOperatorToStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="value">The value produced by the binding source.</param>
            <param name="language"></param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.ExcelDataValidationComparisonOperatorToStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Not implemented in this converter; will throw an exception if invoked.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.DateToStringConverter">
            <summary>
            Converts to <see cref="T:System.DateTime"/> or simple text based on the value.
            </summary>
            <remarks>Converts the specified string representation into its System.DateTime
             equivalent and if the conversion succeeded, returns the date; else string value</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.DateToStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="value">The value produced by the binding source.</param>
            <param name="language"></param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.DateToStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Not implemented in this converter; will throw an exception if invoked.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.NullToStringConverter">
            <summary>
            Converts the null value to a specified text.
            </summary>
            <remarks>if the value is null, it returns the string else it returns the value.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.NullToStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="value">The value produced by the binding source.</param>
            <param name="language"></param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.NullToStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Not implemented in this converter; will throw an exception if invoked.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.BoolToVisibilityConverter">
            <summary>
            Converts <see cref="T:System.Boolean"/> 
            to <see cref="N:System.Windows"/> or vice versa based on the value.
            </summary>
            <remarks> 
            Associates the bool value for changing the visibility state of the binding object or vice versa
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.BoolToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="value">The value produced by the binding source.</param>
            <param name="language"></param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.BoolToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="language"></param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.VisibilityToBoolConverter">
            <summary>
            Converts <see cref="T:System.Windows.Visibility"/> to <see cref="T:System.Boolean"/> 
            or vice versa.
            </summary>
            <remarks>converts the visibility state of the binding object to bool value or vice versa.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.VisibilityToBoolConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="value">The value produced by the binding source.</param>
            <param name="language"></param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.VisibilityToBoolConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="language"></param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.ColorConverter">
            <summary>
            Converts <see cref="T:System.Windows.Media.Color"/> 
            to <see cref="T:System.Windows.Media.SolidColorBrush"/> or vice versa based on the value.
            </summary>
            <remarks> 
            Associates the value of the binding object for converting the Color to SolidColorBrush.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.ColorConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="value">The value produced by the binding source.</param>
            <param name="language"></param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>  
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.ColorConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="language"></param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.LeftAlignToBoolConverter">
            <summary>
            Converts the value to <see cref="T:Syncfusion.XlsIO.ExcelHAlign"/>.
            </summary>
            <remarks>
            Associates the value for changing the left alignment of the binding object.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.LeftAlignToBoolConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="value">The value produced by the binding source.</param>
            <param name="language"></param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.LeftAlignToBoolConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="language"></param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.RightAlignToBoolConverter">
            <summary>
            Converts the value to <see cref="T:Syncfusion.XlsIO.ExcelHAlign"/> . 
            </summary>
            <remarks>
            Associates the value for changing the right alignment of the binding object. 
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.RightAlignToBoolConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="value">The value produced by the binding source.</param>
            <param name="language"></param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.RightAlignToBoolConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="language"></param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.CenterAlignToBoolConverter">
            <summary>
            Converts the value to <see cref="T:Syncfusion.XlsIO.ExcelHAlign"/>.
            </summary>
            <remarks> 
            Associates the value for changing the center alignment of the binding object. 
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CenterAlignToBoolConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="value">The value produced by the binding source.</param>
            <param name="language"></param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CenterAlignToBoolConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="language"></param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.TopAlignToBoolConverter">
            <summary>
            Converts the value to <see cref="T:Syncfusion.XlsIO.ExcelVAlign"/>.
            </summary>
            <remarks>Associates the value for changing the top alignment of the binding object.  </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.TopAlignToBoolConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="value">The value produced by the binding source.</param>
            <param name="language"></param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.TopAlignToBoolConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="language"></param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.MiddleAlignToBoolConverter">
            <summary>
            Converts the value to <see cref="T:Syncfusion.XlsIO.ExcelVAlign"/>.
            </summary>
            <remarks> 
            Associates the value for changing the middle alignment of the binding object. 
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.MiddleAlignToBoolConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="value">The value produced by the binding source.</param>
            <param name="language"></param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.MiddleAlignToBoolConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="language"></param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.BottomAlignToBoolConverter">
            <summary>
            Converts the value to <see cref="T:Syncfusion.XlsIO.ExcelVAlign"/>.
            </summary>
            <remarks> 
            Associates the value for changing the bottom alignment of the binding object. 
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.BottomAlignToBoolConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="culture">The culture to use in the converter.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="value">The value produced by the binding source.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.BottomAlignToBoolConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="language"></param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns> 
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.UnderlineToBoolConverter">
            <summary>
            Converts <see cref="T:System.Boolean"/> 
            to <see cref="T:Syncfusion.XlsIO.ExcelUnderline"/> or vice versa based on the value.
            </summary>
            <remarks> 
            Associates the bool value for changing the underline type for the font of the binding object. 
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.UnderlineToBoolConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="value">The value produced by the binding source.</param>
            <param name="language"></param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.UnderlineToBoolConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="language"></param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.CellAddressConverter">
            <summary>
            Convert the cell address from sheet token token with cell address value.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.NullToBoolConverter">
            <summary>
            Converts null value to bool value.
            </summary>
            <remarks>If the value of the binding object is not equal to null, returns true;otherwise false</remarks>.
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.NullToBoolConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="value">The value produced by the binding source.</param>
            <param name="language"></param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.NullToBoolConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Not implemented in this converter; will throw an exception if invoked.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.ProtectSheetVisibleConverter">
            <summary>
            Converts <see cref="T:System.Boolean"/> 
            to <see cref="T:System.Windows.Visibility"/> or vice versa based on the value.
            </summary>
            <remarks>
            Associates the bool value for changing the visibility of the binding object when the sheet is protected.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.ProtectSheetVisibleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a bool value to the visibility mode. 
            </summary>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="value">The value produced by the binding source.</param>
            <param name="language"></param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.ProtectSheetVisibleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="language"></param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.UnProtectSheetVisibleConverter">
            <summary>
            Converts <see cref="T:System.Boolean"/> 
            to <see cref="T:System.Windows.Visibility"/> or vice versa based on the value.
            </summary>
            <remarks>
            Associates the bool value for changing the visibility of the binding object when the sheet is unprotected.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.UnProtectSheetVisibleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="value">The value produced by the binding source.</param>
            <param name="language"></param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.UnProtectSheetVisibleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="language"></param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.StringToFontStyleConverter">
            <summary>
            Converts string value to <see cref="T:System.Windows.FontStyles"/>.
            </summary>
            <remarks>Based on the value of the binding object, it returns the corresponding font styles.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.StringToFontStyleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="value">The value produced by the binding source.</param>
            <param name="language"></param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.StringToFontStyleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Not implemented in this converter; will throw an exception if invoked.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.StringToFontSizeConverter">
            <summary>
            Convert the size of the value 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.StringToFontSizeConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the font size.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.StringToFontSizeConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Not implemented in this converter; will throw an exception if invoked.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.StringToFontFamilyConverter">
            <summary>
            Converts the font family value to system font family value.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.StringToFontFamilyConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.StringToFontFamilyConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Not implemented in this converter; will throw an exception if invoked.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.StringToFontWeightConverter">
             <summary>
             Converts the string value to <see cref="T:System.Windows.FontWeights"/>.
             </summary>
            <remarks>Based on the value of the binding object, it returns the corresponding font weight.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.StringToFontWeightConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="parameter">The converter parameter to use.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="value">The value produced by the binding source.</param>
            <param name="language"></param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.StringToFontWeightConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Not implemented in this converter; will throw an exception if invoked.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon">
             <summary>
             SfSpreadsheetRibbon, an user interface, is designed to help you quickly find the commands that you need to complete a task. 
             </summary>
             <remarks>Commands are organized in logical groups that are collected together under tabs.The tabs in SfSpreadsheetRibbon are File, Home, Data and View.</remarks>
            <example>
             	<code lang="XAML">
             		<Window x:Class="SpreadsheetDemo.MainWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Title="Window1" Height="300" Width="300" xmlns:syncfusion="http://schemas.syncfusion.com/wpf">
             			<Grid>
             				<syncfusion:SfSpreadsheetRibbon x:Name="ribbon"  DataContext="{Binding ElementName=spreadsheet}" syncfusion:SkinStorage.VisualStyle="Office2010Blue" />
             				<syncfusion:SfSpreadsheet x:Name="spreadsheet" /> 
             			</Grid>
             		</Window>
             	</code> 
             </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.IsLoaded">
            <summary>
            Sets to true, when the SfSpreadsheetRibbon is loaded. 
            </summary>
            <remarks>By default, value is set to false.</remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.IsTemplateApplied">
            <summary>
            Sets to true, whenever a new template of SfSpreadsheet Ribbon is applied.
            </summary>
            <remarks>By default, value is set to false.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon">SfSpreadsheetRibbon</see> class. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.SfSpreadsheetRibbon_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Invoked when the SfSpreadsheetRibbon is loaded to initialize the events associated with ribbon
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:System.Windows.RoutedEventArgs">RoutedEventArgs</see> that contains the event data.</param>      
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.SfSpreadsheetRibbon_Unloaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Invoked when SfSpreadsheet Ribbon is unloaded to unhook the events associated with ribbon
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:System.Windows.RoutedEventArgs">RoutedEventArgs</see> that contains the event data.</param>      
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.NumberFormatSourceProperty">
            <summary>
            Identifies the NumberFormatSource dependency property.
            </summary>        
            <remarks>
            The identifier for the  dependency property.
            </remarks>        
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.FontFamilyNamesProperty">
            <summary>
            Identifies the FontFamilyNames dependency property.
            </summary>        
            <remarks>
            The identifier for the  dependency property.
            </remarks> 
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.FontSizeSourceProperty">
            <summary>
            Identifies the FontSizeSource dependency property.
            </summary>        
            <remarks>
            The identifier for the  dependency property.
            </remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.MyDataContextProperty">
            <summary>
            Dependency Property as backing store for MyDataContext
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.OnMyDataContextChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Used to update the events associated with ribbon when the the dataContext is changed.
            </summary>
            <param name="dependencyObject">source.</param>
            <param name="args">An <see cref="T:System.Windows.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>        
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.OnMyDataContextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked to refresh/update the events and functions associated with SfSpreadsheetRibbon.
            </summary>
            <param name="e">An <see cref="T:System.Windows.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.Wire(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            To wire the events that are to be used in SfSpreadsheet.
            </summary>
            <param name="spreadsheet">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.UnWire(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            To UnWire Events that are Wired in SfSpreadsheet Control
            </summary>
            <param name="spreadsheet">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.OnSpreadSheetPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Event raised when the current property in SfSpreadsheet is changed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:System.ComponentModel.PropertyChangedEventArgs">PropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks>Invoked to update the current cell style, range, active sheet and workbook.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.RefreshRibbon">
            <summary>
            Used to refresh/update the active state of the sfspreadsheet ribbon.
            </summary>
            <remarks>It updates the active sheet, workbook, current cellstyle and range properties.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or
            internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate"/>.
            </summary>
            <remarks>Builds the visual tree for the SfSpreadsheetRibbon when a new template is applied.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.WireEvents">
            <summary>
            This method is to initialize the events associated with the ribbon interactions.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.UnWireEvents">
            <summary>
            This method is called to unhook the events associated with SfSpreadsheet Ribbon.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.Font_FontSize_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This event is invoked to initialize the events associated with font size operations.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:System.Windows.RoutedEventArgs">RoutedEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.Font_FontFamily_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This event is invoked to initialize the events associated with font family operations
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:System.Windows.RoutedEventArgs">RoutedEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.Font_FontColor_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Invoked when the font color button in ribbon is clicked.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:System.Windows.RoutedEventArgs">RoutedEventArgs</see> that contains the event data.</param>
            <remarks>This method is used to change the font color based on the selection. </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.Font_FillColor_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Invoked when the FillColor button in ribbon is clicked.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:System.Windows.RoutedEventArgs">RoutedEventArgs</see> that contains the event data.</param>
            <remarks>Changes the fill color of the selected region.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.Font_FillColorPicker_ColorChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked when the color picker is selected in ribbon.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:System.Windows.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks>Changes the font color of the selected text.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.CloseBackStage">
            <summary>
            To Close the BackStage that is opened
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.RibbonBackStageOpening(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Backstage opening. 
            It should be cancel while datavalidation failed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.OnCurrentCellStyleChanged">
            <summary>
            Invoked to update the current cell style operations in SfSpreadsheet.
            </summary> 
            <remarks>The cellstyle options such as font size, family, style, horizontal and vertical alignment, number format, wrap text, cell orientation, merge and center operations for the current cell are updated.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.OnCurrentCellRangeChanged">
            <summary>
            Updates the visibility status of the comments for the selected range in SfSpreadsheet.
            </summary>     
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.OnWorkbookChanged">
            <summary>
            Invoked to update the workbook version and protection mode in SfSpreadsheet when the workbook is changed.
            </summary>       
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.OnActiveSheetChanged">
            <summary>
            Invoked to update the  protection mode and freeze pane visibility status when the active sheet is changed.
            </summary>        
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.UpdateBorderSplitButton(System.String)">
            <summary>
            To update the last selected border in the Border Split Button.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.UpdateMergeAndCenter">
            <summary>
            Maintain the selection of merge and center option button in ribbon if the selected ranges intersects the merged cells.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.UpdateFilterRibbonBar">
            <summary>
            Update the filter icon status in the spreadsheetRibbon.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.UpdateLockCell">
            <summary>
            Update the lock cell toggle button when current cell changed
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.UpdateOrientation">
            <summary>
            Update the orientation types of toggle button when current cell changed
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.UpdateRibbonItems(System.Boolean,System.Boolean)">
            <summary>
            Update the RibbonItems when edit, protect workbook or worksheet.
            </summary>
            <param name="isInProtection">If true, need to update for protect or unprotect workbook or worksheet else in cell editing or comment editing</param>
            <param name="enable">If true, Need to enable item else disable</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.OnCommandExecuting(System.Object,Syncfusion.UI.Xaml.Spreadsheet.Helpers.CommandExecutingEventArgs)">
            <summary>
            Invoked when the commnds in the ribbon are executing
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.CommandExecutionEventArgs">CommandExecutionEventArgs</see> that contains the event data.</param>
            <remarks>closes the ribbon backstage when the options in the File menu is selected</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.OnCommandExecuted(System.Object,Syncfusion.UI.Xaml.Spreadsheet.Helpers.CommandExecutionEventArgs)">
            <summary>
            Invoked when the commands in the ribbon are executed
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.CommandExecutionEventArgs">CommandExecutionEventArgs</see> that contains the event data.</param>
            <remarks>Updates the selected command's visibility mode</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.Dispose">
            <summary>
            Dispose all the resources used by the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon"/> class
            </summary>      
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.NumberFormatSource">
            <summary>
            Gets or sets the collection of Number Formats to be used.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.FontFamilyNames">
            <summary>
            Gets or sets the collection of System installed Fonts.
            </summary>
            <returns>list of fonts.</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.FontSizeSource">
            <summary>
            Gets or sets the collection of different font sizes to be used.
            </summary>
            <value>Size of the font</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.SfSpreadsheet">
            <summary>
            Gets or sets the instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/> which is used for viewing and editing excel files.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>. </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheetRibbon.MyDataContext">
            <summary>
            Gets or sets the DataContext for the SfSpreadhsheetRibbon.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.NumberFormat">
            <summary>
            Represents a class which is for storing number format information.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.NumberFormat.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.NumberFormat">NumberFormat</see> class. 
            </summary>
            <param name="name">Name of the number format.</param>
            <param name="format">Value of the number format.</param>
            <param name="imageuri">Image to be displayed.</param>       
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.NumberFormat.Name">
            <summary>
            Gets or sets the name of the number format.
            </summary>
            <value>A string that represents the number format name.</value>        
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.NumberFormat.Format">
            <summary>
            Gets or sets the value of the number format.
            </summary>
            <value>A string that represents the number format value.</value>       
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.NumberFormat.ImageUri">
            <summary>
            Gets or sets the uri of the image to displayed as combobox item.
            </summary>
            <value>A string that represents the uri of the image.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetComboBoxCellRenderer">
            <summary>
            Represents a class which holds the  cell renderer that displays <see cref="T:System.Windows.Controls.ComboBox"/> in a GridCell. 
            Override the methods for initializing content of the cell and arranging the cell visuals.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetComboBoxCellRenderer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetComboBoxCellRenderer">SpreadsheetComboBoxCellRenderer</see> class. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetComboBoxCellRenderer.OnRender(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Media.DrawingContext,System.Windows.Rect,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,System.Object)">
            <summary>
            Used to render the content of the cell. It must be override in derived class, and use their own logic to render the content.
            </summary>
            <param name="CellRowColumnIndex">Coordinates of a cell.</param>
            <param name="dc">An instance of <see cref="T:System.Windows.Media.DrawingContext"/>.</param>
            <param name="cellRect">An instance <see cref="T:System.Windows.Rect"/> of cell.</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.</param>
            <param name="textElement">Drawing Text.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetComboBoxCellRenderer.AddTextMargin(System.Windows.Thickness,System.Windows.Rect@)">
            <summary>
            Calculates the x and y coordinates, width and height for the cell element.
            </summary>
            <param name="margin">Thickness of the particular cell.</param>
            <param name="cellRect">An instance <see cref="T:System.Windows.Rect"/> of cell.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetComboBoxCellRenderer.OnInitializeDisplayElement(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Controls.TextBlock,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Invoked when display element is initialized on the cell.
            </summary>
            <param name="rowColumnIndex">Coordinates of a cell.</param>
            <param name="uiElement">An instance of <see cref="T:System.Windows.Controls.TextBlock"/>.</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetComboBoxCellRenderer.OnInitializeEditElement(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Controls.ComboBox,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Invoked when the edit element of combobox is initialized on the cell.
            </summary>
            <param name="rowColumnIndex">Coordinates of a cell.</param>
            <param name="uiElement">An instance of <see cref="T:System.Windows.Controls.ComboBox"/>.</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetComboBoxCellRenderer.OnUpdateEditCellStyle(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Controls.ComboBox,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Updates the style and content for edit element.
            </summary>
            <param name="cellRowColumnIndex">Coordinates of a cell.</param>
            <param name="uiElement">An instance of <see cref="T:System.Windows.Controls.ComboBox"/>.</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetComboBoxCellRenderer.OnUpdateCellStyle(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Controls.TextBlock,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn)">
             <summary>
            Updates the style and content for display element.
             </summary>
             <param name="cellRowColumnIndex">Coordinates of a cell.</param>
             <param name="uiElement">An instance of <see cref="T:System.Windows.Controls.ComboBox"/>.</param>
             <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetComboBoxCellRenderer.GetControlValue">
            <summary>
            Invoked to get the control value of the current cell .
            </summary>
            <returns>The value of the currently selected item.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetComboBoxCellRenderer.SetControlValue(System.Object)">
            <summary>
            Invoked to set the control value of the current cell.
            </summary>
            <param name="value">value of the current cell.</param>
            <returns>True or False.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetComboBoxCellRenderer.OnWireEditUIElement(System.Windows.Controls.ComboBox)">
            <summary>
            Wire or hook the events associated with edit UIElement.
            </summary>
            <param name="uiElement">An instance of <see cref="T:System.Windows.Controls.ComboBox"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetComboBoxCellRenderer.OnUnwireEditUIElement(System.Windows.Controls.ComboBox)">
            <summary>
            Unwire or unhook the events associated with the edit UIElement.
            </summary>
            <param name="uiElement">An instance of <see cref="T:System.Windows.Controls.ComboBox"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetComboBoxCellRenderer.OnSaveChanges">
            <summary>
            Save the modified cell value to the given range.
            </summary> 
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetComboBoxCellRenderer.ShouldGridTryToHandleKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Handles all the keydown operations in the current cell.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.KeyEventArgs">KeyEventArgs</see> that contains the event data.</param>
            <returns>True if uiElement is ComboBox; else returns false.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetComboBoxCellRenderer.OnEditElementLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when edit UIElement is loaded into cell.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:System.Windows.RoutedEventArgs">RoutedEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetComboBoxCellRenderer.element_TextChanged(System.Object,System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Invoked when the content in the textbox is changed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:System.Windows.Controls.TextChangedEventArgs">TextChangedEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetComboBoxCellRenderer.combobox_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Invoked when the selection in the combo box is changed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:System.Windows.Controls.SelectionChangedEventArgs">SelectionChangedEventArgs</see> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetHeaderCellRenderer">
            <summary>
            Represents a class which holds the  cell renderer that displays <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridHeaderCell"/> in a GridCell. 
            Override the methods for initializing content of the cell and arranging the cell visuals.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetHeaderCellRenderer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetHeaderCellRenderer">SpreadsheetHeaderCellRenderer</see> class. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetHeaderCellRenderer.OnRender(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Media.DrawingContext,System.Windows.Rect,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,System.Object)">
            <summary>
            Used to render the content of the cell. It must be override in derived class, and use their own logic to render the content.
            </summary>
            <param name="CellRowColumnIndex">Coordinates of a cell.</param>
            <param name="dc">An instance of <see cref="T:System.Windows.Media.DrawingContext"/>.</param>
            <param name="cellRect">An instance <see cref="T:System.Windows.Rect"/> of cell.</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.</param>
            <param name="textElement">Drawing Text</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetHeaderCellRenderer.OnInitializeDisplayElement(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,Syncfusion.UI.Xaml.CellGrid.GridHeaderCell,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Invoked when display element of header cell is initialized on the cell.
            </summary>
            <param name="rowColumnIndex">Coordinates of a cell.</param>
            <param name="uiElement">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridHeaderCell"/>.</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetHeaderCellRenderer.OnInitializeEditElement(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,Syncfusion.UI.Xaml.CellGrid.GridHeaderCell,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Invoked when edit element of header cell is initialized on the cell.
            </summary>
            <param name="rowColumnIndex">Coordinates of a cell.</param>
            <param name="uiElement">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridHeaderCell"/>.</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetHeaderCellRenderer.OnUpdateEditCellStyle(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,Syncfusion.UI.Xaml.CellGrid.GridHeaderCell,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Update the cell style and content of the edit element.
            </summary>
            <param name="cellRowColumnIndex">Coordinates of a cell.</param>
            <param name="uiElement">An instance of <see cref="T:System.Windows.Controls.ComboBox"/>.</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetHyperlinkCellRenderer">
            <summary>
            Represents a class which holds the cell renderer that displays the hyperlink in a cell.
            Override the methods for initializing content of the cell and arranging the cell visuals.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetHyperlinkCellRenderer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetHyperlinkCellRenderer">SpreadsheetHyperlinkCellRenderer</see> class. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetHyperlinkCellRenderer.OnInitializeDisplayElement(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Controls.ContentControl,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Invoked when display element is initialized on the cell.
            </summary>
            <param name="rowColumnIndex">Coordinates of a cell.</param>
            <param name="uiElement">An instance of <see cref="T:System.Windows.Controls.ContentControl"/>.</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetHyperlinkCellRenderer.OnInitializeEditElement(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Controls.TextBox,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Invoked when the edit element is initialized on the cell
            </summary>
            <param name="rowColumnIndex">Coordinates of a cell.</param>
            <param name="uiElement">An instance of <see cref="T:System.Windows.Controls.TextBox"/>.</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetHyperlinkCellRenderer.OnUpdateCellStyle(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Controls.ContentControl,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Update the cell style and content for display element.
            </summary>
            <param name="cellRowColumnIndex">Coordinates of a cell.</param>
            <param name="uiElement">An instance of <see cref="T:System.Windows.Controls.ContentControl"/>.</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetHyperlinkCellRenderer.OnUpdateEditCellStyle(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Controls.TextBox,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Update the cell style and content for edit element.
            </summary>
            <param name="cellRowColumnIndex">Coordinates of a cell.</param>
            <param name="uiElement">An instance of <see cref="T:System.Windows.Controls.TextBox"/>.</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetHyperlinkCellRenderer.OnEditElementLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when edit UIElement is loaded into cell.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:System.Windows.RoutedEventArgs">RoutedEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetHyperlinkCellRenderer.OnTextChanged(System.Object,System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Invoked when the content in the textbox is changed
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:System.Windows.Controls.TextChangedEventArgs">TextChangedEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetHyperlinkCellRenderer.GetControlValue">
            <summary>
            Invoked to get the control value of the current cell .
            </summary>
            <returns>The value of the current cell.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetHyperlinkCellRenderer.SetControlValue(System.Object)">
            <summary>
            Invoked to set the control value of the current cell.
            </summary>
            <param name="value">value of the current cell.</param>
            <returns>True or False.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetHyperlinkCellRenderer.OnWireEditUIElement(System.Windows.Controls.TextBox)">
            <summary>
            Wire or hook the events associated with edit UIElement.
            </summary>
            <param name="uiElement">An instance of <see cref="T:System.Windows.Controls.TextBox"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetHyperlinkCellRenderer.OnUnwireEditUIElement(System.Windows.Controls.TextBox)">
            <summary>
            Unwire or Unhook the events associated with edit UIElement.
            </summary>
            <param name="uiElement">An instance of <see cref="T:System.Windows.Controls.TextBox"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetHyperlinkCellRenderer.TextInput(System.Windows.Input.TextCompositionEventArgs)">
            <summary>
            Invoked when the input text is added in TextBox.
            </summary>
            <param name="args">An <see cref="T:System.Windows.Input.TextCompositionEventArgs">TextCompositionEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetHyperlinkCellRenderer.OnWireDisplayUIElement(System.Windows.Controls.ContentControl)">
            <summary>
            Wire or hook the events associated with the display UIElement.
            </summary>
            <param name="uiElement">An instance of <see cref="T:System.Windows.Controls.ContentControl"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetHyperlinkCellRenderer.OnUnwireDisplayUIElement(System.Windows.Controls.ContentControl)">
            <summary>
            Unwire or unhook the events associated with the display UIElement.
            </summary>
            <param name="uiElement">An instance of <see cref="T:System.Windows.Controls.ContentControl"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetHyperlinkCellRenderer.OpenHyperlink(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
             Invoked when the hyperlink in the current cell is clicked.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:System.Windows.RoutedEventArgs">RoutedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetHyperlinkCellRenderer.cellRequestNavigate(Syncfusion.UI.Xaml.CellGrid.Helpers.CellRequestNavigateEventArgs)">
            <summary>
            Invoked to navigate through cells in different sheet.
            </summary>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CellRequestNavigateEventArgs">CellRequestNavigateEventArgs</see> that contains the event data.</param>
            <returns>True, if the cell navigates; else false</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetHyperlinkCellRenderer.OnSaveChanges">
            <summary>
            Saves the modified text in the specified range.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetRichTextBoxCellRenderer">
            <summary>
            Represents a class which holds the cell renderer that displays RichText in a GridCell. 
            Override the methods for initializing content of the cell and arranging the cell visuals.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetRichTextBoxCellRenderer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetRichTextBoxCellRenderer">SpreadsheetRichTextBoxCellRenderer</see> class. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetRichTextBoxCellRenderer.OnRender(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Media.DrawingContext,System.Windows.Rect,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,System.Object)">
            <summary>
            Used to render the content of the cell. It must be override in derived class, and use their own logic to render the content.
            </summary>
            <param name="CellRowColumnIndex">Coordinates of a cell.</param>
            <param name="dc">An instance of <see cref="T:System.Windows.Media.DrawingContext"/>.</param>
            <param name="cellRect">An instance <see cref="T:System.Windows.Rect"/> of cell.</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.</param>
            <param name="textElement">Drawing Text.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetRichTextBoxCellRenderer.OnInitializeDisplayElement(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Controls.RichTextBox,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Invoked when display element is initialized on the cell.
            </summary>
            <param name="rowColumnIndex">Coordinates of a cell.</param>
            <param name="uiElement">An instance of <see cref="T:System.Windows.Controls.RichTextBox"/>.</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetRichTextBoxCellRenderer.OnInitializeEditElement(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Controls.RichTextBox,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Initialize the edit element of RichTextBox on the cell.
            </summary>
            <param name="rowColumnIndex">Coordinates of a cell.</param>
            <param name="uiElement">An instance of <see cref="T:System.Windows.Controls.RichTextBox"/>.</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetRichTextBoxCellRenderer.OnUpdateEditCellStyle(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Controls.RichTextBox,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Update the cell style and content of edit element.
            </summary>
            <param name="cellRowColumnIndex">Coordinates of a cell.</param>
            <param name="uiElement">An instance of <see cref="T:System.Windows.Controls.RichTextBox"/>.</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetRichTextBoxCellRenderer.GetControlValue">
            <summary>
            Invoked to get the control value of the current cell .
            </summary>
            <returns>The RichTextBox value as Flow document.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetRichTextBoxCellRenderer.OnSaveChanges">
            <summary>
            Save the modified cell value to the given range.
            </summary> 
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetRichTextBoxCellRenderer.GetFormattedText(Syncfusion.XlsIO.IStyle)">
            <summary>
            Gets the formatted text of current cell based on style info.
            </summary>
            <param name="style">an instance of <see cref="T:Syncfusion.XlsIO.IStyle"/>.</param>
            <returns>Text content of current cell.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetRichTextBoxCellRenderer.OnWireEditUIElement(System.Windows.Controls.RichTextBox)">
            <summary>
            Wire or hook the events associated with edit UIElement.
            </summary>
            <param name="uiElement">An instance of <see cref="T:System.Windows.Controls.RichTextBox"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetRichTextBoxCellRenderer.OnUnwireEditUIElement(System.Windows.Controls.RichTextBox)">
            <summary>
            Unwire or unhook the events associated with the edit UIElement.
            </summary>
            <param name="uiElement">An instance of <see cref="T:System.Windows.Controls.RichTextBox"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetRichTextBoxCellRenderer.uiElement_TextChanged(System.Object,System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Invoked when the content in the textbox is changed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:System.Windows.Controls.TextChangedEventArgs">TextChangedEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetRichTextBoxCellRenderer.OnEditElementLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when edit UIElement is loaded into cell.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:System.Windows.RoutedEventArgs">RoutedEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetRichTextBoxCellRenderer.ShouldGridTryToHandleKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Handles all the keydown operations in the current cell.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.KeyEventArgs">KeyEventArgs</see> that contains the event data.</param>
            <returns>True or False.</returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetTextBoxCellRenderer">
            <summary>
            Represents a class which holds the  cell renderer that displays <see cref="T:System.Windows.Controls.TextBox"/> in a GridCell. 
            Override the methods for initializing content of the cell and arranging the cell visuals.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetTextBoxCellRenderer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetTextBoxCellRenderer">SpreadsheetTextBoxCellRenderer</see> class. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetTextBoxCellRenderer.OnRender(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Media.DrawingContext,System.Windows.Rect,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,System.Object)">
            <summary>
            Used to render the content of the cell. It must be override in derived class, and use their own logic to render the content.
            </summary>
            <param name="CellRowColumnIndex">Coordinates of a cell.</param>
            <param name="dc">An instance of <see cref="T:System.Windows.Media.DrawingContext"/>.</param>
            <param name="cellRect">An instance <see cref="T:System.Windows.Rect"/> of cell.</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.</param>
            <param name="textElement">Drawing Text.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetTextBoxCellRenderer.OnInitializeDisplayElement(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Controls.TextBlock,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Invoked when display element is initialized on the cell.
            </summary>
            <param name="rowColumnIndex">Coordinates of a cell.</param>
            <param name="uiElement">An instance of <see cref="T:System.Windows.Controls.TextBlock"/>.</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetTextBoxCellRenderer.OnInitializeEditElement(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Controls.TextBox,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Invoked when the edit element of textbox is initialized on the cell.
            </summary>
            <param name="rowColumnIndex">Coordinates of a cell.</param>
            <param name="uiElement">An instance of <see cref="T:System.Windows.Controls.ComboBox"/>.</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetTextBoxCellRenderer.OnEditElementLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when edit UIElement is loaded into cell.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:System.Windows.RoutedEventArgs">RoutedEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetTextBoxCellRenderer.OnTextChanged(System.Object,System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Invoked when the content in the textbox is changed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:System.Windows.Controls.TextChangedEventArgs">TextChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetTextBoxCellRenderer.ProcessArrayFormulaCalculation">
            <summary>
            To Calculate the array formulas, when CSE key combination is pressed in Spreadsheet.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetTextBoxCellRenderer.GetControlValue">
            <summary>
            Invoked to get the control value of the current cell .
            </summary>
            <returns>Text</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetTextBoxCellRenderer.SetControlValue(System.Object)">
            <summary>
            Invoked to set the control value of the current cell.
            </summary>
            <param name="value">value of the current cell.</param>
            <returns>True or False.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetTextBoxCellRenderer.OnUpdateCellStyle(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Controls.TextBlock,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Update the cell style and content for the display element .
            </summary>
            <param name="cellRowColumnIndex">Coordinates of a cell.</param>
            <param name="uiElement">An instance of <see cref="T:System.Windows.Controls.TextBlock"/>.</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetTextBoxCellRenderer.OnUpdateEditCellStyle(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Controls.TextBox,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Update the cell style and content for the edit element .
            </summary>
            <param name="cellRowColumnIndex">Coordinates of a cell.</param>
            <param name="uiElement">An instance of <see cref="T:System.Windows.Controls.TextBox"/>.</param>
            <param name="column">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetTextBoxCellRenderer.OnSaveChanges">
            <summary>
            Saves the modified text in the specified range.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetTextBoxCellRenderer.ShouldGridTryToHandleKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Handles all the keydown operations in the current cell.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.KeyEventArgs">KeyEventArgs</see> that contains the event data.</param>
            <returns>True or False.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetTextBoxCellRenderer.OnWireEditUIElement(System.Windows.Controls.TextBox)">
            <summary>
            Wire or hook the events associated with edit UIElement.
            </summary>
            <param name="uiElement">An instance of <see cref="T:System.Windows.Controls.TextBox"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetTextBoxCellRenderer.uiElement_GotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when the UIElement receives focus
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:System.Windows.RoutedEventArgs">RoutedEventArgs</see> that contains the event data.</param>
            <remarks>It is used to set the selection start since if the focus is set to a text box, then the selection start moves to the first index</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetTextBoxCellRenderer.uiElement_MouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when the Mouse's Left Button is pressed in the cell.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:System.Windows.Input.MouseButtonEventArgs">MouseButtonEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetTextBoxCellRenderer.OnUnwireEditUIElement(System.Windows.Controls.TextBox)">
            <summary>
            Unwire or Unhook the events associated with edit UIElement.
            </summary>
            <param name="uiElement">An instance of <see cref="T:System.Windows.Controls.TextBox"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetTextBoxCellRenderer.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the
            <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetTextBoxCellRenderer">SpreadsheetTextBoxCellRenderer</see> class.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridCell">
            <summary>
            SpreadsheetGridCell class which having interaction logic for apply the sorting and filtering to the spreadsheetGridCell.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridCell.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Initialize a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridCell">SpreadsheetGridCell</see> class.
            </summary>
            <param name="grid">CellGrid</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridCell.#cctor">
            <summary>
            Initiate the default style of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridCell">SpreadsheetGridCell</see> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridCell.OnSpreadsheetGridCellLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Below event is raised when SpreadsheetGridCell loaded into the spreadsheet where update the FilterTogglebutton filterState.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridCell.OnFilterToggleButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Rasied when FilterToggle button is clicked and set the Filterpopup IsOpen property and focus of the SpreadsheetFilterControl.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridCell.WireEvents">
            <summary>
            Wire the events.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridCell.UnWireEvents">
            <summary>
            UnWire the Events.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridCell.OnApplyTemplate">
            <summary>
            Used to get the FilterToggleButton template and update the status of the FilterToggleButton.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridCell.UpdateFilterToggleButton(System.String)">
            <summary>
            Update the FilterToggleButton visual states based on the filter option.
            </summary>
            <param name="filterOption">Filter option for change the visual state</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridCell.Dispose(System.Boolean)">
            <summary>
            Dispose all the instances.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn">
            <summary>
            Holds and updates the information about the properties of each and every cell which are in view. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn">SpreadsheetColumn</see> class. 
            </summary>
            <param name="grid">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.UpdateRenderer(System.String)">
            <summary>
            Update the renderer for the cell based on the cell type
            </summary>
            <param name="celltype">The type of cell such as text box, combo box,etc.,</param>
            <returns>True or False</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.UpdateFilterToggleButtonStatus(Syncfusion.XlsIO.Implementation.WorksheetImpl)">
            <summary>
            Update the FilterToggleButton status based on XlsIO's Filter applied ranges.
            </summary>
            <param name="worksheet">Worksheet</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.UpdateCellElement(System.Boolean)">
            <summary>
            Initializes or updates the cell element using appropriate cell renderer.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.RenderBackground(System.Windows.Media.DrawingContext,System.Windows.Rect)">
            <summary>
            Used to draw the background color of the cell.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.CheckWrapText">
            <summary>
            Helper method for check whether the floating cell height changed when apply the horizontal alignment to center and whether Alt+Enter pressed.
            Because if center alignment applied, then set the wrapping for further process happen like normal TextWrapping, when next or prev cell goes to out of view. 
            So that time no need to increase the height.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.OnRender(System.Windows.Media.DrawingContext,System.Windows.Rect)">
            <summary>
            Used to render the borders, text, background, etc. of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>.
            </summary>
            <param name="drawingContext">An instance of <see cref="T:System.Windows.Media.DrawingContext"/>.</param>
            <param name="cellRect">An instance <see cref="T:System.Windows.Rect"/> of cell.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.PointerReleased(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Occurs when pointer/mouse released over <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.MouseButtonEventArgs">MouseButtonEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.PointerPressed(System.Windows.Input.MouseEventArgs)">
            <summary>
            Occurs when pointer/mouse pressed on <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.MouseEventArgs">MouseEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.PointerMoved(System.Windows.Input.MouseEventArgs)">
            <summary>
            Occurs when pointer/mouse hover the <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.MouseEventArgs">MouseEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.OnUpdateColumn(System.Windows.FrameworkElement@)">
            <summary>
            Update the column properties such as renderer, cell type, style info, row index, column index, cell element etc.
            </summary>
            <param name="oldElement">An element which maintains the <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>. </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.UpdateCellBorders">
            <summary>
            Updates the cell borders for the <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.UpdateFloatingCellBorders">
            <summary>
            Update the borders for floating cells.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.UpdateHeaderCellBorders">
            <summary>
            Updates the selection highlighted borders on header cells.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.ApplyConditionalFormats(System.Windows.Media.DrawingContext,System.Windows.Rect)">
            <summary>
            Apply the conditional formatting
            </summary>
            <param name="drawingContext">Drawing context of the cell</param>
            <param name="cellRect">Current cell rect</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.ApplyDataBars(System.Windows.Media.DrawingContext,System.Windows.Rect,Syncfusion.XlsIO.IDataBar,System.String,System.String)">
            <summary>
            Apply the data bars for DataBar Conditional Formatting.
            </summary>
            <param name="drawingContext">Drawing context</param>
            <param name="cellRect">Indicates the cell rect</param>
            <param name="dataBar"></param>
            <param name="formatRange"></param>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.PushGuideLineSet(System.Windows.Media.DrawingContext,System.Windows.Rect,System.Double)">
            <summary>
            Helper method to solve the alising problem for border or line element
            </summary>
            <param name="drawingContext">Drawing context</param>
            <param name="cellRect">Indicates the cell rect</param>
            <param name="thickness">The thickness of the border.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.ApplyIconSets(Syncfusion.XlsIO.IIconSet,System.Windows.Media.DrawingContext,System.Windows.Rect,System.String,System.String)">
            <summary>
            Render the icon sets based on getting IIconSet from XlsIO
            </summary>
            <param name="iconSet">IIconSet from XlsIO</param>
            <param name="drawingContext"></param>
            <param name="value">Cell value</param>
            <param name="formatRange">The selected range for conditional formats</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.UpdateSparklines(System.Windows.Media.DrawingContext,System.Windows.Rect)">
            <summary>
            Used to update the sparklines
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.ApplyTableFormats">
            <summary>
            Excel like table formats operation are performed here with checking the XlsIO contains the List objects or not.
            If it contains the list objects then based on the table style we have applied the background color,Forground color
            and border in our spreadsheet.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.ApplyExcelStyle(Syncfusion.XlsIO.IStyle,Syncfusion.XlsIO.IRange)">
            <summary>
            Apply the tableformat borders if the cell is table format cell and check whether the cell style does not contain the
            some other border style.Table borders only apply when the cell border style is none.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.EnsureFloatingCellSize(System.Collections.Generic.List{Syncfusion.UI.Xaml.CellGrid.GridColumn},System.Windows.Size,System.Int32)">
            <summary>
            Calculates the size for floating cell and display text in the cell.
            </summary>
            <param name="elements">List of cell elements which are in view.</param>
            <param name="cellSize">Current size of the cell.</param>
            <param name="arrayIndex">Index of the visible columns.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.EnsureFloatingCellSizeOnEdit(System.String)">
            <summary>
            Calculate the floating cell size on editing.
            </summary>
            <param name="text">Display text in the cell.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.GetDisplayTextSize(System.String,System.Windows.Size,System.Boolean)">
            <summary>
            Calculate the display text size with help of MeasureText() based on cellsize
            and FloatingCellSize if FloatingCellSize is not an empty.
            </summary>
            <param name="text">Display text.</param>
            <param name="cellSize">Size of the cell.</param>
            <param name="wrapText">true if textwrapping is applied; else false.</param>
            <returns>Size of the object.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.SetTextWrapping(System.Boolean)">
            <summary>
            Set and reset the text wrapping while editing in floating cell.
            </summary>
            <param name="setWrapText">True or False.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.GetTextWrapping">
            <summary>
            Determines if the text is wrapped or not.
            </summary>
            <returns>Returns true, if text is wrapped; otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.GetTextAlignment">
            <summary>
            Gets the HorizontalAlignment of the cell. 
            </summary>
            <returns>HorizontalAlignment.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.GetCurrentCellRendererElement">
            <summary>
            Used to get the edit UI element of current cell.
            </summary>
            <returns>An UI element.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the 
            <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn">SpreadsheetColumn</see>
            and optionally releases the managed resources.
            </summary>
            <param name="disposing">If set to <see langword="true"/>, to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.Renderer">
            <summary>
            Gets or sets the instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer"/> which provides the functionality of cell renderers.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.ExcelRange">
            <summary>
            Gets or sets the appropriate <see cref="T:Syncfusion.XlsIO.IRange"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.ExcelStyle">
            <summary>
            Gets or set the appropriate <see cref="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.ExcelStyle"/> which might be modified based on conditional formats, table formats, etc.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.HasNumber">
            <summary>
            Determines whether the display text of the cell is numeric or not.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.HasDateTime">
            <summary>
            Determines whether the display text of the cell is datetime or not.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.HasError">
            <summary>
            Determines whether the display text of the cell is formula error or not.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.Sparkline">
            <summary>
            Gets or sets the XlsIO's Sparkline of this cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.SparklineGroup">
            <summary>
            Gets or sets the XlsIO's SparklineGroup of this cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.Borders">
            <summary>
            Gets or sets the borders of this cell.
            Left border = Pen[0], Top = Pen[1], Right = Pen[2], Bottom = Pen[3].
            This property is used because we have used Spreadsheet.FormatStyle to store the Table format
            and conditional format style. And when accessing the adjacent cell's border, current(this) cell borders will
            be returned since we are using same instance across the workbook.(WPF-25930)
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn.HasRichText">
            <summary>
            Determines whether XlsIO have richtext or not.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell">
            <summary>
            Holds the properties and operations for current cell of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell">SpreadsheetCurrentCell</see> class. 
            </summary>
            <param name="grid">An instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell.OnProtectSheet">
            <summary>
            To enable/disable the selection of cell when sheet in protected mode
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell.OnUnProtectSheet(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            To render the selection after unprotecting the sheet.
            </summary>
            <param name="worksheet"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell.CanMove(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Determines whether to move the focus to next cell or not when sheet is in protected mode.
            </summary>
            <param name="rowCol">Coordinates of the cell.</param>
            <returns>True if the sheet is unprotected;otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell.BeginEdit(System.Boolean)">
            <summary>
            Determines whether the current cell enters into edit mode or not.
            </summary>
            <param name="forceEdit">Set this true to avoid triggering events.</param>
            <returns>True, if current cell enters into edit mode; otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell.EndEdit(System.Boolean)">
             <summary>
            Commits and ends the edit operation for the current cell.
             </summary>
             <param name="canCommit">If true, commit the new changes, otherwise revert to old value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell.GetControlValue">
            <summary>
            Used to get the control value from renderer when current cell is in edit mode.
            </summary>
            <returns>Value of current cell.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell.SetControlValue(System.Object)">
            <summary>
            Used to set the control value to renderer of the current cell when current cell is in edit mode.
            </summary>
            <param name="value">Value of the current cell.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell.SetFocus(System.Boolean)">
            <summary>
            Used to set the focus on the current cell.
            </summary>
            <param name="needToFocus">If true, set focus to edit element.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell.ShouldGridTryToHandleKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Handles the key down events that occurs when a key is pressed while the current cell has its focus.
            </summary>
            <param name="args">An <see cref="T:System.Windows.Input.KeyEventArgs">KeyEventArgs</see> that contains the event data.</param>
            <returns>True or False.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell.ResetCurrentCellState">
            <summary>
            Used to reset the current cell state of the renderer
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell.SetCurrentCellState">
            <summary>
            Used to set the CurrentCellState of the Renderer.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell.SetColumn(Syncfusion.UI.Xaml.CellGrid.GridColumn)">
            <summary>
            Set the GridColumn of CurrentCell.
            </summary>
            <param name="gridColumn"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell.OnGraphicSelectionChanging">
            <summary>
            Ocucrs when selection occurs on GraphicCell
            </summary>
            <returns>Returns false, if selection handled by currentcell</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
            <summary>
            Invoked when the current cell gets input text.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.TextCompositionEventArgs">TextCompositionEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell.MoveToLastUsedRange(System.Boolean)">
            <summary>
            Move current cell to last used range in a grid
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the.
            <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell">SpreadsheetCurrentCell</see>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell.HasCurrentCellState">
            <summary>
            Gets a value indicating whether the current cell renderer is set or not .
            </summary>
            <value><see langword="true"/> if the current cell renderer state is set ; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell.Column">
            <summary>
            Gets or sets the current <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell.Style">
            <summary>
            Gets the value indicating the <see cref="T:Syncfusion.XlsIO.IStyle"/> which represents the current cell style.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.XlsIO.IStyle"/> for the current cell range.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridModel">
            <summary>
            Represents the class which holds the operations and events associated with rows and columns.
            </summary>
            <remarks>The Operations and events such as Insertion/ Deletion of rows and columns in SfSpreadsheet.</remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridModel.calculatedCells">
            <summary>
            Indentifying recalculated cells in RecalculateDependencyCells method to avoid re caclculation of calculated cells
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridModel.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridModel">SpreadsheetGridModel</see> class. 
            </summary>
            <param name="grid">An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridModel.OnColumnsRemoved(Syncfusion.UI.Xaml.CellGrid.Helpers.GridRangeRemovedEventArgs)">
            <summary>
            Invoked after a range of columns in SfSpreadsheet is removed.
            </summary>
            <param name="e">An <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridRangeRemovedEventArgs">GridRangeRemovedEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridModel.OnColumnsInserted(Syncfusion.UI.Xaml.CellGrid.Helpers.GridRangeInsertedEventArgs)">
            <summary>
            Invoked after a range of columns in SfSpreadsheet is inserted.
            </summary>
            <param name="e">An <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridRangeInsertedEventArgs">GridRangeInsertedEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridModel.OnRowsRemoved(Syncfusion.UI.Xaml.CellGrid.Helpers.GridRangeRemovedEventArgs)">
            <summary>
            Invoked after a range of rows in SfSpreadsheet is removed.
            </summary>
            <param name="e">An <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridRangeRemovedEventArgs">GridRangeRemovedEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridModel.OnRowsInserted(Syncfusion.UI.Xaml.CellGrid.Helpers.GridRangeInsertedEventArgs)">
            <summary>
             Invoked after a range of rows in SfSpreadsheet is inserted.
            </summary>
            <param name="e">An <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridRangeInsertedEventArgs">GridRangeInsertedEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridModel.RemoveColumns(System.Int32,System.Int32)">
            <summary>
            Removes given number of columns from the specified index.
            </summary>
            <param name="removeAtColumnIndex">The column index.</param>
            <param name="count">Number of columns to be removed.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridModel.InsertColumns(System.Int32,System.Int32)">
            <summary>
            Inserts the given number of columns at the specified column index.
            </summary>
            <param name="insertAtColumnIndex">The column index to insert.</param>
            <param name="count">Number of columns to be inserted.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridModel.InsertRows(System.Int32,System.Int32)">
            <summary>
            Inserts specified number of rows at the given row index.
            </summary>
            <param name="insertAtRowIndex">The row index to insert.</param>
            <param name="count">Number of rows to be inserted</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridModel.RemoveRows(System.Int32,System.Int32)">
            <summary>
            Deletes given number of rows from the specified index.
            </summary>
            <param name="removeAtRowIndex">The row index.</param>
            <param name="count">Number of rows to be removed.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridModel.Dispose">
            <summary>
            Releases all resources used by the.
            <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridModel">SpreadsheetGridModel class.</see>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridModel.Grid">
             <summary>
             Gets the value indicating the instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.
             </summary>
            <value>An instance  of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridModel.FormulaEngine">
            <summary>
            Gets the value indicating the instance of <see cref="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridModel.FormulaEngine"/> which handles all the formula related
            operations in SfSpreadsheet
            </summary>
            <value>An instance of <see cref="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridModel.FormulaEngine"/>.</value>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridModel.ColumnsRemoved">
            <summary>
            Occurs after a range of columns has been removed.
            <seealso cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridRangeRemovedEventArgs"/> for more details.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridModel.ColumnsInserted">
            <summary>
            Occurs after a range of columns has been inserted.
            <seealso cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridRangeInsertedEventArgs"/> for more details.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridModel.RowsRemoved">
            <summary>
            Occurs when a range of rows is removed.
            <seealso cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridRangeRemovedEventArgs"/> for more details.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridModel.RowsInserted">
            <summary>
            Occurs after a range of rows has been inserted. Refer <seealso cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridRangeInsertedEventArgs"/> for more details.     
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.SelectionPanelExt">
            <summary>
            Represents the class which is used to render the fill series border selection.   
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SelectionPanelExt.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SelectionPanelExt">SelectionPanelExt</see> class. 
            </summary>
            <param name="name">Name of the panel</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SelectionPanelExt.RenderSelectedCells">
            <summary>
            Invoked inorder to draw the borders for fillSeries selection in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.
            </summary>       
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SelectionPanelExt.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the.
            <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SelectionPanelExt">SelectionPanelExt</see>.
            </summary>     
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt">
            <summary>
            Extension visual container for <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>. Handles the arrange and measure of all child panel elements. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt.manipulationOrigin">
            <summary>
            Used to store the manipulation origin when manipulation is started.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt">VisualContainerExt</see> class. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt.VisualContainerExt_ManipulationStarting(System.Object,System.Windows.Input.ManipulationStartingEventArgs)">
            <summary>
            Occurs when manipulation is starting and used to set the manipulation container.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt.VisualContainerExt_ManipulationStarted(System.Object,System.Windows.Input.ManipulationStartedEventArgs)">
            <summary>
            Occurs when manipulation started and used to set the manipulation mode for zooming.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt.VisualContainerExt_ManipulationDelta(System.Object,System.Windows.Input.ManipulationDeltaEventArgs)">
            <summary>
            Occurs when position changes during manipulation and used to perform the scale transform for zooming.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt.VisualContainerExt_ManipulationCompleted(System.Object,System.Windows.Input.ManipulationCompletedEventArgs)">
            <summary>
            Occurs when manipulation is completed and used to set zoom factor of Grid from the scale of RenderTransform.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt.CheckManipulationContainer(System.Windows.IInputElement)">
            <summary>
            Used to check whether the manipulation container is scrollowner or not.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt.WireEvents">
            <summary>
            Wire the events.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt.UnWireEvents">
            <summary>
            Unwire the events.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt.InitializeChildPanels">
            <summary>
            Initialize and add child panels.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt.MeasureChildPanels(System.Windows.Size)">
            <summary>
            Determines the size for the child panels.
            </summary>
            <param name="availableSize">The desired size for the child panel.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt.ArrangeChildPanels(System.Windows.Rect)">
            <summary>
            Arranges the content of child panels.
            </summary>
            <param name="rect">The actual size for the child panel.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt.InvalidateMeasureInfo">
            <summary>
            Invalidates or refreshes the measurement state for <see cref="F:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt.FormulaRangeSelectionPanel"/> and <see cref="F:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt.GraphicsPanel"/> .
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt.CreateSelectionPanel">
            <summary>
            Creates the <see cref="T:Syncfusion.UI.Xaml.CellGrid.SelectionPanel"/>.
            </summary>
            <returns>An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SelectionPanelExt"/>.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt.MouseWheelDown">
            <summary>
            Occurs when the mouse wheels down and used to decrease the zoom factor.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt.MouseWheelUp">
            <summary>
            Occurs when mouse wheels up and used to increase the zoom factor.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the.
            <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt">VisualContainerExt</see>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt.CreateFormulaRangePanel">
            <summary>
            Creates the <see cref="F:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt.FormulaRangeSelectionPanel"/>.
            </summary>
            <returns>An instance of <see cref="F:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt.FormulaRangeSelectionPanel"/>.</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt.Grid">
            <summary>
            Gets the value indicating the instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/> .
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid">
            <summary>
            Represents a class which is used for displaying the data of <see cref="T:Syncfusion.XlsIO.IWorksheet"/>. 
            </summary>
            <remarks>The data will be displayed in the form of rows and columns. This class also includes the selection and editing operations
            in grid that allow the users to easily manage the data.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid">SpreadsheetGrid</see> class. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.ZoomFactorProperty">
            <summary>
            Identifies the zoom dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.GetArrayRecordPosition(System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Gets the position of array record of the cell.
            </summary>
            <param name="row">Input row</param>
            <param name="col">Input column</param>
            <param name="height">Height to be considered</param>
            <param name="width">Width to be considered</param>
            <returns>Returns Array Record Position</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.GetColumnWidthFromSheet(System.Int32)">
            <summary>
            Used to get the column width from worksheet by adjusting with the zoom scale.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.GetRowHeightFromSheet(System.Int32)">
            <summary>
            Used to get the row height from worksheet by adjusting with the zoom scale.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.AdjustColumnWidth(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn,System.String,System.Boolean)">
            <summary>
            Adjust the column width when cell has number or date time format values.
            </summary>
            <param name="column">current column</param>
            <param name="displayText">display text</param>
            <param name="excelStyle">Excel style, used for measure the size for adjust the column width. Because the excel style is set in OnUpdateColumn
            But this method will called before that method called So pass the excel style as parameter</param>
            <param name="hasNumber">true when cell value is number otherwise false</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.GetExponentialFormatText(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Get the formatted text in exponential format for number format.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.InvalidateConditionalFormats(Syncfusion.XlsIO.IRange)">
            <summary>
            Invalidate the range when conditional formatting has changed while edit.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.InvalidateSparklines(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Invalidate the Sparklines after editing when any of the Sparkline's DataRange contains this range .
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.SpreadsheetGrid_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/> loaded.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.OnCreateCopyPaste">
            <summary>
            Initialize the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste"/> when the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/> is loaded.
            </summary>
            <returns>An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste"/>.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.AutoFitHeaderColumn">
            <summary>
            Helper method to fit the header column width to its content like Excel
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.ScrollRows_Changed(System.Object,Syncfusion.UI.Xaml.Grid.ScrollAxis.ScrollChangedEventArgs)">
            <summary>
            Occurs when scroll rows changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.ScrollColumns_Changed(System.Object,Syncfusion.UI.Xaml.Grid.ScrollAxis.ScrollChangedEventArgs)">
            <summary>
            Occurs when scroll columns changed
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.SetExcelLikeHeaders(Syncfusion.UI.Xaml.Spreadsheet.Helpers.SpreadsheetQueryRangeEventArgs)">
            <summary>
            Modify the Style of header cells based on selection like Excel
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.ShowOrHidePopup(System.Boolean)">
            <summary>
            Show or Hide the FillSeries, Paste and ContextMenu popup.
            </summary>
            <param name="show">If true the show the popup else hide it.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.ProcessShortCutKeys(System.Windows.Input.KeyEventArgs)">
            <summary>
            Display the current date like Excel when press the (Ctrl+;) keys.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.SetCellValue(Syncfusion.XlsIO.IRange,System.String)">
            <summary>
            Sets the value or formula to the given <see cref="T:Syncfusion.XlsIO.IRange"/> in the Workbook
            </summary>
            <param name="currentExcelRange">An instance of <see cref="T:Syncfusion.XlsIO.IRange"/></param>
            <param name="cellValue">Value to be displayed</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.GetCalculatedValue(Syncfusion.XlsIO.IRange)">
            <summary>
            Returns the calculated value (without formatting) for a formula cell.
            </summary>
            <param name="range">IRange.</param>
            <remarks>If the passed range is not a formula cell, then it returns null.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.DeleteValuesFromSelectedRanges">
            <summary>
            Helps to delete the value of cell in a selected ranges.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.OnCurrentCellEndEdit(Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellEndEditEventArgs)">
            <summary>
            Commits and ends the edit operation on the current cell in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="e">An <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellEndEditEventArgs">CurrentCellEndEditEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.ShowHidePopup(System.Boolean)">
            <summary>
            To show and hide popup's when moved to another application
            </summary>
            <param name="show">True, if the popup is displayed; otherwise false</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.OnCurrentCellValidating(Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValidatingEventArgs)">
            <summary>
            Complete Datavalidation operation triggers from this overided OnCurrentCellValidating method
            </summary>
            <param name="e">CurrentCellValidatingEventArguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.GetDependentCellValue(System.Int32,System.Int32)">
            <summary>
            This method gets the dependent cell value of the corresponding row and column index of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.
            </summary>
            <param name="rowIndex">Index of the corresponding cell's row.</param>
            <param name="colIndex">Index of the corresponding cell's column.</param>
            <returns>An instance of <see cref="T:Syncfusion.XlsIO.IRange"/>.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or
            internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate"/>.
            </summary>
            <remarks>Builds a visual tree for the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.VisualContainerExt"/>, when a new template is applied and initialize the
            Grouping elements and cellrenderer collection.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.OnCreateModel">
            <summary>
            Creates a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridModel"/> for the grid.
            </summary>
            <returns>null.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.OnCreateGridColumn(Syncfusion.UI.Xaml.CellGrid.SfCellGrid)">
            <summary>
            Creates a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridColumn"/> which holds the information 
            of the every cells in the grid.
            </summary>
            <param name="grid">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.SfCellGrid"/>.</param>
            <returns>An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>. </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.OnCreateCurrentCell">
            <summary>
            Creates a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell"/> which maintains the
            current cell in the grid.
            </summary>
            <returns>An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.UnWireEvents">
            <summary>
            Unwires or unloads the events in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.WireEvents">
            <summary>
            Wires or loads the events in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.FormulaEngine_UpdateNamedRange(System.Object,Syncfusion.UI.Xaml.CellGrid.UpdateNamedRangeEventArgs)">
            <summary>
            This events invokes when NamedRanges are added or updated in worksheet.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.InitializeCellRendererCollection">
            <summary>
            Initializes the CellRenderer Collection in the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.SetColumnWidth(System.Int32,System.Int32,System.Double)">
            <summary>
            Used to set the column width in the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.
            </summary>
            <param name="startIndex">Start column index.</param>
            <param name="endIndex">End column index.</param>
            <param name="width">Width of the column to expand.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.SetRowHeight(System.Int32,System.Int32,System.Double)">
            <summary>
            Used to set the row height in the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.
            </summary>
            <param name="startIndex">Start row's index.</param>
            <param name="endIndex">End row's index.</param>
            <param name="height">Height of the row to resize.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.OnCellRequestNavigateEvent(Syncfusion.UI.Xaml.CellGrid.Helpers.CellRequestNavigateEventArgs)">
            <summary>
            Provides support for hyperlink navigation between different cells in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.
            </summary>
            <param name="e">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CellRequestNavigateEventArgs"/></param>
            <returns>True, if the navigation can be done in cell; otherwise, false.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.GetDisplayText(System.Int32,System.Int32)">
            <summary>
            Used to get the display text of the cell.
            </summary>
            <param name="rowIndex">RowIndex of the cell.</param>
            <param name="colIndex">ColumnIndex of the cell.</param>
            <returns>Returns the display text.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.GetCellValue(System.Int32,System.Int32)">
            <summary>
            Used to get the value of the cell.
            </summary>
            <param name="rowIndex">RowIndex of the cell.</param>
            <param name="colIndex">ColumnIndex of the cell.</param>
            <returns>Returns the cell value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
            <summary>
            Occurs when the current cell gets the input text.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.TextCompositionEventArgs">TextCompositionEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Occurs before the KeyDown event when a key is pressed while focus is on this control.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.KeyEventArgs">KeyEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.OnKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyUp"/> attached event reaches an element in its route that is derived from this
            class. Implement this method to add class handling for this event. 
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.KeyEventArgs"/> that
            contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.OnVisualContainerPointerMoved(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Occurs when the pointer moved over the VisualContainer.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:System.Windows.Input.MouseEventArgs">MouseEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.OnVisualContainerPointerPressed(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Occurs when the pointer is pressed on VisualContainer.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:System.Windows.Input.MouseButtonEventArgs">MouseButtonEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.OnVisualContainerPointerReleased(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Occurs when the pointer is released on VisualContainer.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:System.Windows.Input.MouseButtonEventArgs">MouseButtonEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.CanPerformAutoScroll">
            <summary>
            Below code is used to Check whether Autro Scrolling can be performed or not
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.GetPointerDownRowColumnIndex">
            <summary>
            Used to get the pointer down rowcolumnindex by considering formularange selection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.GetPointerMoveRowColumnIndex">
            <summary>
            Used to get the pointer move rowcolumnindex, formularange selection considered
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.GetActiveRange">
            <summary>
            Used to get the Active range, formularange selection considered
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the.
            <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid">SpreadsheetGrid</see>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.OnCellContextMenuOpening(Syncfusion.UI.Xaml.CellGrid.Helpers.CellContextMenuOpeningEventArgs)">
            <summary>
            Customize the visibility of of items in the contextmenu
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.RefreshCellContextMenu">
            <summary>
            Set the visibility of all the contextmenu items as visible.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.OnGraphicCellContextMenuOpening(Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCellContextMenuOpeningEventArgs)">
            <summary>
            Customize the visibility of of items in the GraphicCell contextmenu
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.CurrentCell">
            <summary>
            Gets the value indicating the instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell"/> which maintains the current cell in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.Model">
            <summary>
            Gets the value indicating the instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridModel"/> which holds
            the operation on rows and columns in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGridModel"/></value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.SheetName">
            <summary>
            Gets the value indicating the name of the worksheet in the Workbook.
            </summary>
            <value>Name of the worksheet.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.GraphicModel">
            <summary>
            Gets the value indicating the instance of <see cref="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.GraphicModel"/> which holds all
            the information about graphic cells.
            </summary>
            <value>An instance of <see cref="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.GraphicModel"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.Worksheet">
            <summary>
            Gets the value indicating the instance of <see cref="T:Syncfusion.XlsIO.IWorksheet"/> in the Workbook.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.XlsIO.IWorksheet"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.CellRenderers">
            <summary>
            Gets a value indicating the instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection"/> 
            which holds the collection of cellrenderer objects.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.FillSeriesController">
            <summary>
            Gets or sets the value indicating the instance of <see cref="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.FillSeriesController"/>
            which provides support to autofill the data.
            </summary>
            <value>An instance of <see cref="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.FillSeriesController"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.ZoomFactor">
            <summary>
            Gets or sets the zoom factor. Value must be in range from 0.5 to 4.0.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.Container">
            <summary>
            Gets or sets the visual container.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.Spreadsheet">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.GridConditionalFormats">
            <summary>
            Gets or sets the conditional formats.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid.QueryRange">
            <summary>
            Occurs when grid queries for <see cref="T:Syncfusion.XlsIO.IRange"/> information about a specifc cell while rendering.
            </summary>
            <example>
            <code lang="C#">
            var grid = spreadsheet.ActiveGrid;
            grid.QueryRange+=grid_QueryRange;
            void grid_QueryRange(object sender, SpreadsheetQueryRangeEventArgs e)
            {
               if (e.Cell.ColumnIndex == 5)
                   e.ExcelStyle.ColorIndex = ExcelKnownColors.Blue;
            }
            </code>
            </example>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.FormulaBar">
            <summary>
            Class which holds the properties and operations related with controls such as NameBox, FormulaTextBox, EndEdit button and CancelEdit button in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <remarks>
            <para>The Formula Bar is located above the worksheet area of the spreadsheet. The formula bar displays the data or formula stored in the active cell.</para>
            <para>The Name Box is located next to the formula bar above the worksheet area. The Name Box normally displays the cell reference of the active cell.</para>
            <para>The EndEdit Button is used to save the entered the data and end edit the cell.</para>
            <para>The CancelEdit Button is used to revert the newly entered data and end edit the cell.</para>
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.FormulaBar">FormulaBar</see> class. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaBar.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or
            internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate"/>.
            </summary>
            <remarks>Builds the visual tree for the Formula Bar when a new template is applied.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaBar.OnPointerReleased">
            <summary>
            Used to update the NameBox when the Pointer is Released
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaBar.UpdateNameBox">
            <summary>
            Used to update the namebox text
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaBar.SetNameBoxText(System.String)">
            <summary>
            Used to Set the NameBox Text
            </summary>
            <param name="text">Text to be displayed in the NameBox</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaBar.GetNameBoxText">
            <summary>
            Used to get the Text entered in the NameBox
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaBar.WireEvents">
            <summary>
            Hook the events
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaBar.UnWireEvents">
            <summary>
            Unhook the events
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaBar.UpdateFormulaTextBoxBinding(System.Boolean)">
            <summary>
            Used to update the formula textbox binding
            </summary>
            <param name="isEditing"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaBar.GetCellName(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Gets the cellname for the specified range
            </summary>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaBar.AddSelection">
            <summary>
            Used to Add Selection using the Specified Text (i.e) Text entered in the NameBox
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaBar.AddNamedRange(System.String,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Add the named range to the GridFormulaEngine and Workbook
            </summary>
            <param name="name">NamedRange Name</param>
            <param name="range">GridRangeInfo</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaBar.Dispose">
            <summary>
            Dispose the live instances
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController">
            <summary>
            Controller to select the cell or range references directly while editing the formula.
            </summary>
            <remarks>Handles the keyboard and mouse interaction to select the formula range references. And also it visually denotes the range references if the cell has formula while editing. </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController">FormulaRangeSelectionController</see> class. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.lastSelectedRange">
            <summary>
            Used to maintain the last selected formula range
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.isInSelection">
            <summary>
            Used to notify whether the Formula Range selection is in process
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.isInKeyNavigation">
            <summary>
            Used to notify whether the key navigation is in process
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.isInMove">
            <summary>
            Used to notify whether the Formula range drag selection is in process
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.isCtrlKeyPressed">
            <summary>
            Used to Check whether the Control key is pressed or not
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.rText">
            <summary>
            Used to get the text to be set as rendered text while navigating grid
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.StartRowColumnIndex">
            <summary>
            Used to notify the Starting RowColumnIndex of the formula range
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.LastRowColumnIndex">
            <summary>
            Used to maintain the last selected RowColumnIndex of the formula range
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.FormulaRange">
            <summary>
            Used to update the current formula range while navigating through Shift + key navigation
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.ActiveGrid">
            <summary>
            Used to get information about the Active Grid
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.HandlePointerOperations(Syncfusion.UI.Xaml.CellGrid.GridPointerEventArgs,Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Handles the mouse pointer operations in SfSpreadsheet
            </summary>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridPointerEventArgs">GridPointerEventArgs</see> that contains the event data.</param>
            <param name="rowcolIndex">The row and column index where the pointer is positioned</param>
            <returns>True or False</returns>
            <remarks>Based on the one of the enumeration <see cref="T:Syncfusion.UI.Xaml.CellGrid.PointerOperation"/> values, corresponding pointer operation is performed in SfSpreadsheet</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.OnUiElement_PointerPressed">
            <summary>
            Used to Notify that the Pointer pressed on UiElement
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.OnUiElementGotFocus">
            <summary>
            Used to notify that the UiElement got focus
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.SetEditingGrid(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Sets the Editing Grid Where the Current Cell will be in Editing
            </summary>
            <param name="grid"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.ActiveGridChanging(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Used to Notify that the Active Grid is to be Changed
            </summary>
            <param name="grid"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.ActiveGridChanged(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Used to Notify that the Active Grid is Changed
            </summary>
            <param name="grid"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.OnCurrentCellValidating">
            <summary>
            Used to Notify the Current Cell is on Validating and Auto Correct formula if it is a formula cell
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.OnCurrentCellStartEditing">
            <summary>
            used to notify when the Current Cell Starts editing
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.OnCurrentCellEndEdit">
            <summary>
            Used to Nofify that the Current Cell Completes editing
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.OnTextChanged">
            <summary>
            Used to Notify When the CurrentCellRenderer Text is changed
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.OnFormulaBarLeftButtonDown">
            <summary>
            Used to Notify when the Formulabar is Clicked
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.OnFormulaBarKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Used to Notify that the Key is pressed when the Formula Bar is in focus
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.CanSelectFormulaRange(System.String)">
            <summary>
            Determines whether the formula range selection happens or not.
            </summary>
            <param name="renderedText">Text in the current range.</param>
            <returns>True if the formula range is selection was successful;otherwise, False.</returns>
            <remarks>Used to determine whether the selection can be done in the given range which starts with equal sign.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.HandleKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Handles the key down operations in SfSpreadsheet.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.KeyEventArgs">KeyEventArgs</see> that contains the event data.</param>
            <returns>True or False.</returns>
            <remarks>Invoked when the key is pressed while the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/> has its focus and handles the key navigations/operations for the selected formula ranges.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.OnPointerPressed(System.Windows.Input.MouseEventArgs,Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Invoked when the mouse pointer is pressed while the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/> has its focus.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.MouseEventArgs">MouseEventArgs</see> that contains the event data.</param>
            <param name="rowColIndex">The row and column index where the mouse pointer is pressed.</param>
            <returns>True or False.</returns>
            <remarks>The mouse interactions are received, processed, and managed as pointer input in SfSpreadsheet.Clicking on any of the mouse buttons(left,wheel,right) invokes this function which
            determines the action to be performed in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/> with the formula range.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.OnPointerMoved(System.Windows.Input.MouseEventArgs,Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Invoked when the mouse pointer is moved while the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/> has its focus.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.MouseEventArgs">MouseEventArgs</see> that contains the event data.</param>
            <param name="rowColIndex">The row and column index where the mouse pointer is positioned.</param>
            <returns>True or False.</returns>
            <remarks>The mouse interactions are received, processed, and managed as pointer input in SfSpreadsheet. Hence whenever the mouse moves over an element's bounds, even if no mouse button is pressed at the time also invokes this function which
            determines the action to be performed in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/> with the formula range.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.OnPointerReleased(System.Windows.Input.MouseEventArgs,Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Invoked when the mouse pointer is released while the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/> has its focus.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.MouseEventArgs">MouseEventArgs</see> that contains the event data.</param>
            <param name="rowColIndex">The row and column index where the mouse pointer is positioned.</param>
            <returns>True or False</returns>
            <remarks>The mouse interactions are received, processed, and managed as pointer input in SfSpreadsheet.
            Invoked only when that same mouse button is released (no other button can be associated with the pointer until this event is complete).</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.ProcessHeaderSelection(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Updates the formula range for the selection in header cells based on the given row and column index of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>. 
            </summary>
            <param name="rowColIndex">The Row and Column index where the pointer is positioned.</param>
            <remarks>Invoked by OnPointerMoved, OnPointerPressed and ProcessKeyNavigation methods to update the selection.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.ProcessShiftKeyNavigation(System.Windows.Input.KeyEventArgs)">
            <summary>
            Process and selects the formula ranges when any arrow key is pressed along with Shift key.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.KeyEventArgs">KeyEventArgs</see> that contains the event data.</param>
            <remarks>Invoked by ProcessKeyNavigation method and maintains the last selected row and column index of the formula range.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.ProcessKeyNavigation(System.Windows.Input.KeyEventArgs)">
            <summary>
            Process and selects the formula ranges when any arrow key is pressed.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.KeyEventArgs">KeyEventArgs</see> that contains the event data.</param>
            <remarks>To customize the Keyboard interactions in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.ParseRendererText(System.String)">
            <summary>
            Parse the Rendered Text and if the cells is a valid range then add it in the corresponding collection
            </summary>
            <param name="renderedText"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.SetRendererText(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Used to Set the CurrentCellRenderer Text
            </summary>
            <param name="gridRange"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.GetGridRange(System.String)">
            <summary>
            Used to get the Grid range from the string value
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.GetParsedText(System.String)">
            <summary>
            Used to get the Parsed Text from the Rendered Text
            </summary>
            <param name="text">Rendered Text</param>
            <returns>returns string list which denotes the formula ranges of the Current Cell</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.ProcessAutoScrollFormulaRangeSelection(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Below code is used to Process Auto Scroll when Formula Range Selection is Performed
            </summary>
            <param name="rowColIndex"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.CurrentCellRendererElement">
            <summary>
            Used to get the CurrentCell Renderer Element
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.AllowMouseSelection">
            <summary>
            Gets or sets a value indicating whether the user is allowed to perform the formula range selection with mouse or keyboard.
            </summary>
            <value><see langword="true"/> if the user can perform the formula range selection with mouse or keyboard; otherwise, <see langword="false"/></value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.AllowSelectionOnEditing">
            <summary>
            Gets or sets a value indicating whether it visually denotes the range references if the cell has formula while editing .
            </summary>
            <value><see langword="true"/> if the cell has formula for selection while editing ; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.IsFormulaEditing">
            <summary>
            Determines whether the formula is in editing
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.CurrentFormulaRange">
            <summary>
            Used to update the currentFormulaRange while doing selection with mouse
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.BackToEditingGrid">
            <summary>
            Used to Notify that the Sheet is to be moved to the editing grid
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.IsInSheetReference">
            <summary>
            Used to notify that the Formula range selection is to be done with Sheet Reference
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.IsSheetNavigated">
            <summary>
            Used to indicated that the sheet is navigated
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.EnableKeyNavigation">
            <summary>
            Used to specify whether Key Navigation can be performed
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.EditingGrid">
            <summary>
            Used to get information about the Editing Grid
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.SelectedFormulaRanges">
            <summary>
            Gets or sets the collection of newly Selected formula ranges
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController.ExistingFormulaRanges">
            <summary>
            Gets or sets the collection of existing formula range of a cell
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionPanel">
            <summary>
            Panel used for displaying the formula ranges in the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionPanel.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionPanel">FormulaRangeSelectionPanel</see> class. 
            </summary>
            <param name="name">Name of the panel.</param>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionPanel.NormalBorders">
            <summary>
            Contains the list of Normal Borders used in this panel to intimate the Selection with Colors
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionPanel.DottedBorders">
            <summary>
            Contains the list of Dotted borders used in this panel to intimate the Dotted border selection
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Determines the size of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionPanel"/>.
            </summary>
            <param name="availableSize">The size that the panel can occupy.</param>
            <returns>The desired size of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionPanel"/>. </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the content of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionPanel"/> in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="finalSize">The final size which the panel used to arrange itself.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionPanel.EnsureFormulaRanges">
            <summary>
            used to ensure the Formula Range Elements used in this panel
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionPanel.GetBorderBrush(System.Int32)">
            <summary>
            Gets the color of the border color to be used for intimating the Formula range selection
            </summary>
            <param name="index">position of the specified range in the current cell formula range. </param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionPanel.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionPanel">FormulaRangeSelectionPanel</see>.
            </summary> 
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionPanel.ActiveGrid">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionPanel.FormulaRangeElement">
            <summary>
            Represents a class that maintains the information about the borders in the FormulaRangeSelection.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionPanel.FormulaRangeElement.Element">
            <summary>
            Border which is used to intimate the Formula Range Selection
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionPanel.FormulaRangeElement.Range">
            <summary>
            Intimates the Formula Range
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionPanel.FormulaRangeElement.IsEnsured">
            <summary>
            Gets or sets true if the Element is ensured else false
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel">
            <summary>
            Represents a panel which is used to position and arrange the grouping elements such as expand buttons, collapse buttons, etc.
            </summary>
            <remarks>Holds all the operations involved with the Grouping elements. </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel">OutlinesPanel</see> class. 
            </summary>   
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            When overridden in a derived class, measures the size in layout required for
            child elements and determines a size for the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel"/>derived class. 
            </summary>
            <param name="availableSize">The size that the panel can occupy.</param>
            <returns>The desired size of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel"/>. </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the content of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel"/> in <see cref="P:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.SfSpreadsheet"/>.
            </summary>
            <param name="finalSize">The final size which the panel used to arrange itself.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            Draws the content of a <see cref="T:System.Windows.Media.DrawingContext"/>
            object during the render pass of a <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel"/> element. 
            </summary>
            <param name="dc">The <see cref="T:System.Windows.Media.DrawingContext"/> object
            to draw.</param>
            <remarks>Draws the horizontal and vertical grouping lines based on the grouping range.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.AddGroupingElements(Syncfusion.XlsIO.Parser.Biff_Records.IOutlineWrapper)">
            <summary>
            Add the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGroupButton"/> as a <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel"/> element and updates the grouping state
            </summary>
            <param name="outlineWrapper">Contains the information about the outline</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.AddOutlineLabelButtons(Syncfusion.XlsIO.Implementation.WorksheetImpl)">
            <summary>
            Adds the Outline label buttons as <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel"/> elements.
            </summary>
            <param name="worksheetImpl">An instance of <see cref="T:Syncfusion.XlsIO.Implementation.WorksheetImpl"/></param>
            <remarks>Invokes the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.CollapseAllGroupCommand"/> to perform expand/collapse operations based on outline value</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.Group(Syncfusion.XlsIO.ExcelGroupBy)">
            <summary>
            Method used to Add Grouping Elements, when Grouping/Ungrouping Operation is Performed
            </summary>
            <param name="GroupBy">Grouping Type either ByRows or ByColumns</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.ArrangeUIElements(System.Windows.Size)">
            <summary>
            To Arrange the Elementes in the Outline Panels
            </summary>
            <param name="finalSize"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.InitializeGroupingElements(Syncfusion.XlsIO.ExcelGroupBy)">
            <summary>
            Used to Initialize the Grouping Elements, while importing or navigating to next sheet
            </summary>
            <param name="GroupBy">Grouping Types either ByRows or ByColumns</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.RefreshButtonState">
            <summary>
            Used to Refresh the Button State while Resizing
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.UpdateGroupingState(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGroupButton)">
            <summary>
            Used to set the Grouping State for the SpreadsheetGroupButton
            </summary>
            <param name="button">The SpreadsheetGroupButton</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.ConvertRangeToRect(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Method used to Convert the Specified range into Rect
            </summary>
            <param name="range">Range to be Converted as Rect</param>
            <returns>returns Rect for the Specified range</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.GetLastRowHeight(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Gets the row height for the last row in the specified range if summary row below else
            gets the row height for the first row in the specified range
            </summary>
            <param name="range"></param>
            <returns>returns the first/last row height</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.GetLastColumnWidth(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Gets the column width for the last column in the specified range if summary column right else
            gets the column width for the first column in the specified range
            </summary>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.GetButtonHeight(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,System.Double)">
            <summary>
            Gets the Button Height, used to check when the Group Buttons are to be displayed at the Top / Bottom corner of the screen
            </summary>
            <param name="GroupingRange"></param>
            <param name="AdjacentRowHeight">indicates the next row height when summary row below else indicates previous row height</param>
            <returns>returns the button height</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.GetAdjacentRowHeight(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Gets the Adjacent Row Height
            </summary>
            <param name="range">Grouping range</param>
            <returns>returns the row height of the next row if Summary Row below else returns the row height
            of the previous row</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.GetAdjacentColumnWidth(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Gets the Adjacent Column Width
            </summary>
            <param name="range">Grouping range</param>
            <returns>returns the next column width if Summary Column Right else returns the Previous Column width </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.Dispose">
             <summary>
             Dispose all the instance used by the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel"/> class.
             </summary>
            <remarks>Performs application-defined tasks associated with freeing, releasing, or
             resetting unmanaged resources.</remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.SfSpreadsheet">
            <summary>
            Gets or sets the instance of the <see cref="P:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.SfSpreadsheet"/> which is used to view, edit and create excel files.
            </summary>
            <value>An instance of <see cref="P:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.SfSpreadsheet"/>. </value>        
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.ActiveGrid">
            <summary>
            Gets or sets the instance of the active <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/> which displays the data in SfSpreadsheet.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.IsSummaryRowBelow">
            <summary>
            Gets or sets the Page Setup of the Active sheet, if Summary Rows to be displayed below, returns true else false
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.IsSummaryColumnRight">
            <summary>
            Gets or sets the Page Setup of the Active sheet, if Summary Columns to be displayed Right, returns true else false
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.Orientation">
            <summary>
            Gets or sets the orientation of the Outlines panel.
            </summary>
            <value>One of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.GroupingOrientaion"/> enumeration that specifies the panel orientation.</value>
            <remarks>The Orientation of the panel is either horizontal or vertical.</remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.GroupingOrientaion">
            <summary>
            Defines the direction that specifies orientation for outlines panel.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.GroupingOrientaion.Vertical">
            <summary>
            Vertical orientation of the outlines panel
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel.GroupingOrientaion.Horizontal">
            <summary>
            Horizontal orientation of the outlines panel 
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGroupButton">
            <summary>
            Class for Expand/Collapse buttons placed in the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.OutlinesPanel"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGroupButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGroupButton">SpreadsheetGroupButton</see> class. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGroupButton.#ctor(Syncfusion.XlsIO.Parser.Biff_Records.IOutlineWrapper)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGroupButton">SpreadsheetGroupButton</see> class. 
            </summary>
            <param name="outlineWrapper">Holds the information about the outlines</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGroupButton.OutlineWrapper">
            <summary>
            Gets or sets an instance of <see cref="T:Syncfusion.XlsIO.Parser.Biff_Records.IOutlineWrapper"/> which contains the information about outlines .
            </summary>
            <value>An instance of <see cref="T:Syncfusion.XlsIO.Parser.Biff_Records.IOutlineWrapper"/>.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.ProgressRing">
            <summary>
            This is a control which will be displayed to indicates Spreadsheet control is busy in doing some processing (For example, loading a workbook).
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.ProgressRing.TextProperty">
            <summary>
            Identifies the TextProperty dependency property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.ProgressRing.Text">
            <summary>
            Gets or sets the text to be displayed in the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.ProgressRing"/>
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.BusyDecorator">
            <summary>
            Class which is used to host the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.ProgressRing"/> in visual using Thread.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.BusyDecorator.threadHelper">
            <summary>
            Helper used for running the Visual in background thread
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.BusyDecorator.hostVisual">
            <summary>
            Represents a visual that can be connected to a parent visual tree
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.BusyDecorator.#ctor">
            <summary>
            Initialize new Instance for BusyDecorator Class
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.BusyDecorator.IsBusyProperty">
            <summary>
            Identifies the IsBusyProperty dependency property
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.BusyDecorator.IsBusyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Used to notify when IsBusy property is changed
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.BusyDecorator.ContentProperty">
            <summary>
            Identifies the CreateContent dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.BusyDecorator.GetVisualChild(System.Int32)">
            <summary>
            Gets the Visual Child
            </summary>
            <param name="index"></param>
            <returns>visual child which need to be displayed</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.BusyDecorator.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the size of Busy Indicator
            </summary>
            <param name="constraint"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.BusyDecorator.ShowProgressRing">
            <summary>
            Used to display the Busy Indicator
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.BusyDecorator.InvalidatesMeasure">
            <summary>
            Used to call the invalidate measure in dispatcher thread
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.BusyDecorator.HideProgressRing">
            <summary>
            Used to hide the Busy Indicator that is currently displayed
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.BusyDecorator.Dispose">
            <summary>
            Used to dispose the instances maintained to avoid memory leaks
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.BusyDecorator.IsBusy">
            <summary>
            Gets or sets a value indicates whether the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.ProgressRing"/> should be displayed or not
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.BusyDecorator.Content">
            <summary>
            Gets or sets the visual content to be displayed in a background thread.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.BusyDecorator.VisualChildrenCount">
            <summary>
            Gets the count of Visual Children
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.VisualContent">
            <summary>
            Represents a visual, to avoid threading exceptions delegate is used
            </summary>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.ThreadedVisualHelper">
            <summary>
            Performs background threading for the Visual
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.ThreadedVisualHelper.hostVisual">
            <summary>
            Represents a visual that can be connected into parent visual tree
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.ThreadedVisualHelper.resetEvent">
            <summary>
            Used to notify the waiting thread, that an event has occured 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.ThreadedVisualHelper.content">
            <summary>
            Content to be displayed in the visual
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.ThreadedVisualHelper.invalidateMeasure">
            <summary>
            Used to run an action. InvalidateMeasure is called when the action is performed
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.ThreadedVisualHelper.#ctor(Syncfusion.UI.Xaml.Spreadsheet.VisualContent,System.Action)">
            <summary>
            Initialize instance for ThreadVisualHelper class
            </summary>
            <param name="content">Content to be displayed in visual</param>
            <param name="invalidateMeasure">InvalidateMeasure will be called when the action is performed</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.ThreadedVisualHelper.Exit">
            <summary>
            Used to stop the currently running thread
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.ThreadedVisualHelper.DisplayProgressRing">
            <summary>
            Used to display the busy indicator in visual using presentation source
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.ThreadedVisualHelper.Dispose">
            <summary>
            Used to dispose the instances that are maintained to avoid memory leaks
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.ThreadedVisualHelper.Dispatcher">
            <summary>
            Used for running the thread in queue
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.ThreadedVisualHelper.HostVisual">
            <summary>
            Represents a visual object that can be connected to a parent visual tree
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.ThreadedVisualHelper.DesiredSize">
            <summary>
            Gets or sets the desired size of busy indicator
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.VisualTargetPresentationSource">
            <summary>
            Presentation source used to connect one visual tree to another visual tree
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.VisualTargetPresentationSource.visualTarget">
            <summary>
            Provides functionalities for connecting one visual tree to another across thread boundaries
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.VisualTargetPresentationSource.isDisposed">
            <summary>
            Used to determince whether disposed or not
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.VisualTargetPresentationSource.#ctor(System.Windows.Media.HostVisual)">
            <summary>
            Intializes an instance of VisualTargetPresentationSource
            </summary>
            <param name="hostVisual"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.VisualTargetPresentationSource.GetCompositionTargetCore">
            <summary>
            Returns a System.Windows.Media.CompositionTarget that is target for rendering the visual.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.VisualTargetPresentationSource.Dispose">
            <summary>
            Used to dispose the instances which are maintained
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.VisualTargetPresentationSource.DesiredSize">
            <summary>
            Gets or sets the Desired Size
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.VisualTargetPresentationSource.RootVisual">
            <summary>
            Gets or sets the root visual being presented in the source.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.VisualTargetPresentationSource.IsDisposed">
            <summary>
            Gets a value that declares whether the object is disposed.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.DataValidation">
            <summary>
            Represents the class which holds all the data validation operations in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.DataValidation.Validate(Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValidatingEventArgs,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Validating current cell data
            </summary>
            <param name="worksheet">Worksheet</param>
            <param name="currentCell">currentCell</param>
            <param name="args"></param>
            <param name="spreadsheet"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.DataValidation.FormulaDataValidation(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell,Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValidatingEventArgs,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Datavalidation support with formulas and cell references.
            </summary>
            <param name="currentCell"> Data validation applied cell</param>
            <param name="ExcelSheet">current excel sheet</param>
            <param name="args">currentcell validating event arguments</param>
            <param name="spreadsheet"> spreadsheet need to access formulaengine</param>
            <returns>boolean result</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.DataValidation.CurrentCellIntegerDataValidation(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell,Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValidatingEventArgs,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Integer Data validation
            </summary>
            <param name="currentCell">CurrentCell</param>
            <param name="ExcelSheet">Excelsheet</param>
            <param name="args"></param>
            <param name="spreadsheet"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.DataValidation.CurrentCellDecimalDataValidation(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell,Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValidatingEventArgs,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Decimal Validation
            </summary>
            <param name="currentCell">CurrentCell</param>
            <param name="ExcelSheet">ExcelSheet</param>
            <param name="args"></param>
            <param name="spreadsheet"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.DataValidation.DisplayErrorMessage(Syncfusion.XlsIO.IDataValidation,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell,Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValidatingEventArgs)">
            <summary>
            DisplayErrorMessage while get invalid data
            </summary>
            <param name="validation">IDataValidation rule</param>
            <param name="currentCell">Current Cell</param>
            <param name="ExcelSheet">ExcelSheet</param>
            <param name="spreadsheet"></param>
            <param name="args"></param>
            <returns>result</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.DataValidation.SelectAll(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell)">
            <summary>
            select all the text on the datavalidation applied cells if the condition fails.
            </summary>
            <param name="currentCell">datavalidation applied cell</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.DataValidation.CurrentCellDateDataValidation(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell,Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValidatingEventArgs,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Date validation
            </summary>
            <param name="currentCell">CurrentCell</param>
            <param name="ExcelSheet">Excel sheet</param>
            <param name="args"></param>
            <param name="spreadsheet"></param>
            <returns>result</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.DataValidation.CurrentCellTextLengthDataValidation(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell,Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValidatingEventArgs,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            TextLength Validation
            </summary>
            <param name="currentCell">CurrentCell</param>
            <param name="ExcelSheet">ExcelSheet</param>
            <param name="args"></param>
            <param name="spreadsheet"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.DataValidation.CurrentCellListValuesValidation(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCurrentCell,Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValidatingEventArgs,Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            List validation
            </summary>
            <param name="currentCell">CurrenCell</param>
            <param name="ExcelSheet">ExcelSheet</param>
            <param name="args"></param>
            <param name="spreadsheet"></param>
            <returns>result</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.DataValidation.ValidateFormula(Syncfusion.XlsIO.IRange,Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Validate the formula if the cellvalue present in the list or not.
            </summary>
            <param name="rangeToConvert"></param>
            <param name="sheet"></param>
            <param name="spreadsheetgrid"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.SearchManager">
            <summary>
            Class which provides support to find or replace the text in the document with advanced search options. 
            And also provides support to select all cells with formulas, conditional formatting, constants, data validation, etc.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.SearchManager.spreadsheet">
            <summary>
            Below variable is used to access the spreadsheet.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.SearchManager.foundRanges">
            <summary>
            Below IRange array variable is used to maintain and return the found ranges.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.SearchManager.foundRange">
            <summary>
            Below IRange variable is used to maintain and return the found range.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.SearchManager.findNextPosition">
            <summary>
            Below int variable is used to move the position to Next found range.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.SearchManager.sheetOption">
            <summary>
            Below string variable is used to maintain the sheet option for compare with new sheet option given by the user.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.SearchManager.findText">
            <summary>
            Below string variable is used to maintain the find text for compare with new find text given by the user.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.SearchManager.searchOption">
            <summary>
            Below string variable is used to maintain the search option for compare with new search option given by the user.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.SearchManager.findOption">
            <summary>
            Below string variable is used to maintain the find option for compare with new find option given by the user.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.SearchManager.isMatchCase">
            <summary>
            Below string variable is used to maintain the match case for compare with new match case option given by the user.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.SearchManager.isMatchEntireCell">
            <summary>
            Below string variable is used to maintain the match entire cell content for compare with new match entire cell content given by the user.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SearchManager.#ctor(Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet)">
            <summary>
            Hold the spreadsheet instance.
            </summary>
            <param name="spreadsheet"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SearchManager.UpdateHistoryManager(Syncfusion.XlsIO.IRange)">
            <summary>
            Maintain the history manager when perform replace and replace all operations.
            </summary>
            <param name="range">Source range that is which range is going to be replace.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SearchManager.FindAll(System.String,Syncfusion.XlsIO.IWorksheet,System.String,Syncfusion.UI.Xaml.Spreadsheet.SearchBy,Syncfusion.XlsIO.ExcelFindType,System.Boolean,System.Boolean)">
            <summary>
            Returns all matched ranges based on the given options. 
            <param name="searchWithinOption">Search within option is determine the find all opeartion to perform whether in workbook or worksheet.</param>
            <param name="worksheet">Need to specify the worksheet to perform find all operation.</param>
            <param name="searchText">Need to specify the search text to perform find all operation.</param>
            <param name="searchByOption">Searchby option is used to determine the find all operation performed in row wise or column wise.</param>
            <param name="findType">Find type option is used to determine the find all operation perform whether on formulas or values.</param>
            <param name="matchCase">Match case option is used to determine the find all operation perform whether on case sensitive text or not.</param>
            <param name="matchEntireCell">Match entire cell contents option is used to determine the find all operation perform on in which cell content is matched with given find text.</param>
            <returns>Returns found ranges in array format</returns>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SearchManager.FindNext(System.String,Syncfusion.XlsIO.IWorksheet,System.String,Syncfusion.UI.Xaml.Spreadsheet.SearchBy,Syncfusion.XlsIO.ExcelFindType,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Returns immediate matched range from the current range based on the given options.
            <param name="searchWithinOption">Search within option is determine the find next opeartion to perform whether in workbook or worksheet.</param>
            <param name="worksheet">Need to specify the worksheet to perform find next operation.</param>
            <param name="searchText">Need to specify the search text to perform find next operation.</param>
            <param name="searchByOption">Searchby option is used to determine the find next operation performed in row wise or column wise.</param>
            <param name="findType">Find type option is used to determine the find next operation perform whether on formulas or values.</param>
            <param name="matchCase">Match case option is used to determine the find next operation perform whether on case sensitive text or not.</param>
            <param name="matchEntireCell">Match entire cell contents option is used to determine the find next operation perform on in which cell content is matched with given find text.</param>
            <param name="isReplace">Determine whether perform replace or find next operation</param>
            <returns>Returns found range otherwise return null</returns>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SearchManager.Replace(System.String,Syncfusion.XlsIO.IWorksheet,System.String,System.String,Syncfusion.UI.Xaml.Spreadsheet.SearchBy,Syncfusion.XlsIO.ExcelFindType,System.Boolean,System.Boolean)">
            <summary>
            Returns which range is going to be replace next from the current cell based on the given parameters.
            <param name="searchWithinOption">Search within option is determine the replace opeartion to perform whether in workbook or worksheet.</param>
            <param name="worksheet">Need to specify the worksheet to perform replace operation.</param>
            <param name="searchText">Need to specify the search text to perform replace operation.</param>
            <param name="replaceText">Need to specify the replace text to perform replace operation.</param>
            <param name="searchByOption">Searchby option is used to determine the replace operation performed in row wise or column wise.</param>
            <param name="findType">Find type option is used to determine the replace operation perform whether on formulas or values.</param>
            <param name="matchCase">Match case option is used to determine the replace operation perform whether on case sensitive text or not.</param>
            <param name="matchEntireCell">Match entire cell contents option is used to determine the replace operation perform on in which cell content is matched with given find text.</param>
            <returns>Returns found range otherwise return null</returns>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SearchManager.ReplaceAll(System.String,Syncfusion.XlsIO.IWorksheet,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Replace all matched ranges with replace text based on the given options.
            <param name="searchWithinOption">Search within option is determine the replace all opeartion to perform whether in workbook or worksheet.</param>
            <param name="worksheet">Need to specify the worksheet to perform replace all operation.</param>
            <param name="searchText">Need to specify the search text to perform replace all operation.</param>
            <param name="replaceText">Need to specify the replace text to perform replace all operation.</param>
            <param name="matchCase">Match case option is used to determine the replace all operation perform whether on case sensitive text or not.</param>
            <param name="matchEntireCell">Match entire cell contents option is used to determine the replace all operation perform on in which cell content is matched with given find text.</param>
            <returns>Returns all replaced ranges.</returns>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SearchManager.IsValueChanged(System.String,System.String,Syncfusion.UI.Xaml.Spreadsheet.SearchBy,Syncfusion.XlsIO.ExcelFindType,System.Boolean,System.Boolean)">
            <summary>
            Used to ensure whether user changed the given parameters.
            <param name="option">Need to specify option is workbook or worksheet.</param>
            <param name="searchText">Need to specify the search text.</param>
            <param name="findType">Need to specify find type is whether formula or values.</param>
            <param name="searchByOption">Need to specify searchby option is whether row wise or column wise.</param>
            <param name="matchCase">Need to specify whether match case option is enabled or disabled.</param> 
            <param name="matchEntireCell">Need to specify whether match entire cell content option is enabled or disabled.</param>
            <returns>returns boolean type</returns>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SearchManager.Replace(Syncfusion.XlsIO.IWorksheet,System.String,System.String,Syncfusion.UI.Xaml.Spreadsheet.SearchBy,Syncfusion.XlsIO.ExcelFindType,System.Boolean,System.Boolean)">
            <summary>
            Returns which range is going to be replaced from the current cell within the worksheet.
            <param name="worksheet">Need to specify the worksheet to perform replace operation.</param>
            <param name="searchText">Need to specify the search text to perform replace operation.</param>
            <param name="replaceText">Need to specify the replace text to perform replace operation.</param>
            <param name="searchByOption">Searchby option is used to determine the replace operation performed in row wise or column wise.</param>
            <param name="findType">Find type option is used to determine the replace operation perform whether on formulas or values.</param>
            <param name="matchCase">Match case option is used to determine the replace operation perform whether on case sensitive text or not.</param>
            <param name="matchEntireCell">Match entire cell contents option is used to determine the replace operation perform on in which cell content is matched with given find text.</param>
            <returns>Returns which range is going to be replaced.</returns>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SearchManager.Replace(Syncfusion.XlsIO.IWorkbook,System.String,System.String,Syncfusion.UI.Xaml.Spreadsheet.SearchBy,Syncfusion.XlsIO.ExcelFindType,System.Boolean,System.Boolean)">
            <summary>
            Returns which range is going to be replaced from the current cell within the workbook.
            <param name="workbook">Need to specify the workbook to perform replace operation.</param>
            <param name="searchText">Need to specify the search text to perform replace operation.</param>
            <param name="replaceText">Need to specify the replace text to perform replace operation.</param>
            <param name="searchByOption">Searchby option is used to determine the replace operation performed in row wise or column wise.</param>
            <param name="findType">Find type option is used to determine the replace operation perform whether on formulas or values.</param>
            <param name="matchCase">Match case option is used to determine the replace operation perform whether on case sensitive text or not.</param>
            <param name="matchEntireCell">Match entire cell contents option is used to determine the replace operation perform on in which cell content is matched with given find text.</param>
            <returns>Returns which range is going to be replaced.</returns>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SearchManager.ClearFoundRanges">
            <summary>
            Clear the found ranges.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SearchManager.OnGridCellClicked(System.Int32,System.Int32)">
            <summary>
            Invoked when click on the GridCell.
            </summary>
            <param name="row"> CurrentCell Row index</param>
            <param name="col">CurrentCell Column index</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SearchManager.FindAll(Syncfusion.XlsIO.IWorkbook,System.String,Syncfusion.UI.Xaml.Spreadsheet.SearchBy,Syncfusion.XlsIO.ExcelFindType,System.Boolean,System.Boolean)">
            <summary>
            Returns all matched ranges within the workbook based on the given options.
            <param name="workbook">Need to specify the workbook to perform find all operation.</param>
            <param name="searchText">Need to specify the search text to perform find all operation.</param>
            <param name="searchByOption">Searchby option is used to determine the find all operation performed in row wise or column wise.</param>
            <param name="findType">Find type option is used to determine the find all operation perform whether on formulas or values.</param>
            <param name="matchCase">Match case option is used to determine the find all operation perform whether on case sensitive text or not.</param>
            <param name="matchEntireCell">Match entire cell contents option is used to determine the find all operation perform on in which cell content is matched with given find text.</param>
            <returns>Returns found ranges in array format</returns>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SearchManager.FindAll(Syncfusion.XlsIO.IWorksheet,System.String,Syncfusion.UI.Xaml.Spreadsheet.SearchBy,Syncfusion.XlsIO.ExcelFindType,System.Boolean,System.Boolean)">
            <summary>
            Returns all matched ranges within the specified worksheet based on the given options.
            <param name="worksheet">Need to specify the worksheet to perform find all operation.</param>
            <param name="searchText">Need to specify the search text to perform find all operation.</param>
            <param name="searchByOption">Searchby option is used to determine the find all operation performed in row wise or column wise.</param>
            <param name="findType">Find type option is used to determine the find all operation perform whether on formulas or values.</param>
            <param name="matchCase">Match case option is used to determine the find all operation perform whether on case sensitive text or not.</param>
            <param name="matchEntireCell">Match entire cell contents option is used to determine the find all operation perform on in which cell content is matched with given find text.</param>
            <returns>Returns found ranges in array format</returns>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SearchManager.FindNext(Syncfusion.XlsIO.IWorkbook,System.String,Syncfusion.UI.Xaml.Spreadsheet.SearchBy,Syncfusion.XlsIO.ExcelFindType,System.Boolean,System.Boolean)">
            <summary>
            Returns immediate matched range from the current range within the workbook based on the given options.
            <param name="workbook">Need to specify the workbook to perform find next operation.</param>
            <param name="searchText">Need to specify the search text to perform find next operation.</param>
            <param name="searchByOption">Searchby option is used to determine the find next operation performed in row wise or column wise.</param>
            <param name="findType">Find type option is used to determine the find next operation perform whether on formulas or values.</param>
            <param name="matchCase">Match case option is used to determine the find next operation perform whether on case sensitive text or not.</param>
            <param name="matchEntireCell">Match entire cell contents option is used to determine the find next operation perform on in which cell content is matched with given find text.</param>
            <returns>Returns found range.</returns>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SearchManager.FindNext(Syncfusion.XlsIO.IWorksheet,System.String,Syncfusion.UI.Xaml.Spreadsheet.SearchBy,Syncfusion.XlsIO.ExcelFindType,System.Boolean,System.Boolean)">
            <summary>
            Returns immediate matched range from the current range within the specified worksheet based on the given options.
            <param name="worksheet">Need to specify the worksheet to perform find next operation.</param>
            <param name="searchText">Need to specify the search text to perform find next operation.</param>
            <param name="searchByOption">Searchby option is used to determine the find next operation performed in row wise or column wise.</param>
            <param name="findType">Find type option is used to determine the find next operation perform whether on formulas or values.</param>
            <param name="matchCase">Match case option is used to determine the find next operation perform whether on case sensitive text or not.</param>
            <param name="matchEntireCell">Match entire cell contents option is used to determine the find next operation perform on in which cell content is matched with given find text.</param>
            <returns>Returns found range.</returns>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SearchManager.ReplaceAll(Syncfusion.XlsIO.IWorksheet,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns replaced ranges within the specified worksheet based on the given options.
            <param name="worksheet">Need to specify the worksheet to perform replace all operation.</param>
            <param name="searchText">Need to specify the search text to perform replace all operation.</param>
            <param name="replaceText">Need to specify the replace text to perform replace all operation.</param>
            <param name="matchCase">Match case option is used to determine the replace all operation perform whether on case sensitive text or not.</param>
            <param name="matchEntireCell">Match entire cell contents option is used to determine the replace all operation perform on in which cell content is matched with given find text.</param>
            <returns>Returns replaced ranges.</returns>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SearchManager.ReplaceAll(Syncfusion.XlsIO.IWorkbook,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns replaced ranges within the workbook based on the given options.
            <param name="workbook">Need to specify the workbook to perform replace all operation.</param>
            <param name="searchText">Need to specify the search text to perform replace all operation.</param>
            <param name="replaceText">Need to specify the replace text to perform replace all operation.</param>
            <param name="matchCase">Match case option is used to determine the replace all operation perform whether on case sensitive text or not.</param>
            <param name="matchEntireCell">Match entire cell contents option is used to determine the replace all operation perform on in which cell content is matched with given find text.</param>
            <returns>Returns all replaced ranges.</returns>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SearchManager.FindFormulas(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Returns ranges which have formulas within the specified worksheet..
            </summary>
            <param name="worksheet">Need to specify the worksheet to find the formulas.</param>
            <returns>Returns array ranges</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SearchManager.FindConstants(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Returns ranges which have constants within the specified worksheet..
            </summary>
            <param name="worksheet">Need to specify the worksheet to find the constants.</param>
            <returns>Returns array ranges</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SearchManager.FindDataValidation(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Returns ranges which have data validation within the specified worksheet..
            </summary>
            <param name="worksheet">Need to specify the worksheet to find the datavalidation applied range.</param>
            <returns>Returns array ranges</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SearchManager.FindConditionalFormatting(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Returns ranges which have conditional formatting within the specified worksheet..
            </summary>
            <param name="worksheet">Need to specify the worksheet to find the conditional format applied ranges.</param>
            <returns>Returns array ranges.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SearchManager.Dispose">
            <summary>
            Dispose maintained instances.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.SearchBy">
            <summary>
            Provides option to determine whether search have performed in row or column wise.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.NamespaceDoc">
            <summary>
            Contains classes which are required to create Spreadsheet.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet">
            <summary>
            SfSpreadsheet is a control for viewing, editing and creating Excel files.
            </summary>
            <remarks>SfSpreadsheet is an Excel inspired control which represents the data as cells organized in the form of rows and columns 
            It is built on XlsIO which features a full-fledged object model similar to the Microsoft Office Automation libraries.</remarks>
            <example>
            	<code lang="XAML">
            		<Window x:Class="SpreadsheetDemo.MainWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Title="Window1" Height="300" Width="300" xmlns:syncfusion="http://schemas.syncfusion.com/wpf">
            			<Grid>
            				<syncfusion:SfSpreadsheet x:Name="spreadsheet" />  				
            			</Grid>
            		</Window>
            	</code>
            	<code lang="C#">
            using System;
            using System.Windows;
            using System.IO;
            using System.Windows.Controls;
            using System.Windows.Input;
            using System.Windows.Media;
            using using Syncfusion.UI.Xaml.Spreadsheet;
            namespace SpreadsheetDemo
            {
            /// <summary>
            /// Interaction logic for MainWindow.xaml
            /// </summary>
            public partial class MainWindow : Window
            {
            public Window1()
            {
              InitializeComponent();
              SfSpreadsheet spreadsheet = new SfSpreadsheet();
              grid.Children.Add(spreadsheet);
            }
            }
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.isWorkbookChanging">
            <summary>
            Used to denote whether the workbook opening is in progress or not. If it is in progress, 
            then need to skip the triggering of open process again from Workbook property changed callback.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.isDisposingInstance">
             <summary>
            Gets the state of the  Old instance disposing.
            When a huge workbook imported in Spreadsheet. Its formulas are parsing by background thread.
            When suddenly opened new workbook  or other workbook. Backgroup execution should be stopped.
            Suppose if missed, Thread will try to get the value for disposed workbook.
            The field should not be used for any other purpose.
             </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.SelectedTabIndexProperty">
            <summary>
            Identifies the namespace SelectedTabIndexProperty dependency property.
            </summary>        
            <remarks>
            The identifier for the SelectedTabIndexProperty  dependency property.
            </remarks>        
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.FormulaBarVisibilityProperty">
            <summary>
            Identifies the namespace FormulaBarVisibilityProperty dependency property.
            </summary>
            <remarks>The identifier for the FormulaBarVisibilityProperty  dependency property.</remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.WorkbookProperty">
            <summary>
            Using a DependencyProperty as the backing store for Workbook.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet">SfSpreadsheet</see> class. 
            </summary>        
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.SelectRanges(System.String)">
            <summary>
            Used to select the ranges based on given cell reference.
            </summary>
            <param name="nameBoxText">Namebox which have cell reference for select the ranges in the spreadsheet.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.OnRequestCellReferenceNavigate(System.String)">
            <summary>
            Used to navigate the cell based on given cell reference.
            </summary>
            <param name="nameBoxText">Namebox which have cell reference for cell navigation in the spreadsheet.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or
            internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate"/>.
            </summary>
            <remarks>Builds a visual tree for the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/> when a new template is applied.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.SetWorkbook(Syncfusion.XlsIO.IWorkbook)">
            <summary>
            Used to set the workbook and create the predefined styles in the workbook.
            </summary>
            <param name="workbook"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.CalculateDpiFactor">
            <summary>
            Used to calculate the Dpi factor.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.OpenFile(System.IO.Stream)">
            <summary>
            Opens the excel workbook with the given stream.
            </summary>
            <param name="file">Stream of the file to be imported.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.ImportNamedRanges">
            <summary>
            Used to add the NamedRanegs in the Workbook in a collection
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.UpdateTabSheetName(System.String,System.String)">
            <summary>
            Update the sheet name to grid and worksheets in XlsIO if renamed.
            </summary>
            <param name="currentSheetName"></param>
            <param name="prevSheetName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.CheckTabSheetNameExists(System.String,System.String)">
            <summary>
            Used to find the sheet name is already exists in worksheets.
            </summary>
            <param name="prevSheetName"></param>
            <param name="currentSheetName"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.GetDefaultCellContextMenu">
            <summary>
            Create the context menu with the default items which needs to show.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.GetDefaultTabItemContextMenu">
            <summary>
            Gets the Default context menu items to be displayed
            </summary>        
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.tab_ContextMenuOpening(System.Object,System.Windows.Controls.ContextMenuEventArgs)">
            <summary>
            Event raised when Context Menu is to opened
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="T:System.Windows.Controls.ContextMenuEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.TabControlPreviewSelectedItemChanged(System.Object,Syncfusion.Windows.Tools.Controls.PreviewSelectedItemChangedEventArgs)">
            <summary>
            Occurs when the selected index of the tab changes.
            </summary>
            <remarks>This event is used to cancel or allow the selection of tab</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.InitializeGrid(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.ITabSheet,Syncfusion.Windows.Tools.Controls.TabItemExt)">
            <summary>
            Initializes the Grid with Default Row Count and Default Column count
            </summary>
            <param name="grid">Spreadhseet Grid to be Initialized</param>
            <param name="sheet">Sheet to be loaded in the grid</param>
            <param name="tab"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.RefreshFormulaBarRowDefinition">
            <summary>
            To refresh the formula bar visibility whether to visible or hidden
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.GetDecryptedStream(Syncfusion.XlsIO.IWorkbook)">
            <summary>
            Convert encrypted stream into decrypted stream.
            ZipArchive can't open encrypted file. So we have decrypt it.
            </summary>
            <param name="encryptedWorkbook"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.CreateCustomXML">
            <summary>
            CalcChain.xml support not available in XlsIO. So we have maintained formula cells manually and stored as Custom.Xml.
            Whenever specified workbook(Saved by XlsIO) open by SfSpreadsheet, formula cells can read from Custom.xml.
            FYI-> If the file opened by excel, it will create CalcChain.xml
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.SuspendFormulaCalculation">
            <summary>
            Suspends the automatic formula calculation
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.ResumeFormulaCalculation">
            <summary>
            Resumes the automatic formula calculation
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.RenameSheet(System.String)">
            <summary>
            Renames the specified sheet name in the workbook by start editing on tab header.
            </summary>
            <param name="name">name of the sheet</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.RenameSheet(System.String,System.String)">
            <summary>
            Renames the specified sheet name in Spreadsheet.
            </summary>
            <param name="oldName">Old name of the sheet.</param>
            <param name="newName">New name of the sheet.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.AddSheet">
            <summary>
            Adds a new worksheet in the workbook.
            </summary>
            <remarks>By default, this method sets the index for the newly added sheet.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.AddSheet(System.String,System.Int32)">
            <summary>
            Add the new worksheet at the given position.
            </summary>
            <param name="name">Name of the sheet.</param>
            <param name="insertAt">Index position where the sheet is to be inserted.</param>
            <remarks>Inserts the newly added sheet at the user defined position.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.RemoveSheet(System.String)">
             <summary>
             Removes the specified sheet from the Workbook.
             </summary>
             <param name="name">Name of the sheet to be removed.</param>
            <remarks>If the total sheet count is 1 or if the sheet contains some data, then a warning message is shown. </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.HideSheet(System.String)">
            <summary>
            Hides the specified sheet in the workbook.
            </summary>
            <param name="name">Name of the sheet to be hided.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.UnhideSheet(System.String)">
            <summary>
             Unhides the specified sheet in the workbook.
            </summary>
            <param name="name">Name of the sheet to be unhided.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.Create(System.Int32)">
            <summary>
            Creates a new workbook with sheets based on the sheet count.
            </summary>
            <param name="sheetCount">Number of sheets to be present in the workbook.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.Open(Syncfusion.XlsIO.IWorkbook)">
            <summary>
            Opens the specifed workbook in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/> .
            </summary>
            <param name="workbook">An instance of <see cref="T:Syncfusion.XlsIO.IWorkbook"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.Open(System.IO.Stream)">
            <summary>
            Opens the excel workbook with the given stream.
            </summary>
            <param name="file">Stream of the file to be imported.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.Open(System.String)">
            <summary>
            Opens the excel workbook with the given file name.
            </summary>
            <param name="file">Name of the file to be imported.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.SaveAs(System.String)">
            <summary>
            Save the changes that are made in the specified file name.
            </summary>
            <param name="filename">file name to save into</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.SaveAs(System.IO.Stream)">
            <summary>
            Save the workbook as stream.
            </summary>
            <param name="stream">Stream that will receive workbook data</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.Save">
            <summary>
            Save the changes that are made in the file else if file is not created yet, then it prompts to enter the filename to save
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.SaveAs">
            <summary>
            Save the changes made in the file using SaveFileDialog.
            </summary>
            <returns>True if the file saved successfully; otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.UnProtectSheet(Syncfusion.XlsIO.IWorksheet,System.String)">
            <summary>
            Unprotect the worksheet with given password.
            </summary>
            <param name="worksheet">An instance of <see cref="T:Syncfusion.XlsIO.IWorksheet"/>.</param>
            <param name="password">Password to unlock.</param>
            <returns>Returns true if the sheet is unprotected ,else false.</returns>       
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.ProtectSheet(Syncfusion.XlsIO.IWorksheet,System.String)">
            <summary>
            Protects the worksheet's content with password.
            </summary>
            <param name="worksheet">An instance of <see cref="T:Syncfusion.XlsIO.IWorksheet"/>.</param>
            <param name="password">Password to lock.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.ProtectSheet(Syncfusion.XlsIO.IWorksheet,System.String,Syncfusion.XlsIO.ExcelSheetProtection)">
            <summary>
            Protects the worksheet based on option.
            </summary>
            <param name="worksheet">An instance of <see cref="T:Syncfusion.XlsIO.IWorksheet"/>.</param>
            <param name="password">Password to lock.</param>
            <param name="option">One of the enum options <see cref="T:Syncfusion.XlsIO.ExcelSheetProtection"/>, which user selected.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.Protect(System.Boolean,System.Boolean,System.String)">
            <summary>
            Protect the workbook with the specified password.
            </summary>
            <param name="isProtectWindow">Indicates if workbook window is to be protected.</param>
            <param name="isProtectContent">Indicates if workbook content is to be protected.</param>
            <param name="password">Password to protect.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.Unprotect(System.String)">
            <summary>
            Unprotect the workbook with the specified password.
            </summary>
            <param name="password">Password to unprotect.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.SetZoomFactor(System.String,System.Int32)">
            <summary>
            Sets the zoom level of the worksheet. Value must be within 50 to 400.
            </summary>
            <param name="sheetName">Name of the <see cref="!:IWorksheeet"/>.</param>
            <param name="zoomFactor">Zoom factor.</param>
            <remarks>The value with 0 indicates there is no zoom applied to the control.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.OnZoomFactorChanging(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.Int32@,Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZoomTrigger)">
            <summary>
            Used to trigger ZoomFactorChanging event
            </summary>
            <param name="grid"></param>
            <param name="zoomFactor"></param>
            <param name="trigger"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.OnZoomFactorChanged(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,System.Int32,Syncfusion.UI.Xaml.Spreadsheet.Helpers.ZoomTrigger)">
            <summary>
            Used to trigger ZoomFactorChanged event.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.ChangeColumnWidth(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,System.Double)">
            <summary>
            Used to Change the Column Width
            </summary>
            <param name="gridRange"></param>
            <param name="width">value to be set as width</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.ChangeRowHeight(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,System.Double)">
            <summary>
            Change the Row Height for the Specified range
            </summary>
            <param name="gridRange">grid range where the height to be changed </param>
            <param name="height">height to be changed for the specified range</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.ChangeDefaultColumnWidth(Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,System.Double)">
            <summary>
            Change the Default Column Width for the Specified Sheet
            </summary>
            <param name="worksheet"></param>
            <param name="gridRange"></param>
            <param name="standardwidth"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.Group(Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,Syncfusion.XlsIO.ExcelGroupBy)">
            <summary>
            Used to Group the specified range in the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="worksheet">An instance of <see cref="T:Syncfusion.XlsIO.IWorksheet"/>.</param>
            <param name="gridRange">Range to be grouped.</param>
            <param name="GroupBy">Grouping Types such as group by rows or group by columns.</param>
            <remarks>Based on the group types, the specified range is grouped in the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.UnGroup(Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,Syncfusion.XlsIO.ExcelGroupBy)">
            <summary>
            Used to UnGroup the specified range in the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="worksheet">An instance of <see cref="T:Syncfusion.XlsIO.IWorksheet"/>.</param>
            <param name="gridRange">Range to be ungrouped.</param>
            <param name="GroupBy">Grouping Types such as group by rows or group by columns.</param>
            <remarks>Based on the group types, the specified range is ungrouped in the spreadsheet.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.RefreshOutlines(System.Boolean,System.Boolean)">
            <summary>
            Used to refresh the outline(grouping) elements in the worksheet.
            </summary>
            <param name="refreshRows">True if you need to refresh rows;otherwise false.</param>
            <param name="refreshColumns">True if you need to refresh columns;otherwise false.</param>
            <remarks>This function is invoked while Insert, Delete,Hide and Unhide of rows/columns are perfomed to refresh the outline panel elements.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.AddNamedRange(System.String,System.String,System.String)">
            <summary>
            Used to add new name for the specified range in the workbook.
            </summary>
            <param name="namerange">Name of the range.</param>
            <param name="refersto">Address for the range.</param>
            <param name="scope">scope of the named range. It can be workbook or any worksheet in a workbook. If any worksheet name is provided, then the name can be used only within that worksheet.</param>
            <remarks>
            The address should be a string such as Sheet1!$D$5.
            </remarks>
            <example>
            <code lang="C#">
            spreadsheet.AddNamedRange("sample", "A3:B3", "Sheet1");
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.EditNamedRange(System.String,System.String,Syncfusion.XlsIO.IName)">
            <summary>
            Used to edit the already defined name in the workbook.
            </summary>
            <param name="namerange">New name for the range.</param>
            <param name="refersto">Address for the range.</param>
            <param name="name">An interface of <see cref="T:Syncfusion.XlsIO.IName"/>.</param>
            <remarks>       
            It also updates the named range collection and the NameBox.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.DeleteNamedRange(Syncfusion.XlsIO.IName)">
            <summary>
            Used to delete the defined name for the ranges in the workbook.
            </summary>
            <param name="iname">An instace of <see cref="T:Syncfusion.XlsIO.IName"/>.</param>
            <remarks>Removes the name object from collection and also updates the namebox. </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.SetGridLinesVisibility(System.Boolean)">
            <summary>
            Used to set the visibility of the grid lines in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="isVisible">True or False.</param>
            <remarks>if true, then the grid lines are displayed; else no grid lines are displayed in the view.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.SetRowColumnHeadersVisibility(System.Boolean)">
            <summary>
            Used to set the visibility of row/column header in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="isVisible">True or false.</param>
            <remarks>If true, header row/column are visible;otherwise header rows/column are hidden. </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.SetActiveSheet(System.String)">
            <summary>
            Used to change the active sheet of the Spreadsheet.
            </summary>
            <param name="sheetName">Name of the sheet to be activated</param>
            <returns>If true, mentioned sheet is activated.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.GetNameRange(Syncfusion.XlsIO.IName)">
            <summary>
            Gets the NameRange object for specified name
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.UpdateNameRanges(Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>        
            Need to update the NamedRanges in spreadsheet and formula engine while delete/insert the rows and columns.
            </summary>
            <param name="activerange"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.SetCurrentGridChanged(System.String)">
            <summary>
            To set the properties for changed Grid
            </summary>
            <param name="sheetName">Name of the Sheet</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.RefreshRowGroupPanel">
            <summary>
            Sets the RowGroupPanel Width when the OutlineRowCount greater than 0 and Invalidates the RowGroupPanel
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.DisplayMessageBox(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage)">
            <summary>
            Displays the message boxes in SfSpreadsheet if the display alert is set to true.
            </summary>
            <returns>True or False</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.RefreshColumnGroupPanel">
            <summary>
            Sets the ColumnGroupPanel Height when the ColumnOutlineLevels are greater than 0 and Invalidate the ColumnGroupPanel
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.RefreshCurrentCell">
            <summary>
            Refreshes the CurrentCellValue
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.RaiseCellRequestNavigate(Syncfusion.UI.Xaml.CellGrid.Helpers.CellRequestNavigateEventArgs)">
            <summary>
            Hyperlink bookmark support that is to navigate cells between different sheets or same sheets.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.SetGroupingSettings(System.Boolean)">
            <summary>
            To set the Grouping Settings (i.e) to set the Page Setup for the Active Sheet
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.SetVisualState(System.String)">
            <summary>
            Used to set visual state for spreadsheet
            </summary>
            <param name="stateName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.OnCreateCommands">
            <summary>
            Create commands during the initialization of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <returns>An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.Commands"/>. </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.OnWorkbookUnloaded(Syncfusion.XlsIO.IWorkbook)">
            <summary>
            Invoked to unload or clean the objects of the workbook in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>. 
            </summary>
            <remarks>This method raises the <see cref="E:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.WorkbookUnloaded"/> event and it is the last event to be called while removing the workbook object.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.OnWorkbookLoaded">
            <summary>
            Invoked to load the objects of the workbook in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <remarks>This method raises the <see cref="E:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.WorkbookLoaded"/> event.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.OnWorksheetAdding(Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetAddingEventArgs)">
            <summary>
            Invoked when a new worksheet is going to be added in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Helpers.WorksheetAddingEventArgs">WorksheetAddingEventArgs</see> that contains the event data.</param>
            <returns>True or False.</returns>
            <remarks>This method raises the <see cref="E:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.WorksheetAdding"/> event.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.OnWorksheetAdded(System.String)">
            <summary>
            Invoked when a new worksheet is added in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="name">Name of the worksheet to be added.</param>
            <remarks>This method raises the <see cref="E:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.WorksheetAdded"/> event.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.OnWorksheetRemoved(System.String)">
            <summary>
            Invoked when a worksheet is removed in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="name">Name of the worksheet.</param>
            <remarks>This method raises the <see cref="E:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.WorksheetRemoved"/> event.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.OnWorksheetRemoving(System.String)">
            <summary>
            Invoked when a worksheet is going to be removed in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="name">Name of the worksheet.</param>
            <returns>True or False.</returns>
            <remarks>This method raises the <see cref="E:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.WorksheetRemoving"/> event.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.DisposeOldInstances(Syncfusion.XlsIO.IWorkbook)">
            <summary>
            Disposes the Old instances that are maintained
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.Dispose">
            <summary>
            Dispose all the resources used by the Spreadsheet.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.SelectedTabIndex">
            <summary>
            Gets or sets a value indicating the selected tab index of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/> .
            </summary>
            <value>The index of the tab.</value>       
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.FormulaBarVisibility">
            <summary>
            Gets or sets the value indicating the <see cref="T:System.Windows.Visibility"/> state of <see cref="F:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.FormulaBar"/>.
            </summary>
            <value>Specifies the display state of the formula bar. </value>       
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.Workbook">
            <summary>
            Gets or sets the value indicating the instance of  <see cref="T:Syncfusion.XlsIO.IWorkbook"/> which is loaded into the Spreadsheet.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.XlsIO.IWorkbook"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.CopyPaste">
            <summary>
            Holds the instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetCopyPaste"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.GraphicCopyPaste">
            <summary>
            Holds the instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.GraphicCells.GraphicCopyPasteController"/> used to perform cut,copy,paste operations on ShapeImpl (TextBox, Picture, Charts, etc.).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.SearchManager">
            <summary>
            Holds the instance of <see cref="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.SearchManager"/> class that used to find or replace the text in the document with advanced search options.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.GridCollection">
            <summary>
            Gets the collection of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.
            </summary>
            <value>A collection that contains the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.AllowZooming">
            <summary>
            Gets or sets a value indicating whether to allow the end users to zoom the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/> or not .
            </summary>
            <value><see langword="true"/> if the user can perform the zooming in sfspreadsheet; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.AllowTabItemContextMenu">
            <summary>
            Gets or sets a value indicating whether the context menu for the TabItem in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/> is displayed or not.
            </summary>
            <value><see langword="true"/>if the user wants to display the TabItem context menu ; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.TabItemContextMenu">
             <summary>
             Gets or sets a value indicating the context menu items in TabItem of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
             </summary>
            <value>An instance of <see cref="T:System.Windows.Controls.ContextMenu"/></value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.IsCustomTabItemContextMenuEnabled">
            <summary>
            Gets or sets a value indicating whether the Custom context menu of TabItem in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/> can be enabled or not.
            </summary>
            <value><see langword="true"/> if the custom TabItem context menu is enabled ; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.AllowCellContextMenu">
            <summary>
            Gets or sets a value indicating whether the  context menu for cells in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/> is to be displayed or not .
            </summary>
            <value><see langword="true"/> if the user wants to display the cell level context menu; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.AllowFiltering">
            <summary>
            Gets or sets a value indicating whether the spreadsheet allows to filter the data or not.
            </summary>
            <value><see langword="true"/> if the user wants to filter the data in the spreadsheet; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.Commands">
            <summary>
            Gets or sets the value indicating the instance of <see cref="!:Commands.Commands"/>/&gt; for performing the common actions in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/> .
            </summary>
            <value>An instance of <see cref="!:Commands.Commands"/>.</value>     
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.HistoryManager">
            <summary>
            Gets the instance of <see cref="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.HistoryManager"/> which maintains the undo/redo operations in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <value>An instance of <see cref="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.HistoryManager"/>.</value>
            <remarks>By default, it is enabled in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/> and it maintains in the command stack.</remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.FileName">
            <summary>
            Gets or sets the value indicating the name of the file in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <value>Name of the file.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.AllowExtendRowColumnCount">
            <summary>
            Gets or sets a value indicating whether the row/column count in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/> can be extended or not .
            </summary>
            <value><see langword="true"/> if the row and column count can be extended in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.DefaultRowCount">
            <summary>
            Gets or sets a value indicating the default row count used by the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/> .
            </summary>
            <value>Number of rows.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.DefaultColumnCount">
            <summary>
            Gets or sets a value indicating the default column count used by the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <value>Number of columns</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.DisplayAlerts">
            <summary>
            Gets or sets a value indicating whether warning or alert messages should be shown in Spreadsheet or not.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.ActiveGrid">
            <summary>
            Gets the value indicating the instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/> for Active sheet .
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.ActiveSheet">
            <summary>
            Gets or sets a value indicating the instance of active <see cref="T:Syncfusion.XlsIO.IWorksheet"/> of Workbook.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.XlsIO.IWorksheet"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.CurrentCellRange">
            <summary>
            Gets the value indicating the instance of  <see cref="T:Syncfusion.XlsIO.IRange"/> of current cell.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.XlsIO.IRange"/>. </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.CurrentCellStyle">
            <summary>
            Gets the value indicating the instance of <see cref="T:Syncfusion.XlsIO.IStyle"/> of current cell.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.XlsIO.IStyle"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.CurrentCellValue">
            <summary>
            Gets  the value of the current cell in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/> .
            </summary>
            <value>Value of the current cell.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.FormulaRangeSelectionController">
            <summary>
            Gets or sets the  <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController"/> for formula range selection.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.FormulaRangeSelectionController"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.AllowFormulaRangeSelection">
            <summary>
            Gets or sets a value indicating whether the user is allowed to perform the formula range selection in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/> or not.
            </summary>
            <value><see langword="true"/> if the user can perform the formula range selection ; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.ShowBusyIndicator">
            <summary>
            Gets or sets the value indicating whether <see cref="T:Syncfusion.Windows.Tools.Controls.BusyIndicator"/> is to be displayed in Spreadsheet or not.
            </summary>
            <value><see langword="true"/> if the busy indicator is to be displayed ; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.DpiX">
            <summary>
            Returns the horizontal Dpi factor to tranform the width to device pixels.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.DpiY">
            <summary>
            Returns the vertical Dpi factor to tranform the height to device pixels.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.GraphicChartCellRenderer">
            <summary>
            Gets or sets the GraphicCellRenderer for Chart
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.Graphic3DChartCellRenderer">
            <summary>
            Gets or sets the GraphicCellRenderer for 3D-Chart
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.SparklineCellRenderer">
            <summary>
            Gets or sets the CellRenderer for Sparkline
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.NamedRanges">
            <summary>
            Contains all the NamedRanges in the Workbook
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.FilterControl">
            <summary>
            Maintain and return the filterPopupHost.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.FilterPopup">
            <summary>
            Create and maintain the FilterPopup control.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.IsFormulaParsingInProgress">
            <summary>
            Gets/Sets the value to find out an initial formula parsing completed or not.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.HasSelectedRange">
            <summary>
            Determines whether the grid has selection on single cell or multiple cells
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.SheetCollection">
            <summary>
            Holds the collection of the worksheet.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.ParsedFormulas">
            <summary>
            Formulas are parsed into the formula engine and tha parsed values are stored in the list for reusing, when calculating the value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.DirtyCells">
             <summary>
            Holds the collection of the dirty cells of the specified precedent cell. 
             While updating precedent cell, It holds the collection which needs to be calculate.
             </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.CalculatedValue">
            <summary>
            While updating the precedent cells, the dependency cells has been recalculated and stored in the list.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.EditedCells">
            <summary>
            Holds edited cell collection for formula optimization.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.ParsedFormulaCount">
            <summary>
            Gets/sets the parsed formula count at run time.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.TotalFormulasCount">
            <summary>
            The number of formulas are present for initial parsing.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.FilePath">
            <summary>
            Gets or sets the Path of the Excel File to be opened
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.FormatStyle">
            <summary>
            Returns the <see cref="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.FormatStyle"/> which is used to apply the 
            formatted(conditional format,table format or some other custom format) style while rendering.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.HeaderStyle">
            <summary>
            Returns the <see cref="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.HeaderStyle"/> which is used to apply formatted style for header cells.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.FormulaCellsList">
            <summary>
            Holds the collection of the formula cells in XML format.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.ZoomFactorChanged">
            <summary>
            Occurs when the zoom factor in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/> is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.ZoomFactorChanging">
            <summary>
            Occurs when the zoom factor in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/> is going to be changed.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.WorkbookCreating">
            <summary>
            Occurs when new <see cref="T:Syncfusion.XlsIO.IWorkbook"/> is going to be created in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.WorksheetAdding">
            <summary>
            Occurs when new <see cref="T:Syncfusion.XlsIO.IWorksheet"/> is going to be added in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.WorksheetAdded">
            <summary>
            Occurs when new <see cref="T:Syncfusion.XlsIO.IWorksheet"/> is added in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.WorksheetRemoving">
            <summary>
            Occurs when the <see cref="T:Syncfusion.XlsIO.IWorksheet"/> is going to be removed in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.WorksheetRemoved">
            <summary>
            Occurs when the <see cref="T:Syncfusion.XlsIO.IWorksheet"/> is removed in SfSpreadsheet.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.WorkbookUnloaded">
            <summary>
            Occurs after the exisiting <see cref="T:Syncfusion.XlsIO.IWorkbook"/> is unloaded from <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.WorkbookLoaded">
            <summary>
            Occurs after the <see cref="T:Syncfusion.XlsIO.IWorkbook"/> is loaded into <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.PropertyChanged">
            <summary>
            Occurs when property value has changed.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet.PropertyChanging">
            <summary>
            Occurs when property value is changing.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetListener">
            <summary>
            Holds the information about all the actions related with cell, worksheet and workbook in <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetListener.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetListener">SpreadsheetListener</see> class. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetListener.OnVisualStateChanged">
            <summary>
            Used to notify when the visual state is changed for spreadsheet
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Spreadsheet.NameRange">
            <summary>
            Represents the class which holds the information regarding the Named Ranges in the SfSpreadsheet. <b>It is used for internal purpose</b>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.NameRange.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.NameRange">NameRange</see> class. 
            </summary>      
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.NameRange.Name">
            <summary>
            Gets or sets the value indicating the name of the named ranges.
            </summary>
            <value>Name of the range.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.NameRange.RefersTo">
            <summary>
            Gets or sets the value indicating the cell address of the named ranges.
            </summary>
            <value>Cell Address.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.NameRange.Scope">
            <summary>
            Gets or sets the value indicating the scope for the named ranges.
            </summary>
            <value>Scope for the range.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.NameRange.Visible">
            <summary>
            Gets or sets the value indicates whether the name is visible or not.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Spreadsheet.NameRange.RefersToRange">
            <summary>
            Gets or sets the value indicates the reference range.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Spreadsheet.NameRange.PropertyChanged">
            <summary>
            Occurs when a property is changed on the component. 
            </summary>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
