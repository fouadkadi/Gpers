<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.SfCellGrid.WPF</name>
    </assembly>
    <members>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.ArrayParser">
            <summary>
            Performs the parsing operation of Array formulas.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.ArrayParser.validFunctionNameChars">
            <summary>
            To check the index of "_" in a string(formula).
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.ArrayParser.markers">
            <summary>
            The operators which are involved in array formula. If these operators are not
            present in formula, then formula must be returned without parsing.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.ArrayParser.length">
            <summary>
            Length in each splitted range of array formula.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.ArrayParser.GetArrayRecordPosition">
            <summary>
            Gets or sets the ArrayRecordPostion method from XlsIO side to get the position
            of the cell in the array.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ArrayParser.#ctor(Syncfusion.UI.Xaml.CellGrid.FormulaEngine)">
            <summary>
            Initialize the <see cref="T:Syncfusion.UI.Xaml.CellGrid.FormulaEngine"/> object for parsing operations.
            </summary>
            <param name="engine">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.FormulaEngine"/>.</param>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.ArrayParser.Engine">
            <summary>
            Gets or sets the instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.FormulaEngine"/>.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.UI.Xaml.CellGrid.ArrayParser.SplitString(System.String)" -->
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ArrayParser.CalculateArraySize(System.String,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            To calculate the height and width of the passed argument. Based on the argument's type of
            cell reference or constants, they are calculated separately and if any of the width/height is less than
            max height/width, correspondingly range is increased/decreased for range.The minimum width/height is 
            maintained.
            </summary>
            <param name="substring">A string passed to compute maximum height/width.</param>
            <param name="height">The height determined for array.</param>
            <param name="width">The width determined for array.</param>
            <param name="minHeight">The minimum height.</param>
            <param name="minWidth">The minimum width.</param>
            <returns>The string with altered height/width.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ArrayParser.ResizeCellRange(System.String,System.String)">
            <summary>
            Resize range based on the max height and max width of the array and stored in a list
            which needs to be parsed. For example: "A1:B3*C1:C2" will be resized based on the 
            height of "2"(value of smaller row count but not 1) and width of "2"(Value of smaller column count but not 1). 
            The arguments splitted from GetCellsFromArgs method, will be of the mentioned length of 4. Hence "A1:B3" will be 
            splitted and be first argument in the list and "C1:C2" will be splitted as the next argument in the list. 
            This list will be passed for making expressions in Parse method as "A1*C1,B1*C1,A2*C2,B2*C2".
            </summary>
            <param name="formula">The formula array which needs to be adjusted and parsed.</param>
            <returns>The string array.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ArrayParser.Parse(System.String,System.String)">
            <summary>
            A method that splits the formula based on the operators.
            For example: if the argument is passed as "(A1:B2+C1:D2)" which will be parsed
            as "A1+C1,B1+D1,A2+C2,B2+D2".
            </summary>
            <param name="formula">The formula passed in with operator.</param>
            <returns>Splitted formula based on logic.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ArrayParser.ParseLibraryFormula(System.String)">
            <summary>
            A method that parses the array formula and return it as normal formula for computation.
            For example if the formula is passed as "{=SUM(A1:B1*C1:D1)}", then it will be parsed 
            and returned as SUM(A1*C1,B1*D1).
            </summary>
            <param name="formula">The array formula to be parsed.</param>
            <returns>The normal formula for parsing in CalcEngine.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ArrayParser.ComputeInteriorFunction(System.String,System.String,System.Int32)">
            <summary>
            A method that invokes for computation of LEN,ROW,COLUMN methods in array formula.
            For example if the formula SUM(ROW(A1:A5)) then it should be parsed as SUM({1,2,3,4,5})(excel behavior)
            and if the formula is ROW(A1:A5), based on the required cell, the corresponding row index is returned.
            </summary>
            <param name="arg">The formula's argument.</param>
            <param name="label">The formula name.</param>
            <returns>A string which holds the computed value with curly braces.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ArrayParser.IsMultiCellArray(System.String)">
            <summary>
            The function to check if the given formula is multi cell array or not.
            For example: if the formula is "{A1:B1 * C1:D1}", then it is a multi cell array
            whereas, if the formula is "SUM(A1:B1*C1:D1), then it is not a multi cell array.
            </summary>
            <param name="formula">The formula which is passed to check.</param>
            <returns>True; if it is multicell array;else False.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ArrayParser.ParseMultiCellArray(System.String,System.String)">
            <summary>
            To parse the multi cell array, that is to get the positon of the array record and returning 
            the particular formula for the given cell.
            For example: if the parsed formula is "A1*C1,B1*D1,A2*C2,B2*D2",then based on the given cell if
            the index is 2, then resultant formula is "B1*D1" whereas if the index is "-1", then error
            messages is returned.
            </summary>
            <param name="formula">formula to be parsed.</param>
            <returns>Formula required for given cell.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ArrayParser.ParseDimensionalArray(System.String)">
            <summary>
            Parsing the one/multi dimensional array constants in formula. For Eg: parsing of 
            {1,2,3} or {1;2;3} or {1,2;3,4}. It also parses the multi dimensional array with constants
            such as {1,2}*{3,4}.
            </summary>
            <param name="formula">Formula to be parsed.</param>
            <returns>The formula/value which needs to be displayed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ArrayParser.ParseRangeArray(System.String,System.Int32,System.Int32)">
            <summary>
            If passed formula contains operators involving expressions with commas, then it will
            be parsed by splitting the arg's based on comma and storing in the list. For eg: if the
            passed argument is "{1*2,3*4,4*5}, then based on the cell's index, particular expression
            will be returned
            </summary>
            <param name="formula">The formula for parsing.</param>
            <param name="height">The height of the arg.</param>
            <param name="width">The width of the arg.</param>
            <returns>Expression/Value based on the formula.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ArrayParser.ParseHorizontalArray(System.String)">
            <summary>
            For parsing the horizontal arrays. (i.e) the formula which is separated by
            commas, for eg: {1,2,3}.
            </summary>
            <param name="formula">Formula to be parsed.</param>
            <returns>The value based on position of cell.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ArrayParser.ParseVerticalArray(System.String)">
            <summary>
            For parsing the vertical arrays. (i.e) the formula which is separated by
            semi colon, for eg: {1;2;3}.
            </summary>
            <param name="formula">Formula to be parsed.</param>
            <returns>The value based on position of cell.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ArrayParser.GetHeight(System.String[])">
            <summary>
            Getting the height in which the array formula will arrange the values of selected range.
            Smaller height of the given expression should be preferred but if the smaller value is 1, then the
            height of another expression should be considered.
            For example:"A1:B3*C1:D2" in which, the smaller height 2 will be considered and returned.
            </summary>
            <param name="substrings">Splitted strings from original formula.</param>
            <returns>The height required for array formula.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ArrayParser.GetWidth(System.String[])">
            <summary>
            Getting the width in which the array formula will arrange the values of selected range.
            Smaller width of the given expression should be preferred but if the smaller value is 1, then the
            width of another expression should be considered.
            For example:"A1:B3*C1:E2" in which, the smaller width is 2 will be considered and returned.
            </summary>
            <param name="substrings">Splitted strings from original formula.</param>
            <returns>The width required for array formula.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ArrayParser.GetPosition(System.Int32@,System.Int32@)">
            <summary>
            To get the position of the cell in the array formula applied range.
            if the cell like "A5" is passed with height and width, then it finds the exact
            postion in the selected range "A4:D7" from XlsIO side and returns it.
            </summary>
            <param name="height">The height of the array record.</param>
            <param name="width">The width of the array record</param>
            <returns>The position of the cell.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ArrayParser.ComputeLen(System.String,System.Int32)">
            <summary>
            To Compute the length of the given argument, based on the computational level.
            For example if the formula SUM(LEN(A1:A3)), the computation level is greater than 1, 
            hence it should be parsed as SUM({LEN(A1),LEN(A2),LEN(A3)})(excel behavior)
            and if the formula is LEN(A1:A3), the computation level is 1, then 
            the corresponding length of the cell is returned.
            </summary>
            <param name="arg">Passed argument for computation.</param>
            <param name="computedLevel">Computational level.</param>
            <returns>Computed result.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ArrayParser.ComputeRow(System.String,System.Int32)">
            <summary>
            To Compute the row index of the given argument, based on the computational level.
            For example if the formula SUM(ROW(A1:A3)), the computation level is greater than 1, 
            hence it should be parsed as SUM({ROW(A1),ROW(A2),ROW(A3)})(excel behavior)
            and if the formula is ROW(A1:A3), the computation level is 1, then 
            the corresponding row index of the cell is returned.
            </summary>
            <param name="arg">Passed argument for computation.</param>
            <param name="computedLevel">Computational level.</param>
            <returns>Computed result.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ArrayParser.ComputeColumn(System.String,System.Int32)">
            <summary>
            To Compute the column index of the given argument, based on the computational level.
            For example if the formula SUM(COLUMN(A1:C1)), the computation level is greater than 1, 
            hence it should be parsed as SUM({COLUMN(A1),COLUMN(B1),COLUMN(C1)})(excel behavior)
            and if the formula is COLUMN(A1:C3), the computation level is 1, then 
            the corresponding column index of the cell is returned.
            </summary>
            <param name="arg">Passed argument for computation.</param>
            <param name="computedLevel">Computational level.</param>
            <returns>Computed result.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ArrayParser.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.ArrayParser.ArrayDelegate">
            <summary>
            Delegate defined to access the method GetArrayRecordPosition for
            getting position of the cell.
            </summary>
            <param name="row">Row index of the cell.</param>
            <param name="col">Column index of the cell.</param>
            <param name="height">The height required for the selected range.</param>
            <param name="width">The width required for the selected range.</param>
            <returns>The method containing the four integer parameters.</returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.FormulaEngine">
            <summary>
            CalcEngine encapsulates the code required to parse and compute formulas. Hashtable
            properties maintain a Formula Library of functions as well as a list
            of dependent cells.
            <para/>
            You can add and remove library functions.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.machineepsilon">
            <summary>
            Used to store the value as double
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.maxrealnumber">
            <summary>
            Used to store the value as double
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.minrealnumber">
            <summary>
            Used to store the value as double
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.TABLE_ROW">
            <summary> 
            used to calculate the row in Table.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.TABLE_HEADERS">
            <summary>
            used to calculate the header in Table.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.TABLE_TOTALS">
            <summary>
            used to calculate the total in Table.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.TABLE_DATA">
            <summary>
            used to calculate the data in Table
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.TABLE_ALL">
            <summary>
            used to calculate all in Table
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.OADate1904">
            <summary>
            This field holds equivalent double value of 1904(DateTime).
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ACC">
            <summary>
            Used to store the number
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.BIGNO">
            <summary>
            Used to store the big number as double
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.BIGNI">
            <summary>
            Used to store the value as double
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.isNameRangeIntersected">
            <summary>
            This field is maintained to perform the calculation when formula contains intersected named ranges.
            For e.g., "=VOCE1 INDIRECT(MESE)" formula returns cell reference because name range is intersected.
            otherwise returns the corresponding cell value(eg: formula  "=SUM(INDIRECT("A131:A135"))").
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.UseDate1904">
            <summary>
            This field will be set as true, if the 1904 date system is enabled in Excel.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.Treat1900AsLeapYear">
            <summary>
            Set the boolean as true
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.#ctor(Syncfusion.UI.Xaml.CellGrid.SfCellGrid)">
            <summary>
            The constructor.
            </summary>
            <param name="ParentObject">The ICalcData from the underlying grid.</param>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.IsArrayFormula">
            <summary>
            Gets or sets whether the formula is array formula or not. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ArrayParser">
            <summary>
            Gets or sets the instance of <see cref="F:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ArrayParser"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.FormulaErrorStringCheck(System.String,Syncfusion.UI.Xaml.CellGrid.FormulaEngine.FormulaArgumentType)">
            <summary>
            A method that checks the possible cases for error string(invalid arguments for formula).
            </summary>
            <param name="args">The arguments of formula.</param>
            <param name="argumentType">The formula's argument type.</param>
            <returns>Returns the Error string if formula has invalid arguments </returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.isDoubleQuotes">
            <summary>
            This method check "\"in the string and removes if the string contains  "\"\.
            </summary>
            <param name="text"> input string.</param>
            <returns> returns The parsed string value without the "\"\</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ParseFormula(System.String)">
            <summary>
            A method that parses the text in a formula passed in.
            </summary>
            <param name="formula">The text formula to be parsed.</param>
            <returns>A string holding a parsed representation of the formula.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.PutTokensForSheets(System.String@)">
            <summary>
            Accepts an unparsed formula string and replaces any sheet references with corresponding tokens.
            </summary>
            <param name="text">The unparsed formula string.</param>
            <remarks>
            This is an advanced method that lets you replace sheet names with corresponding tokens. You may have need of
            this method if you are adding your own functions to the function library.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.MarkLibraryFormulas(System.String@)">
            <summary>
            Tokenizes all library references.
            </summary>
            <remarks>
            Accepts a string such as Sin(A1+A2) and tokenizes it into
            bqSIN[A1A2a]b which serves as input to ComputedValue.
            </remarks>
            <param name="formula">Formula to be tokenized.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.AddFunction(System.String,Syncfusion.UI.Xaml.CellGrid.FormulaEngine.LibraryFunction)">
            <summary>
            A method that adds a function to the function library.
            </summary>
            <param name="name">The name of the function to be added.</param>
            <param name="func">The function to be added.</param>
            <returns>True if successfully added, otherwise False.</returns>
            <remarks>
            LibraryFunction is a delegate that defines the signature of functions that
            you can add to the function library.
            <code>
            public delegate string LibraryFunction(string args);
            </code>
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.RemoveFunction(System.String)">
            <summary>
            A method that removes a function from the function library.
            </summary>
            <param name="name">The name of the function to be removed.</param>
            <returns>True if successfully removed, otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.InitLibraryFunctions">
            <summary>
            Creates and initially loads the function library with the supported functions.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.CreateSheetFamilyID">
            <summary>
            CreateSheetFamilyID is a method to create familyID for a sheet.
            </summary>
            <returns>Sheet family ID.</returns>
            <remarks>
            Essential Calculate supports multisheet references within a family of ICalcData objects. To use
            this functionality, you use this method to get a unique identifier for
            the family. Then in the RegisterGridAsSheet method that you call to add ICalcData objects
            to this family, you pass this unique identifier to mark the ICalcData objects as belonging
            to this family. You can only cross reference ICalcData objects within the same family.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.RegisterGridAsSheet(System.String,Syncfusion.UI.Xaml.CellGrid.ICalcData,System.Int32)">
            <summary>
            RegisterGridAsSheet is a method that registers an ICalcData object so it can be referenced in a formula from another ICalcData object.
            </summary>
            <param name="refName">The reference name used to refer to this ICalcData object from formulas in other ICalcData objects.
            </param>
            <param name="model">The ICalcData from the ICalcData object being registered.
            </param>
            /// <param name="sheetFamilyID">An integer previously created with a call
            to CalcEngine.CreateSheetFamilyID. This number is used to identify
            the ICalcData objects as belonging to a particular family of ICalcData objects. You can only reference
            ICalcData objects from within the same family.
            </param>
            <remarks>
            Essential Calculate supports multisheet references with its formulas. For example, if you
            have two ICalcData objects, then you can reference cells from the first ICalcData object
            in the second ICalcData object. For this to work, both ICalcData objects need to be registered using this method.
            The syntax for using a sheet reference as part of a formula is to prefix a cell reference
            with the sheet reference name followed by an exclamation point.
            The formula "= sheet1!A1 + sheet2!C3" would add the value is cell A1 for
            the ICalcData object whose reference name is sheet1 to the value from cell C3 in the ICalcData object
            whose reference name is sheet2.
            </remarks>
            <example> Use this code to use cross sheet references:
            <code lang="C#">
            	//Register three ICalcData objects so cell can be referenced across ICalcData objects:
            	int sheetfamilyID = CalcEngine.CreateSheetFamilyID();
            	myCalcEngine.RegisterGridAsSheet("summary", calcData1, sheetfamilyID);
            	myCalcEngine.RegisterGridAsSheet("income", calcData2, sheetfamilyID);
            	myCalcEngine.RegisterGridAsSheet("expenses", calcData3, sheetfamilyID);
            	....
            	//Sample formula usage for cells in calcData1, the 'summary' data source.
            	//This code sums ups some cells from calcData3, the 'expenses' data source
            	//and calcData2, the 'income' data source.
            	//Sum the range B2:B8 from expenses:
            	string sumExpenses = "= Sum(expenses!B2:expenses!B8)";
            	//Sum the range B2:B4 from income:
            	string sumIncome = "= Sum(income!B2:income!B4)";
            </code>
            <code lang="VB">
            	'Register three ICalcData objects so cell can be referenced across ICalcData objects:
            	Dim sheetfamilyID As Integer = CalcEngine.CreateSheetFamilyID();
            	myCalcEngine.RegisterGridAsSheet("summary", calcData1, sheetfamilyID)
            	myCalcEngine.RegisterGridAsSheet("income", calcData2, sheetfamilyID)
            	myCalcEngine.RegisterGridAsSheet("expenses", calcData3, sheetfamilyID)
            	....
            	'Sample formula usage for cells in calcData1, the 'summary' data source.
            	'This code sums ups some cells from calcData3, the 'expenses' data source
            	'and calcData2, the 'income' data source.
            	'Sum the range B2:B8 from expenses:
            	Dim sumExpenses As String = "= Sum(expenses!B2:expenses!B8)"
            	'Sum the range B2:B4 from income:
            	Dim sumIncome As String = "= Sum(income!B2:income!B4)"
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.UnregisterGridAsSheet(System.String,Syncfusion.UI.Xaml.CellGrid.SfCellGrid)">
            <summary>
            Unregisters a grid so it can no longer be referenced in a formula from another grid.
            </summary>
            <param name="refName">The reference name used to refer to this grid from formulas in other grids.
            </param>
            <param name="model">The grid model.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.GetSheetFamilyItem(Syncfusion.UI.Xaml.CellGrid.ICalcData)">
            <summary>
            Returns the GridSheetFamilyItem for the specified model. If there was no item registered for
            the model, a new item is created and cached.
            </summary>
            <param name="model">The grid model.</param>
            <returns>The GridSheetFamilyItem for the specified model.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.FormulaEngine"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.UI.Xaml.CellGrid.FormulaEngine"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.GetFormulaArrayBounds(System.String,System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Return the value of arraybounds as boolean
            </summary>
            <param name="currentCell">current cell</param>
            <param name="arrayHeight">height</param>
            <param name="arrayWidth">width</param>
            <param name="firstRowIndex">firstrowindex</param>
            <param name="firstColIndex">firstcolumnindex</param>
            <param name="lastRowIndex">lastrowindex</param>
            <param name="lastColIndex">lastcolumnindex</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.RowIndex(System.String)">
            <summary>
            A method to retrieve the row index from a cell reference.
            </summary>
            <param name="s">String holding a cell reference such as C21 or AB11.</param>
            <returns>An integer with the corresponding row number.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ColIndex(System.String)">
            <summary>
            A method that gets the column index from a cell reference passed in.
            </summary>
            <param name="s">String holding a cell reference such as C21 or AB11.</param>
            <returns>An integer with the corresponding column number.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.IsCellReference(System.String)">
            <summary>
            Determines whether the arg is a valid cell name.
            </summary>
            <param name="args">Cell name.</param>
            <returns>True is the arg is a valid cell name, false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.CanGetRowIndex(System.String)">
            <summary>
            To check whether the row index can be obtained from the arguments
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.SplitArguments(System.String,System.Char)">
            <summary>
            A method to split the arguments using argument seperator.
            </summary>
            <param name="args">arguments to split.</param>
            <param name="argSeperator">argument seperator used to split.</param>
            <returns>A string array.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.StripTics(System.String)">
            <summary>
            Removes outer quote marks from a string with no inner quote marks.
            </summary>
            <param name="s">The string with possible outer quote marks.</param>
            <returns>The string with any outer quote marks removed.</returns>
            <remarks>This is a utility method that removes outer quotes on a string.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.SplitArgsPreservingQuotedCommas(System.String)">
            <summary>
            Returns an array of argument strings from a single string where the arguments are delimited by <see cref="!:CalcEngine.ParseArgumentSeparator"/>.
            </summary>
            <param name="args">Contains the argument list.</param>
            <returns>A string array of arguments.</returns>
            <remarks>This method properly preserves any quoted strings that contain the <see cref="!:CalcEngine.ParseArgumentSeparator"/> character.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.TextIsEmpty(System.String)">
            <summary>
            Tests whether a string is NULL or empty.
            </summary>
            <param name="s">String to be tested.</param>
            <returns>True is passed in string is null or empty, otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.GetFormulaText(System.String@)">
            <summary>
            Given a string, it returns a string that is passed through the FormulaParsing event
            to allow any listener to modify it.
            </summary>
            <param name="s">A string that is to be potentially parsed.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.AdjustRangeArg(System.String@)">
            <summary>
            Accepts a possible parsed formula and returns the calculated value
            without quotes.
            </summary>
            <param name="range">The argument to be adjusted.</param>
            <remarks>
            This method is useful in custom functions if you want to allow
            your custom functions to handle parsed formulas as arguments. In
            this case, calling this method at the beginning of your custom function
            will allow you custom function to work only with computed values, and not
            have to handle parsed formulas directly.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ClearLibraryComputationException">
            <summary>
            Call this method to clear whether an exception was raised during the computation of a library function.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.GetValueFromGrid(System.String,System.Boolean)">
            <summary>
            Returns the value of specified cell in a Grid.
            </summary>
            <param name="cell1">Cell address</param>
            <param name="calculateFormula">If true, compute the formula and returns calculated result. 
            Else, simply returns the value of the cell.</param>
            <returns>value of the cell</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.GetValueFromParentObject(Syncfusion.UI.Xaml.CellGrid.ICalcData,System.Int32,System.Int32)">
            <summary>
            Conditionally gets either the formula value or the cell
            value depending upon whether the requested cell is a FormulaCell.
            </summary>
            <param name="grd">The ICalcData object holding the requested cell.</param>
            <param name="row">Row index of the requested cell.</param>
            <param name="col">Column index of the requested cell.</param>
            <returns>String holding either the cell value or the computed formula value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.GetValueFromArg(System.String,System.Boolean)">
            <summary>
            A Virtual method to compute the value based on the argument passed in.
            </summary>
            <remarks>
            This method takes the argument and checks whether it is a
            parsed formula, a raw number, or a cell reference like A21.
            The return value is a string that holds the computed value of
            the passed in argument.
            </remarks>
            <param name="arg">A parsed formula, raw number, or cell reference.</param>
            <returns>A string with the computed number in it.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.GetCellsFromArgs(System.String)">
            <summary>
            A method that retrieves a string array of cells from the range passed in.
            </summary>
            <remarks>
            Converts arguments in these forms to a string array of individual cells:<para/>
            	A1,A2,B4,C1,...,D8<para/>
            	A1:A5<para/>
            	A1:C5<para/>
            </remarks>
            <param name="args">String containing a cell range.</param>
            <returns>String array of cells.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.IsEmpty(System.String)">
            <summary>
            Helper method used to find whether given string is empty or not.
            </summary>
            <param name="s">string value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.GetValueFromArg(System.String)">
            <summary>
            Computes the value contained in the argument.
            </summary>
            <remarks>
            This method takes the argument and checks whether it is a 
            parsed formula, raw number, or cell reference like A21.
            The return value is a string that holds the computed value of 
            the passed-in argument.
            </remarks>
            <param name="arg">A parsed formula, raw number, or cell reference.</param>
            <returns>A string with the computed number in it.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputedValue(System.String,System.Collections.ArrayList)">
            <summary>
            Evaluates a parsed formula.
            </summary>
            <param name="formula">A string holding a valid parsed formula.</param>
            <returns>The computed value of the formula.</returns>
            <remarks>The string passed into this function must be previously parsed
            using ParseFormula. </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeEnsureIFCall(System.String@)">
            <summary>
            Compute the NestedIF formulas using the old code structure of CalcEngine.
            </summary>
            <param name="formula">formula to execute / compute</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeShortCircuitIFFormula(System.String@)">
            <summary>
            Compute the NestedIF formulas using new parse and compute technique.
            </summary>
            <param name="formula">formula to execute / compute</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.SetDirty(Syncfusion.UI.Xaml.CellGrid.GridFormulaTag)">
            <summary>
            Marks the underlying formula as dirty, indicating it needs to be recomputed. It does this by setting the Text property to null.
            </summary>
            <param name="tag">The GridFormulaTag to be marked as not computed.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.Refresh(System.String)">
            <summary>
            Refresh is a method that recalculates any cell that depends upon the passed in cell.
            </summary>
            <param name="s">A cell such as A21 or EE31.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeAcsch(System.String)">
            <summary>
            Returns the archyperbolic cosecant of an angle.
            </summary>
            <param name="argList">A cell reference or a cell or a number</param>
            <returns>A string containing the archyperbolic cosecant of an angle</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeBigMul(System.String)">
            <summary>
            Returns the full product of two 32-bit numbers.
            </summary>
            <param name="argList">The two 32 bit numbers.</param>
            <returns>A string containing the product of two 32 bit numbers.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeDivRem(System.String)">
            <summary>
             Calculates the quotient of two 64-bit signed integers and also returns the remainder in an output parameter.
            </summary>
            <param name="argList"></param>
            <returns>returns the quotient of two 64-bit signed integers.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeIEEERemainder(System.String)">
            <summary>
            Returns the remainder resulting from the division of a specified number by another specified number.
            </summary>
            <param name="argList">contains a divisor and dividend</param>
            <returns>Returns the remainder.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.NormalCumulativeDistribution(System.Double,System.Double,System.Double)">
            <summary>
            Returns the CDF of the normal distribution.
            </summary>
            <param name="x">Value at which the distribution is evaluated.</param>
            <param name="mean">Mean of the distribution.</param>
            <param name="standardDeviation">Standard deviation of the distribution.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.FCumulativeDistributionInverse(System.Double,System.Int32,System.Int32)">
            <summary>
            Returns the inverse of the CDF of the F distribution.
            For k = 3, and 5+ the solution is an approximation. 
            </summary>
            <param name="p">Cumulative probability of the distribution. p is between 0 and 1.</param>
            <param name="k1">Degrees of freedom for numerator chi-sqared distribution.</param>
            <param name="k2">Degrees of freedom for denominator chi-sqared distribution.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.NormalCumulativeDistributionInverse(System.Double,System.Double,System.Double)">
             <summary>
             Returns the inverse of the CDF of the normal distribution.
             </summary>
             <param name="p">Cumulative probability of the distribution. 0 &lt;= p &gt;= 1.</param>
            <param name="mean">Mean of the distribution.</param>
             <param name="standardDeviation">Standard deviation of the distribution.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeReplaceB(System.String)">
            <summary>
            replaces part of a text string, based on the number of characters, with a different text string
            </summary>
            <param name="argList">Text in which is want to replace, The position of the character in old_text., The number of characters in old_text </param>
            <returns>returns replaced text</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeBahtText(System.String)">
            <summary>
            Returns the row index of the passed in cell reference.
            </summary>
            <param name="arg">Contains zero or one argument. If no argument is passed, returns the row index of the
            location of this Row function cell, otherwise returns the row index of the passed in cell reference.</param>
            <returns>The row index.</returns>
            <remarks>
            This method doesn't return an array of row numbers as the array formula entry is not supported in engine. It is another usecase of this library function.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeLogest(System.String)">
            <summary>
            Returns the m parameter of the exponential curve y = b * m^x that best fits the given points. Only the first two Excel parameters are used.
            </summary>
            <param name="range">Y_range, x_range.</param>
            <returns>returns m parameter.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeLogestb(System.String)">
            <summary>
            Returns the b value from the exponential curve y = b * m^x.
            </summary>
            <param name="range">Y_range, x_range.</param>
            <returns>returns calculated b value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeDate(System.String)">
            <summary>
            Returns the number of days since 01 Jan 1900.
            </summary>
            <param name="argList">Year, month, and day.</param>
            <returns>Number of days.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeDatevalue(System.String)">
            <summary>
            Returns the number of days since 01 Jan 1900.
            </summary>
            <param name="argList">Text containing a date.</param>
            <returns>Number of days.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeDay(System.String)">
            <summary>
            Returns the day of the serial number date.
            </summary>
            <param name="argList">Serial number date.</param>
            <returns>Day of the given date.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeDays360(System.String)">
            <summary>
            Number of days between 2 dates using 360 day year.
            </summary>
            <param name="argList">Serial number date1, serial number date1 and method.</param>
            <returns>Days between the dates.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeYearFrac(System.String)">
            <summary>
            returns the fraction of the year represented by the number of whole days between two given dates
            </summary>
            <param name="argList">startDate, endDate, basis (optional)</param>
            <returns>returns the fraction of the year</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeDays(System.String)">
            <summary>
            Returns the number of days between two dates.
            </summary>
            <param name="argList">startDate, endDate</param>
            <returns>Returns the number of days</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeEDate(System.String)">
            <summary>
            returns the date of given date after the specific month
            </summary>
            <param name="argList">startDate, months</param>
            <returns>returns the date</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeEOMonth(System.String)">
            <summary>
            Returns the last date of the date after the specific month of given date.
            </summary>
            <param name="argList">startDate, month</param>
            <returns>return the date.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeWeeknum(System.String)">
            <summary>
            Returns the week number of a specific date
            </summary>
            <param name="argList">serial_number,start_day of week (optional)</param>
            1 or omitted - Sunday 
            2 Monday 
            11 Monday 
            12 Tuesday 
            13 Wednesday 
            14 Thursday 
            15 Friday  
            16 Saturday 
            17 Sunday 
            21 Monday 
            <returns>returns the week number</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeISOWeeknum(System.String)">
            <summary>
            Returns ISO week number of the year for a given date
            </summary>
            <param name="argList">date</param>
            <returns>returns ISO week number</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeWorkDay(System.String)">
            <summary>
            returns the date of the given date after the number of working days 
            </summary>
            <param name="argList">startDate, days,  holidays (optional)</param>
            <returns>returns the date</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeNetworkDays(System.String)">
            <summary>
            Returns the value of ComputeNetworkDays
            </summary>
            <param name="argList">arguments</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeNetworkDaysintl(System.String)">
            <summary>
            Returns the number of whole workdays between two dates, week end and holidays are not consider as working days
            </summary>
            <param name="argList">start_date, end_date,weekend (optional), holidays (optional)</param>
            <returns>return the work days</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeWorkDayintl(System.String)">
            <summary>
            Returns the serial number of the given date before or after a specified number of workdays
            </summary>
            <param name="argList">startDate, days, weekend (optional) , holidays (optional)</param>
            <returns>return the serial number of specific date.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeHour(System.String)">
            <summary>
            Returns the hour of the given time.
            </summary>
            <param name="argList">Given time.</param>
            <returns>Hour of given time.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeMinute(System.String)">
            <summary>
            Returns the minute of the given time.
            </summary>
            <param name="argList">Given time.</param>
            <returns>Minute of given time.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeSecond(System.String)">
            <summary>
            Returns the second of the given time.
            </summary>
            <param name="argList">Given time.</param>
            <returns>Second of given time.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeMonth(System.String)">
            <summary>
            Returns the month of the given date.
            </summary>
            <param name="argList">given time</param>
            <returns>Month of given date.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeNow(System.String)">
            <summary>
            Returns the current date and time as a date serial number.
            </summary>
            <param name="argList">Parameter Ignored.</param>
            <returns>Current date and time as serial number.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeToday(System.String)">
            <summary>
            Returns the current date as a date serial number.
            </summary>
            <param name="argList">Parameter Ignored.</param>
            <returns>Current date as date serial number.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeTime(System.String)">
            <summary>
            Returns a fraction of a day.
            </summary>
            <param name="argList">Hour, minute, and second.</param>
            <returns>Fraction of a day.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeTimevalue(System.String)">
            <summary>
            Returns a fraction of a day.
            </summary>
            <param name="argList">Time as a text string.</param>
            <returns>Fraction of a day.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeWeekday(System.String)">
            <summary>
            Day of the week.
            </summary>
            <param name="argList">Serial number date1 and return_type.</param>
            <returns>Days between the dates.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeYear(System.String)">
            <summary>
            Returns the year of the given date.
            </summary>
            <param name="argList">Given date.</param>
            <returns>Month of given date.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.BaseToBase(System.String,System.Int32,System.Int32)">
            <summary>
            Calculates the Output to the concerned base.
            </summary>
            <param name="argList">Data to be converted.</param>
            <param name="from">Base of the Given Data</param>
            <param name="to">Base to be obtained.</param>
            <returns>The data concerning to the base in 'to' parameter</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeDec2Bin(System.String)">
            <summary>
            Computes the Binary value for the given Decimal Number.
            </summary>
            <param name="argList">Data to be converted.</param>
            <returns>Returns the calculated Binary value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeDec2Oct(System.String)">
            <summary>
            Computes the Octal value for the given Decimal Number.
            </summary>
            <param name="argList">data to be converted.</param>
            <returns>Returns the calculated Octal value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeDec2Hex(System.String)">
            <summary>
            Computes the Hexadecimal value for the given Decimal Number.
            </summary>
            <param name="argList">Data to be converted.</param>
            <returns>Returns the calculated Hexadecimal value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeBin2Oct(System.String)">
            <summary>
            Computes the Octal Number for the given binary NUmber.
            </summary>
            <param name="argList">Input BinaryNumber</param>
            <returns>The resultant Octal Number</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeBin2Dec(System.String)">
            <summary>
            Computes the Decimal Number for the given binary NUmber.
            </summary>
            <param name="argList">Input BinaryNumber</param>
            <returns>The resultant Decimal Number</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeBin2Hex(System.String)">
            <summary>
            
            </summary>
            <param name="argList"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeHex2Bin(System.String)">
            <summary>
            Computes the Binary value for the given Hexadecimal Data.
            </summary>
            <param name="argList">Data to be converted.</param>
            <returns>Returns the calculated Binary value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeHex2Oct(System.String)">
            <summary>
            Computes the Octal Equivalent for the given Hexadecimal value
            </summary>
            <param name="argList">Data to be converted.</param>
            <returns>The calculated Octal value for the given. </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeHex2Dec(System.String)">
            <summary>
            Computes the Decimal Equivalent for the given Hexadecimal value
            </summary>
            <param name="argList">Data to be converted.</param>
            <returns>The calculated Decimal value for the given.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeOct2Bin(System.String)">
            <summary>
            Computes the Binary value for the given Octal Number.
            </summary>
            <param name="argList">Data to be converted.</param>
            <returns>Returns the calculated Binary value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeOct2Hex(System.String)">
            <summary>
            Calculates the Hexadecimal equivalent value for the given Octal value
            </summary>
            <param name="argList">Data to be converted.</param>
            <returns>The Converted Hexadecimal value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeOct2Dec(System.String)">
            <summary>
            Computes the Decimal Equivalent for the given Octal value
            </summary>
            <param name="argList">The Value to be converted to Decimal</param>
            <returns>The calculated value for the given  </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeReal(System.String)">
            <summary>
            Gets the Real part of the given Complex number.
            </summary>
            <param name="argList">Given complex number.</param>
            <returns>Real part of the given complex Number.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeImaginary(System.String)">
            <summary>
            Gets the Imaginary part of the given Complex number.
            </summary>
            <param name="argList">Given complex number.</param>
            <returns>Imaginary part of the given complex Number.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeImABS(System.String)">
            <summary>
            Returns the absolute value (modulus) of a complex number in x + yi or x + yj text format.
            </summary>
            <param name="argList">Input Complex Number</param>
            <returns>The absolute value (modulus) of given complex number</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeImProduct(System.String)">
            <summary>
            Computes the Product of the given Complex Numbers
            </summary>
            <param name="argList">Input Complex Numbers</param>
            <returns>The multiplied result of the two complex numbers.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeComplex(System.String)">
            <summary>
            Obtains the complex number for the given real and imaginary part.
            </summary>
            <param name="argList">Given real and Imaginary part.</param>
            <returns>The complex number derived from the real and imaginary part.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeImSum(System.String)">
            <summary>
            Computes the sum of two complex number.
            </summary>
            <param name="argList">Parameter that is used for performing sum</param>
            <returns>The calculated sum of the numbers</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeImSub(System.String)">
            <summary>
            Computes the Difference of two complex number.
            </summary>
            <param name="argList">Parameter that is used for performing Subtraction</param>
            <returns>The calculated difference of the numbers</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeImConjugate(System.String)">
            <summary>
            Returns the complex conjugate of a complex number in x + yi or x + yj text format.
            </summary>
            <param name="argList">Input Complex Number</param>
            <returns>The complex conjugate of a complex number in x + yi or x + yj text format.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeImDiv(System.String)">
            <summary>
            Computes the Division of the given Complex Numbers
            </summary>
            <param name="argList">Input Complex Numbers</param>
            <returns>The Divided result of the two complex numbers.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeImSqrt(System.String)">
            <summary>
            Returns the Square Root of the given Complex Number.
            </summary>
            <param name="argList">Input Complex Number</param>
            <returns>The Square Root of the given Complex Number.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeImArgument(System.String)">
            <summary>
            Returns the argument  (theta), an angle expressed in radians
            </summary>
            <param name="argList">Input Complex Number</param>
            <returns>The argument  (theta), an angle expressed in radians</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeIMSin(System.String)">
            <summary>
             Returns the IMSin of the given Complex Number.
             </summary>
             <param name="argList">Input Complex Number</param>
             <returns>The IMSin of the given Complex Number.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeImSinH(System.String)">
            <summary>
            Returns the Hyperbolic Sine value of the given Complex Number.
            </summary>
            <param name="argList">Input Complex Number</param>
            <returns>The Hyperbolic Sine Value of the given Complex Number.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeIMCSC(System.String)">
            <summary>
             Returns the IMCSC of the given Complex Number.
             </summary>
             <param name="argList">Input Complex Number</param>
             <returns>The IMCSC of the given Complex Number.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeIMCos(System.String)">
            <summary>
             Returns the IMCos of the given Complex Number.
             </summary>
             <param name="argList">Input Complex Number</param>
             <returns>The IMCos of the given Complex Number.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeIMSEC(System.String)">
            <summary>
             Returns the IMSEC of the given Complex Number.
             </summary>
             <param name="argList">Input Complex Number</param>
             <returns>The IMSEC of the given Complex Number.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeIMTan(System.String)">
            <summary>
             Returns the IMTan of the given Complex Number.
             </summary>
             <param name="argList">Input Complex Number</param>
             <returns>The IMTan of the given Complex Number.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeImCot(System.String)">
            <summary>
             Returns the IMCot of the given Complex Number.
             </summary>
             <param name="argList">Input Complex Number</param>
             <returns>The IMCot of the given Complex Number.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeIMCSCH(System.String)">
            <summary>
             Returns the IMCSCH of the given Complex Number.
             </summary>
             <param name="argList">Input Complex Number</param>
             <returns>The IMCSCH of the given Complex Number.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeImCosH(System.String)">
            <summary>
            Returns the Hyperbolic Cos value of the given Complex Number.
            </summary>
            <param name="argList">Input Complex Number</param>
            <returns>The Hyperbolic Cos Value of the given Complex Number.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeIMTanH(System.String)">
            <summary>
             Returns the IMTanH of the given Complex Number.
             </summary>
             <param name="argList">Input Complex Number</param>
             <returns>The IMTanH of the given Complex Number.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeIMCotH(System.String)">
            <summary>
             Returns the IMCotH of the given Complex Number.
             </summary>
             <param name="argList">Input Complex Number</param>
             <returns>The IMCotH of the given Complex Number.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeIMSecH(System.String)">
            <summary>
             Returns the IMSecH of the given Complex Number.
             </summary>
             <param name="argList">Input Complex Number</param>
             <returns>The IMSecH of the given Complex Number.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeIMLOG10(System.String)">
            <summary>
            Returns the LOG10 value of the given Complex Number.
            </summary>
            <param name="argList">Input Complex Number</param>
            <returns>The Log10 of the given Complex Number.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeIMLOG2(System.String)">
            <summary>
            Returns the Log2 of the given Complex Number.
            </summary>
            <param name="argList">Input Complex Number</param>
            <returns>The Log2 of the given Complex Number.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeIMLN(System.String)">
            <summary>
            Returns the LOG value of the given Complex Number.
            </summary>
            <param name="argList">Input Complex Number</param>
            <returns>The Log of the given Complex Number.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeImEXP(System.String)">
            <summary>
            Returns the Exponent of the given Complex Number.
            </summary>
            <param name="argList">Input Complex Number</param>
            <returns>The Exponent of the given Complex Number.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeImPower(System.String)">
            <summary>
            Returns the power of the given Complex Number.
            </summary>
            <param name="argList">Input Complex Number</param>
            <returns>The power of the given Complex Number.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeBitOr(System.String)">
            <summary>
            Computes the Bit OR of the given two numbers.
            </summary>
            <param name="argList">Input Numbersfor which the OR operations has to be performed.</param>
            <returns>Bit OR value of the given two numbers.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeBitXor(System.String)">
            <summary>
            Computes the Bit XoR of the given two numbers.
            </summary>
            <param name="argList">Input Numbersfor which the OR operations has to be performed.</param>
            <returns>Bit OR value of the given two numbers.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeBitAnd(System.String)">
            <summary>
            Computes the Bit AND of the given two numbers.
            </summary>
            <param name="argList">Input Numbersfor which the AND operations has to be performed.</param>
            <returns>Bit AND value of the given two numbers.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeBitLShift(System.String)">
            <summary>
            Computes the Bit Left Shift of the given number.
            </summary>
            <param name="argList">Input Numbersfor which the OR operations has to be performed.</param>
            <returns>Bit Left Shift value of the given number.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeBitRShift(System.String)">
            <summary>
            Computes the Bit Right Shift of the given number.
            </summary>
            <param name="argList">Input Numbersfor which the Bit Right Shift operations has to be performed.</param>
            <returns>Bit Right Shift value of the given number.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeErf(System.String)">
            <summary>
             Returns the error function .
             </summary>
             <param name="argList">Input Number</param>
             <returns>The error function.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeErfCPrecise(System.String)">
            <summary>
             Returns the Complement of error function .
             </summary>
             <param name="argList">Input Number</param>
             <returns>The Complement of error function.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeErfPrecise(System.String)">
            <summary>
             Returns the error function .
             </summary>
             <param name="argList">Input Number</param>
             <returns>The error function.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeBesselI(System.String)">
            <summary>
            Return the value of the ComputeBesselI 
            </summary>
            <param name="argList">arguments</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.besseli0(System.Double)">
            <summary>
            Return the value of besseli0
            </summary>
            <param name="x">value</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeBesselJ(System.String)">
            <summary>
             Returns the BesselJ function of order n of the specified number.
             </summary>
             <param name="argList">Input Number</param>
             <returns>The BesselJ of the Number.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.j1(System.String)">
            <summary>
            Returns the Bessel function of order 1 of the specified number.
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.j0(System.String)">
            <summary>
            Returns the Bessel function of order 0 of the specified number.
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeBesselY(System.String)">
            <summary>
             Returns the BesselY function of order n of the specified number.
             </summary>
             <param name="argList">Input Number</param>
             <returns>The BesselY of the Number.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.y0(System.Double)">
            <summary>
            Returns the Bessel function of the second kind, of order 0 of the specified number.
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.y1(System.Double)">
            <summary>
            Returns the Bessel function of the second kind, of order 1 of the specified number.
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputebesselK(System.String)">
            <summary>
            Returns the value of ComputebesselK
            </summary>
            <param name="argList">arguments list</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeConversion(System.String)">
            <summary>
            Returns the value of ComputeConversion
            </summary>
            <param name="argList">arguments list</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.LookupCachingClearAll">
            <summary>
            Clears all look up caches used in HLookUp and VLookUp calculations so they will be recreated the
            next time one of these functions is used.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.LookupCachingClearSheet(Syncfusion.UI.Xaml.CellGrid.ICalcData)">
            <summary>
            Returns the value of Clearsheet
            </summary>
            <param name="grd">Icalcdata</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ReloadErrorStrings">
            <summary>
            Use this method to reset internal error strings if you make changes to <see cref="F:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.FormulaErrorStrings"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.Determinant(System.Double[0:,0:],System.Int32)">
            <summary>
            Used to find the determinant internally for matrix function
            </summary>
            <param name="a">double array</param>
            <param name="k">array length</param>
            <returns>double value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.NormalProbabilityDensity(System.Double,System.Double,System.Double)">
            <summary>
            Returns the Probabilitydistribution of the normal distribution.
            </summary>
            <param name="x">Value at which the distribution is evaluated.</param>
            <param name="mean">Mean of the distribution.</param>
            <param name="standardDeviation">Standard deviation of the distribution.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.Cofactor(System.Double[0:,0:],System.Int32,System.Double[0:,0:]@)">
            <summary>
            find the cofactor of matrix
            </summary>
            <param name="num"></param>
            <param name="f">array length</param>
            <param name="inverse">return the inverse matrix</param>
            <returns>return success state</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.Inverse(System.Double[0:,0:],System.Double[0:,0:],System.Int32,System.Double[0:,0:]@)">
            <summary>
            To find the inverse of matrix
            </summary>
            <param name="num">matrix</param>
            <param name="fac">cofactor matrix</param>
            <param name="r">matrix length</param>
            <param name="inverse">Inveser matrix</param>
            <returns>Inverse Matrix</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ChiSquaredProbabilityDensityFunction(System.Double,System.Int32)">
            <summary>
            Chi-squared probability density function.
            </summary>
            <param name="x">The value at which the PDF is evaluated.</param>
            <param name="k">Degress of freedom, or number independent standard normal distributions.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.NormalCumulativeDistributionFunctionInverse(System.Double,System.Double,System.Double)">
             <summary>
             Returns the inverse of the CDF of the normal distribution.
             </summary>
             <param name="p">Cumulative probability of the distribution. 0 &lt;= p &gt;= 1.</param>
            <param name="mean">Mean of the distribution.</param>
             <param name="standardDeviation">Standard deviation of the distribution.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.StandardNormalCumulativeDistributionInverse(System.Double)">
            <summary>
            Returns the inverse of the CDF of the standard normal distribution.
            </summary>
            <param name="p">Cumulative probability of the distribution. p is between 0 and 1.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeNpv(System.String)">
            <summary>
            Computes the net present value an investment.
            </summary>
            <param name="argList">Delimited string containing the rate as percentage per period
            and a list of invested values.</param>
            <returns>Net present value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputePmt(System.String)">
            <summary>
            Computes the payment for a loan.
            </summary>
            <param name="argList">Delimited string containing the rate as percentage per period,
            number of periods, present value, future value, and payment type (0 = end of period, 1 = start of period).</param>
            <returns>Payment amount.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputePpmt(System.String)">
            <summary>
            Computes the principal payment for a period.
            </summary>
            <param name="argList">Delimited string containing the rate as percentage per period, the period,
            number of periods, present value, future value, and payment type (0 = end of period, 1 = start of period).</param>
            <returns>Principal payment.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputePv(System.String)">
            <summary>
            Computes the present value of an investment.
            </summary>
            <param name="argList">Delimited string containing the rate as percentage per period,
            number of periods, payment per period, future value, and payment type (0 = end of period, 1 = start of period).</param>
            <returns>Present value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeRate(System.String)">
            <summary>
            Computes the internal rate of return of a series of cash flows.
            </summary>
            <param name="argList">Delimited string containing a range of cells and an initial guess.</param>
            <returns>Internal rate of return.</returns>
            <remarks>
            This IRR calculation uses Newton's method to approximate a root of
                      f(r) = Sum( values[i]/(1+r)^i) = 0
            where the Sum index is i = 1 to the number of values. The algorithm returns a value if
            the relative difference between root approximations is less than 1e-7. It fails if this
            accuracy is not attained in 20 iterations.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeSln(System.String)">
            <summary>
            Computes the straight-line depreciation of an asset per period.
            </summary>
            <param name="argList">Delimited string containing the cost,
            salvage value, and life.</param>
            <returns>Depreciation of the asset.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeSyd(System.String)">
            <summary>
            Computes the sum of years digits depreciation of an asset per period.
            </summary>
            <param name="argList">Delimited string containing the cost,
            salvage value, life, and period.</param>
            <returns>Depreciation for the requested period.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeVdb(System.String)">
            <summary>
            Computes the variable declining balance of an asset.
            </summary>
            <param name="argList">Delimited string containing the initial cost,
            salvage value, life of asset, period of calculation, and factor.</param>
            <returns>Variable declining balance.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeDollarDe(System.String)">
            <summary>
            Converts a number to text using currency format.
            </summary>
            <param name="args">Number and the number of digits.</param>
            <returns>Currency format string.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeDollarFr(System.String)">
            <summary>
            Converts a number to text using currency format.
            </summary>
            <param name="args">Number and the number of digits.</param>
            <returns>Currency format string.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeDuration(System.String)">
            <summary>
             Returns the weighted average of the present value of the cash flows
            </summary>
            <param name="args">Number and the number of digits</param>
            <returns>Number of years</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeACCRINTM(System.String)">
            <summary>
            Calculates the accrued interest of a security that pays interest at maturity.
            </summary>
            <param name="args">Number and the number of digits</param>
            <returns>Accrued interest</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeRRI(System.String)">
            <summary>
            Calculates the equivalent interest rate for the growth of an investment.
            </summary>
            <param name="args">Investment periods, present and future value of the investments.</param>
            <returns>Returns the equivalent interest.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeFvschedule(System.String)">
            <summary>
            Returns the future value of an initial principal after applying a series of compound interest rates.
            </summary>
            <param name="args">Number and the number of digits</param>
            <returns>Number of future value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeIntrate(System.String)">
            <summary>
             Returns the interest rate for a fully invested security.
            </summary>
            <param name="argList">Number and the number of digits</param>
            <returns>Rate of interest</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeDisc(System.String)">
            <summary>
             Returns the discount rate for a security.
            </summary>
            <param name="args">Number and the number of digits</param>
            <returns>Rate of Discount</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeFv(System.String)">
            <summary>
            Computes the future value of an investment.
            </summary>
            <param name="argList">Delimited string containing the rate as percentage per period,
            number of periods, payment per period, present value, and payment type (0 = end of period, 1 = start of period).</param>
            <returns>Future value of the investment.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeIpmt(System.String)">
            <summary>
            Computes the interest payment for a period.
            </summary>
            <param name="argList">Delimited string containing the rate as percentage per period, the period,
            number of periods, present value, future value, and payment type (0 = end of period, 1 = start of period).</param>
            <returns>Interest payment.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeIrr(System.String)">
            <summary>
            Computes the internal rate of return of a series of cash flows.
            </summary>
            <param name="argList">Delimited string containing a range of cells and an initial guess.</param>
            <returns>Internal rate of return.</returns>
            <remarks>
            This IRR calculation uses Newton's method to approximate a root of
                      f(r) = Sum( values[i]/(1+r)^i) = 0
            where the Sum index is i = 1 to the number of values. The algorithm returns a value if
            the relative difference between root approximations is less than 1e-5. It fails if this
            accuracy is not attained in 20 iterations.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeXirr(System.String)">
            <summary>
             Computes the internal rate of return for a schedule of possibly non-periodic cash flows.
            </summary>
            <param name="argList">A list of two or three arguments. The first argument contains a range of cash flows, the second argument
            contains a list of corresponding date serial number values, and the third argument contains an initial guess at the return value.</param>
            <returns>The internal rate of return.</returns>
            <remarks>The computation uses a root finding algorithm. If the algorithm does not converge to a result within 100 iterations,
            an error is returned. The convergence requirement is an absolute error of 0.000001. The first date must be the earliest date,
            and the dates must be date serial numbers. Also, there must be at least one positive cash flow and at least one negative cash
            flow in the cash flow values.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeIspmt(System.String)">
            <summary>
            Computes the simple interest payment.
            </summary>
            <param name="argList">Delimited string containing the rate as percentage per period, the period,
            number of periods, and present value.</param>
            <returns>Simple interest payment.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeMirr(System.String)">
            <summary>
            Computes the modified internal rate of return of a series of cash flows.
            </summary>
            <param name="argList">Delimited string containing a range of cells,
            finance interest rate, and a reinvested interest rate.</param>
            <returns>Modified internal rate of return.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeNper(System.String)">
            <summary>
            Computes the number of periods an investment.
            </summary>
            <param name="argList">Delimited string containing the rate as percentage per period,
            payment per period, present value, future value, and payment type (0 = end of period, 1 = start of period).</param>
            <returns>Number of periods.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeDb(System.String)">
            <summary>
            Computes the declining balance of an asset.
            </summary>
            <param name="argList">Delimited string containing the initial cost,
            salvage value, life of asset, period of calculation, and months in the initial year.</param>
            <returns>Declining balance.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeDdb(System.String)">
            <summary>
            Computes the double declining balance of an asset.
            </summary>
            <param name="argList">Delimited string containing the initial cost,
            salvage value, life of asset, period of calculation, and factor.</param>
            <returns>Double declining balance.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeCUMIPMT(System.String)">
            <summary>
            Returns the cumulative interest paid for an investment period with a constant interest rate.
            </summary>
            <param name="args">Number and the number of digits</param>
            <returns>Number of interest rate</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeACCRINT(System.String)">
            <summary>
            Calculates the accrued interest of a security in the case of periodic payments.
            </summary>
            <param name="args">Number and the number of digits</param>
            <returns>Accrued interest</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeCUMPRINC(System.String)">
            <summary>
            Returns the cumulative principal paid for an investment period with a constant interest rate.
            </summary>
            <param name="args">Number and the number of digits</param>
            <returns>Cumulative principal value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeReceived(System.String)">
            <summary>
            Returns the amount received at maturity for a fully invested security.
            </summary>
            <param name="args">Number and the number of digits</param>
            <returns>Received amount</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeAddress(System.String)">
            <summary>
            this function used to obtain the address of a cell in a worksheet, given specified row and column numbers
            </summary>
            <param name="argList">The argList contain the row and column postion and type of reference</param>
            <returns>Address of the given row and column</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeCell(System.String)">
            <summary>
            Return the information about cell
            </summary>
            <param name="arg">content, reference</param>
            <returns>Cell information</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeInfo(System.String)">
            <summary>
            Returns the current operation environment information
            </summary>
            <param name="argList">Type</param>
            <returns>environment information</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeType(System.String)">
            <summary>
            Returns the interger value for the datatype of given text
            </summary>
            <param name="argList">text</param>
            <returns>integer value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeIsFormula(System.String)">
            <summary>
            Return the value of ComputeIsFormula
            </summary>
            <param name="argList">arguments</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeHLookUp(System.String)">
            <summary>
            Returns a horizontal table look up value.
            </summary>
            <param name="range">Contains search value, table, return index and match properties.</param>
            <returns>Matching value found in the table.</returns>
            <remarks> For example, =HLOOKUP("Axles",A1:C4,2,TRUE) looks for the exact
            match for Axles in A1:C1 and returns the corresponding value in A2:C2.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeMatch(System.String)">
            <summary>
            Finds the index a specified value in a lookup_range.
            </summary>
            <param name="arg">look_value, lookup_range, match_type</param>
            <returns>The relative index of the lookup_value in the lookup_range.</returns>
            <remarks>
            Lookup_range should be a either a single row range or a single column range.
            If match_type is 0, the relative index of the first exact match (ignoring case)
            in the specified range is returned. If match_type is 1, the values in the range
            should be in ascending order, and the index of the largest value less than or
            equal to the lookup_value is returned. If match_type is -1, the values in the range
            should be in descending order, and the index of the smallest value greater than or
            equal to the lookup_value is returned.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.GetResultRange(System.String,System.String,System.Boolean@)">
            <summary>
            Below method is used to returns the cellrange while the lookup vector is cellrange and result vector is cell(eg:=LOOKUP(2,D7:I7,A1)).
            </summary>
            <param name="lookupRange"> lookup vectors value.</param>
            <param name="resultRange"> result vectors value.</param>
            <returns>Returns the cellrange of result vector. </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeLookUp(System.String)">
            <summary>
            Returns a value from result table either from a one-row or one-column range or from an array 
            </summary>
            <param name="range">Lookup Value, lookup range, result range</param>
            <returns>Matching value found in the table</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeVLookUp(System.String)">
            <summary>
            Returns a vertical table look up value.
            </summary>
            <param name="range">Contains search value, table, return index and match properties.</param>
            <returns>Matching value found in the table.</returns>
            <remarks> For example, =VLOOKUP("Axles",A1:C4,2,TRUE) looks for the exact
            match for Axles in A1:A4 and returns the corresponding value in B1:B4.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeLeft(System.String)">
            <summary>
            Returns the left so many characters in the given string.
            </summary>
            <param name="range">Contains the string and the number of characters.</param>
            <returns>A left sub string..</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeLen(System.String)">
            <summary>
            Returns the length of the given string.
            </summary>
            <param name="range">Contains the string.</param>
            <returns>An integer length.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeMid(System.String)">
            <summary>
            Returns a substring of the given string.
            </summary>
            <param name="range">Contains the original string, start position of the substring,
            and the number of characters in the substring.</param>
            <returns>A substring.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeRight(System.String)">
            <summary>
            Returns the right so many characters in the given string.
            </summary>
            <param name="range">Contains the string and the number of characters.</param>
            <returns>A right substring.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.IsSeparatorInTIC(System.String)">
            <summary>
            Returns True if the ParseArgumentSeparator character is included in a string.
            </summary>
            <param name="s">The string to be searched.</param>
            <returns>True or False.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.GetStringArray(System.String)">
            <summary>
            Returns an array of strings from an argument list.
            </summary>
            <param name="s">A delimited argument list.</param>
            <returns>Array of strings from an argument list.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeConcatenate(System.String)">
            <summary>
            Returns a single character string.
            </summary>
            <param name="range">List of strings to be concatenated.</param>
            <returns>A single string.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeIndirect(System.String)">
            <summary>
            Returns the reference specified by a text string. References are immediately evaluated to display their contents.
            <para>Syntax: INDIRECT(CellRefString, [IsA1Style])</para>
            </summary>
            <param name="args">Cell reference string.</param>
            <returns>Cell reference.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeSubstitute(System.String)">
            <summary>
            In a given string, this method substitutes an occurrence of one string with another string.
            </summary>
            <param name="range">A list of 3 or 4 arguments: the original string, the search string, the
            replacement string, and optionally, an integer representing the occurrence to be replaced.
               </param>
            <returns>The modified string.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeText(System.String)">
            <summary>
            Returns a quoted string from a date or number.
            </summary>
            <param name="range">Value to be converted to a string.</param>
            <returns>Quoted string.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeTextJoin(System.String)">
            <summary>
            The TEXTJOIN function combines the text from multiple ranges and/or strings, and includes a delimiter you specify between each text value that will be combined. If the delimiter is an empty text string, this function will effectively concatenate the ranges.
            </summary>
            <param name="range">A text string, or array of strings, such as a range of cells.</param>
            <returns>A single string.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeConcat(System.String)">
            <summary>
            The CONCAT function combines the text from multiple ranges and/or strings, but it doesn't provide the delimiter or IgnoreEmpty arguments.
            </summary>
            <param name="range">Text item to be joined. A string, or array of strings, such as a range of cells.</param>
            <returns>A single string.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeValue(System.String)">
            <summary>
            Returns a number.
            </summary>
            <param name="range">A date or number string.</param>
            <returns>A number in the given string.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeMod(System.String)">
            <summary>
            Returns the remainder after dividing one number by another.
            </summary>
            <param name="range">Two numbers in a list.</param>
            <returns>The remainder.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeTrunc(System.String)">
            <summary>
            Truncates a number to an integer.
            </summary>
            <param name="range">Value and number of digits.</param>
            <returns>Truncated value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeSumProduct(System.String)">
            <summary>
            Returns the sum of the products of corresponding values.
            </summary>
            <param name="range">Two cell ranges.</param>
            <returns>Sum of the products.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeDollar(System.String)">
            <summary>
            Converts a number to text using currency format.
            </summary>
            <param name="args">Number and the number of digits.</param>
            <returns>Currency format string.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeFixed(System.String)">
            <summary>
            Rounds a number to the specified number of decimals, formats the number
            in decimal format using a period and commas, and return the result as text.
            </summary>
            <param name="args">
            Number, number of digits, a flag that prevents from include
            commas in the returned text.
            </param>
            <returns>Formatted number as string.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeChoose(System.String)">
            <summary>
            Returns the value at the specified index from a list of values.
            </summary>
            <param name="arg">A string of the form "Index, Value1, Value2,..." in which the term 'Index' denotes the index of the value to be retrieved.</param>
            <returns>The selected value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeLower(System.String)">
            <summary>
            Converts text to lowercase.
            </summary>
            <param name="args">Value to convert.</param>
            <returns>Converted string.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeUpper(System.String)">
            <summary>
            Converts text to uppercase.
            </summary>
            <param name="args">Value to convert.</param>
            <returns>Converted string.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeT(System.String)">
            <summary>
            Returns the string or text referred by the given value.
            </summary>
            <param name="args">value to find the referred text - Required </param>
            <returns>Returns the referred text</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeColumn(System.String)">
            <summary>
            Returns the column index of the passed in cell reference.
            </summary>
            <param name="arg">Contains zero or one argument. If no argument is passed, returns the column index of the
            location of this Column function call, otherwise returns the column index of the passed in cell reference.</param>
            <returns>The column index.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeRow(System.String)">
            <summary>
            Returns the row index of the passed in cell reference.
            </summary>
            <param name="arg">Contains zero or one argument. If no argument is passed, returns the row index of the
            location of this Row function cell, otherwise returns the row index of the passed in cell reference.</param>
            <returns>The row index.</returns>
            <remarks>
            This method doesn't return an array of row numbers as the array formula entry is not supported in engine. It is another usecase of this library function.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeN(System.String)">
            <summary>
            Returns a number converted from the provided value.
            </summary>
            <param name="args">Value to be converted.</param>
            <returns>A number in string format or an error string.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeNA(System.String)">
            <summary>
            Returns the error value(#N/A). Used internally.
            </summary>
            <param name="args">empty string.</param>
            <returns>error value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeNA">
            <summary>
            Returns the error value (#N/A - value not available).
            </summary>
            <returns>error value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeErrorType(System.String)">
            <summary>
             Returns a number corresponding to the predefined error values(#NULL!, #VALUE!, #REF!, #NAME?, #NUM!, #N/A, "#GETTING_DATA). Returns #N/A if not or any value enclosed within double quotes.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeTrim(System.String)">
            <summary>
            Removes all leading and trailing white-space characters.
            </summary>
            <param name="args">Value to trim.</param>
            <returns>
            The string that remains after all leading and trailing white-space characters
            were removed.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeIsLogical(System.String)">
            <summary>
            Determines whether the value is a logical value.
            </summary>
            <param name="args">Value to be tested.</param>
            <returns>True if the value is a logical value, False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeIsNA(System.String)">
            <summary>
            Determines whether the value is the #NA error value.
            </summary>
            <param name="args">Value to be tested.</param>
            <returns>True if the value is the #NA error value, False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeIsErr(System.String)">
            <summary>
            Returns True is the string denotes an error except #N/A.
            </summary>
            <param name="range">Value to be tested.</param>
            <returns>True if the value is an error except #N/A, false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeIsBlank(System.String)">
            <summary>
            Determines whether the value is empty string.
            </summary>
            <param name="args">Value to be tested.</param>
            <returns>True if the value is empty, False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeIsText(System.String)">
            <summary>
            Determines whether the value is string or not.
            </summary>
            <param name="args">Value to be tested.</param>
            <returns>True if the value is a string, false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeIsNonText(System.String)">
            <summary>
            Determines whether the value is not a string.
            </summary>
            <param name="args">Value to be tested.</param>
            <returns>True if the value is not a string, false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeIsError(System.String)">
            <summary>
            Returns True is the string denotes an error.
            </summary>
            <param name="range">String to be tested.</param>
            <returns>True if the value is an error.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeIsRef(System.String)">
            <summary>
            Checks whether the value is a reference or not.
            </summary>
            <param name="args">value or reference</param>
            <returns>TRUE or FALSE</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeAnd(System.String)">
            <summary>
            Returns the And of all values treated as logical values listed in the argument.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers. Each item in the list is considered True if it is nonzero
            and False if it is zero.</param>
            <returns>A string holding the And of all values listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeIFS(System.String)">
            <summary>
            The IFS function checks whether one or more conditions are met and returns a value that corresponds to the first TRUE condition. IFS can take the place of multiple nested IF statements, and is much easier to read with multiple conditions.
            </summary>
            <param name="args">A string holding [Something is True1, Value if True1, [Something is True2, Value if True2],…[Something is True127, Value if True127]</param>
            <returns>Returns a value that corresponds to the first TRUE condition</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeSwitch(System.String)">
            <summary>
            The SWITCH function evaluates an expression against a list of values and returns the result corresponding to the first matching value. If there is no match, an optional default value may be returned.
            </summary>
            <param name="args">A string holding expression, value1, result1, [default or value2, result2],…[default or value3, result3]</param>
            <returns>Returns the result corresponding to the first matching value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeOr(System.String)">
            <summary>
            Returns the inclusive Or of all values treated as logical values listed in the argument.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers. Each item in the list is considered True if it is nonzero
            and False if it is zero.</param>
            <returns>A string holding the Or of all values listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeNot(System.String)">
            <summary>
             Flips the logical value represented by the argument.
            </summary>
            <remarks>
            The argument is
            treated as a logical expression with a non-zero value considered True and a zero value considered False.
            </remarks>
            <param name="args">A string holding either a single argument consisting of a
            cell reference, formula, or number.
            </param>
            <returns>Returns 0 if the argument evaluates to a non-zero value. Otherwise, it returns 1.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeOffSet(System.String)">
            <summary>
            Returns a range that is the offset of the reference range by rows and cols.
            </summary>
            <param name="arg">reference, rows, cols, [height], [width]</param>
            <returns>A range offset.</returns>
            <remarks>The returned range is the range passed in through the reference variable offset
            by the number of rows in the rows variable and number of columns in the cols variable. If height and
            width are present in the argument list, they determine the number of rows and columns
            in the returned range. Otherwise, the dimensions of the returned range match the input range.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeTrue(System.String)">
            <summary>
            Returns the logical value True.
            </summary>
            <param name="empty">Empty string.</param>
            <returns>Logical True value string.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeFalse(System.String)">
            <summary>
            Returns the logical value False.
            </summary>
            <param name="empty">Empty string.</param>
            <returns>Logical False value string.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeXor(System.String)">
            <summary>
            Returns the exclusive OR of all values treated as logical values listed in the argument.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers. Each item in the list is considered True if it is nonzero
            and False if it is zero.</param>
            <returns>A string holding the exclusive OR of all values listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeIfNA(System.String)">
            <summary>
            Returns a value you specify if a formula evaluates to #N/A
            otherwise, returns the result of the formula.
            </summary>
            <param name="range">String to be tested.</param>
            <returns>Returns the computed value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeAcos(System.String)">
            <summary>
            Computes angle whose cosine is the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding an angle whose cosine is the argument.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeArabic(System.String)">
            <summary>
            Returns the Arabic value of Raman numeric
            </summary>
            <param name="arg"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeAreas(System.String)">
            <summary>
            Returns the area of the passed in cell reference range
            </summary>
            <param name="arg">Contains one argument - reference</param>
            <returns>area of the passed in cell reference.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeAsin(System.String)">
            <summary>
            Computes angle whose sine is the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding an angle whose sine is the argument.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeAsinh(System.String)">
            <summary>
            The inverse of Sinh.
            </summary>
            <param name="args">The given value.</param>
            <returns>Result of ASinh(value).</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeAtan(System.String)">
            <summary>
            Computes angle whose tangent is the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding the tangent of the argument.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeAtan2(System.String)">
            <summary>
            The ArcTangent of the x and y values.
            </summary>
            <param name="argList">x_value and y_value.</param>
            <returns>Angle whose tangent is y_value/x_value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeAtanh(System.String)">
            <summary>
            The inverse of Tanh.
            </summary>
            <param name="args">|Value| &lt; 1.</param>
            <returns>Result of ATanh(value).</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeCeiling(System.String)">
            <summary>
            Computes the smallest whole number greater than or equal to the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding the smallest whole number greater than or equal to the argument.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeCeilingMath(System.String)">
            <summary>
            Returns the RoundUp of the given number to the given significance
            </summary>
            <param name="args">Number, significance, mode</param>
            <returns>RoundUp number</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeColumns(System.String)">
            <summary>
            Returns the number of columns of the passed in cell reference.
            </summary>
            <param name="arg">Contains one argument - reference</param>
            <returns>number of columns.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeCombin(System.String)">
            <summary>
            The number of combinations of a given number of items.
            </summary>
            <param name="argList">Number, number_items.</param>
            <returns>The number of combinations.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeCombinA(System.String)">
            <summary>
            Returns the value of ComputeCombinA
            </summary>
            <param name="argList">arguments</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeLog(System.String)">
            <summary>
            Computes the natural logarithm of the value in the argument.
            </summary>
            <param name="argList">A cell reference, formula, or number.</param>
            <returns>A string holding the natural logarithm of the value in the argument.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeLog10(System.String)">
            <summary>
            Computes the base 10 logarithm of the value in the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding the base 10 logarithm of the value in the argument.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeExp(System.String)">
            <summary>
            Computes e raised to the value of the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding the e raised to the value of the argument.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeSqrtpi(System.String)">
            <summary>
            Returns the square root of product of given number with PI.
            </summary>
            <param name="args">Number</param>
            <returns>Sqrtpi value of given number</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeSqrt(System.String)">
            <summary>
            Computes the square root of the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding the square root of the argument.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeAbs(System.String)">
            <summary>
            Computes the absolute value of the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding the absolute value of the argument.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeCos(System.String)">
            <summary>
            Computes the cosine of the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding the cosine of the argument.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeAcosh(System.String)">
            <summary>
            The inverse of Cosh.
            </summary>
            <param name="args">Value >= 1.</param>
            <returns>Result of ACosh(value).</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeRand(System.String)">
            <summary>
            Returns an evenly distributed random number &gt;= 0 and &lt; 1.
            </summary>
            <param name="args">Ignored. Can be empty.</param>
            <returns>
            A string holding the random number.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeTan(System.String)">
            <summary>
            Computes the tangent the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding the tangent of the argument.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeTanh(System.String)">
            <summary>
            Computes the hyperbolic tangent of the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding the hyperbolic tangent of the argument.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.CheckCriteria(System.Char,System.String,System.String)">
            <summary>
            Checks if value of S mets the Criteria or Not.
            </summary>
            <param name="op">Operator</param>
            <param name="s">Cell</param>
            <param name="criteria">The String value to be compared</param>
            <returns> True if Value of S equals Criteria Otherwise False</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.CheckCriteria(System.Char,System.String,System.Double)">
            <summary>
            Checks if value of S mets the Criteria or Not.
            </summary>
            <param name="op">Operator</param>
            <param name="s">Cell</param>
            <param name="compare">The double value to be compare</param>
            <returns> True if Value of S mets Criteria Otherwise returns False</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeSumif(System.String)">
            <summary>
            Sums the cells specified by some criteria.
            </summary>
            <param name="argList">The criteria range, the criteria, and the sum range.</param>
            <returns>A string holding the sum.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeAsc(System.String)">
            <summary>
            Used to compute the value
            </summary>
            <param name="arg">arguments</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeAcot(System.String)">
            <summary>
            Returns the arccotangent of a number.
            </summary>
            <param name="argList">A cell reference or number</param>
            <returns>A string containing the arccotangent of a number</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeAcoth(System.String)">
            <summary>
            Returns the hyperbolic arccotangent of a number.
            </summary>
            <param name="argList">A cell reference or number</param>
            <returns>A string containing the hyperbolic arccotangent of a number</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeAsech(System.String)">
            <summary>
             Returns the archyperbolic secant of an angle.
            </summary>
            <param name="argList">A cell reference or a number</param>
            <returns>A string containing the archyperbolic secant of an angle</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeBase(System.String)">
            <summary>
            Retuns the number into text for the given radix base
            </summary>
            <param name="argList"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeCosh(System.String)">
            <summary>
            Computes the hyperbolic cosine of the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding the hyperbolic cosine of the argument.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeCot(System.String)">
            <summary>
            Returns the hyperbolic cosine of a number.
            </summary>
            <param name="argList">A cell reference or a number</param>
            <returns>A string containing the hyperbolic cosine of a number</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeCoth(System.String)">
            <summary>
            Returns the cotangent of an angle.
            </summary>
            <param name="argList">A cell reference or a number</param>
            <returns>A string containing the cotangent of an angle</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeCsc(System.String)">
            <summary>
             Returns the cosecant of an angle
            </summary>
            <param name="argList">a cell reference or number</param>
            <returns>A string containing the cosecant of an angle</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeCsch(System.String)">
            <summary>
            Returns the hyperbolic cosecant of an angle.
            </summary>
            <param name="argList"></param>
            <returns>A string containing the hyperbolic cosecant of an angle</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeDecimal(System.String)">
            <summary>
            Returns the decimal number of the given text to the given base.
            </summary>
            <param name="argList">text,base</param>
            <returns>Decimal number.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeDegrees(System.String)">
            <summary>
            Converts radians into degrees.
            </summary>
            <param name="args">Value in radians.</param>
            <returns>Degrees for the given radians.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeEven(System.String)">
            <summary>
            Rounds up to larger in magnitude even number.
            </summary>
            <param name="args">Number to be rounded.</param>
            <returns>Rounded even value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeFact(System.String)">
            <summary>
            Factorial of a given number.
            </summary>
            <param name="args">The given value, x.</param>
            <returns>Factorial of x.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeFactdouble(System.String)">
            <summary>
            Returns the Double factorial value for given number.
            </summary>
            <param name="args">number to find FactDouble</param>
            <returns>FactDouble of given number. </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeFloor(System.String)">
            <summary>
            Computes the largest whole number less than or equal to the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding the largest whole number less than or equal to the argument.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeFormulaText(System.String)">
            <summary>
            Return the value of ComputeFormulaText
            </summary>
            <param name="argList">arguments</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeGcd(System.String)">
            <summary>
            Returns the largest integer that divide the given numbers without any reminders.
            </summary>
            <param name="range">number1,number2,...</param>
            <returns>Returns the GCD value of given arguments</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeHyperlink(System.String)">
            <summary>
            Create a shortcut for the link / path
            </summary>
            <param name="argList">link,name</param>
            <returns>shortcut name</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeInt(System.String)">
            <summary>
            Returns the integer value.
            </summary>
            <param name="range">Number to be truncated.</param>
            <returns>An integer.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeIsEven(System.String)">
            <summary>
            Determines whether the value is even or not.
            </summary>
            <param name="args">Value to be tested.</param>
            <returns>True, if the value is even, false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeIsNumber(System.String)">
            <summary>
            Determines whether the string contains a number or not.
            </summary>
            <param name="range">String to be tested.</param>
            <returns>True if the string is a number.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeIsOdd(System.String)">
            <summary>
            Determines whether the value is odd or not.
            </summary>
            <param name="args">Value to be tested.</param>
            <returns>True, if the value is odd, false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeLcm(System.String)">
            <summary>
            returns the smallest positive integer that is a multiple of all given values.
            </summary>
            <param name="range">Number1,Number2,...</param>
            <returns>The LCM value of given aruments</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeLn(System.String)">
            <summary>
            Computes the natural logarithm of the value in the argument.
            </summary>
            <param name="argList">A cell reference, formula, or number.</param>
            <returns>A string holding the natural logarithm of the value in the argument.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeMdeterm(System.String)">
            <summary>
            Returns the number of columns of the passed in cell reference.
            </summary>
            <param name="arg">Contains one argument - reference</param>
            <returns>number of columns.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeMInverse(System.String)">
            <summary>
            Returns the number of columns of the passed in cell reference.
            </summary>
            <param name="arg">Contains one argument - reference</param>
            <returns>number of columns.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeMmult(System.String)">
            <summary>
            Returns the number of columns of the passed in cell reference.
            </summary>
            <param name="arg">Contains one argument - reference</param>
            <returns>number of columns.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeMround(System.String)">
            <summary>
            Determines the number rounded to the given multiple.
            </summary>
            <param name="argList">Number, Multible both are required</param>
            <returns>Mround value of given number</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeMultinomial(System.String)">
            <summary>
            Determines the Multinominal value of given range of numbers.
            </summary>
            <param name="range">Given numbers</param>
            <returns>Multinominal value of given range of numbers.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeMUnit(System.String)">
            <summary>
             Returns the number of columns of the passed in cell reference.
             </summary>
             <param name="arg">Contains one argument - reference</param>
             <returns>number of columns.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeOdd(System.String)">
            <summary>
            Rounds up to larger in magnitude odd number.
            </summary>
            <param name="args">Number to be rounded.</param>
            <returns>Rounded odd value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputePI(System.String)">
            <summary>
            Returns the number pi.
            </summary>
            <param name="args">Ignored. Can be empty.</param>
            <returns>A string holding the number pi.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputePow(System.String)">
            <summary>
            Returns a specified number raised to the specified power.
            </summary>
            <param name="args">String containing two parameters separated by commas:
            the first being base number,
            the second being the exponent.</param>
            <returns>A string holding the value of the base number raised to the exponent.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeProduct(System.String)">
            <summary>
            Returns the product of the arguments in the list.
            </summary>
            <param name="range">List of arguments.</param>
            <returns>Product of the arguments.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeQuotient(System.String)">
            <summary>
            Returns the integer portion of division function.
            </summary>
            <param name="range">numerator, denominator to find the quotient</param>
            <returns>returns integer value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeRadians(System.String)">
            <summary>
            Converts degrees into radians.
            </summary>
            <param name="args">Value in degrees.</param>
            <returns>Radians for the given degrees.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeRoman(System.String)">
            <summary>
            Returns the arabic numeral to roman in TEXT format
            </summary>
            <param name="argList">Number, Form for style of roman text. 
            0 or omitted Classic. 
            1 More concise.  
            2 More concise.
            3 More concise.
            4 Simplified. 
            TRUE Classic. 
            FALSE Simplified. 
            </param>
            <returns>Retuns the Roman string of given numeric value based on the style form</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeRound(System.String)">
            <summary>
            Rounds a number to a specified number of digits.
            </summary>
            <param name="argList">Number and number of digits.</param>
            <returns>Rounded number.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeRounddown(System.String)">
            <summary>
            Rounds a number to a specified number of digits.
            </summary>
            <param name="argList">Number and number of digits.</param>
            <returns>Rounded number.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeRoundup(System.String)">
            <summary>
            Rounds a number to a specified number of digits.
            </summary>
            <param name="argList">Number and number of digits.</param>
            <returns>Rounded number.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeRows(System.String)">
            <summary>
            Returns the number of rows of the passed in cell reference.
            </summary>
            <param name="arg">Contains one argument.</param>
            <returns>number of rows.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeSecant(System.String)">
            <summary>
            Returns the secant of an angle.
            </summary>
            <param name="argList"> A cell reference, or number.</param>
            <returns>A string conaining the secant of an angle</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeSecanth(System.String)">
            <summary>
            Returns the hyperbolic secant of an angle.
            </summary>
            <param name="argList">A cell reference, or number</param>
            <returns>A string containing the hyperbolic secant of an angle.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeSheet(System.String)">
            <summary>
            return the sheet number of the given value 
            </summary>
            <param name="argList">SheetName or cell or named range </param>
            <returns>sheet number</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeSheets(System.String)">
            <summary>
            return the sheet number of the given values 
            </summary>
            <param name="argList">SheetName or cell or named range </param>
            <returns>sheet number</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeSign(System.String)">
            <summary>
            Returns a number indicating the sign of the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding a number representing the sign of the argument.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeSin(System.String)">
            <summary>
            Computes the sine of the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding the sine of the argument.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeSinh(System.String)">
            <summary>
            Computes the hyperbolic sine of the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding the hyperbolic sine of the argument.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeSum(System.String)">
            <summary>
            Returns the sum of all values listed in the argument.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.</param>
            <returns>A string holding the sum of all values listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeSumIFS(System.String)">
            <summary>
            Returns the sum of all the cells in a range which is statisfy the given multible criteria
            </summary>
            <param name="argList">range of cells, criteria1, average_range1,...</param>
            <returns>returns the sum value of the cells.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeSumsq(System.String)">
            <summary>
            Returns the sum of the square of all values listed in the argument.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.</param>
            <returns>A string holding the sum of the squares of all values listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeSumx2my2(System.String)">
            <summary>
            Returns the sum of the differences of squares of the two ranges.
            </summary>
            <param name="range">x_range and y_range.</param>
            <returns>A string holding sum of the differences of squares.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeSumx2py2(System.String)">
            <summary>
            Returns the sum of the sums of squares of the two ranges.
            </summary>
            <param name="range">x_range and y_range.</param>
            <returns>A string holding sum of the sums of squares.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeSumxmy2(System.String)">
            <summary>
            Returns the sum of the squares of the differences between two ranges.
            </summary>
            <param name="range">x_range and y_range.</param>
            <returns>A string holding sum of the squares of the differences.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeTranspose(System.String)">
            <summary>
            Returns the vertical range of cells as a horizontal range, or vice versa
            </summary>
            <param name="arg">Cell refrences</param>
            <returns>value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeTruncate(System.String)">
            <summary>
            Returns the value of computeTruncate
            </summary>
            <param name="argList">arguments</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeRandbetween(System.String)">
            <summary>
            Returns a random integer number between the specified two numbers.
            </summary>
            <param name="argList">StartNumber, EndNumber</param>
            <returns>Random numberbetween two value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeSeriessum(System.String)">
            <summary>
            Return the value of ComputeSeriessum
            </summary>
            <param name="arg">arguments</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.SetNamedRangeDependency(System.String,System.String)">
            <summary>
            Adds a cell to the DependentNamedRangeCells list.
            </summary>
            <param name="key">The named range.</param>
            <param name="cell1">The cell (such as C11 or AJ232).</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.AddNamedRange(System.String,System.String,System.String)">
            <summary>
            Adds a named range to the namedranges collection.
            </summary>
            <param name="name">The name of the range to be added.</param>
            <param name="range">The range to be added.</param>
            <param name="scope"></param>
            <returns>True if successfully added, False otherwise.</returns>
            <remarks>
            The range should be a string such as A4:C8.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.RemoveNamedRange(System.String)">
            <summary>
            Removes a range from the namedranges collection.
            </summary>
            <param name="name">The name of the range to be removed.</param>
            <returns>True is successfully remove, False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.MarkNamedRanges(System.String@)">
            <summary>
            Replaces NamedRanges with their values.
            </summary>
            <remarks>
            Accepts a string such as Sin(SumRange) and tokenizes it into
            bqSIN[A1A4a]b which serves as input to ComputedValue.
            </remarks>
            <param name="argList">argList containing named ranges.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.GetTableRange(System.String)">
            <summary>
            Get the cell Range for table NameRange
            </summary>
            <param name="text">Formula or NamedRange</param>
            <returns>cell range string</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.GetTopRowIndexFromRange(System.String)">
            <summary>
            Get the first row Index of Cell Range
            </summary>
            <param name="range">Cell Range to find index</param>
            <returns>get the top row index</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.findNamedRange">
            <summary>
            This method is used to check the given text is Namedrange or not.
            </summary>
            <param name="text">Parsed string.</param>
            <returns>returns the CellRange value if the parsed text is NamedRange.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.CheckIfNameRangesIntersect(System.String,System.String@)">
            <summary>
            Below method used to intersect the NamedRanges when the parsed formula contains space.
            </summary>
            <param name="formula"> A string holding a valid parsed formula.</param>
            <param name="finalValue">The intersected NamedRanges value.</param>
            <returns>If the namerange intersects, returns true, else false.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.FindNextEndIndex(System.String,System.Int32@)">
            <summary>
            Find the next table formula or table Range end index i.e last index of '[' 
            </summary>
            <param name="formula">formula to find index</param>
            <param name="location">location of start index to search the char '['</param>
            <returns>locatio of end index</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.Covariance(System.Double[],System.Double[])">
            <summary>
            Returns the sample covariance between two arrays.
            Arrays should be of equal length, and contain more than one element.
            </summary>
            <param name="array1"></param>
            <param name="array2"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.Mean(System.Double[])">
            <summary>
            Returns the mean of an array.
            </summary>
            <param name="array">Array of data for which we are calculating the mean.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.Mean(System.Double[],System.Double)">
            <summary>
            Returns the mean of an array.
            </summary>
            <param name="array">Array of data for which we are calculating the mean.  For time series, the last element (index = n-1), is the most recent.</param>
            <param name="decayFactor">In most applications, the decay factor is between 0 and 1.  Weigth on the last element in array is 1.0, the 2nd to last element d, 3rd to last d^2, ...</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.InverseSumOfGeometricSeries(System.Double,System.Int32)">
            <summary>
            Returns the inverse of the sum of a geometric series of length n, who's first element is 1.
            For decay factor d, S = 1 + d + d^2 + ... + d^(n-1). Return 1/S.
            </summary>
            <param name="decayFactor">Decay factor Typically between -1 adn +1.</param>
            <param name="length">Number of elements in the geometric series, must be positive.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.GammaLn(System.Double)">
            <summary>
            Calculates the natural logarithm of gamma function.
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeAvedev(System.String)">
            <summary>
            Returns the average deviation of all values listed in the argument.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.</param>
            <returns>A string holding the average deviation of all values listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeAveragea(System.String)">
            <summary>
            Returns the simple average of all values (including text) listed in the argument.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.</param>
            <returns>A string holding the simple average of all values listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeAverageIFS(System.String)">
            <summary>
            Returns the average of all the cells in a range which is statisfy the given multible criteria
            </summary>
            <param name="argList">range of cells, criteria1, average_range1,...</param>
            <returns>returns the average value of the cells.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeChidist(System.String)">
            <summary>
            Returns the chi-squared distribution.
            </summary>
            <param name="argList">x, degrees of freedom.</param>
            <returns>The chi-squared distribution.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeGrowth(System.String)">
            <summary>
            Returns the growth estimate using the exponential curve y = b * m^x that best fits the given points. Only the first two Excel parameters are used.
            </summary>
            <param name="range">Y_range, x_range.</param>
            <returns>returns estimated value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeLogestMB(System.Double[],System.Double[],System.Double@,System.Double@)">
            <summary>
            Returns the m and b value used in exponential curve y = b * m^x.
            </summary>
            <param name="y">The set of y-values required in y = b*m^x</param>
            <param name="x">The set of x-values in y = b*m^x</param>
            <param name="b">output of b</param>
            <param name="m">output of m</param>
            <returns>returns calculated b value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeGammaln(System.String)">
            <summary>
            Returns the natural logarithm of the gamma function.
            </summary>
            <param name="argList">The value to be evaluated.</param>
            <returns>The natural logarithm of the gamma function.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeChiinv(System.String)">
            <summary>
            Returns the inverse of the chi-squared distribution.
            </summary>
            <param name="argList">x, degrees of freedom.</param>
            <returns>The inverse of the chi-squared distribution.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeChitest(System.String)">
            <summary>
            Returns the Chi Test for independence.
            </summary>
            <param name="range">Actual_range, expected_range.</param>
            <returns>Result of Chi Test: y-intercept.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeNormdist(System.String)">
            <summary>
            Returns the normal distribution.
            </summary>
            <param name="argList">x, mean, standarddev, cumulative.</param>
            <returns>The normal distribution.</returns>
            <remarks>
            Cumulative should be either
            True if you want to return the value of the distribution function or False
            if you want to return the value of the density function. The distribution value
            is computed interactively using Trapezoidal Rule to six to seven significant digits
            or 20 iteration maximum.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeNormsDist(System.String)">
            <summary>
            Returns the standard normal cumulative distribution function. The distribution has a mean of 0 (zero) and a standard deviation of one.
            <para>Syntax: NORMSDIST(z)</para>
            </summary>
            <param name="argList">Z is the value for which you want the distribution.</param>
            <returns>Standard normal cumulative distribution.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeNorminv(System.String)">
            <summary>
            Returns the inverse of normal distribution.
            </summary>
            <param name="argList">P, mean, standard deviation.</param>
            <returns>Returns x such that normal distribution at x is p.</returns>
            <remarks>
            P should be between 0 and 1.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.newnormalinv(System.Double)">
            <remarks>
             Enabled only when ExcelLikeComputations property is set to true.
             </remarks>
             <summary>
             Computes the inverse normal cumulative distribution for the given probability.
             </summary>
             <param name="p">probability</param>
             <returns>a double value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeNormsInv(System.String)">
            <summary>
            Returns the inverse of the standard normal cumulative distribution. The distribution has a mean of zero and a standard deviation of one.
            <para>Syntax: NORMSINV(p)</para>
            </summary>
            <param name="argList">p is a probability corresponding to the normal distribution.</param>
            <returns>Inverse of standard normal cumulative distribution.</returns>
            <remarks>
            p should be between 0 and 1.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeConfidence(System.String)">
            <summary>
            Returns a confidence interval radius.
            </summary>
            <param name="argList">Alpha, standard deviation, size.</param>
            <returns>Returns x such that normal distribution at x is p.</returns>
            <remarks>
            P should be between 0 and 1.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeCorrel(System.String)">
            <summary>
            Returns the correlation coefficient of the two sets of points.
            </summary>
            <param name="range">range1, range2.</param>
            <returns>Correlation coefficient.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeCount(System.String)">
            <summary>
            Returns the count of all values (including text) listed in the argument to
            evaluate to a number.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.</param>
            <returns>A string holding the count of all numerical values listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeCounta(System.String)">
            <summary>
            Returns the count of all values (including text) listed in the argument.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.</param>
            <returns>A string holding the count of all values listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeCountblank(System.String)">
            <summary>
            Returns the count of blank cells listed in the argument.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.</param>
            <returns>A string holding the count of blank cells listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeCountif(System.String)">
            <summary>
            Counts the cells specified by some criteria.
            </summary>
            <param name="argList">The criteria range, the criteria.</param>
            <returns>Number of cells meeting the criteria.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeCountIFFunctions(System.String,System.Boolean)">
            <summary>
            Calculates the CountIF and CountIFS formula
            </summary>
            <param name="argList"> The criteria range, the criteria</param>
            <param name="isCountif"> If true, calculate CountIF formula. Else calculate CountIFS formula.</param>
            <returns>Number of cells meeting the criteria.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeCOUNTIFS(System.String)">
            <summary>
            The COUNTIFS function applies criteria to cells across multiple ranges and counts the number of times all criteria are met.
            </summary>
            <param name="argList">The criteria range, the criteria.</param>
            <returns>Number of cells meeting the criteria</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeCovar(System.String)">
            <summary>
            Returns the covariance between the two sets of points.
            </summary>
            <param name="range">range1, range2.</param>
            <returns>The covariance.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeCritbinom(System.String)">
            <summary>
            Returns the smallest value for which the cumulative binomial distribution is greater than or equal to a criterion value.
            </summary>
            <param name="argList">Number of trials, probability, alpha.</param>
            <returns>Returns the critical value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeExpondist(System.String)">
            <summary>
            Returns the exponential distribution.
            </summary>
            <param name="argList">x, lambda, cumulative.</param>
            <returns>The exponential distribution.</returns>
            <remarks>
            Cumulative should be either
            True if you want to return the value of the distribution function or False
            if you want to return the value of the density function.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeFdist(System.String)">
            <summary>
            Returns the F (Fisher) probability distribution.
            </summary>
            <param name="argList">x, degreesfreedom1, degreesfreedom2.</param>
            <returns>Returns the F probability distribution.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeFinv(System.String)">
            <summary>
            Returns the inverse of F distribution.
            </summary>
            <param name="argList">p, degreesfreedom1, degreesfreedom2.</param>
            <returns>Returns x such that F distribution at x is p.</returns>
            <remarks>
            P should be between 0 and 1.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeFisher(System.String)">
            <summary>
            Returns the Fisher transformation of the input variable.
            </summary>
            <param name="argList">Input variable x.</param>
            <returns>Fisher transformation of x.</returns>
            <remarks>
            X should be between -1 and 1.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeFisherinv(System.String)">
            <summary>
            Returns the inverse of Fisher transformation.
            </summary>
            <param name="argList">Input variable y.</param>
            <returns>The value x such that the Fisher transformation y is x.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeForecast(System.String)">
            <summary>
            Returns a forecasted value based on two sets of points using least square fit regression.
            </summary>
            <param name="range">x, rangex, rangey.</param>
            <returns>Forecasted value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeKurt(System.String)">
            <summary>
            Returns the kurtosis of the passed in values.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.
            </param>
            <returns>The kurtosis of the data.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeLarge(System.String)">
            <summary>
            Returns the Kth largest value in the range.
            </summary>
            <param name="range">range, k.</param>
            <returns>Kth largest value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeLognormdist(System.String)">
            <summary>
            Returns the lognormal distribution.
            </summary>
            <param name="argList">x, mean, standarddev.</param>
            <returns>The lognormal distribution.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeLoginv(System.String)">
            <summary>
            Returns the inverse of the lognormal distribution.
            </summary>
            <param name="argList">p, mean, standarddev.</param>
            <returns>Returns the value x where the lognormal distribution of x is p.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeMaxa(System.String)">
            <summary>
            Returns the maximum value of all values listed in the argument including logical values.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.</param>
            <returns>A string holding the maximum value of all values listed in the argument.</returns>
            <remarks> True is treated as 1; False is treated as 0.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeMedian(System.String)">
            <summary>
            Returns the median value in the range.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.
            </param>
            <returns>Median value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeMina(System.String)">
            <summary>
            Returns the minimum value of all values listed in the argument including logical values.
            </summary>
            <param name="range">A string holding a list (separated by commas) of:
            cell references,
            formulas, or numbers.</param>
            <returns>A string holding the minimum value of all values listed in the argument.</returns>
            <remarks> True is treated as 1; False is treated as 0.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeMode(System.String)">
            <summary>
            Returns the most frequent value in the range.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.
            </param>
            <returns>The most frequent value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeNegbinomdist(System.String)">
            <summary>
            Returns the negative binomial distribution.
            </summary>
            <param name="argList">Number of failures, success threshold, probability, cumulative.</param>
            <returns>The negative binomial distribution.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputePearson(System.String)">
            <summary>
            Returns the Pearson product moment correlation coefficient.
            </summary>
            <param name="range">Range1, range2.</param>
            <returns>Pearson product.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputePercentile(System.String)">
            <summary>
            Returns the percentile position in the range.
            </summary>
            <param name="range">Range, k.</param>
            <returns>Percentile position.</returns>
            <remarks>K is a value between 0 and 1.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputePercentrank(System.String)">
            <summary>
            Returns the percentage rank in the range.
            </summary>
            <param name="range">Range, x, significant digits.</param>
            <returns>Percentile position.</returns>
            <remarks>Significant digits are optional, defaulting to 3.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputePermut(System.String)">
            <summary>
            The number of permutations of n items taken k at the time.
            </summary>
            <param name="argList">n, k</param>
            <returns>The number of combinations.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputePoisson(System.String)">
            <summary>
            Returns the Poisson distribution.
            </summary>
            <param name="argList">x, mean, cumulative</param>
            <returns>Returns the exponential distribution.</returns>
            <remarks>
            Cumulative should be either
            True if you want to return the value of the distribution function or False
            if you want to return the value of the density function.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeProb(System.String)">
            <summary>
            Returns the probability that a value in the given range occurs.
            </summary>
            <param name="range">xrange1, prange2, lowerbound, upperbound.</param>
            <returns>The probability.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeQuartile(System.String)">
            <summary>
            Returns the quartile position in the range.
            </summary>
            <param name="range">Range, q.</param>
            <returns>Percentile position.</returns>
            <remarks>Q is 0, 1, 2, 3, 4.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeRank(System.String)">
            <summary>
            Returns the rank of x in the range.
            </summary>
            <param name="range">X, range, order.</param>
            <returns>Rank of x.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeRsq(System.String)">
            <summary>
            Returns the square of the Pearson product moment correlation coefficient.
            </summary>
            <param name="range">Range1, range2.</param>
            <returns>Square of the Pearson product.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeSkew(System.String)">
            <summary>
            Returns the skewness of a distribution.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.
            </param>
            <returns>Skewness of a distribution.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeSlope(System.String)">
            <summary>
            Returns the slope of the least square fit line through the given points.
            </summary>
            <param name="range">Y_range, x_range.</param>
            <returns>Y-intercept for the given points.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeSmall(System.String)">
            <summary>
            Returns the kth smallest value in the range.
            </summary>
            <param name="range">Range, k.</param>
            <returns>Kth smallest value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeStandardize(System.String)">
            <summary>
            Returns a normalized value.
            </summary>
            <param name="argList">X, mean, stddev.</param>
            <returns>Normalized value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeStdev(System.String)">
            <summary>
            Returns the sample standard deviation.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.
            </param>
            <returns>The sample standard deviation.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeStdeva(System.String)">
            <summary>
            Returns the sample standard deviation.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.
            </param>
            <returns>The sample standard deviation.</returns>
            <remarks>Treats True as 1; False as 0.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeStdevaP(System.String)">
            <summary>
            Returns the sample standard deviation.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.
            </param>
            <returns>The sample standard deviation.</returns>
            <remarks>Treats True as 1; False as 0.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeStdevp(System.String)">
            <summary>
            Returns the population standard deviation.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.
            </param>
            <returns>The population standard deviation.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeStdevpa(System.String)">
            <summary>
            Returns the population standard deviation.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.
            </param>
            <returns>The population standard deviation.</returns>
            <remarks>Treats True as 1; False as 0.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeSteyx(System.String)">
            <summary>
            Returns the standard error of the least square fit line through the given points.
            </summary>
            <param name="range">Y_range, x_range.</param>
            <returns>Standard error.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeTrimmean(System.String)">
            <summary>
            Returns the mean of the range after removing points on either extreme.
            </summary>
            <param name="range">Range, percent.</param>
            <returns>Kth smallest value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeVar(System.String)">
            <summary>
            Returns sample variance of the listed values.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.</param>
            <returns>The sample variance.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeVara(System.String)">
            <summary>
            Returns sample variance of the listed values.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.</param>
            <returns>The sample variance.</returns>
            <remarks> True is treated as 1; False is treated as 0.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeVarp(System.String)">
            <summary>
            Returns population variance of the listed values.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.</param>
            <returns>The population variance.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeVarpa(System.String)">
            <summary>
            Returns population variance of the listed values.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.</param>
            <returns>The population variance.</returns>
            <remarks> True is treated as 1; False is treated as 0.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeWeibull(System.String)">
            <summary>
            Returns the Weibull distribution.
            </summary>
            <param name="argList">X, alpha, beta, cumulative.</param>
            <returns>The Weibull distribution.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeZtest(System.String)">
            <summary>
            Returns the one-tailed probability value of a Z test.
            </summary>
            <param name="range">Range, mu, sigma.</param>
            <returns>Kth smallest value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeMax(System.String)">
            <summary>
            Returns the maximum value of all values listed in the argument.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.</param>
            <returns>A string holding the maximum value of all values listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeMINIFS(System.String)">
            <summary>
            The MINIFS function returns the minimum value among cells specified by a given set of conditions or criteria.
            </summary>
            <param name="argList">range of cells, criteria1, average_range1,...</param>
            <returns>returns the Minimum value of the cells.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeMAXIFS(System.String)">
            <summary>
            The MAXIFS function returns the maximum value among cells specified by a given set of conditions or criteria.
            </summary>
            <param name="argList">range of cells, criteria1, average_range1,...</param>
            <returns>returns the Maximum value of the cells.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeSubTotal(System.String)">
            <summary>
            Returns the subtotal of input range(s).
            </summary>
            <param name="args">A list of cell references(seperated by commas)</param>
            <returns>Subtotal of range(s)</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeMin(System.String)">
            <summary>
            Returns the minimum value of all values listed in the argument.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.</param>
            <returns>A string holding the minimum value of all values listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeAvg(System.String)">
            <summary>
            Returns the simple average of all values listed in the argument.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.</param>
            <returns>A string holding the simple average of all values listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeHarmean(System.String)">
            <summary>
            Returns the harmonic mean of all values listed in the argument.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.</param>
            <returns>The harmonic mean all values listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeHypgeomdist(System.String)">
            <summary>
            Returns the hypergeometric distribution.
            </summary>
            <param name="argList">Number of sample successes, number of sample, number of population successes, number of population.</param>
            <returns>Returns the gamma distribution.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeHypgeomOdist(System.String)">
            <summary>
            Returns the hypergeometric distribution.
            </summary>
            <param name="argList">Number of sample successes, number of sample, number of population successes, number of population.</param>
            <returns>Returns the gamma distribution.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeIf(System.String)">
            <summary>
            Conditionally computes one of two alternatives depending upon a logical expression.
            </summary>
            <remarks>
            The first argument is
            treated as a logical expression with a non-zero value considered True and a zero value considered False.
            The value of only one of the alternatives is computed depending upon the logical expression.
            </remarks>
            <param name="args">A string holding a list of three arguments.
            </param>
            <returns>Returns a string holding the second argument if the first argument is True (non-zero). Otherwise, it returns a string holding the third argument.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeIfError(System.String)">
            <summary>
            Returns a value you specify if a formula evaluates to an error
            otherwise, returns the result of the formula.
            </summary>
            <param name="args">String to be tested.</param>
            <returns>Retuns the error string</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeIntercept(System.String)">
            <summary>
            Returns the y-intercept of the least square fit line through the given points.
            </summary>
            <param name="range">y_range, x_range.</param>
            <returns>y-intercept for the given points.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeBinomdist(System.String)">
            <summary>
            Returns the binomial distribution.
            </summary>
            <param name="argList">Number of successes, number of trials, probability, cumulative.</param>
            <returns>The binomial distribution.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeSkewP(System.String)">
            <summary>
            Returns the skewness of a distribution based on a population a characterization of the degree of asymmetry of a distribution around its mean.
            </summary>
            <param name="range"> numbers or names, arrays, or reference that contain numbers</param>
            <returns>Skewness of a distribution.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeCovarianceP(System.String)">
            <summary>
            Returns population covariance, the average of the products of deviations for each data point pair in two data sets. 
            </summary>
            <param name="range">range1, range2.</param>
            <returns>The covarianceP</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeCovarianceS(System.String)">
            <summary>
            Returns the sample covariance, the average of the products of deviations for each data point pair in two data sets.
            </summary>
            <param name="range">range1, range2.</param>
            <returns>The covariances</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputePercentileInc(System.String)">
            <summary>
            Returns the percentile position in the range.
            </summary>
            <param name="range">Range, k.</param>
            <returns>Percentile position.</returns>
            <remarks>K is a value between 0 and 1.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputePercentrankExc(System.String)">
            <summary>
            Returns the percentage rank Exc in the range.
            </summary>
            <param name="range">Range, x, significant digits.</param>
            <returns>Percentile position.</returns>
            <remarks>Significant digits are optional, defaulting to 3.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputePercentileExc(System.String)">
            <summary>
            Returns the percentile position in the range.
            </summary>
            <param name="range">Range, k.</param>
            <returns>Percentile position.</returns>
            <remarks>K is a value between 0 and 1.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputePercentrankInc(System.String)">
            <summary>
            Returns the percentage rank Inc in the range.
            </summary>
            <param name="range">Range, x, significant digits.</param>
            <returns>Percentile position.</returns>
            <remarks>Significant digits are optional, defaulting to 3.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeStdevaS(System.String)">
            <summary>
            Returns the sample standard deviation.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.
            </param>
            <returns>The sample standard deviation.</returns>
            <remarks>Treats True as 1; False as 0.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeVarPAdv(System.String)">
            <summary>
            Returns sample variance of the listed values.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.</param>
            <returns>The sample variance.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeVarSAdv(System.String)">
            <summary>
            Calculates variance based on the entire population (ignores logical values and text in the population).
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.</param>
            <returns>The sample variance.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputePermutationA(System.String)">
            <summary>
            Returns the number of permutations for a given number of objects (with repetitions) that can be selected from the total objects.
            </summary>
            <param name="argList">n, k</param>
            <returns>The number of combinations.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeNormOdist(System.String)">
            <summary>
            Returns the normal distribution for the specified mean and standard deviation. 
            </summary>
            <param name="argList">x, mean, standarddev, cumulative.</param>
            <returns>The normal distribution.</returns>
            <remarks>
            Cumulative should be either
            True if you want to return the value of the distribution function or False
            if you want to return the value of the density function. 
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeNormOinv(System.String)">
            <summary>
            Returns the inverse of the normal cumulative distribution for the specified mean and standard deviation.
            </summary>
            <param name="argList">P, mean, standard deviation.</param>
            <returns>Returns x such that normal distribution at x is p.</returns>
            <remarks>
            P should be between 0 and 1.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeNormOsODist(System.String)">
            <summary>
            Returns the standard normal cumulative distribution function. The distribution has a mean of 0 (zero) and a standard deviation of one.
            <para>Syntax: NORMSDIST(z)</para>
            </summary>
            <param name="argList">Z is the value for which you want the distribution.</param>
            <returns>Standard normal cumulative distribution.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.StandardNormalProbabilityDensity(System.Double)">
            <summary>
            Returns the PDF of the standard normal distribution.
            </summary>
            <param name="x">Value at which the distribution is evaluated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.StandardNormalCumulativeDistributionFunction(System.Double)">
            <summary>
            Returns the CDF of the standard normal distribution.
            </summary>
            <param name="x">Value at which the distribution is evaluated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.StandardNormalProbabilityDensityFunction(System.Double)">
            <summary>
            Returns the PDF of the standard normal distribution.
            </summary>
            <param name="x">Value at which the distribution is evaluated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.StandardNormalCumulativeDistribution(System.Double)">
            <summary>
            Returns the CDF of the standard normal distribution.
            </summary>
            <param name="x">Value at which the distribution is evaluated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.StandardNormalCumulativeDistributionFunctionInverse(System.Double)">
            <summary>
            Returns the inverse of the CDF of the standard normal distribution.
            </summary>
            <param name="p">Cumulative probability of the distribution. p is between 0 and 1.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeNormOsOInv(System.String)">
            <summary>
            Returns the inverse of the standard normal cumulative distribution. The distribution has a mean of zero and a standard deviation of one.
            <para>Syntax: NORMSINV(p)</para>
            </summary>
            <param name="argList">p is a probability corresponding to the normal distribution.</param>
            <returns>Inverse of standard normal cumulative distribution.</returns>
            <remarks>
            p should be between 0 and 1.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeWeiBullODist(System.String)">
            <summary>
            Calculates the Weibull Probability Density Function or the Weibull Cumulative Distribution Function for a supplied set of parameters.
            </summary>
            <param name="argList">x, alpha, beta, cumulative.</param>
            <returns>Returns the calculated weibull distribution.</returns>
            <remarks>
            cumulative =  A logical argument which denotes the type of distribution to be used
            TRUE	   =  Weibull Cumulative Distribution Function
            FALSE	   =  Weibull Probability Density Function
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeExponODist(System.String)">
            <summary>
            Returns the exponential distribution.
            </summary>
            <param name="argList">x, lambda, cumulative.</param>
            <returns>The exponential distribution.</returns>
            <remarks>
            Cumulative should be either
            True if you want to return the value of the distribution function or False
            if you want to return the value of the density function.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.GammaInv(System.Double,System.Double,System.Double)">
            <summary>
            Used to calculate the inverse of gamma cummulative distribution
            </summary>
            <param name="p"></param>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.GammaInvInitialState(System.Double,System.Double,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            Used to calculate the inverse gamma distribution at inital stage.
            </summary>
            <param name="a"></param>
            <param name="p"></param>
            <param name="beginX"></param>
            <param name="beginY"></param>
            <param name="endX"></param>
            <param name="endY"></param>
            <param name="di"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.GammaInvMiddleState(System.Double,System.Double,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            Used to calculate the inverse gamma distribution at middle stage.
            </summary>
            <param name="a"></param>
            <param name="p"></param>
            <param name="beginX"></param>
            <param name="beginY"></param>
            <param name="endX"></param>
            <param name="endY"></param>
            <param name="di"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.GammaInvFinalState(System.Double,System.Double,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            Used to calculate the inverse gamma distribution at final stage.
            </summary>
            <param name="a"></param>
            <param name="p"></param>
            <param name="beginX"></param>
            <param name="beginY"></param>
            <param name="endX"></param>
            <param name="endY"></param>
            <param name="di"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.GammaInvUpperIncomplete(System.Double,System.Double)">
            <summary>
            Used to calculate the upper incomplete integral of inverse gamma function.
            </summary>
            <param name="a"></param>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.GammaLowerIncomplete(System.Double,System.Double)">
            <summary>
            Used to calculate the lower incomplete integral of gamma function.
            </summary>
            <param name="a"></param>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.GammaUpperIncomplete(System.Double,System.Double)">
            <summary>
            Used to calculate the upper incomplete integral of gamma function.
            </summary>
            <param name="a"></param>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.GammaDistCummulative(System.Double,System.Double,System.Double)">
            <summary>
            Used to calculate the CDF(Cummulative Distribution Function) of Gamma distribution.
            </summary>
            <param name="a">Alpha</param>
            <param name="b">Beta</param>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.GammaDistProbability(System.Double,System.Double,System.Double)">
            <summary>
            Used to calculate the PDF(Probability Distribution Function) of Gamma distribution.
            </summary>
            <param name="a">Alpha</param>
            <param name="b">Beta</param>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeGammadist(System.String)">
            <summary>
            Returns the gamma distribution.
            </summary>
            <param name="argList">X, alpha, beta, cumulative.</param>
            <returns>The gamma distribution.</returns>
            <remarks>
            X, alpha, and beta should be positive real numbers. Cumulative should be either
            True if you want to return the value of the distribution function or False
            if you want to return the value of the density function. The distribution value
            is computed interactively using Trapezoidal Rule to six to seven significant digits
            or 20 iteration maximum.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeGammainv(System.String)">
            <summary>
            Returns the inverse of gamma distribution.
            </summary>
            <param name="argList">p, alpha, beta</param>
            <returns>Returns x such that gamma distribution at x is p.</returns>
            <remarks>
            P, alpha, and beta should be positive real numbers, with p between 0 and 1.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeGeomean(System.String)">
            <summary>
            Returns the geometric mean of all values listed in the argument.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.</param>
            <returns>The geometric mean all values listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeGammaOdist(System.String)">
            <summary>
            Returns the gamma distribution.
            </summary>
            <param name="argList">X, alpha, beta, cumulative.</param>
            <returns>The gamma distribution.</returns>
            <remarks>
            X, alpha, and beta should be positive real numbers. Cumulative should be either
            True if you want to return the value of the distribution function or False
            if you want to return the value of the density function. The distribution value
            is computed interactively using Trapezoidal Rule to six to seven significant digits
            or 20 iteration maximum.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeGammaOinv(System.String)">
            <summary>
            Returns the inverse of gamma distribution.
            </summary>
            <param name="argList">p, alpha, beta</param>
            <returns>Returns x such that gamma distribution at x is p.</returns>
            <remarks>
            P, alpha, and beta should be positive real numbers, with p between 0 and 1.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeGammaln0Precise(System.String)">
            <summary>
            Returns the natural logarithm of the gamma function.
            </summary>
            <param name="argList">The value to be evaluated.</param>
            <returns>The natural logarithm of the gamma function.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeTOInv(System.String)">
             <summary>
            Returns the Student's t-distribution. 
             </summary>
             <param name="argList">x, degreesfreedom1.</param>
             <returns>Returns the Student's t-distribution.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.TCumulativeDistributionInverse(System.Double,System.Int32)">
            <summary>
            Returns the inverse of the CDF of the Student's t distribution.
            For k = 3, and 5+ the solution is an approximation. 
            </summary>
            <param name="p">Cumulative probability of the distribution. p is between 0 and 1.</param>
            <param name="k">Degrees of freedom.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.TProbabilityDensity(System.Double,System.Int32)">
            <summary>
            Returns the PDF of Student's t distribution.
            </summary>
            <param name="x">Value at which the distribution is evaluated.</param>
            <param name="k">Degrees of freedom.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.TCumulativeDensity(System.Double,System.Int32)">
            <summary>
            Returns the CDF of Student's t distribution.
            </summary>
            <param name="x">Value at which the distribution is evaluated.</param>
            <param name="k">Degrees of freedom.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeFOinvORt(System.String)">
            <summary>
            Returns the inverse of F distribution.
            </summary>
            <param name="argList">p, degreesfreedom1, degreesfreedom2.</param>
            <returns>Returns x such that F distribution at x is p.</returns>
            <remarks>
            P should be between 0 and 1.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeBinomOInv(System.String)">
            <summary>
            Returns the smallest value for which the cumulative binomial distribution is greater than or equal to a criterion value.
            </summary>
            <param name="argList">Number of trials, probability, alpha.</param>
            <returns>Returns the critical value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeLognormOinv(System.String)">
            <summary>
            Returns the inverse of the lognormal distribution.
            </summary>
            <param name="argList">p, mean, standarddev.</param>
            <returns>Returns the value x where the lognormal distribution of x is p.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeLognormOdist(System.String)">
            <summary>
            Returns the lognormal distribution.
            </summary>
            <param name="argList">x, mean, standarddev.</param>
            <returns>The lognormal distribution.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeConfidenceOnorm(System.String)">
            <summary>
            Returns a confidence interval radius.
            </summary>
            <param name="argList">Alpha, standard deviation, size.</param>
            <returns>Returns x such that normal distribution at x is p.</returns>
            <remarks>
            P should be between 0 and 1.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeChisqOdistORt(System.String)">
            <summary>
             Returns the chi-squared distribution.
             </summary>
             <param name="argList">x, degrees of freedom.</param>
             <returns>The chi-squared distribution.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeFOdist(System.String)">
            <summary>
            Returns the F probability distribution.
            </summary>
            <param name="argList">x, degreesfreedom1, degreesfreedom2.</param>
            <returns>Returns the F probability distribution.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.FProbabilityDensity(System.Double,System.Int32,System.Int32)">
            <summary>
            Returns the PDF of the F distribution.
            </summary>
            <param name="x">Value at which the distribution is evaluated.</param>
            <param name="k1">Degrees of freedom for numerator chi-sqared distribution. k1 > 0.</param>
            <param name="k2">Degrees of freedom for denominator chi-sqared distribution. k2 > 0.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.FCumulativeDensity(System.Double,System.Int32,System.Int32)">
            <summary>
            Returns the CDF of the F distribution.
            </summary>
            <param name="x">Value at which the distribution is evaluated.</param>
            <param name="k1">Degrees of freedom for numerator chi-sqared distribution.</param>
            <param name="k2">Degrees of freedom for denominator chi-sqared distribution.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.BetaFunction(System.Double,System.Double)">
            <summary>
            Euler integral. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.GammaFunction(System.Double)">
            <summary>
            Integral from 0 to infinity of e^(-t) * t^(z-1) dt
            </summary>
            <param name="z">If z > 143 the return value will exceed the double.MaxValue. The function will throw an exception.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.RIBetaFunction(System.Double,System.Double,System.Double)">
            <summary>
            To get the CDF of the beta distribution.
            </summary>
            <param name="x"></param>
            <param name="a"></param>
            <param name="b"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.IBetaFunction(System.Double,System.Double,System.Double)">
            <summary>
            Euler integral. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeFOdistORt(System.String)">
            <summary>
            Returns the F (Fisher) probability distribution.
            </summary>
            <param name="argList">x, degreesfreedom1, degreesfreedom2.</param>
            <returns>Returns the F probability distribution.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeChisqOdist(System.String)">
            <summary>
            Returns the chi-squared distribution.
            </summary>
            <param name="argList">x, degrees of freedom.</param>
            <returns>The chi-squared distribution.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeChisqOinv(System.String)">
            <summary>
            Returns the inverse of the chi-squared distribution.
            </summary>
            <param name="argList">x, degrees of freedom.</param>
            <returns>The inverse of the chi-squared distribution.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeChisqOTest(System.String)">
            <summary>
            Returns the Chi Test for independence.
            </summary>
            <param name="range">Actual_range, expected_range.</param>
            <returns>Result of Chi Test: y-intercept.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeChisqOinvORt(System.String)">
            <summary>
            Returns the inverse of the chi-squared distribution.
            </summary>
            <param name="argList">x, degrees of freedom.</param>
            <returns>The inverse of the chi-squared distribution.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeBinomOdist(System.String)">
            <summary>
            Returns the binomial distribution.
            </summary>
            <param name="argList">Number of successes, number of trials, probability, cumulative.</param>
            <returns>The binomial distribution.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeZOtest(System.String)">
            <summary>
            Returns the one-tailed probability value of a Z test.
            </summary>
            <param name="range">Range, mu, sigma.</param>
            <returns>Kth smallest value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeRankOAvg(System.String)">
            <summary>
            Returns the rank of x in the range.
            </summary>
            <param name="range">X, range, order.</param>
            <returns>Rank of x.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeRankOEq(System.String)">
            <summary>
            Returns the rank of x in the range.
            </summary>
            <param name="range">X, range, order.</param>
            <returns>Rank of x.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeIHDIST(System.String)">
            <summary>
            The Irwin-Hall distribution results from the sum on n independent standard uniform variables
            </summary>
            <param name="range">The value at which to evaluate the distribution.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.IHProbDens(System.Double,System.Int32)">
            <summary>
            The Irwin-Hall distribution results from the sum on n independent standard uniform variables
            </summary>
            <param name="x">The value at which to evaluate the distribution.</param>
            <param name="n">The number of standard uniform variables.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.Combinations(System.Int32,System.Int32)">
            <summary>
            Returns the number of possible combinations of k objects from a set of n object. The order of the chosen objects does not matter.
            </summary>
            <param name="n">Number of objects</param>
            <param name="k">Number of objects chosen</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.Factorial(System.Int32)">
            <summary>
            Returns n! 
            0! = 1,otherwise n! = n * (n-1) * (n-2) * ... * 2 * 1,
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeUnidist(System.String)">
            <summary>
            Returns the PDF of the uniform distribution.
            </summary>
            <param name="argList">Number of successes, number of trials, probability, cumulative.</param>
            <returns>The binomial distribution.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.UniProbDens(System.Double,System.Double,System.Double)">
            <summary>
            Returns the PDF of the uniform distribution.
            </summary>
            <param name="x">Value at which the distribution is evaluated.</param>
            <param name="min">Minimum value of the distribution.</param>
            <param name="max">Maximum value of the distribution.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeQuartileOExc(System.String)">
            <summary>
            Returns the quartile position in the range.
            </summary>
            <param name="range">Range, q.</param>
            <returns>Percentile position.</returns>
            <remarks>Q is 0, 1, 2, 3, 4.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeQuartileOInc(System.String)">
            <summary>
            Returns the quartile position in the range.
            </summary>
            <param name="range">Range, q.</param>
            <returns>Percentile position.</returns>
            <remarks>Q is 0, 1, 2, 3, 4.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeNegbinomODist(System.String)">
            <summary>
            Returns the negative binomial distribution.
            </summary>
            <param name="argList">Number of failures, success threshold, probability, cumulative.</param>
            <returns>The negative binomial distribution.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputePoissonODist(System.String)">
            <summary>
            Returns the Poisson distribution.
            </summary>
            <param name="argList">x, mean, cumulative</param>
            <returns>Returns the exponential distribution.</returns>
            <remarks>
            Cumulative should be either
            True if you want to return the value of the distribution function or False
            if you want to return the value of the density function.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeDelta(System.String)">
            <summary>
            Compares the given two values
            </summary>
            <param name="argList">Two Numbers to be compared.</param>
            <returns>Returns the result of the comparision in the form of 0 or 1</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeGestep(System.String)">
            <summary>
            Compares the given two values
            </summary>
            <param name="argList">Two Numbers to be compared.</param>
            <returns>Returns the result of the comparision in the form of 0 or 1</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeDevsq(System.String)">
            <summary>
            Returns the sum of the squares of the mean deviations.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.
            </param>
            <returns>Sum of the squares of the mean deviation.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeAverageIF(System.String)">
            <summary>
            Returns the average of all the cells in a range which is statisfy the given single criteria
            </summary>
            <param name="argList">range of cells, criteria, average_range</param>
            <returns>returns the average value of the cells.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeConfidenceT(System.String)">
            <summary>
            Return the value of ComputeConfidenceT
            </summary>
            <param name="argList">arguments</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeFOinv(System.String)">
            <summary>
            Returns the inverse of F distribution.
            </summary>
            <param name="argList">p, degreesfreedom1, degreesfreedom2.</param>
            <returns>Returns x such that F distribution at x is p.</returns>
            <remarks>
            P should be between 0 and 1.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeModeOMult(System.String)">
            <summary>
            Returns a vertical array of the most frequently occurring, or repetitive values in an array or range of data. 
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.
            </param>
            <returns>The most frequent value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeModeOsngl(System.String)">
            <summary>
            Returns the most frequent value in the range.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.
            </param>
            <returns>The most frequent value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeTOdist(System.String)">
             <summary>
            Returns the Student's t-distribution. 
             </summary>
             <param name="argList">x, degreesfreedom1.</param>
             <returns>Returns the Student's t-distribution.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeBetaDist(System.String)">
            <summary>
            Returns the beta distribution.
            </summary>
            <param name="argList">x, degreesfreedom1, degreesfreedom2.</param>
            <returns>Returns the beta distribution.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.BetaCumulativeDist(System.Double,System.Double,System.Double)">
            <summary>
            Returns the Beta cumulative density function.
            </summary>
            <param name="x">Value of the random variable for which the CDF is beign evaluated. x is between 0 and 1.</param>
            <param name="a">First shape parameter.</param>
            <param name="b">Second shape parameter.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.BetaProbabilityDens(System.Double,System.Double,System.Double)">
            <summary>
            Returns the Beta probability density function.
            </summary>
            <param name="x">Value of the random variable for which the PDF is beign evaluated. x is between 0 and 1.</param>
            <param name="a">Number of trials.</param>
            <param name="b">Number of times the event occurs in n trials.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.TranslateText(System.String,System.String)">
            <summary>
            Return the value of TranslateText
            </summary>
            <param name="input">value</param>
            <param name="languagePair">language</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeCode(System.String)">
            <summary>
            Return the numeric code for first char of text
            </summary>
            <param name="argList">text</param>
            <returns>numeric code</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeFindB(System.String)">
            <summary>
            Finds the first occurrence of one string in another string.
            </summary>
            <param name="arg">Conatins two or three arguments. The first argument is the string
            to find. The second string is the string that is being searched. The third argument
            is the start location in the second string for the search.</param>
            <returns>The location of the found string.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeLeftB(System.String)">
            <summary>
            Returns the left so many characters in the given string.
            </summary>
            <param name="range">Contains the string and the number of characters.</param>
            <returns>A left sub string..</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeJis(System.String)">
            <summary>
            Used to compute the JIS function
            </summary>
            <param name="arg">arguments</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeLenB(System.String)">
            <summary>
            Returns the length of the given string.
            </summary>
            <param name="range">Contains the string.</param>
            <returns>An integer length.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeMidB(System.String)">
            <summary>
            Returns a substring of the given string.
            </summary>
            <param name="range">Contains the original string, start position of the substring,
            and the number of characters in the substring.</param>
            <returns>A substring.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeRightB(System.String)">
            <summary>
            Returns the right so many characters in the given string.
            </summary>
            <param name="range">Contains the string and the number of characters.</param>
            <returns>A right substring.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeNumberValue(System.String)">
            <summary>
            Convert the text to number
            </summary>
            <param name="argList">text, </param>
            <returns>decimal separator,group separator </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeProper(System.String)">
            <summary>
            Returns the text like first letter with upper letter  in each word
            </summary>
            <param name="argList">Text</param>
            <returns>proper text</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeReplace(System.String)">
            <summary>
            Replace the part of the text with a new text from orginal text
            </summary>
            <param name="argList">Text,Start index, Number of char to replace, new text </param>
            <returns>replaced string</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeRept(System.String)">
            <summary>
            Returns the number of repeated text
            </summary>
            <param name="argList">text, repeated count</param>
            <returns>text</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeSearchB(System.String)">
            <summary>
            Returns the number of the starting position of the first string from the second string.
            </summary>
            <param name="argList">first strring, second string and starting position</param>
            <returns>index of the string</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeUniChar(System.String)">
            <summary>
            Returns the Unicode char for the respective numeric value
            </summary>
            <param name="argList">Number</param>
            <returns>unicode char</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeUniCode(System.String)">
            <summary>
            Returns the corresponding number code for the first char of string.
            </summary>
            <param name="argList">text</param>
            <returns>numeric code</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeChar(System.String)">
            <summary>
            Returns the character whose number code is specified in the argument.
            </summary>
            <param name="arg">The number used to retrieve the character.</param>
            <returns>The character string.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeClean(System.String)">
            <summary>
            Retuns the text removing the first 32 nonprintable characters(ranging from 0 to 31) in 7-bit ASCII code.
            </summary>
            <param name="arg">Text or range holding text including nonprintable characters</param>
            <returns>Text without nonprintable characters(first 32)</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeExact(System.String)">
            <summary>
            Returns whether or not the two arguments passed in are exactly the same.
            </summary>
            <param name="range">A string holding two arguments (separated by commas) of
            cell references, strings,
            formulas, or numbers.</param>
            <returns>True if the arguments are exactly the same ignoring formats, false other wise.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeFind(System.String)">
            <summary>
            Finds the first occurrence of one string in another string.
            </summary>
            <param name="arg">Conatins two or three arguments. The first argument is the string
            to find. The second string is the string that is being searched. The third argument
            is the start location in the second string for the search.</param>
            <returns>The location of the found string.</returns>
            <remarks>The location count starts at 1. If the third argument is missing, it defaults to 1.
            If the first string does not appear in the second string, #VALUE! is returned. The searches are done
            in a case sensitive manner.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeIndex(System.String)">
            <summary>
            Returns the value at a specified row and column from within a given range.
            </summary>
            <param name="arg">look_range, row, col</param>
            <returns>The value.</returns>
            <remarks>
            Only the array form of this function is supported.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeSearch(System.String)">
            <summary>
            Returns the number of the starting position of the first string from the second string.
            </summary>
            <param name="argList">first strring, second string and starting position</param>
            <returns>index of the string</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeWebService(System.String)">
            <summary>
            Return the XML content of the given document
            </summary>
            <param name="argList">web link</param>
            <returns>XML data</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeEncodeURL(System.String)">
            <summary>
            Returns the encode url of the given text
            </summary>
            <param name="argList">text</param>
            <returns>returns the EncodeURL</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ComputeFilterXml(System.String)">
            <summary>
            Filter the value from XML document
            </summary>
            <param name="argList">XML content</param>
            <returns>value</returns>
        </member>
        <member name="E:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.FormulaParsing">
            <summary>
            Occurs whenever a string needs to be tested to determine whether it should be treated as a formula string and parsed,
            or be treated as a non-formula string. This event allows for preprocessing the unparsed formula.
            </summary>
            <remarks>This event may be raised more than once in the processing of a string into a formula.
            </remarks>
        </member>
        <member name="E:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.UnknownFunction">
            <summary>
            Occurs whenever an unknown function is encountered during the parsing of a formula.
            </summary>
            <remarks>This event may be raised more than once in the parsing of a formula.
            </remarks>
        </member>
        <member name="E:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.UpdateNamedRange">
            <summary>
            Occurs whenever an UpdateNamedRange function is encountered during the parsing of a formula.
            </summary>
            <remarks>This event may be raised more than once in the parsing of a formula.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.TreatStringsAsZero">
            <summary>
            Gets of sets whether the CalcEngine treats nonempty strings as zeros when they are
            encountered during calculations.
            </summary>
            <remarks>
            The default value is true meaning that if a nonempty string is encountered during an arithmetic operation, it will be treated as zero.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.MaximumRecursiveCalls">
            <summary>
            Specifies the maximum number of recursive calls that can be used to compute a cellvalue.
            </summary>
            <remarks>This property comes into play when you have a calculated formula cell that depends on
            another calculated formula that depends on another calculated formula and so on. If the number of
            'depends on another formula' exceeds MaximumRecursiveCalls, you will see a Too Complex message
            displayed in the cell. The default value is 100, but you can set it higher or lower depending upon
            your expected needs. The purpose of the limit is to avoid a circular reference locking up your
            application.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.CalculatingSuspended">
            <summary>
            Indicates whether formulas are immediately calculated as dependent cells are changed.
            </summary>
            <remarks>Use this property to suspend calculations while a series of changes 
            are made to dependent cells either by the user or programmatically. When the changes are 
            complete, set this property to False, and then call Engine.RecalculateRange to recalculate
            the affected range. See the sample in GridCellFormulaModel.CalculatingSuspended.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.LibraryFunctions">
            <summary>
            A read-only property that gets a collection holding the current library functions.
            </summary>
            <remarks>
            This property gives you direct access to all library functions.
            The function name serves as the hash key and the function delegate
            serves as the hash value.
            The function name should contain only letters, digits or an underscore.
            You should use the <see cref="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.AddFunction(System.String,Syncfusion.UI.Xaml.CellGrid.FormulaEngine.LibraryFunction)"/> method to add functions
            to this collection. Do not use the Add method inherited from Hashtable.
            The reason is that the hash key needs to be strictly upper case even though
            formula syntax is case insensitive with respect to functions names.
            Using the AddFunction method makes sure the hash key is properly set.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.UseNoAmpersandQuotes">
            <summary>
            A property that gets/sets whether strings concatenated using the '&amp;' operator should be
            returned inside double quote marks.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ExceptionThrown">
            <summary>
            A property that is used to identify whether the exception thrown or not while calculating the value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.LibraryComputationException">
            <summary>
            Gets any Exception raised during the computation of a library function
            provided RethrowLibraryComputationExceptions is set true.
            </summary>
            <remarks>
            Use the <see cref="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ClearLibraryComputationException"/> method to set this property
            to null to indicate that there is no pending library exception within the engine.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.RethrowLibraryComputationExceptions">
            <summary>
            Gets / sets whether the engine Rethrows any exception
            raised during the computation of a library function.
            </summary>
            <remarks>The default value is false.</remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ExcelLikeComputations">
            <summary>
            A property that gets or sets the calculations of the <see cref="!:CalcEngine"/> computations to mimic the computations of Excel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.MaxStackDepth">
            <summary>
            Gets or sets the maximum calculation stack depth.
            </summary>
            <remarks>
            The default is 50. This is the number of recursive calls that can be made during calculations.</remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.SupportBlanksInSheetNames">
            <summary>
            Gets or sets whether blanks are treated as significant in sheet names.
            </summary>
            <remarks>
            Earlier versions of FormulaEngine did not support the use of blanks
            in sheet names. (They were treated as insignificant.) The current version
            does treat blanks as significant. If you want to revert to the prior
            treatment of blanks in sheet names, then set this property to false.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ForceParsingOfLibraryFunctionArguments">
            <summary>
            Gets or sets whether all function arguments are parsed using FormulaEngine.Parse.
            </summary>
            <remarks>
            If you are using NamedRanges or CurrentRowNotationEnabled inside function arguments, 
            you should set this property 
            to true to make sure the proper substitutions are done on the arguments.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.CurrentRowNotationEnabled">
            <summary>
            Enables / disables using row = 0 in formulas to represent the current row.
            </summary>
            <remarks> 
            When this property is set True, entering zero as a row in a formula is
            interpreted to be the current row. Using the current row notation allows
            you to sort a column in the grid and maintain the relative formula. 
            After sorting, you do have to call engine.RecalculateRange to allow the
            relative formulas to reset themselves. 
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.UseCommonLibrary">
            <summary>
            Gets or sets whether you want all grids to share the same collection of library functions.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.AllowShortCircuitIFs">
            <summary>
            Gets or sets whether IF function calculations should specifically avoid
            computing the non-used alternative.
            </summary>
            <remarks>
            The default value is false for code legacy consistency. When AllowShortCircuitIFs
            is set true, only the necessary alternative of an IF function is computed. To support
            this behavior, a change in how nested IF function calculations are done is necessary.
            The default way of calculating nested functions is inside-out, with the inner most
            functions being computed to a value before the next outer function is evaluated. To
            support short circuiting IF functions, nested IF functions need to be computed from
            the outside-in to know what alternative needs to be evaluated. This outside-in calculation
            pattern only applies to IF functions, and only when AllowShortCircuitIFs is true.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.EnsureIFCallDuringShortCircuit">
            <summary>
            Gets or sets whether the IF function implementation is called when <see cref="P:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.AllowShortCircuitIFs"/> is true.
            The default behavior is to not call the IF Function code in the library, but instead, work directly with the
            IF clauses.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.IterationMaxTolerance">
            <summary>
            Gets or sets the success tolerance used by the CalcEngine's iterative calculation support.
            </summary>
            <remarks>
            Essential Calculate supports an iterative process to solve equations of the
            form x=f(x). Here you should think of x as being a cell reference like B2 for example. Setting
            IterationMaxCount to some value other than zero allows the engine to iteratively compute
            f(x) using the previous iteration's calculated value for x. The initial value is either 0
            or the last saved value for a formula in that cell (if the calculation has been performed previously).
            The iterations continue until either the iteration count exceeds IterationMaxCount, or two
            successive iteration return values have a relative difference less than IterationMaxTolerance.
            The default value is 0.001.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.SupportLogicalOperators">
            <summary>
            Gets or sets whether OR, AND, XOR and IF THEN ELSE logical
            operators are supported.
            </summary>
            <remarks>
            The default value is false for backward compatibility.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.SupportRangeOperands">
             <summary>
             Gets or sets whether ranges can be used as binary operands.
             </summary>
             <remarks>
             If this property is true, Essential Calculate recognizes ranges such
             as B1:B5 and A4:E4 as operands of binary operators. So, if you
             set the formula  = A1:A5 + B1:B5  into cell C4, the calculation
             will retrieve the values in A4 and B4 to be used in place of the
             corresponding ranges A1:A5 and B1:B5. Note that such ranges must
             either have one column wide or one row tall. This fact is used to
             make the corresponding lookup determined by where the host cell that holds
             the formula is located. This host cell
             must either be in the same row or column as some cell in range.
            
             The default value is false.
             </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.SupportsSheetRanges">
             <summary>
             Gets or sets whether sheet range notation is supported.
             </summary>
             <remarks>
             Excel supports sheet range notation such as
             = SUM( sheet1:sheet3!A1 ) + Sum( sheet1:sheet3!B1:B4 ).
             For backward compatibility with earlier versions that did
             not support this sheet range notation, you can set
             this SupportsSheetRanges false.
            
             This implementation replaces a sheet range (sheet1:sheet3!B1:B4) with
             list of ranges (sheet1!B1:B4,sheet2!B1:B4,sheet3!B1:B4).
             </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ThrowCircularException">
            <summary>
            Gets / sets whether the CalcQuick should throw an exception when a circular calculation is encountered.
            </summary>
            <remarks>If this property is True, the CalcQuick will throw an exception
            when it detects a circular calculation. If ThrowCircularException is False, then
            no exception is thrown and the calculation will loop recursively until Engine.MaximumRecursiveCalls
            is exceeded.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ParseArgumentSeparator">
            <summary>
            A static property that gets/sets character to be recognized by the parsing code as the delimiter for arguments in a named formula's argument list
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ParseDecimalSeparator">
            <summary>
            A static property that gets/sets the character to be recognized by the parsing engine as decimal separator for numbers.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ParseDateTimeSeparator">
            <summary>
            A static property that gets/sets the character to be recognized by the parsing engine as decimal separator for date.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.ErrorStrings">
            <summary>
            A property that gets/sets list of # error strings recognized by Excel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.DependentCells">
            <summary>
            A read-only property that gets a mapping between a cell and a list of formula cells that depend on it.
            </summary>
            <remarks>
            The key is the given cell, and the value is a ArrayList of cells containing
            formulas that reference this cell.
            </remarks>
            <example> Here is code that will list formula cells affected by changing the given cell.
            <code lang="C#">
            public void DisplayAllAffectedCells()
            {
            	CalcEngine engine = ((GridFormulaCellModel)this.gridControl1.CellModels["FormulaCell"]).Engine;
            	foreach(object o in engine.DependentCells.Keys)
            	{
            		string s1 = o as string;
            		Console.Write(s1 + " affects ");
            		ArrayList ht = (ArrayList) engine.DependentCells[s1];
            		foreach(object o1 in ht)
            		{
            			string s2 = o1 as string;
            			Console.Write(s2 + " ");
            		}
            		Console.WriteLine("");
            	}
            }
            </code>
            <code lang="VB">
            	Public Sub DisplayAllAffectedCells()
            		Dim engine As GridCalcEngine = CType(Me.gridControl1.CellModels("FormulaCell"), GridFormulaCellModel).Engine
            		Dim o As Object
            		For Each o In  engine.DependentCells.Keys
            			Dim s1 As String = CStr(o)
            			Console.Write((s1 + " affects "))
            			Dim ht As ArrayList = CType(engine.DependentCells(s1), ArrayList)
            			Dim o1 As Object
            			For Each o1 In  ht
            				Dim s2 As String = CStr(o1)
            				Console.Write((s2 + " "))
            			Next o1
            			Console.WriteLine("")
            		Next o
            	End Sub 'DisplayAllAffectedCells
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.WeekEndType">
            <summary>
            Gets the weekend type
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.UseDatesInCalculations">
            <summary>
            Gets or sets whether dates can be used as operands in calculations. The default value is false.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.RethrowParseExceptions">
            <summary>
            Gets / sets whether the engine throws an exception when
            parsing fails with an unknown function error.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.NativeFormats">
            <summary>
            The List holds the formats of a Chinese Language.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.EnableLookupTableCaching">
            <summary>
            Gets or sets whether lookup tables used in the VLookUp and HLookUp functions are cached.
            </summary>
            <remarks>
            Depending upon your use case, caching look up tables can greatly speed up calculations involving HLookUp
            and VLookUp. If you make multiple calls to these functions passing in the same look up tables, and if these
            look up tables are relatively static (don't dynamically change as the look ups are taking place), then caching
            these tables will likely improve performance.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.DependentNamedRangeCells">
            <summary>
            Holds hashtables containing cells that depend upon namedranges.
            </summary>
            <remarks>
            The key properties in DependentNamedRangeCells are namedranges. The
            value properties are hashtables.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.NamedRangesSized">
            <summary>
            Holds namedranges in order of string length.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.LibraryFunction">
            <summary>
            Delegate used to define functions that you add to the function library.
            </summary>
            <returns>Resultant value.</returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.FormulaArgumentType">
            <summary>
            Specifies the options for checking the formula error strings.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.FormulaArgumentType.None">
            <summary>
            Formula contains null arguments. For Example:PI,RANDOM...etc
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.FormulaArgumentType.Range">
            <summary>
            Formula contains range argument. For example:MEDIAN,...etc 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.FormulaArgumentType.TwoTextWithNumber">
            <summary>
            Formula contains two text arguments with Number argument. For example:FIND,SEARCH...etc
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.FormulaArgumentType.TextWithNumber">
            <summary>
            Formula contains number and text arguments. For example:LEFT,RIGHT...etc
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.FormulaArgumentType.Numbers">
            <summary>
            Formula contains number arguments only. For example:ABS,ROUND,ROUNDDOWN,LOG...etc
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.FormulaArgumentType.Text">
            <summary>
            Formula contains text arguments only. For example:ARABIC,CLEAN...etc
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.FormulaArgumentType.Date">
            <summary>
            Formula contains Date argument. For example:DISC,...etc
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.FormulaEngine.LenComparer.Compare(System.Object,System.Object)">
            <summary>
            Compares 2 strings based on their length.
            </summary>
            <returns>0, if both strings are equal; positive value if second string is greater; neagative value if first string is greater.</returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.GridFormulaParsingEventHandler">
            <summary>
            Event delegate for the GridFormulaParsing event 
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.GridFormulaParsingEventArgs">
            	this.engine = ((GridCellFormulaModel)gridControl1.CellModels["FormulaCell"]).Engine;
                this.engine.FormulaParsing += new GridFormulaParsingEventHandler(engine_FormulaParsing);
            	
            	//Here is the handler code that adds an = if necessary so any string beginning with +, - or =
                //is treated as a formula.
                  void engine_FormulaParsing(object sender, GridFormulaParsingEventArgs e)
                  {
                      //allow cells starting with + and - to be treated as formula cells.
                      if (e.Text.StartsWith("-"))
                           e.Text = "=" + e.Text;
                      else if (e.Text.StartsWith("+"))
                           e.Text = "=" + e.Text.Substring(1);
                  }         
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridFormulaParsingEventArgs.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridFormulaParsingEventArgs.#ctor(System.String)">
            <summary>
            Holds a reference to the string that is to be parsed..
            </summary>
            <param name="text">The formula that is to be parsed.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridFormulaParsingEventArgs.Text">
            <summary>
            Get or sets the formula about to be parsed.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.GridShowFormulaBehavior">
            <summary>
            Specifies behavior for displaying formula text.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridShowFormulaBehavior.WhenEditing">
            <summary>
            Display the formula text only when the cell is actively being edited.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridShowFormulaBehavior.WhenCurrent">
            <summary>
            Display the formula text whenever the cell is the current cell.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridShowFormulaBehavior.Always">
            <summary>
            Always display the formula text.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridShowFormulaBehavior.Never">
            <summary>
            Never display the formula text.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.UnknownFunctionEventHandler">
            <summary>
            Event delegate for UnknownFunction event.
            </summary>
            <param name="sender">The CalcEngine.</param>
            <param name="e">The <see cref="T:Syncfusion.UI.Xaml.CellGrid.UnknownFunctionEventArgs"/> for this event.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.UnknownFunctionEventArgs">
            <summary>
            The event args for the UnknownFunction event which is raised whenever the CalcEngine encounters a function
            that is does not know.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.UnknownFunctionEventArgs.MissingFunctionName">
            <summary>
            Gets the name of the unknown function.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.UnknownFunctionEventArgs.CellLocation">
            <summary>
            Gets the location of the missing function.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.UpdateNamedRangeEventHandler">
            <summary>
            Event delegate for UpdateNamedRange event.
            </summary>
            <param name="sender">The CalcEngine.</param>
            <param name="e">The <see cref="T:Syncfusion.UI.Xaml.CellGrid.UpdateNamedRangeEventArgs"/> for this event.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.UpdateNamedRangeEventArgs">
            <summary>
            The event args for the UpdateNamedRange event, which is raised whenever the CalcEngine calculate the intersection range of two named range .
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.ValueChangedEventHandler">
            <summary>
            An event handler that represents the method to handle the <see cref="E:Syncfusion.Calculate.CalcSheet.ValueChanged"/>
            event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.ValueChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.ValueChangedEventArgs">
            <summary>
            A class containing data for the ICalcData.ValueChanged event.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ValueChangedEventArgs.#ctor(System.Int32,System.Int32,System.String)">
            <summary>
            The constructor.
            </summary>
            <param name="row">One-based row index for the value.</param>
            <param name="col">One-based col index for the value.</param>
            <param name="value">the value at the specified row,col.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.ValueChangedEventArgs.ColIndex">
            <summary>
            A property that gets/sets One-base column index.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.ValueChangedEventArgs.RowIndex">
            <summary>
            A property that gets/sets One-based row index.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.ValueChangedEventArgs.Value">
            <summary>
            A property that gets/sets the value.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.CalcEngineHelper">
            <summary>
            Used for CalcEngineHelper
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CalcEngineHelper.FromOADate(System.Double)">
            <summary>
            Returns a DateTime equivalent to the specified OLE Automation Date.
            </summary>
            <param name="doubleOLEValue">An OLE Automation Date value.</param>
            <returns>An object that represents the same date and time as d.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CalcEngineHelper.ToOADate(System.DateTime)">
            <summary>
            Converts the value of this instance to the equivalent OLE Automation date.
            </summary>
            <param name="inDateTime"></param>
            <returns>A double-precision floating-point number that contains an OLE Automation date equivalent to the value of this instance.</returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.LookupCachingMode">
            <summary>
            Specifies options for caching look up tables in HLookUp and VLookUp functions.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.LookupCachingMode.None">
            <summary>
            No caching is done.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.LookupCachingMode.VLOOKUP">
            <summary>
            Tables will be cached only for VLookUp.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.LookupCachingMode.HLOOKUP">
            <summary>
            Tables will be cached only for HLookUp.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.LookupCachingMode.Both">
            <summary>
            Tables will be cached for both VLookUp and HLookUp.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.LookupCachingMode.OptimizeForMatches">
            <summary>
            Tables will be optimized for searching for exact matches. Set this flag if you expect your searches to find exact matches.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.RangeInfo">
            <summary>
            RangeInfo represents a rectangle array of cells that may contain formulas, strings, or numbers
            that may be referenced by other formulas.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.RangeInfo.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructs a RangeInfo instance with the given top, left, bottom and right values.
            </summary>
            <param name="top">Top row index of this range.</param>
            <param name="left">Left column index of this range.</param>
            <param name="bottom">Bottom row index of this range.</param>
            <param name="right">Right column index  of this range.</param>
            <remarks>The range values must be one-based indexes.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.RangeInfo.Cells(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            A method to retrieve a range based on the numeric arguments passed in.
            </summary>
            <param name="top">Top row index of this range.</param>
            <param name="left">Left column index of this range.</param>
            <param name="bottom">Bottom row index of this range.</param>
            <param name="right">Right column index  of this range.</param>
            <returns>A RangeInfo object.</returns>
            <remarks>The range values must be one-based indexes.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.RangeInfo.GetAlphaLabel(System.Int32)">
            <summary>
            GetAlphaLabel is a method that retrieves a string value for the column whose numerical index is passed in.
            </summary>
            <param name="col"> Number index such as 1, 5, 27.</param>
            <returns>Corresponding alphabets label like A, E, AA.</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.RangeInfo.Bottom">
            <summary>
            A property that gets/sets the bottom row index of this range.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.RangeInfo.Left">
            <summary>
            A property that gets/sets the left column index of this range.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.RangeInfo.Right">
            <summary>
            A property that gets/sets the right row index of this range.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.RangeInfo.Top">
            <summary>
            A property that gets/sets the top row index of this range.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.ICalcData">
            <summary>
            ICalcData defines the minimal interface that a data object must support in order to use
            this formula engine.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ICalcData.RecalculateCell(System.Int32,System.Int32,System.Boolean)">
            Recalculating the specified formula cell.
            When ever the precedent cell is changed, thats dependecncy should be updated.
            While invalidating the formula cell, it will be recalulated when it have tag as null.
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ICalcData.GetDependentCellValue(System.Int32,System.Int32)">
            <summary>
            Gets the dependent cell value of the specified cell.
            </summary>
            <param name="rowIndex">Row index of the cell</param>
            <param name="colIndex">Column index of the cell</param>
            <returns>retuns the value of the specified cell</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ICalcData.GetValueRowCol(System.Int32,System.Int32)">
            <summary>
            A method that gets the data value from the specified row and column.
            </summary>
            <param name="row">1-based index specifying the row index of the requested value.
            </param>
            <param name="col">1-based index specifying the column index of the requested data.</param>
            <returns>The data value at the given row and column index.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ICalcData.SetValueRowCol(System.Object,System.Int32,System.Int32)">
            <summary>
            A method that sets the data value to the specified row and column.
            </summary>
            <param name="value">The value.</param>
            <param name="row">One-based index specifying the row index of the value.</param>
            <param name="col">One-based index specifying the column index of the value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ICalcData.WireParentObject">
            <summary>
            A method that wires the ParentObject after the CalcEngine object is created or when a
            RegisterGridAsSheet call is made.
            </summary>
            <remarks>This method is a callback to the ParentObject so it can have a chance
            to subscribe to any change events it may need to implement ValueChanged properly.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.ICalcData.RowCount">
            <summary>
            Gets/Sets the Row count of the Grid.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.ICalcData.ColumnCount">
            <summary>
            Gets/Sets Column count of the Grid.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.CellGrid.ICalcData.ValueChanged">
            <summary>
            Event for value changed
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.ISheetData">
            <summary>
            Used in conjunction with <see cref="P:Syncfusion.Calculate.CalcEngine.RowMaxCount"/>.
            </summary>
            <remarks>
            Essential Calculate supports column ranges of the form A:D as in =SUM(A:D) to represent all cells in columns
            A, B, C and D from a ICalcData object. To get a value for the number of rows, the CalcEngine first checks to
            see if the ICalcData object supports the ISheetData interface. If this interface is supported, the row
            count used to determine the range is obtained through this interface. If the ICalcData object does not support
            ISheetData, then the value of <see cref="P:Syncfusion.Calculate.CalcEngine.RowMaxCount"/> is used provided RowMaxCount &gt; 0.
            and the index of  first and last rows and columns
            is used.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ISheetData.GetFirstRow">
            <summary>
            Get the idex of the first row in UsedRange
            </summary>
            <returns> index of first row</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ISheetData.GetLastRow">
            <summary>
            get the index of the last row in UsedRange
            </summary>
            <returns>index of last row</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ISheetData.GetRowCount">
            <summary>
            Gets the row count.
            </summary>
            <returns>Number of rows</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ISheetData.GetFirstColumn">
            <summary>
            Gets the first column index.
            </summary>
            <returns>Index of first column</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ISheetData.GetLastColumn">
            <summary>
            Gets the last column index / column count.
            </summary>
            <returns>Index of last column</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ISheetData.GetColumnCount">
            <summary>
            Gets the column count.
            </summary>
            <returns>Number of columns</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.LenComparer.Compare(System.Object,System.Object)">
            <summary>
            Compares 2 strings based on their length.
            </summary>
            <param name="x">String 1.</param>
            <param name="y">String 2.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.GridSheetFamilyItem">
            <summary>
            Encapsulates the properties that are needed to support multiple families of crossed-referenced grids.
            This class is for internal use only.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridSheetFamilyItem.GetGridModelForToken(System.String)">
            <summary>
            Get GridModel for the given Token.
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridSheetFamilyItem.GetTokenForGridModel(Syncfusion.UI.Xaml.CellGrid.SfCellGrid)">
            <summary>
            Get Token for the given GridModel.
            </summary>
            <param name="grid"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridSheetFamilyItem.GetTokenForSheetName(System.String)">
            <summary>
            Get Token for the given SheetName.
            </summary>
            <param name="sheetName"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridSheetFamilyItem.GetSheetNameForToken(System.String)">
            <summary>
            Get SheetName for the given Token.
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.NamespaceDoc">
            <summary>
            Contains classes to create SfCellGrid and also to perform common user actions such as selection, editing, formatting, etc.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.SfCellGrid">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.CellGrid.SfCellGrid"/> control in which data will be displayed in the form of rows and columns.
            </summary>
            <remarks> This class offers events associated with selection, editing and resizing operations in grid.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.SfCellGrid">SfCellGrid</see> class. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.GetDisplayText(System.Int32,System.Int32)">
            <summary>
            Used to get the display text of the cell.
            </summary>
            <param name="rowIndex">RowIndex of the cell</param>
            <param name="colIndex">ColumnIndex of the cell</param>
            <returns>Returns the display text</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.GetCellValue(System.Int32,System.Int32)">
            <summary>
            Used to get the value of the cell.
            </summary>
            <param name="rowIndex">RowIndex of the cell</param>
            <param name="colIndex">ColumnIndex of the cell</param>
            <returns>Returns the cell value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.OnCreateGridColumn(Syncfusion.UI.Xaml.CellGrid.SfCellGrid)">
            <summary>
            Creates new instance for <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridColumn"/>.
            </summary>
            <returns> An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridColumn"/>.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.OnCreateModel">
            <summary>
            Creates a new instance for <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridModel"/>.
            </summary>
            <returns> An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridModel"/>.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.OnCreateCopyPaste">
            <summary>
            Creates a new instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCopyPaste"/>.
            </summary>
            <returns>An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCopyPaste"/>.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.OnCreateCurrentCell">
            <summary>
            Creates a new instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell"/>.
            </summary>
            <returns>An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell"/>.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.InitializeCellRendererCollection">
            <summary>
            Initializes the GridCellRendererCollection.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.OnVisualContainerPointerPressed(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Occurs when pointer pressed on <see cref="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.VisualContainer"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:System.Windows.Input.MouseButtonEventArgs">MouseButtonEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.OnVisualContainerPointerMoved(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Occurs when pointer moved hover <see cref="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.VisualContainer"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:System.Windows.Input.MouseButtonEventArgs">MouseButtonEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.OnVisualContainerPointerReleased(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Occurs when pointer released on <see cref="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.VisualContainer"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:System.Windows.Input.MouseButtonEventArgs">MouseButtonEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.OnVisualContainerPointerExited(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Occurs when pointer leaves from <see cref="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.VisualContainer"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:System.Windows.Input.MouseButtonEventArgs">MouseButtonEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.WireEvents">
            <summary>
            Wire the events
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.UnWireEvents">
            <summary>
            Unwire the events
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.OnContainerKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Occurs when key down on <see cref="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.VisualContainer"/>.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.KeyEventArgs">KeyEventArgs</see> that contains the event data.</param>
            <returns>True or False.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.OnCellRequestNavigateEvent(Syncfusion.UI.Xaml.CellGrid.Helpers.CellRequestNavigateEventArgs)">
            <summary>
            Helper method to raise Hyperlink Requset Navigate event.
            </summary>
            <param name="e">An <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CellRequestNavigateEventArgs">CellRequestNavigateEventArgs</see> that contains the event data.</param>
            <returns>True or False.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.OnCurrentCellEndEdit(Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellEndEditEventArgs)">
            <summary>
            Helper method to raise Current Cell Begin Edit Event.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.KeyEventArgs">KeyEventArgs</see> that contains the event data.</param>
            <returns>True or False.</returns>s
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.DeleteValuesFromSelectedRanges">
            <summary>
            Helps to delete the value of cell in a selected ranges.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.CanPerformAutoScroll">
            <summary>
            Used to Notify Whether the Auto Scrolling can be performed or not
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.GetPointerDownRowColumnIndex">
            <summary>
            Used to get the Pointer Down RowColumnIndex
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.GetPointerMoveRowColumnIndex">
            <summary>
            Used to get the Pointer Move RowColumnIndex
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.GetActiveRange">
            <summary>
            Used to get the ActiveRange from the SelectedRanges
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.InvalidateCells(System.Boolean)">
            <summary>
            Invalidate all Cells in a grid.
            </summary>
            <param name="clearStyles">Set this false to avoid resetting the GridStyleInfo</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.InvalidateCell(System.Int32,System.Int32)">
            <summary>
            Invaildates the mentioned cell in the gird.
            </summary>
            <param name="rowIndex">Index of the row.</param>
            <param name="colIndex">Index of the column</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.InvalidateCell(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,System.Boolean)">
            <summary>
            Invalidates the mentioned range in the grid.
            </summary>
            <param name="clearStyles">Set this false to avoid resetting the GridStyleInfo of cells in mentioned range</param>
            <param name="range">Specified range.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.InvalidateCellBorders(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Invalidates the cell borders in the mentioned range.
            </summary>
            <param name="range">An instance of<see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.InvalidateVisual">
            <summary>
            Invalidates measurement state(layout) of grid
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.InvalidateVisual(System.Boolean)">
            <summary>
            Invalidates measurement state(layout) of grid
            </summary>
            <param name="setLayoutDirty">If true, invalidates layout of each row</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.InvalidateVisual(System.Boolean,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Invalidates measurement state(layout) of grid.
            </summary>
            <param name="setLayoutDirty">If true, invalidates layout of rows in a mentioned range</param>
            <param name="range">Specified range.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.InvalidateSelection">
            <summary>
            Invalidates the selection layout alone.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.ScrollInView(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Scrolls the mentioned cell into view.
            </summary>
            <param name="rowColumnIndex">Coordinates of a cell.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.PointToCellRowColumnIndex(System.Windows.Point)">
            <summary>
            Gets the RowColumnIndex of the cell under the mentioned location
            </summary>
            <param name="p">X and Y-Coordinates.</param>
            <returns>An instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.PointToCellRowColumnIndexOutsideCells(System.Windows.Point,System.Boolean)">
            <summary>
            Gets the RowColumnIndex of the cell under the mentioned location.
            </summary>
            <param name="p">X and Y-Coordinates.</param>
            <param name="allowOutsideLines">Set this true if point can be below corner of last line.</param>
            <returns>An instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.SetColumnWidth(System.Int32,System.Int32,System.Double)">
            <summary>
            Set the column width
            </summary>
            <param name="startIndex">Starting column index</param>
            <param name="endIndex">End column index</param>
            <param name="width">Width</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.SetRowHeight(System.Int32,System.Int32,System.Double)">
            <summary>
            Set the row height
            </summary>
            <param name="startIndex">Starting row index</param>
            <param name="endIndex">End row index</param>
            <param name="height">Height</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.OnApplyTemplate">
             <summary>
             When overridden in a derived class, is invoked whenever application code or
             internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate"/>.
             </summary>
            <remarks> Builds the visual tree for the SfCellGi when a new template is applied.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown"/> attached event reaches
            an element in its route that is derived from this class. Implement this method
            to add class handling for this event. 
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.KeyEventArgs"/> that
            contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.MeasureOverride(System.Windows.Size)">
            <summary>
            Called to remeasure a control. 
            </summary>
            <param name="availableSize">The maximum size that the method can return.</param>
            <returns>
            The size of the control, up to the maximum specified by <paramref name="availableSize"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.ArrangeOverride(System.Windows.Size)">
            <summary>
            Called to arrange and size the content of a <see cref="T:System.Windows.Controls.Control"/> object. 
            </summary>
            <param name="finalSize">The computed size that is used to arrange the
            content.</param>
            <returns>
            The size of the control.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.TextInput"/> attached event
            reaches an element in its route that is derived from this class. Implement this
            method to add class handling for this event. 
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.TextCompositionEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)">
            <summary>
            Used to avoid the slightly moving of entire window when touch inertia encountered its edge.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.GetDependentCellValue(System.Int32,System.Int32)">
            <summary>
            Gets the dependent cell value of the specified cell.
            </summary>
            <param name="rowIndex">Row index of the cell</param>
            <param name="colIndex">Column index of the cell</param>
            <returns>retuns the value of the specified cell</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.GetValueRowCol(System.Int32,System.Int32)">
            <summary>
            Returns the formula string if the cell contains a formula, or the value if
            the cell cantains anything other than a formula.
            </summary>
            <param name="row">The row of the cell.</param>
            <param name="col">The column of the cell.</param>
            <returns>The formula string or value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.SetValueRowCol(System.Object,System.Int32,System.Int32)">
            <summary>
            Sets the value of a cell.
            </summary>
            <param name="value">The value to be set.</param>
            <param name="row">The row of the cell.</param>
            <param name="col">The column of the cell.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.WireParentObject">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.OnValueChanged(System.Int32,System.Int32,System.String)">
            <summary>
            Raises the <see cref="E:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.ValueChanged"/> event.
            </summary>
            <param name="row">The row of the change.</param>
            <param name="col">The column of the change.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.RecalculateCell(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Recalculating dependency cells of the precedent cell.
            When ever the precedent cell is changed, thats dependecncy should be updated.
            When setting tag as null, that will be recalculate when invalidate the cell.
            </summary>
            <param name="row">Current Cell's row index.</param>
            <param name="col">Current Cell's column index.</param>
            <param name="invaladateCell">True or False.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.InsertRows(System.Int32,System.Int32)">
            <summary>
            Used to insert rows when row count is increased
            </summary>
            <param name="insertAtRowIndex"></param>
            <param name="count"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.RemoveRows(System.Int32,System.Int32)">
            <summary>
            Used to remove rows when row count is decreased
            </summary>
            <param name="removeAtRowIndex"></param>
            <param name="count"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.InsertColumns(System.Int32,System.Int32)">
            <summary>
            Used to insert columns when column count is increased
            </summary>
            <param name="insertAtColumnIndex"></param>
            <param name="count"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.RemoveColumns(System.Int32,System.Int32)">
            <summary>
            Used to remove columns when column count is increased
            </summary>
            <param name="removeAtColumnIndex"></param>
            <param name="count"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.OnCreateRowHeights">
            <summary>
            Creates RowHeights
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.OnCreateColumnWidths">
            <summary>
            Creates ColumnWidths
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.ClearVolatileCellStyles(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Clears the VolatileCellStyles from specifies range.
            </summary>
            <param name="range"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.App_Deactivated(System.Object,System.EventArgs)">
            <summary>
            Occurs when app de-activated
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.App_Activated(System.Object,System.EventArgs)">
            <summary>
            occurs when app activated
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.UpdateFrozenRows(System.Int32)">
            <summary>
            Update the frozen row count if after scroll to freeze or set frozen count without scroll.
            </summary>
            <param name="rowCount">row count for freeze</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.UpdateFrozenColumns(System.Int32)">
            <summary>
            Update the frozen column count if after scroll to freeze or set frozen count without scroll.
            </summary>
            <param name="colCount">column count for freeze</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.ShowHidePopup(System.Boolean)">
            <summary>
            Used to show/hide the popups shown in the grid
            </summary>
            <param name="show"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.OnCurrentCellValueChanged(Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValueChangedEventArgs)">
            <summary>
            Occurs when current cell value is changed while is in edit mode
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.OnCurrentCellValidating(Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValidatingEventArgs)">
            <summary>
            Occurs when current cell is validating
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.OnCurrentCellValidated(Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValidatedEventArgs)">
            <summary>
            Occurs after the current cell is validated
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.OnCurrentCellActivated(Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellActivatedEventArgs)">
            <summary>
            Occurs after the current cell is activated
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.OnCurrentCellActivating(Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellActivatingEventArgs)">
            <summary>
            Occurs when current cell is activating
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.OnSelectionChanged(Syncfusion.UI.Xaml.CellGrid.Helpers.SelectionChangedEventArgs)">
            <summary>
            Occurs after selection is changed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.OnSelectionChanging(Syncfusion.UI.Xaml.CellGrid.Helpers.SelectionChangingEventArgs)">
            <summary>
            Occuts when the selection is changing
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.OnResizingColumns(Syncfusion.UI.Xaml.CellGrid.Helpers.ResizingColumnsEventArgs)">
            <summary>
            Helper method to raise Resizing Columns Event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.OnResizingRows(Syncfusion.UI.Xaml.CellGrid.Helpers.ResizingRowsEventArgs)">
            <summary>
            Helper method to raise Resizing Rows Event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.OnCellCommentOpening(Syncfusion.UI.Xaml.CellGrid.Helpers.CellCommentOpeningEventArgs)">
            <summary>
            Helper method to raise CellCommentOpening event
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.OnCellTooltipOpening(Syncfusion.UI.Xaml.CellGrid.Helpers.CellTooltipOpeningEventArgs)">
            <summary>
            Helper method to raise CellTooltipOpening event
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.OnCellRequestNavigate(Syncfusion.UI.Xaml.CellGrid.Helpers.CellRequestNavigateEventArgs)">
            <summary>
            Helper method to raise Hyperlink Requset Navigate event
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.OnCellClick(Syncfusion.UI.Xaml.CellGrid.Helpers.GridCellClickEventArgs)">
            <summary>
            Helper method to raise CellClick event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.OnCurrentCellBeginEdit(Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellBeginEditEventArgs)">
            <summary>
            Helper method to raise Current Cell Begin Edit Event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.OnCurrentCellEditing">
            <summary>
            Occurs after current cell enter into edit mode
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.OnCellContextMenuOpening(Syncfusion.UI.Xaml.CellGrid.Helpers.CellContextMenuOpeningEventArgs)">
            <summary>
            Helper method to raise CellContextMenuOpening Event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.GetStyleInfo(System.Int32,System.Int32)">
            <summary>
            Used to Get <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo"/>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.GetCellRect(System.Int32,System.Int32)">
            <summary>
            Get the rect of current cell.
            </summary>
            <param name="rowIndex">current row index</param>
            <param name="columnIndex">current column index</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dispose the instance used in the <see cref="T:Syncfusion.UI.Xaml.CellGrid.SfCellGrid"/> class. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.UI.Xaml.CellGrid.SfCellGrid"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.IsDisposed">
            <summary>
            Gets or sets a value indicating whether this instance <see cref="T:Syncfusion.UI.Xaml.CellGrid.SfCellGrid"/> is disposed or not.
            </summary>
            <value><see langword="true"/> if this instance can be disposed; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.VisualContainer">
            <summary>
            Gets the <see cref="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.VisualContainer"/>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.IsInResizing">
            <summary>
            Gets or sets the value when resizing using touch.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.CommentTooltipService">
            <summary>
            Gets or sets the value that indicates comment and tooltip operations.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.IsRowColumnHeaderVisible">
            <summary>
            Gets or Sets True if RowColumnHeader is to be Visible else false
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.AllowCellContextMenu">
            <summary>
            Gets or sets the value whether the cell level Context menu is to be Enabled or not.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.CreateGridColumn">
            <summary>
            Gets or sets <see cref="T:System.Func`2"/> to create instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridColumn"/>.
            </summary> 
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.SelectionController">
            <summary>
            Gets or sets the Selection Controller which provides the selection of content when the user drags the pressed
            mouse to an edge of the control.
            </summary>
            <value>An instance of <see cref="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.SelectionController"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.AutoScroller">
            <summary>
            Gets the auto scroller which provides automatic scrolling of content when the user drags the pressed
            mouse to an edge of the control.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridAutoScroller"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.CurrentCell">
            <summary>
            Gets the current cell of the Grid.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.SelectedRanges">
            <summary>
            Gets or sets the collection of selected ranges from grid.
            </summary>
            <value>A collection of selected ranges.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.EditTrigger">
            <summary>
            Gets or Sets a value indicating any of the trigger options will cause cells to enter Edit Mode.
            </summary>
            <value>One of the enum options of EditTrigger.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.EditorSelectionBehavior">
            <summary>
            Gets or sets a value indicating whether editor select all the value or move last position.
            </summary>
            <value>One of the enum options of EditBehavior.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.FormulaEngine">
            <summary>
            Gets the value indicating the instance of <see cref="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.FormulaEngine"/> which is used to perform calculations in grid.
            </summary>
            <value>An instance of <see cref="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.FormulaEngine"/>. </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.CopyPaste">
            <summary>
            Gets the instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCopyPaste"/> class which used to perform clipboard operations(Cut, Copy, Paste).
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCopyPaste"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.Model">
            <summary>
            Gets the value indicating the instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridModel"/> which holds all the data related operations in grid.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridModel"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.RowCount">
            <summary>
            Gets or sets the number of rowcounts in grid.
            </summary>
            <value>Number of rows.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.ColumnCount">
            <summary>
            Gets or sets the number of columncount in grid.
            </summary>
            <value>Number of columns.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.FrozenRows">
            <summary>
            Gets or sets the number of frozenrows in grid.
            </summary>
            <value>Number of frozenrows.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.FrozenColumns">
            <summary>
            Gets or sets the number of frozencolumns in grid.
            </summary>
            <value>Number of frozencolumns.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.FooterRows">
            <summary>
            Gets or sets the number of footer rows in grid.
            </summary>
            <value>Number of footerrows.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.FooterColumns">
            <summary>
            Gets or sets the number of footer columns in grid.
            </summary>
            <value>Number of footercolumns.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.HeaderRows">
            <summary>
            Gets or sets the number of header rows in grid.
            </summary>
            <value>Number of header rows.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.HeaderColumns">
            <summary>
            Gets or sets the number of header columns in grid.
            </summary>
            <value>Number of header columns.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.DefaultColumnWidth">
            <summary>
            Gets or sets the default columnwidth for grid.
            </summary>
            <value>Width of the column.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.DefaultRowHeight">
            <summary>
            Gets or sets the default rowheight for grid.
            </summary>
            <value>Height of the row.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.RowHeights">
            <summary>
            Gets the collection of rowheights for grid.
            </summary>
            <value>Collection of rowheights.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.ColumnWidths">
            <summary>
            Gets the collection of columnwidths for grid.
            </summary>
            <value>Collection of columnwidths.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.ShowGridLines">
            <summary>
            Gets or sets value indicating whether gridlines shown or not. 
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.GridLineColor">
            <summary>
            Gets or sets the gridline color.
            </summary>
            <value>Color for the Gridline.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.SelectionBorderThickness">
            <summary>
            Gets or sets the thickness of selection border.
            </summary>
            <value>Thickness of the border.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.SelectionBorderBrush">
            <summary>
            Gets or sets the selection border brush.
            </summary>
            <value>Brush for border.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.SelectionBrush">
            <summary>
            Gets or sets the selected area brush.
            </summary>
            <value>Brush for selection.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.CellRenderers">
            <summary>
            Manages the collection of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererBase"/> objects for the current grid view
            method.
            </summary>
            <value>Collection of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererBase"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.CoveredCells">
            <summary>
            Gets the coveredcells in the grid.
            </summary>
            <value>Collection of CoveredCells.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.AllowEditing">
            <summary>
            Gets or sets the value indicating whether to allow the editing operation or not.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.AllowSelection">
            <summary>
            Gets or sets the value indicating whether to allow the selection or not.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.ColumnResizingController">
            <summary>
             Gets or sets the value for resizing column controller.
            </summary>
            <value>An instance of <see cref="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.ColumnResizingController"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.RowResizingController">
            <summary>
             Gets or sets the value for resizing row controller.
            </summary>
            <value>An instance of <see cref="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.RowResizingController"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.AllowRowResize">
            <summary>
            Gets or sets the value indicating whether to allow row resizing or not.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.AllowColumnResize">
            <summary>
            Gets or sets the value indicating whether to allow column resizing or not.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.AllowHiddenRowResize">
            <summary>
            Gets or sets the value indicating whether to allow hidden row resizing or not.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.AllowHiddenColumnResize">
            <summary>
            Gets or sets the value indicating whetherto allow hidden column resizing or not.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.ShowComment">
            <summary>
            Gets or Sets the value which indicates whether to show the cell comment or not.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.ShowTooltip">
            <summary>
            Gets or sets the value which indicates whether to show the cell tooltip or not.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.AllowFloatingCell">
            <summary>
            Gets or sets the value which indicates whether to float the cells or not while displaying the data.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.AllowFloatingCellInEdit">
            <summary>
            /// Gets or sets the value which indicates whether to allow the flood the cells in Edit mode or not.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.AllowExcelLikeKeyNavigation">
            <summary>
            Get or sets the value which indicates whether to allow editing like Excel. Which means, move the SelectionStart where pressed mouse pointer, move it to end when press Down Arrow key and move it where last placed when press Up Arrow key.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.ScrollRows">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.ScrollAxisBase"/> for rows.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.ScrollAxisBase"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.ScrollColumns">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.ScrollAxisBase"/> for columns.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.ScrollAxisBase"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.CellContextMenu">
            <summary>
            Gets or sets the ContextMenu Items for Grid.
            </summary>
            <value>ContextMenu item of Grid.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.AllowEditorsContextMenu">
            <summary>
            Gets or sets the value whether the Editors Context menu is to be Enabled or not.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="E:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.ValueChanged">
            <summary>
            An event raised on the IWorksheet whenever a value changes.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.SelectionChanging">
            <summary>
            Occurs when selection going to be changed
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.SelectionChanged">
            <summary>
            Occurs after the selection is changed 
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.CurrentCellActivating">
            <summary>
            Occurs when the current cell going to be activated
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.CurrentCellActivated">
            <summary>
            Occurs after the current cell is activated
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.CurrentCellBeginEdit">
            <summary>
            Occurs when the current cell enters into edit mode
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.CurrentCellEndEdit">
            <summary>
            Occurs when the current cell leaves from edit mode
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.CurrentCellValueChanged">
            <summary>
            Occurs when the current cell value gets changed while cell is in edit mode
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.CurrentCellValidating">
            <summary>
            Occurs when current cell value going to be validated
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.CurrentCellValidated">
            <summary>
            Occurs after the current cell is validated
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.CellRequestNavigate">
            <summary>
            Occurs when the current cell request to navigate the URI.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.CellClick">
            <summary>
            Occurs when click on the cell.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.ResizingColumns">
            <summary>
            Occurs when perform resizing columns.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.ResizingRows">
            <summary>
            Occurs when perform resizing rows.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.CellCommentOpening">
            <summary>
            Occurs when perform cell comment opening.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.CellTooltipOpening">
            <summary>
            Occurs when perform cell tooltip opening.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.CellContextMenuOpening">
            <summary>
            Occurs When Context Menu is to be displayed
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.CellGrid.SfCellGrid.PropertyChanged">
            <summary>
            Occurs when property changed
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCell.UpdateCellComment(System.Boolean)">
            <summary>
            Update the comment path and border visibility while reusing and while editing collapse the comment border.
            </summary>
            <param name="isEditing">True, when current cell is editing. Else not editing</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCell.UpdatePopup">
            <summary>
            Update the touch popup while scrolling.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCell.CreateCellCommentPath(Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo,Syncfusion.UI.Xaml.CellGrid.Helpers.CellCommentOpeningEventArgs)">
            <summary>
            Create the comment path.
            </summary>
            <param name="style">Provide the style info for comment</param>
            <param name="args"></param>
            <returns>Returns the path for cell comment</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCell.SetHiddenColumnRowSelection(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Set hidden row or column selection for resizing
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCell.CheckFloodCell(System.Windows.Point)">
            <summary>
            Helper method used for add the selection for flood cell. Because, set the width for flood cells as 0 while arrange.
            </summary>
            <param name="point"> mouse point </param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCell.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCell.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridHeaderCell.ApplyHiddenLineBorder(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Helper method for apply the border while hide the column and row
            </summary>
            <param name="isLeftLine"></param>
            <param name="isRightLine"></param>
            <param name="isBottomLine"></param>
            <param name="isTopLine"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridHeaderCell.ResetHiddenLineBorder(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Helper method for apply the border while hide the column and row
            </summary>
            <param name="isLeftLine"></param>
            <param name="isRightLine"></param>
            <param name="isBottomLine"></param>
            <param name="isTopLine"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridHeaderCell.SetLineBorderAndMargin">
            <summary>
            Set the line border and margin
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.ScrollableChildFrame">
            <summary>
            This is a panel which is used as a child panel of VisualContainer.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ScrollableChildFrame.#ctor(System.String)">
            <summary>
            Creates a new instance.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ScrollableChildFrame.MeasureOverride(System.Windows.Size)">
            <summary>
            Performs the measure related operations for CellsPanel.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ScrollableChildFrame.ArrangeOverride(System.Windows.Size)">
            <summary>
            Performs the arrange related operations for CellsPanel.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ScrollableChildFrame.Dispose">
            <summary>
            Dispose the live instances
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.ScrollableChildFrame.Grid">
            <summary>
            Gets or sets the SfCellGrid
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.ScrollableChildFrame.VisualContainer">
            <summary>
            Gets or sets the VisualContainer.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellBordersPanel.EnsureVerticalBorders">
            <summary>
            Reset index of Vertical CellBorders and its BorderElements on vertical scrolling
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellBordersPanel.EnsureHorizontalBorders">
            <summary>
            Reset index of Horizontal CellBorders and its BorderElements on horizontal scrolling
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellBordersPanel.CreateAndUpdateBorderStyle(System.Windows.Media.Pen,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Create or update a new CellBorder and its BorderElement if doesn't match with adjacent one.
            If border's pen is matched with adjacent BorderElement then combine with that one by adjusting the StartIndex and EndIndex.
            </summary>
            <param name="pen"></param>
            <param name="row"></param>
            <param name="col"></param>
            <param name="isVertical"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellBordersPanel.CreateOrRecycleCellBorders(System.Int32,System.Collections.Generic.List{Syncfusion.UI.Xaml.CellGrid.CellBorders},System.Boolean)">
            <summary>
            Create a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.CellBorders"/> or reuse it from the existing list of <see cref="T:Syncfusion.UI.Xaml.CellGrid.CellBorders"/>.
            </summary>
            <param name="index">Row index or column index of <see cref="T:Syncfusion.UI.Xaml.CellGrid.CellBorders"/></param>
            <param name="cellbordersList">Exsisting <see cref="T:Syncfusion.UI.Xaml.CellGrid.CellBorders"/> list.</param>
            <param name="isVertical"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellBordersPanel.CreateOrRecycleBorderElement(System.Windows.Media.Pen,System.Int32,System.Int32,System.Collections.Generic.List{Syncfusion.UI.Xaml.CellGrid.BorderElement},System.Boolean)">
            <summary>
            Create a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.BorderElement"/> or reuse it from the existing list of <see cref="T:Syncfusion.UI.Xaml.CellGrid.BorderElement"/>.
            </summary>
            <param name="pen"><see cref="T:System.Windows.Media.Pen"/> of <see cref="T:Syncfusion.UI.Xaml.CellGrid.BorderElement"/></param>
            <param name="start">Start index</param>
            <param name="end">End index</param>
            <param name="borderElementList">Existing <see cref="T:Syncfusion.UI.Xaml.CellGrid.BorderElement"/> list.</param>
            <param name="isVertical"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellBordersPanel.Dispose(System.Boolean)">
            <summary>
            Dispose the live instances.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.BorderElement">
            <summary>
            Have border elements  <see cref="P:Syncfusion.UI.Xaml.CellGrid.BorderElement.Pen"/> and information (StartIndex, EndIndex, Length)
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.CellBorders">
            <summary>
            Contains <see cref="T:Syncfusion.UI.Xaml.CellGrid.BorderElement"/> list for particular row index or column index
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellBorders.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.CellBorders"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellBorders.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.UI.Xaml.CellGrid.CellBorders"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.GridColumn">
            <summary>
            Holds the information about each and every cell which are in view. It will updates the properties of cell element (GridCell)
            based on the styleInfo. This will triggered from GridRow when updating the cells.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridColumn.#ctor(Syncfusion.UI.Xaml.CellGrid.SfCellGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridColumn">GridColumn</see> class. 
            </summary>
            <param name="grid">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.SfCellGrid"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridColumn.OnColumnVisibilityChanged">
            <summary>
            Used to update the column visibility
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridColumn.InitializeCellElement(Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo)">
            <summary>
            Initializes the cell element.
            </summary>
            <param name="style"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridColumn.UpdateRenderer(Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo)">
            <summary>
            Used to update renderer based on the cell type.
            </summary>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridColumn.GetColumnWidth">
            <summary>
            Used to get the column width.
            </summary>
            <returns>Width of the column.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridColumn.GetRowHeight">
            <summary>
            Used to get the row height
            </summary>
            <returns>Height of the row.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridColumn.UpdateHeaderCell">
            <summary>
            Used to update the Hidden column border of Header cell.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridColumn.SetGridColumn">
            <summary>
            Used to set the GridColumn and grid to <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridColumn.EnsureFloatingCellSize(System.Collections.Generic.List{Syncfusion.UI.Xaml.CellGrid.GridColumn},System.Windows.Size,System.Int32)">
            <summary>
            Calculate the floating cell size.
            </summary>
            <param name="elements">A list of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridColumn"/> elements.</param>
            <param name="cellSize">Size of the cell.</param>
            <param name="arrayIndex">Index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridColumn.EnsureFloatingCellSizeOnEdit(System.String)">
            <summary>
            Calculate the floating cell size in editing mode.
            </summary>
            <param name="text">Text to be displayed.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridColumn.GetDisplayTextSize(System.String,System.Windows.Size,System.Boolean)">
            <summary>
            Calculate the display text size with help of MeasureText() based on cellsize
            And FloatingCellSize if FloatingCellSize is not an empty.
            </summary>
            <param name="text">Display text</param>
            <param name="cellSize">cell size</param>
            <param name="wrapText">true if textwrapping is applied else false</param>
            <returns>Size of the text.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridColumn.SetTextWrapping(System.Boolean)">
            <summary>
            Set and reset the text wrapping while editing in floating cell.
            </summary>
            <param name="setWrapText">True or false.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridColumn.GetTextWrapping">
            <summary>
            Get the textwrapping for the specified cell.
            </summary>
            <returns>Returns true, if text is wrapped; otherwise, false.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridColumn.GetTextAlignment">
            <summary>
            Helper methods to get the horizontal alignment for the text.
            </summary>
            <returns>An instance of <see cref="T:System.Windows.HorizontalAlignment"/>.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridColumn.GetCurrentCellRendererElement">
            <summary>
            Used to get the edit UIElement of the CurrentCell.
            </summary>
            <returns>A UIElement.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridColumn.OnUpdateColumn(System.Windows.FrameworkElement@)">
            <summary>
            Update the column properties such as renderer, cell type, style info, row index, column index, cell element etc.
            </summary>
            <param name="oldElement">
            An <see cref="T:System.Windows.Input.MouseEventArgs">MouseEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridColumn.OnRender(System.Windows.Media.DrawingContext,System.Windows.Rect)">
            <summary>
            Used to render the borders, text, background, etc. of the <see cref="M:Syncfusion.UI.Xaml.CellGrid.GridColumn.OnRender(System.Windows.Media.DrawingContext,System.Windows.Rect)"/>.
            </summary>
            <param name="drawingContext">An instance of <see cref="T:System.Windows.Media.DrawingContext"/>.</param>
            <param name="cellRect">An instance <see cref="T:System.Windows.Rect"/> of cell.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridColumn.PointerPressed(System.Windows.Input.MouseEventArgs)">
            <summary>
            Occurs when pointer/mouse pressed on <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.MouseEventArgs">MouseEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridColumn.PointerMoved(System.Windows.Input.MouseEventArgs)">
            <summary>
            Occurs when pointer/mouse hover the <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.MouseEventArgs">MouseEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridColumn.PointerReleased(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Occurs when pointer/mouse released over <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.MouseButtonEventArgs">MouseEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridColumn.UpdateCellBorders">
            <summary>
            Update the cell borders of the current cell.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridColumn.UpdateFloatingCellBorders">
            <summary>
            Update the borders of floating cells.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridColumn.UpdateCellBorders(System.Int32,System.Int32,Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo)">
            <summary>
            Update the CellBorders of the particular cell
            </summary>
            <param name="rowindex"></param>
            <param name="colindex"></param>
            <param name="style"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridColumn.UpdateBorderStyle(System.Int32,System.Int32,System.Windows.Media.Pen,System.Boolean)">
            <summary>
            Update the border style for the specified cell or range.
            </summary>
            <param name="rowindex">Row index of the cell.</param>
            <param name="colindex">Column index of the cell.</param>
            <param name="pen">Outline for the cell.</param>
            <param name="isVertical">True or False.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridColumn.UpdateColumn(System.Windows.FrameworkElement@)">
            <summary>
            Update the column properties such as renderer, row index, column index, cell element etc.
            </summary>
            <param name="oldElement">An element which maintains the <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridColumn.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the 
            <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridColumn">GridColumn</see>
            and optionally releases the managed resources.
            </summary>
            <param name="disposing">True or False .</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridColumn.IsDirty">
            <summary>
            Gets or sets a value indicating whether it needs to be rearranged or not .
            </summary>
            <value>True or False.</value>
            <remarks>Set as true, if this needs to be re arrange.</remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridColumn.IsBordersDirty">
            <summary>
            Gets or sets a value indicating whether the cell borders need to be updated or not.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridColumn.IsSpannedColum">
            <summary>
            Gets a value indicating whether the cell is covered cell or not.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridColumn.CoveredCellInfo">
            <summary>
            Gets the value of <see cref="P:Syncfusion.UI.Xaml.CellGrid.GridColumn.CoveredCellInfo"/> if this is spanned column.
            </summary>
            <value>An instance of <see cref="P:Syncfusion.UI.Xaml.CellGrid.GridColumn.CoveredCellInfo"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridColumn.IsEditing">
            <summary>
            Gets the value indicating whether the s is in editing mode or not.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridColumn.IsCurrentColumn">
            <summary>
            Returns true if this is current cell
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridColumn.CellRowColumnIndex">
            <summary>
            Gets the value indicating the instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/> of the column.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridColumn.DisplayText">
            <summary>
            Gets or sets the display text.
            </summary>
            <value>Text to be displayed.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridColumn.IsFloatingCell">
            <summary>
            Determines whether cell is FloatingCell or not.
            FloatingCell means, whenever the cell width increased when cell value is exceeds the cellsize by taking next cell width.
            </summary>
            <value>True or false.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridColumn.IsFloodCell">
            <summary>
            Determines whether cell is FloodCell or not.
            If any cells are used by floating cell then those cells are denoted as FloodCell and set the width as 0 for it.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridColumn.IsAltEnterFloatingCell">
            <summary>
            Determines whether Alt + Enter pressed or not while editing
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridColumn.IsFloatingCellHeightChanged">
            <summary>
            Determines whether FloatingCell height is changed or not when flood cell goes to out of view
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridColumn.IsFloatingCellEditing">
            <summary>
            Determines whether FloatingCell is in editing mode or not.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridColumn.Element">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridColumn.Renderer">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.IGridCellRenderer"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridColumn.RowIndex">
            <summary>
            Gets or sets the row index.
            </summary>
            <value>Index of the row.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridColumn.ColumnIndex">
            <summary>
            Gets or sets the column index.
            </summary>
            <value>Index of the column.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridColumn.IsEnsured">
            <summary>
            Determines whether the column in ensured or not.(i.e., properties are updated on measure override) 
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridColumn.ColumnRegion">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.ScrollAxisRegion"/> of column.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.ScrollAxisRegion"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridColumn.IsVisible">
            <summary>
            Gets or sets the visiblity of the column.
            </summary>
            <value>True or false.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.GridRow">
            <summary>
            Holds information about a row. Each GridRow contains a VirtualizingRowPanel which is added as children into the VisualContainer.
            Create or reuse the GridColumn(Which contains the cellElement(GridCell) and its information) based on visible cells in this row.
            Those cells will updated when measure or layout is affected.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRow.#ctor(Syncfusion.UI.Xaml.CellGrid.SfCellGrid)">
            <summary>
            Creates a new instance.
            </summary>
            <param name="grid">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.SfCellGrid"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRow.CreateOrRecycleColumnElement(System.Int32,System.Int32,Syncfusion.UI.Xaml.Grid.ScrollAxis.ScrollAxisRegion)">
            <summary>
            Create or recycle the column element
            </summary>
            <param name="rowIndex"></param>
            <param name="colIndex"></param>
            <param name="colregion"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRow.InitializeRow">
            <summary>
            Creates the VirtualizingRowPanel and initialized it.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRow.GetColumnVisibleLineInfo(System.Int32)">
            <summary>
            Used to get the VisibleLineInfo of the column
            </summary>
            <param name="index">Column index</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRow.GetGridRow">
            <summary>
            Used to get the GridRow.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRow.OnRowVisibilityChanged">
            <summary>
            Used to changes the visibility of row element.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRow.GetRowSpanHeight(System.Int32,System.Int32)">
            <summary>
            Used to get the row span height
            </summary>
            <param name="top"></param>
            <param name="bottom"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRow.GetTopLeftVisibleSpanIndex(Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo,System.Int32@,System.Int32@)">
            <summary>
            Used to get the top and left visible row and columnn index of the covered cell.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRow.SetOrRemoveRowSpan(Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo,System.Boolean)">
            <summary>
            Set or remove the rowSpan information.
            </summary>
            <param name="coveredCell"></param>
            <param name="isSpan"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRow.OnGenerateVisibleCells(System.Int32,Syncfusion.UI.Xaml.Grid.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Used to generate the column elements based on visible cells
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRow.UpdateCells(System.Int32,Syncfusion.UI.Xaml.Grid.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Used to update the column elements based on visiblecolumns information
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRow.EnsureColumns(System.Int32,Syncfusion.UI.Xaml.Grid.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Used to ensure and update the column elements when horizontal scrolling or width of the layout is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRow.RemoveColumn(Syncfusion.UI.Xaml.CellGrid.GridColumn)">
            <summary>
            Used to remove the column from ColumnElements list and RowPanel 
            </summary>
            <param name="col"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRow.RefreshColumns(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Mark the columns as dirty which are in a specified range.
            </summary>
            <param name="range"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRow.RefreshAllColumns">
            <summary>
            Mark all columns in a row as dirty.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRow.UpdateResizingPopup">
            <summary>
            Used to update the row resizing popup.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRow.UpdateCells">
            <summary>
            Used to update the column elements based on visiblecolumns information
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRow.EnsureColumns">
            <summary>
            Used to ensure and update the column elements when horizontal scrolling or width of the layout is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRow.GenerateVisibleCells">
            <summary>
            Used to generate the column elements based on visible cells
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRow.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRow"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRow.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRow"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridRow.IsSpannedRow">
            <summary>
            Returns true, if this is spanned row
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridRow.HaveSpannedCell">
            <summary>
            Returns true, if this has any spanned cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridRow.RowSpanHeight">
            <summary>
            Returns the height of row span.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridRow.IsEditing">
            <summary>
            Returns true, If this has current cell and current cell is in editing.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridRow.IsCurrentRow">
            <summary>
            Returns true, if this has current cell
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridRow.IsDirty">
            <summary>
            Set as true, if need to re-update the cells in this row.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridRow.Element">
            <summary>
            Gets the Panel of this row.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridRow.IsVisible">
            <summary>
            Gets or sets the Visibility.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridRow.Index">
            <summary>
            Gets or sets the row index
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridRow.Region">
            <summary>
            Gets or sets the row region
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridRow.IsEnsured">
            <summary>
            Determines whether the row is already ensured or not.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.VirtualizingRowPanel">
            <summary>
            The cell element (GridCell) for all visible cells in a row have been added as children into this panel.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoCollection`1">
            <summary>
            A collection with elements derived from type <see cref="T:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase"/>. Internally
            this collection maintains both a List of CellSpanInfoBase and a so called pool. The
            pool allows immediate lookup of cell spans given a cells row and column index. The
            list allows looping through cell spans in the order they were added. CellSpanInfoCollection
            assumes that there is no overlap between cell spans. For any given cell there only 
            at most one cell span must exist. CellSpanInfoCollection is a base class for the
            grids GridCoveredCellInfoCollection.
            </summary>
            <typeparam name="T">The element type of this collection.</typeparam>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoCollection`1.GetCellSpan(System.Int32,System.Int32)">
            <summary>
            Gets the cell span.
            </summary>
            <param name="rowIndex">Index of the row.</param>
            <param name="columnIndex">Index of the column.</param>
            <returns>The cell span if found; othwerwise null if there is no cell span for the specified row and column.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoCollection`1.OnGetCellSpan(System.Int32,System.Int32,`0@)">
            <summary>
            This virtual method is called form <see cref="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoCollection`1.GetCellSpan(System.Int32,System.Int32)"/>.
            Override this method to return a custom cell span that include
            the specified cells row and column index. In such case you should also return true.
            </summary>
            <param name="rowIndex">Index of the row.</param>
            <param name="columnIndex">Index of the column.</param>
            <param name="result">The result cell span.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoCollection`1.ResetCache">
            <summary>
            Resets the cached information for last found cell span.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoCollection`1.ResetCellSpan(System.Int32,System.Int32)">
            <summary>
            Resets the cell span and removes it from the collection.
            </summary>
            <param name="rowIndex">Index of the row.</param>
            <param name="columnIndex">Index of the column.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoCollection`1.ResetCellSpan(Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase)">
            <summary>
            Resets the cell span and removes it from the collection.
            </summary>
            <param name="cci">The cci.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoCollection`1.SearchCellSpan(Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase)">
            <summary>
            Searches the cell span.
            </summary>
            <param name="span">The cell span.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoCollection`1.CheckExistCellSpan(Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase)">
            <summary>
            Checks if the cell span exists.
            </summary>
            <param name="span">The cell span.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoCollection`1.InsertRows(System.Int32,System.Int32)">
            <summary>
            Inserts the rows.
            </summary>
            <param name="insertAtRowIndex">Index of the insert at row.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoCollection`1.InsertRows(System.Int32,System.Int32,Syncfusion.UI.Xaml.CellGrid.CellSpanInfoCollection{`0})">
            <summary>
            Inserts the rows.
            </summary>
            <param name="insertAtRowIndex">Index of the insert at row.</param>
            <param name="count">The count.</param>
            <param name="moveCellsState">State of the move cells.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoCollection`1.RemoveRows(System.Int32,System.Int32)">
            <summary>
            Removes the rows.
            </summary>
            <param name="removeAtRowIndex">Index of the remove at row.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoCollection`1.RemoveRows(System.Int32,System.Int32,Syncfusion.UI.Xaml.CellGrid.CellSpanInfoCollection{`0})">
            <summary>
            Removes the rows.
            </summary>
            <param name="removeAtRowIndex">Index of the remove at row.</param>
            <param name="count">The count.</param>
            <param name="moveCellsState">State of the move cells.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoCollection`1.InsertColumns(System.Int32,System.Int32)">
            <summary>
            Inserts the columns.
            </summary>
            <param name="insertAtColumnIndex">Index of the insert at column.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoCollection`1.InsertColumns(System.Int32,System.Int32,Syncfusion.UI.Xaml.CellGrid.CellSpanInfoCollection{`0})">
            <summary>
            Inserts the columns.
            </summary>
            <param name="insertAtColumnIndex">Index of the insert at column.</param>
            <param name="count">The count.</param>
            <param name="moveCellsState">State of the move cells.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoCollection`1.RemoveColumns(System.Int32,System.Int32)">
            <summary>
            Removes the columns.
            </summary>
            <param name="removeAtColumnIndex">Index of the remove at column.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoCollection`1.RemoveColumns(System.Int32,System.Int32,Syncfusion.UI.Xaml.CellGrid.CellSpanInfoCollection{`0})">
            <summary>
            Removes the columns.
            </summary>
            <param name="removeAtColumnIndex">Index of the remove at column.</param>
            <param name="count">The count.</param>
            <param name="moveCellsState">State of the move cells.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoCollection`1.BeginInit">
            <summary>
            Signals the object that initialization is starting.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoCollection`1.EndInit">
            <summary>
            Signals the object that initialization is complete.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoCollection`1.IndexOf(`0)">
            <summary>
            Determines the index of a specific item in the collection.
            </summary>
            <param name="item">The object to locate in the collection.</param>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoCollection`1.Insert(System.Int32,`0)">
            <summary>
            Inserts an item to the collection at the specified index. An exception is thrown if
            the cell range overlaps with another cell span in the collection.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the collection.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the collection.</exception>
            <exception cref="T:System.ArgumentNullException">The item is null.</exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoCollection`1.RemoveAt(System.Int32)">
            <summary>
            Removes the collection item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the collection.</exception>
            <exception cref="T:System.NotSupportedException">The collection is read-only.</exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoCollection`1.Add(`0)">
            <summary>
            Adds an item to the collection. An exception is thrown if
            the cell range overlaps with another cell span in the collection.
            </summary>
            <param name="item">The object to add to the collection.</param>
            <exception cref="T:System.ArgumentNullException">The item is null.</exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoCollection`1.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoCollection`1.Contains(`0)">
            <summary>
            Determines whether the collection contains a specific value.
            </summary>
            <param name="item">The object to locate in the collection.</param>
            <returns>
            true if <paramref name="item"/> is found in the collection; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoCollection`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the elements of the collection to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from collection. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="array"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="arrayIndex"/> is less than 0.</exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="array"/> is multidimensional.-or-<paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.-or-The number of elements in the source collection is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/> cannot be cast automatically to the type of the destination <paramref name="array"/>.</exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoCollection`1.Remove(`0)">
            <summary>
            Removes the first occurrence of a specific object from the collection.
            </summary>
            <param name="item">The object to remove from the collection.</param>
            <returns>
            true if <paramref name="item"/> was successfully removed from the collection; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original collection.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoCollection`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A enumerator that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoCollection`1.IsEmpty">
            <summary>
            Gets a value indicating whether this collection is empty.
            </summary>
            <value><c>true</c> if this collection is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoCollection`1.Item(System.Int32)">
            <summary>
            Gets or sets the cell span at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoCollection`1.Count">
            <summary>
            Gets the number of elements contained in the collection.
            </summary>
            <value></value>
            <returns>The number of elements contained in the collection.</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoCollection`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
            <value></value>
            <returns>this collection is never read-only.</returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.CellSpanInfo">
            <summary>
            This a base class for spanned ranges such as covered cells and
            cell spanned backgrounds. It contains Top, Left, Bottom and
            Right row and column index for the spanned range.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase">
            <summary>
            This a base class for spanned ranges such as covered cells and
            cell spanned backgrounds. It contains Top, Left, Bottom and
            Right row and column index for the spanned range.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase"/> class.
            </summary>
            <param name="top">The top row index.</param>
            <param name="left">The left column index.</param>
            <param name="bottom">The bottom row index.</param>
            <param name="right">The right column index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase.Contains(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Determines whether the specified cell is inside the span.
            </summary>
            <param name="cellRowColumnIndex">The cell</param>
            <returns>
            true if cell is inside the span; false otherwise.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase.ContainsRow(System.Int32)">
            <summary>
            Determines whether the specified row is inside the span.
            </summary>
            <param name="rowIndex">The row index</param>
            <returns>
            true if row is inside the span; false otherwise.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase.ContainsColumn(System.Int32)">
            <summary>
            Determines whether the specified column is inside the span.
            </summary>
            <param name="columnIndex">The column index</param>
            <returns>
            true if column is inside the span; false otherwise.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase.Contains(System.Int32,System.Int32)">
            <summary>
            Determines whether the specified cell is inside the span.
            </summary>
            <param name="rowIndex">Index of the row.</param>
            <param name="columnIndex">Index of the column.</param>
            <returns>
            true if cell is inside the span; false otherwise.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase.CompareTo(Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the <paramref name="other"/> parameter.Zero This object is equal to <paramref name="other"/>. Greater than zero This object is greater than <paramref name="other"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase.ToString">
            <summary>
            Returns a string describing the state of the object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase.Offset(System.Int32,System.Int32)">
            <summary>
            Offsets the span with the specified row and column count.
            </summary>
            <param name="rowCount">The row count.</param>
            <param name="columnCount">The column count.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase.Offset(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Offsets the span with the specified row and column count.
            </summary>
            <param name="rowCount">The row count.</param>
            <param name="columnCount">The column count.</param>
            <param name="adjustStartIndex">Determines whether adjust starting row and column</param>
            <param name="adjustEndIndex">Determines whether adjust end row and column</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase.Top">
            <summary>
            Gets the top row index.
            </summary>
            <value>The top.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase.Left">
            <summary>
            Gets the left column index.
            </summary>
            <value>The left.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase.Bottom">
            <summary>
            Gets the bottom row index.
            </summary>
            <value>The bottom.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase.Right">
            <summary>
            Gets the right column index.
            </summary>
            <value>The right.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase.Width">
            <summary>
            Gets the number of columns.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.CellSpanInfoBase.Height">
            <summary>
            Gets the number of rows.
            </summary>
            <value>The height.</value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.CellSpanInfo"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfo.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.CellSpanInfo"/> class.
            </summary>
            <param name="top">The top row index.</param>
            <param name="left">The left column index.</param>
            <param name="bottom">The bottom row index.</param>
            <param name="right">The right column index.</param>
            <param name="clipRows">if set to <c>true</c> allow estimates for out of view rows.</param>
            <param name="clipColumns">if set to <c>true</c> allow estimates for out of view columns.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfo.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.CellSpanInfo"/> class.
            </summary>
            <param name="top">The top row index.</param>
            <param name="left">The left column index.</param>
            <param name="bottom">The bottom row index.</param>
            <param name="right">The right column index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfo.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfo.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CellSpanInfo.ToString">
            <summary>
            Returns a string describing the state of the object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.CellSpanInfo.ClipRows">
            <summary>
            Gets or sets a value indicating whether to allow estimates for out of view rows when calculating
            the height in points for the spanned range.
            </summary>
            <value><c>true</c> if estimates are allowed for out of view rows; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.CellSpanInfo.ClipColumns">
            <summary>
            Gets or sets a value indicating whether to allow estimates for out of view columns when calculating
            the height in points for the spanned range.
            </summary>
            <value><c>true</c> if estimates are allowed for out of view columns; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo">
            <summary>
            Represents a class which holds the range and options for a covered cell. A covered cell is a cell that
            spans over neighbouring cells. All cells in this range are treated as one single cell.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo"/> class.
            </summary>
            <param name="top">The top row index.</param>
            <param name="left">The left column index.</param>
            <param name="bottom">The bottom row index.</param>
            <param name="right">The right column index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo.ToString">
            <summary>
            Returns a string describing the state of the object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo.SpanWholeRow">
            <summary>
            Gets or sets a value indicating whether the covered cell spans the whole row.
            </summary>
            <value><c>true</c> if the covered cell spans the whole row; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo.SpanWholeColumn">
            <summary>
            Gets or sets a value indicating whether the covered cell spans the whole column.
            </summary>
            <value><c>true</c> if the covered cell spans the whole column; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.CoveredCellInfoCollection">
            <summary>
            Represents the Class which holds all the information and maintains the operations related with Covered cells.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ICoveredCellsProvider.GetCoveredCell(System.Int32,System.Int32)">
            <summary>
            Gets a covered cell from the <see cref="T:Syncfusion.UI.Xaml.CellGrid.ICoveredCellsProvider"/> that includes
            the specified cells row and column index.
            </summary>
            <param name="rowIndex">Index of the row.</param>
            <param name="columnIndex">Index of the column.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.ICoveredCellsProvider.IsEmpty">
            <summary>
            Gets a value indicating if the collection is empty.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CoveredCellInfoCollection.#ctor(Syncfusion.UI.Xaml.CellGrid.SfCellGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.CoveredCellInfoCollection">CoveredCellInfoCollection</see> class. 
            </summary>
            <param name="grid">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.SfCellGrid"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CoveredCellInfoCollection.GetCoveredCell(System.Int32,System.Int32)">
            <summary>
            Gets a covered cell from the CoveredCellsProvider that includes
            the specified cells row and column index.
            </summary>
            <param name="rowIndex">Specified row index.</param>
            <param name="columnIndex">Specified column index.</param>
            <returns>An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo"/>.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CoveredCellInfoCollection.Find(System.Int32,System.Int32,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo@)">
            <summary>
            Gets a covered cell from the CoveredCellsProvider includes
            the specified cells row and column index or if there is no covered range for the cell
            the method returns a cell range for the given row and column index.
            </summary>
            <param name="rowIndex">Index of the row.</param>
            <param name="columnIndex">Index of the column.</param>
            <param name="coveredRange">The resulting covered range. If there is no covered range for the cell
            this range will return GridRangeInfo.Cell(rowIndex, columnIndex)</param>
            <returns>
            true if a covered cell was found; otherwise false.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CoveredCellInfoCollection.IsCoveredCell(System.Int32,System.Int32)">
            <summary>
            Retruns true if the given cell is covered cell.
            </summary>
            <param name="rowIndex">Row index of the specified cell.</param>
            <param name="columnIndex">Column index of the specified cell.</param>
            <returns>True or False.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CoveredCellInfoCollection.Clear(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Clears the covered cells in the given range.
            </summary>
            <param name="range">Specified range.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CoveredCellInfoCollection.CollectionModified(System.Collections.Generic.List{Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo})">
            <summary>
            Updates the CoveredCells Ranges
            </summary>
            <param name="spanCollection">Collection of CoveredCells</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CoveredCellInfoCollection.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.CoveredCellInfoCollection"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.CoveredCellInfoCollection.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.UI.Xaml.CellGrid.CoveredCellInfoCollection"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.CoveredCellInfoCollection.Ranges">
            <summary>
            Gets the value indicating the list of selected ranges in grid.
            </summary>
            <value>List of selected ranges.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.GridQueryCoveredRangeEventHandler">
            <summary>
            Represents the method that handles a <see cref="E:Syncfusion.UI.Xaml.CellGrid.GridModel.QueryCoveredRange"/> event which can be
            marked as handled.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name=" e">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridQueryCoveredRangeEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridHandledEventArgs">
            <summary>
            Provides data for a event that can be handled by a subscriber and overrides the event's default behavior.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridEventArgs">
            <summary>
            This is a base class for events of the Syncfusion libraries. It supports writing
            properties in its ToString() method. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridHandledEventArgs.#ctor">
            <summary>
            Overloaded. Initializes a new instance of the GridHandledEventArgs class with the Handled property set to False.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridHandledEventArgs.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the GridHandledEventArgs class with the Handled property set to the given value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.GridHandledEventArgs.Handled">
            <summary>
            Gets or sets whether the event should be handled or not.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridQueryCoveredRangeEventArgs.#ctor(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <overload>
            Initalizes a new object.
            </overload>
            <summary>
            Initalizes a new object.
            </summary>
            <param name="cellRowColumnIndex">The RowColumn index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridQueryCoveredRangeEventArgs.#ctor(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo)">
            <summary>
            Initalizes a new object.
            </summary>
            <param name="cellRowColumnIndex">The RowColumn index.</param>
            <param name="range">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo"/> that will receive the resulting range for the covered cell.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridQueryCoveredRangeEventArgs.Cell">
            <summary>
            Gets the value indicating the instance of specified cell.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridQueryCoveredRangeEventArgs.Range">
            <summary>
            A <see cref="T:Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo"/> that will receive the resulting range for the covered cell.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo"/>.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo">
            <summary>
               Defines a range of cells in the grid. Possible range types are: Row(s), Column(s), Cell(s), Table or Empty.
               GridRangeInfo is immutable.
            </summary>
            
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.Empty">
            <summary>
              <para>Represents a <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> with its properties left uninitialized and range type set to GridRangeInfoType.Empty.</para>
            </summary>
            <remarks>
              <para>A range is defined by its coordinates and range type. If uninitialized, the range type is GridRangeInfoType.Empty</para>
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.#ctor">
            <overload>
              <para>Initializes a <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> object.</para>
            </overload>
            <summary>
              <para>Initializes an empty <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> object.</para>
            </summary>
            <remarks>
              <para>This constructor initializes a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> object with empty range type.</para>
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> object.
            </summary>
            <returns>The <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> object that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.CopyAllMembers(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.FromTlhw(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> object with the specified bounds.
            </summary>
            <param name="top">
              The row index of the upper-left corner of the cell range.
            </param>
            <param name="left">
              The column index of the upper-left corner of the cell range.
            </param>
            <param name="height">
              Number of rows to span. 
            </param>
            <param name="width">
              Number of columns to span.
            </param>
            <returns>The new <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.Cell(System.Int32,System.Int32)">
            <summary>
            Creates a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> object for the specified row and column index.
            </summary>
            <param name="row">
              The row index.
            </param>
            <param name="col">
              The column index.
            </param>
            <returns>The new <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.Cells(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> object with the specified bounds.
            </summary>
            <param name="top">
              The row index of the upper-left corner of the cell range.
            </param>
            <param name="left">
              The column index of the upper-left corner of the cell range.
            </param>
            <param name="bottom">
              The row index of the bottom-right corner of the cell range.
            </param>
            <param name="right">
              The column index of the bottom-right corner of the cell range.
            </param>
            <returns>The new <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.Row(System.Int32)">
            <summary>
            Creates a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> object for the specified row index.
            </summary>
            <param name="rowIndex">
              The row index of the cell range.
            </param>
            <returns>The new <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.Rows(System.Int32,System.Int32)">
            <summary>
            Creates a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> object for the specified rows.
            </summary>
            <param name="top">
              The top row index of the cell range.
            </param>
            <param name="bottom">
              The botom row index of the cell range.
            </param>
            <returns>The new <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.Col(System.Int32)">
            <summary>
            Creates a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> object for the specified column.
            </summary>
            <param name="colIndex">
              The column index of the cell range.
            </param>
            <returns>The new <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.Cols(System.Int32,System.Int32)">
            <summary>
            Creates a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> object for the specified columns.
            </summary>
            <param name="left">
              The left column index of the cell range.
            </param>
            <param name="right">
              The right column index of the cell range.
            </param>
            <returns>The new <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.EmptyRange">
            <summary>
            Returns <see cref="F:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.Empty"/> that is an empty range.
            </summary>
            <returns>An empty range object.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.Table">
            <summary>
            Creates a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> object for the whole table.
            </summary>
            <returns>The new <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.Auto(System.Int32,System.Int32)">
            <summary>
            Creates a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> object for the specified row and column.
            </summary>
            <param name="rowIndex">
            The row index. -1 to create a range of columns or whole table.
            </param>
            <param name="colIndex">
            The column index. -1 to create a range of rows or whole table.
            </param>
            <remarks>
            If both row and column index are less than zero, a table will be created.
            If row index is less than zero and column index greater or equal to zero, a column range will be created.
            If row index is greater or equal to zero and column index less than zero, a row range will be created.
            Otherwise a cell range is created.
            </remarks>
            <returns>The new <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.Auto(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> object for the specified rows and columns.
            </summary>
            <param name="top">
            The row index. -1 to create a range of columns or whole table.
            </param>
            <param name="left">
            The column index. -1 to create a range of rows or whole table.
            </param>
            <param name="bottom">
            Bottom row index. 
            </param>
            <param name="right">
            Right column index. 
            </param>
            <remarks>
            If both row and column index are less than zero, a table will be created.
            If row index is less than zero and column index greater or equal to zero, a column range will be created.
            If row index is greater or equal to zero and column index less than zero, a row range will be created.
            Otherwise a cell range is created.
            </remarks>
            <returns>The new <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.GetFirstCell(System.Int32@,System.Int32@)">
            <summary>
            Enumerate through all cells in range object. 
            </summary>
            <param name="top">
            The row index of the upper-left corner of the cell range.
            </param>
            <param name="left">
            The column index of the upper-left corner of the cell range.
            </param>
            <returns>This method returns the first cell in the range.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.GetNextCell(System.Int32@,System.Int32@)">
            <overload>
            This method returns the adjacent cell in the range for the given row and column index.
            </overload>
            <summary>
            This method returns the adjacent cell in the range for the given row and column index.
            </summary>
            <param name="nRow">
              The row index.
            </param>
            <param name="nCol">
              The column index.
            </param>
            <returns>
            <see langword="true"/> if an adjacent cell in this <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> object coud be found; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.GetNextCell(System.Int32@,System.Int32@,System.Boolean)">
            <summary>
            This method returns the adjacent cell in the range for the given row and column index.
            </summary>
            <param name="nRow">
              The row index.
            </param>
            <param name="nCol">
              The column index.
            </param>
            <param name="bSortByRow">
            <see langword="true"/> if the range should be traversed by row; <see langword="false"/> if the range should be traversed by column.
            </param>
            <returns>
            <see langword="true"/> if an adjacent cell in this <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> object could be found; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.ExpandRange(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Convert column and row ranges into cell ranges with the specified bounds.
            (Could also be done through IntersectRange ... if nFirstRow &gt;= nFirstCol &gt;= 0). 
            </summary>
            /<remarks>
            Column ranges will be converted to cell ranges using nFirstRow and nRowCount. 
            Row ranges will be converted to cell ranges using nFirstCol and nColCount. 
            Column ranges will be converted to cell ranges using all input parameters. 
            </remarks>
            <param name="nFirstRow">Row index for the first non-label cell in grid area.</param>
            <param name="nFirstCol">Column index for the first non-label cell in grid area.</param>
            <param name="nRowCount">Last row in the grid.</param>
            <param name="nColCount">Last column in the grid</param>
            <returns>The new <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.OffsetRange(System.Int32,System.Int32)">
            <summary>
            Adjusts the location of this range by the specified amount.
            </summary>
            <param name="rowOffset">Amount of rows to offset the location.</param>
            <param name="colOffset">Amount of columns to offset the location.</param>
            <returns>The new <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.IntersectsWith(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
              <para>Determines if this range intersects with <paramref name="range"/>.</para>
            </summary>
            <param name="range">
              The range to test.
            </param>
            <example>
              <para>The following example creates two cell ranges and tests whether they intersect:</para>
              <code lang="C#">
              GridRangeInfo firstRange = new GridRangeInfo(1, 1, 100, 100);
              ...
              </code>
            </example>
            <returns>
              <para><see langword="true"/> if there is any intersection.</para>
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.Contains(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            <para>Determines if this range fully contains all of <paramref name="range"/>.</para>
            </summary>
            <param name="range">
              The range to test.
            </param>
            <returns>
              <para><see langword="true"/> if range is a subset of this range.</para>
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.IntersectRange(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
              <para>Creates a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> with the intersection of itself and the specified <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/>.</para>
            </summary>
            <overload>
              <para>Creates a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> with the intersection of itself and the specified <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/>.</para>
            </overload>
            <param name="range">
              The <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> with which to intersect.
            </param>
            <example>
              <para>The following example creates two <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> objects and creates a <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> with their intersection:</para>
              <code lang="C#">GridRangeInfo firstRange = new GridRangeInfo(0, 0, 100, 100);
              </code>
            </example>
            <returns>The new <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.IntersectRange(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
              <para>Creates a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> with the intersection of two <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> parameters.</para>
            </summary>
            <param name="r1">
              The first <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> with which to intersect.
            </param>
            <param name="r2">
              The second <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> with which to intersect.
            </param>
            <example>
              <para>The following example creates two <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> objects and creates a <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> with their intersection:</para>
              <code lang="C#">GridRangeInfo firstRange = new GridRangeInfo(0, 0, 100, 100);
              </code>
            </example>
            <returns>The new <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.UnionRange(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <overload>
            Creates a <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> that represents the union of itself and another range.
            </overload>
            <summary>
            Creates a <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> that represents the union of itself and another range.
            </summary>
            <param name="range">
            A range to union.
            </param>
            <returns>The new <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.UnionRange(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Creates a <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> that represents the union of two ranges.
            </summary>
            <param name="r1">
            A range to union.
            </param>
            <param name="r2">
            A range to union.
            </param>
            <returns>The new <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.Equals(System.Object)">
            <override/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.GetHashCode">
            <override/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.op_Equality(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <override/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.op_Inequality(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <override/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.Compare(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary cref="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.Equals(System.Object)">
            	Compares two range objects and returns if they are both equal. 
            </summary>
            <param name="r1">The left-hand side of the operator.</param>
            <param name="r2">The right-hand side of the operator.</param>
            <returns>
            	bool
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.GetAlphaLabel(System.Int32)">
            <summary>
            Returns a string in the format "A, B, C, ... AA, AB ..." to be used for column labels.
            </summary>
            <param name="nCol">The column index.</param>
            <returns>
              <para>A string that contains the column label for the column index.</para>
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.GetNumericLabel(System.Int32)">
            <summary>
            Returns a numeric string in the format to be used for row labels.
            </summary>
            <param name="nRow">The row index.</param>
            <returns>
              <para>A string that contains the row label for the row index.</para>
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.ToString">
            <overload>
              <para>Converts the attributes of this <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> to a human-readable string.</para>
            </overload>
            <summary>
              <para>Converts the attributes of this <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> to a human-readable string.</para>
            </summary>
            <remarks>
            The generate string will be in the format R#C#, R#, C#, T.<para/>
            An example for a range of cells is "R1C1:R10C20" or "R5C5".<para/>
            An example for a range of rows is "R1:R10" or "R6".<para/>
            An example for a range of columns is "C1:C10" or "C7".<para/>
            An example for a table range is "T".<para/>
            </remarks>
            <returns>
              <para>A string that contains the column and row index of the top-left and bottom-right position of this <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/>.</para>
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.ToString(System.IFormatProvider)">
            <summary>
              <para>Converts the attributes of this <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> to a human-readable string.</para>
            </summary>
            <param name="provider">The <see cref="T:System.IFormatProvider"/> to use to format the value. Is ignored.</param>
            <returns>
              <para>A string that contains the column and row index of the top-left and bottom-right position of this <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/>.</para>
            </returns>
            <returns>
              <para>A string that contains the column and row index of the top-left and bottom-right position of this <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/>.</para>
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.ToString(System.String)">
            <summary>
              <para>Converts the attributes of this <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> to a human-readable string.</para>
            </summary>
            <param name="format">Ignored.</param>
            <returns>
              <para>A string that contains the column and row index of the top-left and bottom-right position of this <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/>.</para>
            </returns>
            <returns>
              <para>A string that contains the column and row index of the top-left and bottom-right position of this <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/>.</para>
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.ToString(System.String,System.IFormatProvider)">
            <summary>
              <para>Converts the attributes of this <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> to a human-readable string.</para>
            </summary>
            <param name="formatProvider">The <see cref="T:System.IFormatProvider"/> to use to format the value. Is ignored.</param>
            <param name="format">Ignored.</param>
            <returns>
              <para>A string that contains the column and row index of the top-left and bottom-right position of this <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/>.</para>
            </returns>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.Parse(System.String)">
            <summary>
            Creates a range object from a string.
            </summary>
            <param name="parseText">The text with text representation of the range.</param>
            <returns>The <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> with coordinates specifed in the string.</returns>
            <remarks>
            The method parses a string that was previously created with <see cref="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.ToString"/>.
            <para/>
            The string should be in the format R#C#, R#, C#, T.<para/>
            An example for a range of cells is "R1C1:R10C20" or "R5C5".<para/>
            An example for a range of rows is "R1:R10" or "R6".<para/>
            An example for a range of columns is "C1:C10" or "C7".<para/>
            An example for a table range is "T".<para/>
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.RangeType">
            <summary>
            The <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoType"/> of this <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.IsTable">
            <summary>
              <para><see langword="true"/> if this represents a table.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.IsRows">
            <summary>
              <para><see langword="true"/> if this represents a range of rows.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.IsCols">
            <summary>
              <para><see langword="true"/> if this represents a range of columns.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.IsCells">
            <summary>
              <para><see langword="true"/> if this represents a range of individual cells.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.Top">
            <summary>
              The row index of the upper-left corner of the cell range.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.Left">
            <summary>
              The column index of the upper-left corner of the cell range.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.Bottom">
            <summary>
              The row index of the bottom-right corner of the cell range.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.Right">
            <summary>
              The column index of the bottom-right corner of the cell range.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.IsEmpty">
            <summary>
              <para>Tests whether this <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> has a <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoType"/> of Empty.</para>
            </summary>
            <value>
              <para><see langword="true"/> if <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoType"/> is Empty; otherwise, <see langword="false"/>.</para>
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.Width">
            <summary>
              <para>Gets the width of the range defined by this <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/>.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.Height">
            <summary>
              <para>Gets the height of the range defined by this <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/>.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo.Info">
            <summary>
            Results of ToString method.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoType.Empty">
            <summary>
            Range is empty.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoType.Cells">
            <summary>
            Range of cells.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoType.Rows">
            <summary>
            Range with rows.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoType.Cols">
            <summary>
            Range with columns.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoType.Table">
            <summary>
            Range is a whole table.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList">
            <summary>
            A collection of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> objects.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList.Empty">
            <summary>
            An empty and Read-only list.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList.#ctor">
            <overload>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList"/>.
            </overload>
            <summary>
            Initializes a new empty <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList.CopyTo(Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList,System.Int32)">
            <summary>
            Copies all range objects into a <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList"/> starting at specified index.
            </summary>
            <param name="rl">The <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList"/> where the values should be copied to.</param>
            <param name="index">The starting index in the destination list.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList.Clone">
            <summary>
            Makes an exact copy of the current object.
            </summary>
            <returns>A <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList"/> with duplicated <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> objects.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList.RemoveEmptyRanges">
            <summary>
            Removes any empty ranges from the <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList.GetRangesContaining(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Searches for ranges in the <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList"/> that contain a specified range.
            </summary>
            <param name="range">The range to be searched for.</param>
            <returns>The <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList"/> with ranges that match the criteria.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList.GetRangesIntersecting(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Searches for ranges in the <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList"/> that intersect with a specified range.
            </summary>
            <param name="range">The range to be searched for.</param>
            <returns>The <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList"/> with ranges that match the criteria.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList.GetRangesContained(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Searches for ranges in the <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList"/> that are contained in a specified range.
            </summary>
            <param name="range">The range to be searched for.</param>
            <returns>The <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList"/> with ranges that match the criteria.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList.GetOuterRange(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Returns a <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> that spans over all ranges that intersect with a specified range.
            </summary>
            <param name="range">The range to be searched for.</param>
            <returns>A <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> that contains the original <paramref name="range"/> and
            the outer bounds of all ranges that intersect with <paramref name="range"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList.AnyRangeContains(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Determines if a range in the range list contains the specified range.
            </summary>
            <param name="range">The range to be searched for.</param>
            <returns>True if any range contains the specified range.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList.AnyRangeIntersects(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Determines if a range in the range list intersects with the specified range.
            </summary>
            <param name="range">The range to be searched for.</param>
            <returns>True if any range contains the specified range.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList.InsertRows(System.Int32,System.Int32)">
            <summary>
            Updates the range list when rows have been inserted in the grid.
            </summary>
            <param name="row">The row index where rows have been inserted.</param>
            <param name="count">The number of rows that were inserted.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList.InsertCols(System.Int32,System.Int32)">
            <summary>
            Updates the range list when columns have been inserted in the grid.
            </summary>
            <param name="col">The column index where columns have been inserted.</param>
            <param name="count">The number of columns that were inserted.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList.RemoveRows(System.Int32,System.Int32,System.Int32)">
            <summary>
            Updates the range list when rows were removed from the grid.
            </summary>
            <param name="from">The first row index.</param>
            <param name="last">The last row index.</param>
            <param name="maxrow">The new row count in the grid.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList.RemoveCols(System.Int32,System.Int32,System.Int32)">
            <summary>
            Updates the range list when columns were removed from the grid.
            </summary>
            <param name="from">The first column index.</param>
            <param name="last">The last column index.</param>
            <param name="maxcol">The new column count in the grid.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList.MoveRows(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Updates the range list when rows were moved in the grid.
            </summary>
            <param name="nFromRow">The first row index.</param>
            <param name="nToRow">The last row index.</param>
            <param name="nDestRow">The destination row index.</param>
            <param name="maxrow">The new row count in the grid.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList.MoveCols(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Updates the range list when columns were moved in the grid.
            </summary>
            <param name="nFromCol">The first column index.</param>
            <param name="nToCol">The last column index.</param>
            <param name="nDestCol">The destination column index.</param>
            <param name="maxcol">The new column count in the grid.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList.FilterRangeType(Syncfusion.UI.Xaml.CellGrid.GridRangeInfoType)">
            <summary>
            Returns a range list with ranges that match a specified <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoType"/>.
            </summary>
            <param name="filter">The <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoType"/> to search for.</param>
            <returns>A <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList"/> with ranges that match the above criteria.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList.ExpandRanges(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a range list and convert column and row ranges into cell ranges with the specified bounds.
            </summary>
            <param name="nFirstRow">Row index for the first non-label cell in grid area.</param>
            <param name="nFirstCol">Column index for the first non-label cell in grid area.</param>
            <param name="nRowCount">Last row in the grid.</param>
            <param name="nColCount">Last column in the grid</param>
            <returns>The <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList"/> with new <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> objects that this method creates.</returns>
            /<remarks>
            Column ranges will be converted to cell ranges using nFirstRow and nRowCount. 
            Row ranges will be converted to cell ranges using nFirstCol and nColCount. 
            Column ranges will be converted to cell ranges using all input parameters. 
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList.GetColRanges(Syncfusion.UI.Xaml.CellGrid.GridRangeInfoType)">
            <summary>
            Creates a range list with column ranges that match a specified criteria.
            </summary>
            <param name="filter">The filter criteria.</param>
            <returns>The range list with column ranges.</returns>
            <remarks>
            Use <para/>
            rangeList.GetColRanges(GridRangeInfoType.Cells|GridRangeInfoType.Cols);<para/>
            if you want to get column ranges for both ranges that are cells or column ranges.<para/>
            Use <para/>
            rangeList.GetColRanges(GridRangeInfoType.Cols);<para/>
            if you only want to get column ranges and not cell ranges.<para/>
            Neighboring ranges will be combined if they intersect or have the same border (e.g. C4:C5 and C6:C7 will be combined into C4:C7).
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList.GetRowRanges(Syncfusion.UI.Xaml.CellGrid.GridRangeInfoType)">
            <summary>
            Creates a range list with row ranges that match a specified criteria.
            </summary>
            <param name="filter">The filter criteria.</param>
            <returns>The range list with row ranges.</returns>
            <remarks>
            Use <para/>
            rangeList.GetRowRanges(GridRangeInfoType.Cells|GridRangeInfoType.Rows);<para/>
            if you want to get row ranges for both ranges that are cells or row ranges.<para/>
            Use <para/>
            rangeList.GetRowRanges(GridRangeInfoType.Rows);<para/>
            if you only want to get row ranges and not cell ranges.<para/>
            Neighboring ranges will be combined if they intersect or have the same border (e.g. R4:R5 and R6:R7 will be combined into R4:R7).
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList.Parse(System.String)">
            <summary>
            Creates a range list from a string with comma separated range descriptions.
            </summary>
            <param name="parseText">The text to be parsed.</param>
            <returns>The <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList"/> with range objects described in the string.</returns>
            <remarks>
            The method parses a string that was previously created with <see cref="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList.ToString"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList.ToString">
            <overload>
              <para>Converts the ranges of this <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> to a comma separated human-readable string.</para>
            </overload>
            <summary>
              <para>Converts the ranges of this <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> to a comma separated human-readable string.</para>
            </summary>
            <remarks>
            The generate string will be in the format R#C#, R#, C#, T.<para/>
            An example for a range of cells is "R1C1:R10C20" or "R5C5".<para/>
            An example for a range of rows is "R1:R10" or "R6".<para/>
            An example for a range of columns is "C1:C10" or "C7".<para/>
            An example for a table range is "T".<para/>
            Each range object will be comma separated. For example: "R3:R5,R8:R10,R14:R15".<para/>
            </remarks>
            <returns>
              <para>A string that contains the column and row index of the top-left and bottom-right position of this <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/>.</para>
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList.ToString(System.IFormatProvider)">
            <summary>
              <para>Converts the ranges of this <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> to a comma separated human-readable string.</para>
            </summary>
            <param name="provider">The <see cref="T:System.IFormatProvider"/> to use to format the value. Is ignored.</param>
            <returns>
              <para>A string that contains the column and row index of the top-left and bottom-right position of this <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/>.</para>
            </returns>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList.ToString(System.String)">
            <summary>
              <para>Converts the ranges of this <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> to a comma separated human-readable string.</para>
            </summary>
            <param name="format">Ignored.</param>
            <returns>
              <para>A string that contains the column and row index of the top-left and bottom-right position of this <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/>.</para>
            </returns>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList.ToString(System.String,System.IFormatProvider)">
            <summary>
              <para>Converts the ranges of this <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/> to a comma separated human-readable string.</para>
            </summary>
            <param name="formatProvider">The <see cref="T:System.IFormatProvider"/> to use to format the value. Is ignored.</param>
            <param name="format">Ignored.</param>
            <returns>
              <para>A string that contains the column and row index of the top-left and bottom-right position of this <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRangeInfo"/>.</para>
            </returns>
            <genoverload/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList.ActiveRange">
            <summary>
            The last range in the range list.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList.Info">
            <summary>
            Results of ToString method.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.FocusManagerHelper">
            <summary>
            Helper class which holds the properties and operations related with focus of UIElement and Visual objects.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Helpers.FocusManagerHelper.FocusedElementProperty">
            <summary>
            Represents a property that can be set when you need to focus the element.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.FocusManagerHelper.SetFocusedElement(System.Windows.UIElement,System.Boolean)">
            <summary>
            Sets the values for the focused element.
            </summary>
            <param name="element">UIElement.</param>
            <param name="value">True or False.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.FocusManagerHelper.GetFocusedElement(System.Windows.UIElement)">
            <summary>
            Gets the value from the focused element.
            </summary>
            <param name="element">UIElement</param>
            <returns>True or False.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Helpers.FocusManagerHelper.WantsKeyInputProperty">
            <summary>
            Represents a property that handles the template element.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.FocusManagerHelper.SetWantsKeyInput(System.Windows.UIElement,System.Boolean)">
            <summary>
            Sets the value to KeyInput element.
            </summary>
            <param name="style">UIElement.</param>
            <param name="value">True or False .</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.FocusManagerHelper.GetWantsKeyInput(System.Windows.UIElement)">
            <summary>
            Gets the value from KeyInput element.
            </summary>
            <param name="style">UIElement.</param>
            <returns>True or False.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.FocusManagerHelper.GetFocusedUIElement(System.Windows.UIElement)">
            <summary>
            Generic method to get the child object
            </summary>
            <param name="obj">UIElement.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.FocusManagerHelper.FindElementsOfType``1(System.Windows.FrameworkElement)">
            <summary>
             Searches the subtree of an element (including that element) 
             for an element of a particluar type.
             </summary>
             <param name="element">Framework Element.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.FocusManagerHelper.FindVisualChildren``1(System.Windows.DependencyObject)">
            <summary>
             Returns the child visual object from the specified collection index within
             a specified parent.
            </summary>
            <param name="parent">The parent visual, referenced as a System.Windows.DependencyObject.</param>
            <returns>The index value of the child visual object.</returns>
            <typeparam name="T">A specified type.</typeparam>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.FunctionalExtensions">
            <summary>
            Extension class to perform Iteration operation. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.FunctionalExtensions.ForEach``1(System.Collections.IEnumerable,System.Action{``0})">
            <summary>
            Iterates over an IEnumerable instance to a delegated function
            </summary>
            <typeparam name="T"></typeparam>
            <param name="items">The items.</param>
            <param name="action">The action.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.FunctionalExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Iterates over a generic IEnumerable instance to a delegated function
            </summary>
            <typeparam name="T">A Specified type.</typeparam>
            <param name="items">The items.</param>
            <param name="action">The action.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.FunctionalExtensions.ToList``1(System.Collections.IEnumerable)">
            <summary>
            Iterates over a IEnumberable and returns an item from collection.
            </summary>
            <param name="items">Items.</param>
            <returns>An item.</returns>
            <typeparam name="T">A specified type.</typeparam>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellBeginEditEventHandler">
            <summary>
            Represents a method that will handle the CurrentCell BeginEdit Event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellBeginEditEventArgs">CurrentCellBeginEditEventArgs</see> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellBeginEditEventArgs">
            <summary>
            Represents the class which holds the properties of CurrentCellBeginEdit Event.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridCancelEventArgs">
            <summary>
            Provides data for a cancellable event. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridCancelEventArgs.#ctor">
            <summary>
            Overloaded. Initializes a new instance of the GridCancelEventArgs class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridCancelEventArgs.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the GridCancelEventArgs class with the Cancel property set to the given value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.GridCancelEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether to allow or cancel the event.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellBeginEditEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellBeginEditEventArgs">CurrentCellBeginEditEventArgs</see> class. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellBeginEditEventArgs.RowcolumnIndex">
            <summary>
            Gets the value of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>  .
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellEndEditEventHandler">
            <summary>
            Represents a method that will handle the CurrentCell EndEdit event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellEndEditEventArgs">CurrentCellEndEditEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellEndEditEventArgs">
            <summary>
            Represents a class which holds the properties of CurrentCell EndEdit event.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellEndEditEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellEndEditEventArgs">CurrentCellEndEditEventArgs</see> class. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellEndEditEventArgs.RowcolumnIndex">
            <summary>
            Gets the value of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>  .
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValidatingEventHandler">
            <summary>
            Represents a method that will handle the CurrentCell Validating event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValidatingEventArgs">CurrentCellValidatingEventArgs</see> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValidatingEventArgs">
            <summary>
            Represents a class which holds the properties of CurrentCell Validating event.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValidatingEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValidatingEventArgs">CurrentCellValidatingEventArgs</see> class. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValidatingEventArgs.RowcolumnIndex">
            <summary>
            Gets the value of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>  .
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValidatingEventArgs.OldValue">
            <summary>
            Gets the old value of the CurrentCell.
            </summary>
            <value>Value of the cell.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValidatingEventArgs.NewValue">
            <summary>
            Gets the new value of the CurrentCell.
            </summary>
            <value>Value of the cell.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValidatingEventArgs.IsValid">
            <summary>
            IsValid property used to maintain the currentcell and need to perform whether canceledit or endedit.
            cancel and isvalid properties are working on four differnt cases.
            1.If Cancel=True and IsValid=False then currentcell remains in edit mode.
            2.If Cancel=True and IsValid=True then canceledit and currentcell remains in edit mode.
            3.If Cancel=False and IsValid=False then canceledit and currentcell moved to next cell.
            4.If Cancel=False and IsValid=True then endedit and currentcell moved to next cell.(Default)
            </summary>
            <value>True or False.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValidatedEventHandler">
            <summary>
            Represents a method that will handle the CurrentCell Validated event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValidatedEventArgs">CurrentCellValidatedEventArgs</see> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValidatedEventArgs">
            <summary>
            Represents a class which holds the properties of CurrentCell Validated event.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValidatedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValidatedEventArgs">CurrentCellValidatedEventArgs</see> class. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValidatedEventArgs.RowcolumnIndex">
            <summary>
            Gets the value of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>  .
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValidatedEventArgs.OldValue">
            <summary>
            Gets the old value of the CurrentCell.
            </summary>
            <value>Value of the cell.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValidatedEventArgs.NewValue">
            <summary>
            Gets the new value of the CurrentCell.
            </summary>
            <value>Value of the cell.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValueChangedEventhandler">
            <summary>
            Represents a method that will handle the currentcell value changed event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValueChangedEventArgs">CurrentCellValueChangedEventArgs</see> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValueChangedEventArgs">
            <summary>
            Represents a class which holds the properties of CurrentCell ValueChanged event.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValueChangedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValueChangedEventArgs">CurrentCellValueChangedEventArgs</see> class. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValueChangedEventArgs.RowcolumnIndex">
            <summary>
            Gets the value of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>  .
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellValueChangedEventArgs.ControlText">
            <summary>
            Gets the control text of the current cell .
            </summary>
            <value>Text in current cell.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellActivatingEventHandler">
            <summary>
            Represents a method that will handle the CurrentCell Activating Event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellActivatingEventArgs">CurrentCellActivatingEventArgs</see> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellActivatingEventArgs">
            <summary>
            Represents a class which holds the properties of CurrentCell Activating Event.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellActivatingEventArgs.CurrentRowColumnIndex">
            <summary>
            Gets the value of current <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>  .
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellActivatingEventArgs.PreviousRowColumnIndex">
            <summary>
            Gets the value of  previous <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>  .
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellActivatingEventArgs.ActivationTrigger">
            <summary>
            Gets the value of trigger options .
            </summary>
            <value>One of the options in <see cref="P:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellActivatingEventArgs.ActivationTrigger"/>.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellActivatedEventHandler">
            <summary>
            Represents a method that will handle the CurrentCell Activated Event
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellActivatedEventArgs">CurrentCellActivatedEventArgs</see> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellActivatedEventArgs">
            <summary>
            Represents a class which holds the properties of current cell Activated event.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellActivatedEventArgs.CurrentRowColumnIndex">
            <summary>
            Gets the value of  current <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>  .
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellActivatedEventArgs.PreviousRowColumnIndex">
            <summary>
            Gets the value of  previous <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>  .
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellActivatedEventArgs.ActivationTrigger">
            <summary>
            Gets the value of trigger options .
            </summary>
            <value>One of the options in <see cref="P:Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellActivatedEventArgs.ActivationTrigger"/>.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CellRequestNavigateEventHandler">
            <summary>
            Represents a method that will handle the CellRequest Navigate Event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CellRequestNavigateEventArgs">CellRequestNavigateEventArgs</see> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CellRequestNavigateEventArgs">
            <summary>
            Represents a class which holds the properties of CellRequest Navigate Event.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.CellRequestNavigateEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CellRequestNavigateEventArgs">CellRequestNavigateEventArgs</see> class. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.CellRequestNavigateEventArgs.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>Name.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.CellRequestNavigateEventArgs.NavigateText">
            <summary>
            Gets or sets the navigation text.
            </summary>
            <value>Navigation text.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.CellRequestNavigateEventArgs.Handled">
            <summary>
            Gets or sets a value indicating whether this event should be handled or not.
            </summary>
            <value>True or false.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.CellRequestNavigateEventArgs.Range">
            <summary>
            Range in the Grid Where the selection need to be moved.
            </summary>
            <value>Selection range.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.CellRequestNavigateEventArgs.RowColumnIndex">
            <summary>
            Gets or sets the value of current <see cref="P:Syncfusion.UI.Xaml.CellGrid.Helpers.CellRequestNavigateEventArgs.RowColumnIndex"/>  .
            </summary>
            <value>An instance of <see cref="P:Syncfusion.UI.Xaml.CellGrid.Helpers.CellRequestNavigateEventArgs.RowColumnIndex"/>.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.NamespaceDoc">
            <summary>
            Contains classes and enumerators that simplify the programming with predefined methods and events 
            for common functionalities.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.PrecedenceStyle">
            <summary>
            Specifies the precedence style options.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Helpers.PrecedenceStyle.Row">
            <summary>
            Row Style.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Helpers.PrecedenceStyle.Column">
            <summary>
            Column Style.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.ActivationTrigger">
            <summary>
            Specifies the activation trigger options
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Helpers.ActivationTrigger.Mouse">
            <summary>
            Activation by Mouse.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Helpers.ActivationTrigger.Touch">
            <summary>
            Activation by Touch.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Helpers.ActivationTrigger.Pen">
            <summary>
            Activation by Pen.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Helpers.ActivationTrigger.Keyboard">
            <summary>
            Activation by Keyboard.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Helpers.ActivationTrigger.Program">
            <summary>
            Activation by Program.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.EditTrigger">
            <summary>
            Specifies the edit trigger options
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Helpers.EditTrigger.OnTap">
            <summary>
            Trigger while single click.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Helpers.EditTrigger.OnDoubleTap">
            <summary>
            Trigger while double click.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.EditorSelectionBehavior">
            <summary>
            Specifies the selection behavior options when enter into edit mode
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Helpers.EditorSelectionBehavior.SelectAll">
            <summary>
            Select all the cells.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Helpers.EditorSelectionBehavior.MoveLast">
            <summary>
            Move to the Last cell.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CopyPasteOptions">
            <summary>
            Defines copypaste options.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Helpers.CopyPasteOptions.All">
            <summary>
            copy the values,formats,formulas
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Helpers.CopyPasteOptions.Formats">
            <summary>
            copy the formats such as background,foreground,comments,coveredcells without values
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Helpers.CopyPasteOptions.Values">
            <summary>
            copy the cellvalues only
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Helpers.CopyPasteOptions.Formulas">
            <summary>
            copy the formulas and cellvalues without formats
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Helpers.CopyPasteOptions.Comments">
            <summary>
            copy the comments only without values and formats
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Helpers.CopyPasteOptions.Transpose">
            <summary>
            Rotate the row values
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Helpers.CopyPasteOptions.ClipboardOnly">
            <summary>
            Copy and paste the text from clipboard without styles
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.AutoScrollOrientation">
            <summary>
            Specifies horizontal or vertical autoscrolling.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Helpers.AutoScrollOrientation.None">
            <summary>
            No autoscrolling.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Helpers.AutoScrollOrientation.Horizontal">
            <summary>
            Only horizontal autoscrolling.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Helpers.AutoScrollOrientation.Vertical">
            <summary>
            Only vertical autoscrolling.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Helpers.AutoScrollOrientation.Both">
            <summary>
            Both horizontal and vertical autoscrolling.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridResizeToFitOptions">
            <summary>
            Specifies options for a ResizeColumnsToFit or ResizeRowsToFit method call. <para/>
            The options can be combined.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Helpers.GridResizeToFitOptions.None">
            <summary>
            Uses default behavior for resizing cells to fit contents. Ignores covered cells, does shrink size, does not include headers.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Helpers.GridResizeToFitOptions.NoShrinkSize">
            <summary>
            Do not shrink size of cells.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Helpers.GridResizeToFitOptions.IncludeHeaders">
            <summary>
            Include also row or column header for resizing the cells.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Helpers.GridQueryBounds.Height">
            <summary>
            Queries height of cell.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Helpers.GridQueryBounds.Width">
            <summary>
            Queries width of cell.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.ImportMode">
            <summary>
            Specifies the importing mode options 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Helpers.ImportMode.Value">
            <summary>
            Combination of style and text
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Helpers.ImportMode.Style">
            <summary>
            Import style only from excel
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Helpers.ImportMode.Text">
            <summary>
            Import text only without styles
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.ResizingReason">
            <summary>
            A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.ResizingReason"/> is used by <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.ResizingColumnsEventArgs"/> and <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.ResizingRowsEventArgs"/> to give a hint
            about the current state of the user action and reason for this event.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Helpers.ResizingReason.PointerPressed">
            <summary>
            Indicates user pointer pressed
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Helpers.ResizingReason.PointerMove">
            <summary>
            Indicates user pointer mouse.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Helpers.ResizingReason.PointerReleased">
            <summary>
            Indicates user pointer released.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Helpers.ResizingReason.DoubleTapped">
            <summary>
            Indicates user double tapped
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Helpers.ResizingReason.Hidden">
            <summary>
            Indicates user whether row or column is hidden or not.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Helpers.ResizingReason.HitTest">
            <summary>
            Indicates hit test.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridValueEventArgs`1">
            <summary>
            Provides a generic handler for holding simple data.
            </summary>
            <typeparam name="T">A Specific Type</typeparam>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridValueEventArgs`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridValueEventArgs`1"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridValueEventArgs`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridValueEventArgs`1"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.GridValueEventArgs`1.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridRoutedEventHandler">
            <summary>
            Represents a method that will handlw the Grid RoutedEvent.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridRoutedEventArgs">GridRoutedEventArgs</see> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridRoutedEventArgs">
            <summary>
            This is a base class for events of the Syncfusion libraries. It supports writing
            properties in its ToString() method. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridRoutedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridRoutedEventArgs">GridRoutedEventArgs</see> class. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridRoutedEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridRoutedEventArgs">GridRoutedEventArgs</see> class. 
            </summary>
            <param name="source">Source of the event.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.GridRoutedEventArgs.Empty">
            <summary>
            Gets the new routed event of grid.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridRoutedEventArgs"/>.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridCancelRoutedEventHandler">
            <summary>
            Represents a method that will handle the Grid CancelRouted Event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridCancelRoutedEventArgs">GridCancelRoutedEventArgs</see> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridCancelRoutedEventArgs">
            <summary>
            Represents a class which holds the properties of Grid CancelRouted Event.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridCancelRoutedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridCancelRoutedEventArgs">GridCancelRoutedEventArgs</see> class. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridCancelRoutedEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridCancelRoutedEventArgs">GridCancelRoutedEventArgs</see> class. 
            </summary>
            <param name="source">Source of the event.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.GridCancelRoutedEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether to allow or cancel the event.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridCancelEventHandler">
            <summary>
            Represents a method that will handle the Grid CancelEvent.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridCancelEventArgs">GridCancelEventArgs</see> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CellContextMenuOpeningEventArgs">
            <summary>
            Event Handler to Handle the CellContextMenuOpening Event which can be marked as Handled.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.CellContextMenuOpeningEventArgs.#ctor(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CellContextMenuOpeningEventArgs">CellContextMenuOpeningEventArgs</see> class. 
            </summary>
            <param name="cell"></param>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Helpers.CellContextMenuOpeningEventArgs.contextmenu">
            <summary>
            Gets or sets the Context Menu items
            </summary>
            <value>An instance of <see cref="T:System.Windows.Controls.ContextMenu"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.CellContextMenuOpeningEventArgs.Cell">
            <summary>
            Gets or Sets the RowColumnIndex of a cell
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CellContextMenuOpeningEventHandler">
            <summary>
            Gets or Sets the Style for a cell.
            Represents the method that handles a QueryContextMenuOpening event...
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridRangeInsertedEventHandler">
            <summary>
            Represents the method that handles the <see cref="E:Syncfusion.UI.Xaml.CellGrid.GridModel.RowsInserted"/> and <see cref="E:Syncfusion.UI.Xaml.CellGrid.GridModel.ColumnsInserted"/> events.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridRangeInsertedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridRangeInsertedEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.UI.Xaml.CellGrid.GridModel.RowsInserted"/> and <see cref="E:Syncfusion.UI.Xaml.CellGrid.GridModel.ColumnsInserted"/> events.
            </summary>
            <remarks>
            GridRangeInsertedEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.UI.Xaml.CellGrid.GridModel.RowsInserted"/> and <see cref="E:Syncfusion.UI.Xaml.CellGrid.GridModel.ColumnsInserted"/> events.
            <para/>
            This event is raised by the model to notify all associated views that it has inserted the specified number of rows
            or column into its data store and all associated views should redraw affected display contents.
            <para/>
            The <see cref="P:Syncfusion.UI.Xaml.Grid.Collections.ComponentModel.SyncfusionHandledEventArgs.Handled"/> property indicates if all changes were successfully made to the model. If it is
            False, the operation was aborted. However, the view contents need to be redrawn no matter if the operation was successful or not.
            </remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridRangeInsertedEventHandler"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridRangeInsertedEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridRangeInsertedEventArgs"/>.
            </summary>
            <param name="insertAt">The row or column index where the cells should be inserted before.</param>
            <param name="count">The number of rows or columns.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.GridRangeInsertedEventArgs.InsertAt">
            <summary>
            Gets the row or column index where the cells should be inserted before.
            </summary>
            <value>The row or column index.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.GridRangeInsertedEventArgs.Count">
            <summary>
            The number of rows or columns.
            </summary>
            <value>rows or columns count.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridRangeRemovedEventHandler">
            <summary>
            Represents the method that handles <see cref="E:Syncfusion.UI.Xaml.CellGrid.GridModel.RowsRemoved"/> and <see cref="E:Syncfusion.UI.Xaml.CellGrid.GridModel.ColumnsRemoved"/> events.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridRangeRemovedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridRangeRemovedEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.UI.Xaml.CellGrid.GridModel.RowsRemoved"/> and <see cref="E:Syncfusion.UI.Xaml.CellGrid.GridModel.ColumnsRemoved"/> events.
            </summary>
            <remarks>
            GridRangeRemovedEventArgs is a custom event argument class used by the
            <see cref="E:Syncfusion.UI.Xaml.CellGrid.GridModel.RowsRemoved"/> and <see cref="E:Syncfusion.UI.Xaml.CellGrid.GridModel.ColumnsRemoved"/> events.
            <para/>
            This event is raised by the model to notify all associated views that it has 
            rearranged the specified rows or columns in its data store and all associated views
            should redraw affected display contents.
            <para/>
            The <see cref="P:Syncfusion.UI.Xaml.Grid.Collections.ComponentModel.SyncfusionHandledEventArgs.Handled"/> property indicates if all changes
            were successfully made to the model. If it is false, the operation was aborted. However, the view contents need
            to be redrawn no matter if the operation was successful or not.
            </remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridRangeRemovedEventHandler"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridRangeRemovedEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructs a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridRangeRemovedEventArgs"/>.
            </summary>
            <param name="removeAt">The row or column index where the cells should be removed.</param>
            <param name="count">The number of rows or columns.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.GridRangeRemovedEventArgs.RemoveAt">
            <summary>
            Gets or sets the index of the first row or column that was removed.
            </summary>
            <value>Row/Column index.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.GridRangeRemovedEventArgs.Count">
            <summary>
            The number of rows or columns that are removed.
            </summary>  
            <value>Rows or Columns count.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridCutPasteEventHandler">
            <summary>
            Represents the method that handles the<see cref="E:Syncfusion.UI.Xaml.CellGrid.GridModel.ClipboardPaste"/> 
            <see cref="E:Syncfusion.UI.Xaml.CellGrid.GridModel.ClipboardCut"/> 
            <see cref="E:Syncfusion.UI.Xaml.CellGrid.GridModel.ClipboardCopy"/>
            events.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridCutPasteEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridCutPasteEventArgs">
            <summary>
            Provides data about the <see cref="!:GridModel.CutPaste"/>: 
            <see cref="M:Syncfusion.UI.Xaml.CellGrid.GridCopyPaste.Paste"/>
            <see cref="M:Syncfusion.UI.Xaml.CellGrid.GridCopyPaste.Cut"/>
            <see cref="M:Syncfusion.UI.Xaml.CellGrid.GridCopyPaste.Copy"/>
            events.
            </summary>
            <remarks>
            GridCutPasteEventArgs is a custom event argument class used by the
            <see cref="!:GridModel.CutPaste"/> operations in a <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridModel"/>.
            <para/>
            This event lets you supply your own clipboard formats or add support for pasting additional clipboard content.
            </remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Helpers.GridCutPasteEventArgs.range">
            <summary>
            Its contain the range of cells cut or copied
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridCutPasteEventArgs.#ctor(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridCutPasteEventArgs"/> object.
            </summary>
            <param name="range">You can save here a list of ranges that have been copied.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.GridCutPasteEventArgs.Range">
            <summary>
            Gets or sets range list. You can save here a list of ranges that have been copied. This property will only be checked for the
            Copy operation. Can be NULL.
            </summary>
            <value>Copied ranges.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.ResizingColumnsEventHandler">
            <summary>
            Represents a method that will handle the Resizing column Event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.ResizingColumnsEventArgs">ResizingColumnsEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.ResizingColumnsEventArgs">
            <summary>
            Represents a class which holds the properties of Resizing ColumnEvent.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.ResizingColumnsEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.ResizingColumnsEventArgs">ResizingColumnsEventArgs</see> class. 
            </summary>
            <param name="originalSource">Source of the event.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.ResizingColumnsEventArgs.ColumnIndex">
            <summary>
            Gets the column index.
            </summary>
            <value>Column index.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.ResizingColumnsEventArgs.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.ResizingColumnsEventArgs.Reason">
            <summary>
            Gets the reason for this event and hints about the current state of the user action.
            </summary>
            <value>Current state of the event.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.ResizingRowsEventHandler">
            <summary>
            Represents a method that will handle the Resizing row Event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.ResizingRowsEventArgs">ResizingRowsEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.ResizingRowsEventArgs">
            <summary>
            Represents a class which holds the properties of Resizing row Event
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.ResizingRowsEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.ResizingRowsEventArgs">ResizingRowsEventArgs</see> class. 
            </summary>
            <param name="originalSource">Source of the event.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.ResizingRowsEventArgs.RowIndex">
            <summary>
            Gets the row index.
            </summary>
            <value>Row index.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.ResizingRowsEventArgs.Height">
            <summary>
            Gets or sets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.ResizingRowsEventArgs.Reason">
            <summary>
            Gets  the reason for this event and hints about the current state of the user action.
            </summary>
            <value>Current state of the event.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CellCommentOpeningEventHandler">
            <summary>
            Represents a method that will handle the cell comment opening event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CellCommentOpeningEventArgs">CellCommentOpeningEventArgs</see> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CellCommentOpeningEventArgs">
            <summary>
            Represents a class which holds the properties of cell comment opening event.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.CellCommentOpeningEventArgs.#ctor(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CellCommentOpeningEventArgs">CellCommentOpeningEventArgs</see> class. 
            </summary>
            <param name="cell">An instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.CellCommentOpeningEventArgs.Cell">
            <summary>
            Gets  the value that indicates cell comment index.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.CellCommentOpeningEventArgs.Comment">
            <summary>
            Gets or sets the cell comment.
            </summary>
            <value>Comment.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.CellCommentOpeningEventArgs.CommentBrush">
            <summary>
            Gets or sets the comment brush.
            </summary>
            <value>An instance of <see cref="T:System.Windows.Media.Brush"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.CellCommentOpeningEventArgs.Height">
            <summary>
            Gets or sets the height of the CommentToolTip Popup Window to be displayed
            </summary>
            <value>Height of window.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.CellCommentOpeningEventArgs.Width">
            <summary>
            Gets or sets the width of the CommentToolTip Popup Window to be displayed
            </summary>
            <value>Width of window.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CellTooltipOpeningEventHandler">
            <summary>
            Represents a method that will handle the cell Tooltip opening event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CellTooltipOpeningEventArgs">CellTooltipOpeningEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.CellTooltipOpeningEventArgs">
            <summary>
            Represents a class which holds the properties of Cell Tooltip opening event.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.CellTooltipOpeningEventArgs.Cell">
            <summary>
            Gets or sets the value that indicates cell tooltip index.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.CellTooltipOpeningEventArgs.Tooltip">
            <summary>
            Gets or sets the cell tooltip message.
            </summary>
            <value>Tool tip message.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.CellTooltipOpeningEventArgs.DataValidationTooltip">
            <summary>
            Gets or sets the cell data validaion tooltip message.
            </summary>
            <value>Tooltip message.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.SelectionChangingEventHandler">
            <summary>
            Represents a method that will handle the Selection changing event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.SelectionChangingEventArgs">SelectionChangingEventArgs</see> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.SelectionChangingEventArgs">
            <summary>
            Represents a class which holds the properties of Selection changing event.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.SelectionChangingEventArgs.ActiveRange">
            <summary>
            Gets or sets the value of active range .
            </summary>
            <value>Active Range.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.SelectionChangingEventArgs.NewRanges">
            <summary>
            Gets or sets the  list of selected new ranges .
            </summary>
            <value>Selected ranges.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.SelectionChangingEventArgs.OldRanges">
            <summary>
            Gets  the  list of selected old ranges .
            </summary>
            <value>Selected ranges.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.SelectionChangingEventArgs.SelectionTrigger">
            <summary>
            Gets the value of trigger options .
            </summary>
            <value>One of the options in <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.ActivationTrigger"/>.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.SelectionChangedEventHandler">
            <summary>
            Represents a method that will handle the Selection Changed Event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.SelectionChangedEventArgs">SelectionChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.SelectionChangedEventArgs">
            <summary>
            Represents a class which holds the properties of Selection changed Event.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.SelectionChangedEventArgs.ActiveRange">
            <summary>
            Gets or sets the value of active range .
            </summary>
            <value>Active Range.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.SelectionChangedEventArgs.NewRanges">
            <summary>
            Gets  the  list of selected new ranges .
            </summary>
            <value>Selected ranges.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.SelectionChangedEventArgs.OldRanges">
            <summary>
            Gets  the  list of selected old ranges .
            </summary>
            <value>Selected ranges.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.SelectionChangedEventArgs.SelectionTrigger">
            <summary>
            Gets the value of trigger options .
            </summary>
            <value>One of the options in <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.ActivationTrigger"/>.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridCellClickEventHandler">
            <summary>
            Represents a method that will handle the Grid CellClick Event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridCellClickEventArgs">GridCellClickEventArgs</see> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridCellClickEventArgs">
            <summary>
            Represents a class which holds the properties of Grid CellClick Event.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridCellClickEventArgs.#ctor(System.Int32,System.Int32,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridCellClickEventArgs">GridCellClickEventArgs</see> class. 
            </summary>
            <param name="row">Row Index.</param>
            <param name="col">Column Index.</param>
            <param name="args">Argument of Event.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.GridCellClickEventArgs.RowIndex">
            <summary>
            Gets the row index of the cell.
            </summary>
            <value>Row index</value>     
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.GridCellClickEventArgs.ColumnIndex">
            <summary>
            Gets the column index of the cell.
            </summary>
            <value>Column index</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.GridCellClickEventArgs.OriginalEventArgs">
            <summary>
            Gets the event argument the cell click.
            </summary>
            <value>Event argument.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridFloatingCellHelper">
            <summary>
            Helper class is used for calculating the floating cell size when text size exceeds the cell size
            Calculate the floating cell size based on horizontal alignment like left, right or center and TextWrapping. 
            Set and Reset the flood cells when used by the floating cells. 
            The floating cell size, position and range will be stored in properties where in GridColumn are FloatingCellSize, FloatingCellStartPosition, and FloatingCellRange. 
            Set and reset the clipped region in FloatingCellClippedRegion in GridColumn for clip the floating cell while scrolling. 
            Set the display text size in DisplayTextSize in GridColumn which will be calculated when update the column
            Reset the flood cells. While editing current cell moves to out of view then reset the flood cells
            Based on alignment, Alt+Enter or floating cell height changed while editing when next or previous column goes to out of view, set and reset the floating cell selection border thickness.
            Check the current row column index in flood cell based on mouse point for selection.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridFloatingCellHelper.EnsureFloatingCellClippedOrgin(System.Collections.Generic.List{Syncfusion.UI.Xaml.CellGrid.GridColumn},Syncfusion.UI.Xaml.Grid.ScrollAxis.VisibleLineInfo)">
            <summary>
            Ensure the floating cells clipped orgin for clip the cells while scrolling
            </summary>
            <param name="items"></param>
            <param name="line"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridFloatingCellHelper.ResetFloatingCellOnEndEdit(Syncfusion.UI.Xaml.CellGrid.GridColumn,System.Boolean)">
            <summary>
            Reset the floating cell.
            </summary>
            <param name="column"></param>
            <param name="wrapText"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridFloatingCellHelper.ResetFloatingCellClippedOrgin(Syncfusion.UI.Xaml.CellGrid.GridColumn)">
            <summary>
            Reset the floating cell clipped orgin
            </summary>
            <param name="column"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridFloatingCellHelper.GetFloodCellRowColumnIndex(Syncfusion.UI.Xaml.CellGrid.SfCellGrid,System.Windows.Point)">
            <summary>
            Helper method used for add the selection for flood cell. Because, set the width for flood cells as 0 while arrange.
            Return the Flood cell RowColumnIndex
            </summary>
            <param name="point"> mouse point </param>
            <param name="grid"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridFloatingCellHelper.EnsureFloatingCellSize(Syncfusion.UI.Xaml.CellGrid.GridColumn,System.Collections.Generic.List{Syncfusion.UI.Xaml.CellGrid.GridColumn},System.Windows.Size,System.Windows.TextWrapping,System.Windows.HorizontalAlignment,System.Int32)">
            <summary>
            Calculate the floating cell size for display
            </summary>
            <param name="column"></param>
            <param name="elements"></param>
            <param name="cellSize"></param>
            <param name="textWrapping"></param>
            <param name="textAlignment"></param>
            <param name="arrayIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridFloatingCellHelper.EnsureFloatingCellSize(Syncfusion.UI.Xaml.CellGrid.GridColumn,System.String,System.Windows.Size,System.Windows.Size,System.Windows.TextWrapping,System.Windows.HorizontalAlignment)">
            <summary>
            Calculate the floating cell size on editing
            </summary>
            <param name="text"></param>
            <param name="column"></param>
            <param name="cellSize"></param>
            <param name="textSize"></param>
            <param name="textWrapping"></param>
            <param name="textAlignment"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridFloatingCellHelper.UpdateFloatingCellSize(System.String,Syncfusion.UI.Xaml.CellGrid.GridCell,System.Boolean)">
            <summary>
            Update the floating cell size when text changed and when press Alt+Enter to editing
            </summary>
            <param name="text"></param>
            <param name="cellElement"></param>
            <param name="isAltEnterEditing"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridFloatingCellHelper.SetDisplayTextSize(Syncfusion.UI.Xaml.CellGrid.GridColumn,System.Boolean)">
            <summary>
            Set the text size in GridColumn for floating cells using textBlock. Which is calculated when display element is initialized
            </summary>
            <param name="column"></param>
            <param name="wrapText"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridFloatingCellHelper.SetFloatingCell(Syncfusion.UI.Xaml.CellGrid.GridColumn,System.Windows.HorizontalAlignment)">
            <summary>
            Set floating cell range, size and reset unused flood cells when height is changed where width goes to out of view
            </summary>
            <param name="column"></param>
            <param name="alignment"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridFloatingCellHelper.InvalidateFloatingCell(Syncfusion.UI.Xaml.CellGrid.GridColumn)">
            <summary>
            Invalidate row panel because some times row panel is not fired. So if floating cells enter the edit mode.
            force to invalidate the row while begin edit.
            </summary>
            <param name="column"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridFloatingCellHelper.ResetFloatingCell(Syncfusion.UI.Xaml.CellGrid.GridColumn,System.Boolean)">
            <summary>
            Reset floating cell size, text size, range and start position
            </summary>
            <param name="column"></param>
            <param name="resetRange"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridFloatingCellHelper.ResetFloatingCellsInOutOfView(Syncfusion.UI.Xaml.CellGrid.GridColumn)">
            <summary>
            Reset the flood cells when current cell is goes out of view while editing
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridFloatingCellHelper.GetFloatingCell(Syncfusion.UI.Xaml.CellGrid.GridColumn)">
            <summary>
            To Get the Floating Cell from the floodCell
            </summary>
            <param name="floodCell">floodCell</param>
            <returns>returns Floating Cell</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridFloatingCellHelper.CalculateFloatingCellSizeOnDisplay(Syncfusion.UI.Xaml.CellGrid.GridColumn,System.Windows.Size,System.Windows.HorizontalAlignment,System.Windows.TextWrapping,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo@)">
            <summary>
            Calculate the floating cell size based on alignment and wrapping for display
            </summary>
            <param name="cellSize"></param>
            <param name="column"></param>
            <param name="textAlignment"></param>
            <param name="textWrapping"></param>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridFloatingCellHelper.CalculateFloatingCellSizeOnEdit(Syncfusion.UI.Xaml.CellGrid.GridColumn,System.Windows.Size,System.Windows.HorizontalAlignment,System.Windows.TextWrapping,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo@)">
            <summary>
            Calculate floating cells size based on alignment and text wrapping in editing
            </summary>
            <param name="cellSize"></param>
            <param name="column"></param>
            <param name="textAlignment"></param>
            <param name="textWrapping"></param>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridFloatingCellHelper.CalculateFloatingCellSize(Syncfusion.UI.Xaml.CellGrid.GridColumn,System.Windows.Size,System.Windows.HorizontalAlignment,System.Windows.TextWrapping)">
            <summary>
             Calculate the floating cells size based on editing or display
            </summary>
            <param name="cellSize"></param>
            <param name="column"></param>
            <param name="textAlignment"></param>
            <param name="textWrapping"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridFloatingCellHelper.CheckCoveredCell(Syncfusion.UI.Xaml.CellGrid.SfCellGrid,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Helper method to find the next column is covered cell or not
            </summary>
            <param name="range"></param>
            <param name="grid"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridFloatingCellHelper.CheckFloodCell(Syncfusion.UI.Xaml.CellGrid.GridColumn)">
            <summary>
            Check flood cells in already used for another floating cell.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridFloatingCellHelper.CheckFloodCell(Syncfusion.UI.Xaml.CellGrid.GridColumn,System.Int32)">
            <summary>
            Check the flood cells where used by another floating cell when reset the floating cell range
            </summary>
            <param name="columnIndex"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridFloatingCellHelper.GetFloatingCellSize(Syncfusion.UI.Xaml.CellGrid.GridColumn,System.Windows.Size,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo@)">
            <summary>
            Get floating cell size for center alignment text
            </summary>
            <param name="cellSize"></param>
            <param name="column"></param>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridFloatingCellHelper.GetFloatingCellSize(Syncfusion.UI.Xaml.CellGrid.GridColumn,System.Windows.Size,System.Windows.HorizontalAlignment,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo@)">
            <summary>
            Get floating cell size for left or right alignment text for display
            </summary>
            <param name="cellSize"></param>
            <param name="column"></param>
            <param name="textAlignment"></param>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridFloatingCellHelper.GetFloatingCellSizeOnEditInTextWrapping(Syncfusion.UI.Xaml.CellGrid.GridColumn,System.Windows.Size,System.Windows.Size,System.Windows.HorizontalAlignment,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo@)">
            <summary>
            Get floating cell size for wrap text applied cell while editing
            </summary>
            <param name="cellSize"></param>
            <param name="textSize"></param>
            <param name="textAlignment"></param>
            <param name="range"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridFloatingCellHelper.GetFloatingCellSizeOnEditInCenter(Syncfusion.UI.Xaml.CellGrid.GridColumn,System.Windows.Size,System.Windows.HorizontalAlignment,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo@)">
            <summary>
            Get floating cells size for center alignment text while editing
            </summary>
            <param name="cellSize"></param>
            <param name="column"></param>
            <param name="textAlignment"></param>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridFloatingCellHelper.GetFloatingCellSizeOnEdit(Syncfusion.UI.Xaml.CellGrid.GridColumn,System.Windows.Size,System.Windows.HorizontalAlignment,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo@)">
            <summary>
            Get floating cell size for left or right alignment text while editing
            </summary>
            <param name="cellSize"></param>
            <param name="column"></param>
            <param name="textAlignment"></param>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridFloatingCellHelper.GetFloatingCellSizeOnAltEnter(Syncfusion.UI.Xaml.CellGrid.GridColumn,System.Windows.Size,System.Windows.HorizontalAlignment,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo@)">
            <summary>
            Calculate the floating cell size when Alt+Enter pressed
            </summary>
            <param name="cellSize"></param>
            <param name="column"></param>
            <param name="textAlignment"></param>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridFloatingCellHelper.SetFloatingCellSizeAndRangeOnEdit(Syncfusion.UI.Xaml.CellGrid.GridColumn,System.Windows.Size,System.Windows.Size,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,System.Windows.HorizontalAlignment,System.Windows.TextWrapping)">
            <summary>
            Set the floating cells size and range while editing
            </summary>
            <param name="floatingCellSize"></param>
            <param name="cellSize"></param>
            <param name="floatingCellRange"></param>
            <param name="textAlignment"></param>
            <param name="textWrapping"></param>
            <param name="column"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridFloatingCellHelper.SetFloatingCellWidthOnEdit(Syncfusion.UI.Xaml.CellGrid.GridColumn,System.Windows.Size,System.Windows.Size,System.Windows.HorizontalAlignment,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Set the floating cell width while editing for left, right and center alignment
            </summary>
            <param name="floatingCellSize"></param>
            <param name="cellSize"></param>
            <param name="floatingCellRange"></param>
            <param name="column"></param>
            <param name="textAlignment"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridFloatingCellHelper.SetFloatingCellHeightOnEdit(Syncfusion.UI.Xaml.CellGrid.GridColumn,System.Windows.Size,System.Windows.Size,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,System.Windows.TextWrapping)">
            <summary>
            Set the floating cell height while editing
            </summary>
            <param name="floatingCellSize"></param>
            <param name="cellSize"></param>
            <param name="floatingCellRange"></param>
            <param name="textWrapping"></param>
            <param name="column"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridFloatingCellHelper.SetFloodCells(Syncfusion.UI.Xaml.CellGrid.GridColumn,System.Windows.HorizontalAlignment)">
            <summary>
            Set the flood cells manually while editing, when Alt+Enter pressed. Because, while editing some cells are not set as flood when press Alt+Enter
            For example, editing the floating cell with 3 flood cells then press Alt+Enter, Now the height for that floating cell is increased by check below cell of floating cell in next row and set that cell as flood cell.
            The width and range for floating cell is changed based on FloatingCell, but other two set doesn't set as flood cell. So force to set the those cells as flood cell
            And set flood cells and height changed while editing, when next cell goes to out of view.
            For example, the view contains 15 columns.Now editing in 13th column with 2 flood cells, now floatig cell goes to next row of 13th column with 2 flood cells when find next cell
            Here 13th column of next row only set as flood cells while calculating so need to set the two cells also as flood cell.
            </summary>
            <param name="column"></param>
            <param name="alignment"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridFloatingCellHelper.SetFloatingCellRange(Syncfusion.UI.Xaml.CellGrid.GridColumn,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,System.Windows.HorizontalAlignment)">
            <summary>
            Reset the flood cells when floating cell range is changed, And set the floating cell range
            </summary>
            <param name="range"></param>
            <param name="textAlignment"></param>
            <param name="column"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridFloatingCellHelper.SetFloatingCellSizeAndPosition(Syncfusion.UI.Xaml.CellGrid.GridColumn,System.Windows.Size,System.Windows.Size,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Set the floating cell position and cells size for arrange in VirtualizingRowPanel
            </summary>
            <param name="floatingCellSize"></param>
            <param name="cellSize"></param>
            <param name="range"></param>
             <param name="column"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridFloatingCellHelper.SetFloatingCellSelectionBorderThickness(Syncfusion.UI.Xaml.CellGrid.GridColumn,System.Windows.HorizontalAlignment,System.Boolean)">
            <summary>
            Helper method that used to set the selection border thickness
            </summary>
            <param name="textAlignment"></param>
            <param name="isAltEnter"></param>
            <param name="column"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridFloatingCellHelper.SetFloatingCellSelectionBorderThickness(Syncfusion.UI.Xaml.CellGrid.GridColumn,System.Windows.HorizontalAlignment)">
            <summary>
            Set selection border thickness for Alt+Enter process
            </summary>
            <param name="column"></param>
            <param name="textAlignment"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridFloatingCellHelper.SetFloatingCellSelectionBorderThickness(Syncfusion.UI.Xaml.CellGrid.GridColumn,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Set Selection border thickness while editing for foating cells
            </summary>
            <param name="left"></param>
            <param name="top"></param>
            <param name="right"></param>
            <param name="bottom"></param>
            <param name="column"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridFloatingCellHelper.ResetFloodCells(Syncfusion.UI.Xaml.CellGrid.GridColumn,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,System.Windows.HorizontalAlignment,System.Int32,System.Boolean)">
            <summary>
            Reset the flood cells when changed the floating cell range 
            And when enter begin edit the need to show full range of flood cells based on text size if any cells are used by other floating cells
            Reset the flood cells based on alignment or reset all the range based on given input of resetAll argument
            </summary>
            <param name="range"></param>
            <param name="textAlignment"></param>
            <param name="column"></param>
             <param name="columnIndex"></param>
              <param name="resetAll"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridFloatingCellHelper.ResetFloodCells(Syncfusion.UI.Xaml.CellGrid.GridColumn,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,System.Boolean)">
            <summary>
            Reset the flood cells when compared with previous floating cell range and current range while editing
            </summary>
            <param name="column"></param>
            <param name="prevFloatCellRange"></param>
            <param name="resetAll"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridMoveCellsState">
            <summary>
            For internal use. Holds the information about the cells being moved.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridMoveCellsState.#ctor(System.Boolean,Syncfusion.UI.Xaml.Grid.ScrollAxis.IEditableLineSizeHost,Syncfusion.UI.Xaml.CellGrid.Styles.GridVolatileCellStyles)">
            <summary>
            Constructor.
            </summary>
            <param name="isEmpty">True if empty.</param>
            <param name="lineSizes">Line size.</param>
            <param name="volatileCellStyles">A reference to a GridVolatileCellStyles object where GridStyleInfo objects can be stored</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridMoveCellsState.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridMoveCellsState"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridMoveCellsState.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridMoveCellsState"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.GridMoveCellsState.CoveredCells">
            <summary>
            Covered cells.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.GridMoveCellsState.LineSizes">
            <summary>
            Line sizes for the grid.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.GridMoveCellsState.VolatileCellStyles">
            <summary>
            Volatile cell styles.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Helpers.GridMoveCellsState.Data">
            <summary>
            Cell data.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridTextBoxPaint.MeasureText(Syncfusion.UI.Xaml.CellGrid.SfCellGrid,System.String,Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo,System.Windows.FlowDirection,System.Double,System.Boolean,System.Int32,System.Object@)">
            <summary>
            Measure the text using either GlyphRun or FormattedText.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridTextBoxPaint.MeasureTextUsingFormattedText(Syncfusion.UI.Xaml.CellGrid.SfCellGrid,System.String,Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo,System.Double,System.Boolean,System.Int32,System.Object@)">
            <summary>
            Measure the text using FormattedText.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridTextBoxPaint.MeasureTextUsingGlyphs(Syncfusion.UI.Xaml.CellGrid.SfCellGrid,System.String,Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo,System.Boolean@,System.Object@)">
            <summary>
            Measure the text using GlyphRun which is faster than FormattedText.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridTextBoxPaint.DrawText(Syncfusion.UI.Xaml.CellGrid.SfCellGrid,System.Windows.Media.DrawingContext,System.String,System.Windows.Rect,Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo,System.Object)">
            <summary>
            Draws the text using either GlyphRun or FormattedText.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridTextBoxPaint.DrawGlyphs(Syncfusion.UI.Xaml.CellGrid.SfCellGrid,System.Windows.Media.DrawingContext,System.String,System.Windows.Rect,Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo,System.Object)">
            <summary>
            Draws the text using GlyphRun which is faster than FormattedText.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.GridTextBoxPaint.DrawFormattedText(Syncfusion.UI.Xaml.CellGrid.SfCellGrid,System.Windows.Media.DrawingContext,System.String,System.Windows.Rect,Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo,System.Object)">
            <summary>
            Draws the text using FormattedText.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.NullableHelper">
            <summary>
            A framework independent utility class for the new Nullable type in .NET Framework 2.0
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.NullableHelper.ChangeType(System.Object,System.Type)">
            <summary>
            Use this method instead of Convert.ChangeType. Makes Convert.ChangeType work with Nullable types.
            </summary>
            <param name="value"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.NullableHelper.ChangeType(System.Object,System.Type,System.IFormatProvider)">
            <summary>
            Use this method instead of Convert.ChangeType. Makes Convert.ChangeType work with Nullable types.
            </summary>
            <param name="value"></param>
            <param name="type"></param>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.NullableHelper.FixDbNUllasNull(System.Object,System.Type)">
            <summary>
            Returns null if value is DBNull and specified type is a Nullable type. Otherwise the value is returned unchanged.
            </summary>
            <param name="value"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.NullableHelper.GetUnderlyingType(System.Type)">
            <summary>
            Returns the underlying type of a Nullable type. For .NET 1.0 and 1.1 this method will always return null.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Helpers.NullableHelper.IsComplexType(System.Type)">
            <summary>
            Indicates whether the specified Type has nested properties.
            </summary>
            <param name="t">The Type to be checked.</param>
            <returns>True if nested properties are found; False otherwise.</returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Helpers.NullableHelper.TypeConverterHelper">
            <exclude/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ColumnPopupControl.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.ColumnPopupControl"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ColumnPopupControl.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.UI.Xaml.CellGrid.ColumnPopupControl"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.ColumnResizingController">
            <summary>
            Provides the base implementation for column resizing operations in SfCellGrid.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ColumnResizingController.#ctor(Syncfusion.UI.Xaml.CellGrid.SfCellGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.ColumnResizingController">ColumnResizingController</see> class. 
            </summary>
            <param name="cellGrid">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.SfCellGrid"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ColumnResizingController.HitTest(System.Windows.Point)">
            <summary>
            Returns True or False based on the visible line on the pointer pressed position.
            </summary>
            <param name="point">Position of the pointer.</param>
            <returns>True or False.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ColumnResizingController.HitTest(System.Windows.Point,System.Windows.Input.Cursor@)">
            <summary>
            Returns the visible line where the pointer is pressed.
            </summary>
            <param name="point">Position of the pointer.</param>
            <param name="cursor">Mouse pointer.</param>
            <returns>An instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.VisibleLineInfo"/>.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ColumnResizingController.OnPointerMoved(System.Windows.Input.MouseEventArgs)">
            <summary>
            Occurs when the pointer moves in SfCellGrid.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.MouseEventArgs">MouseEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ColumnResizingController.OnPointerPressed(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Occurs when the pointer is pressed in SfCellGrid.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.MouseButtonEventArgs">MouseButtonEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ColumnResizingController.OnPointerReleased(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Occurs when the pointer is released in SfCellGrid.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.MouseButtonEventArgs">MouseButtonEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ColumnResizingController.DoubleTapped(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
             Occurs when the pointer double tapped in the cell.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.MouseButtonEventArgs">MouseButtonEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ColumnResizingController.SetDragLine(Syncfusion.UI.Xaml.Grid.ScrollAxis.VisibleLineInfo)">
            <summary>
            Sets the column line while resizing. 
            </summary>
            <param name="dragLine">Visible line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ColumnResizingController.ShowHidePopUp(System.Boolean)">
            <summary>
            Show or hide popup on app activated and deactivated
            </summary>
            <param name="show"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ColumnResizingController.OnFrozenColumnChange">
            <summary>
            Set the frozen start index, hide and unhide the out of view lines while set the frozen.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ColumnResizingController.GetHiddenColumnIndex">
            <summary>
            Returns the hidden column index
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ColumnResizingController.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.ColumnResizingController"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ColumnResizingController.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the 
            <see cref="T:Syncfusion.UI.Xaml.CellGrid.ColumnResizingController">ColumnResizingController</see>
            and optionally releases the managed resources.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.ColumnResizingController.ResizeRowIndex">
            <summary>
            Gets or sets the value which indicates, the column resizing will be perform in which RowIndex when set multiple header rows.
            </summary>
            <value>Row Index.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.ColumnResizingController.HitTestPrecision">
            <summary>
            Gets or sets the value, which is used to get the visible line when mouse over the column line.
            </summary>
            <value>Visible line.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.ColumnResizingController.TouchHitTestPrecision">
            <summary>
            Gets or sets the value, which is used to get the visible line when touch the column line.
            </summary>
            <value>Visible line.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.ColumnResizingController.DragLine">
            <summary>
            Gets or sets the value which indicates column line while resize the column. If drag line, then resizing will not happen.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.ColumnResizingController.StartFrozenColumnIndex">
            <summary>
            Gets or sets the first visible column index
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.ResizingHelper">
            <summary>
            Represents a Helper class which maintains the row and column resizing popup operations during Key Navigation.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ResizingHelper.HideResizingPopupAfterKeyNavigation(Syncfusion.UI.Xaml.CellGrid.SfCellGrid)">
            <summary>
            Hides the row and column resizing popup and reset the popup shown column index and row index on key navigation.
            </summary>
            <param name="cellGrid"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.RowPopupControl.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.RowPopupControl"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.RowPopupControl.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.UI.Xaml.CellGrid.RowPopupControl"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.RowResizingController">
            <summary>
            Provides the base implementation for row resizing operations in SfCellGrid.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.RowResizingController.#ctor(Syncfusion.UI.Xaml.CellGrid.SfCellGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.RowResizingController">RowResizingController</see> class. 
            </summary>
            <param name="cellgrid">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.SfCellGrid"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.RowResizingController.HitTest(System.Windows.Point)">
            <summary>
            Returns True or False based on the visible line on the pointer pressed position.
            </summary>
            <param name="point">Position of the pointer.</param>
            <returns>True or False.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.RowResizingController.HitTest(System.Windows.Point,System.Windows.Input.Cursor@)">
            <summary>
            Returns the visible line where the pointer is pressed.
            </summary>
            <param name="point">Position of the pointer.</param>
            <param name="cursor">Mouse pointer.</param>
            <returns>An instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.VisibleLineInfo"/>.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.RowResizingController.OnPointerMoved(System.Windows.Input.MouseEventArgs)">
            <summary>
            Occurs when the pointer moves in SfCellGrid.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.MouseEventArgs">MouseEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.RowResizingController.OnPointerPressed(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Occurs when the pointer is pressed in SfCellGrid.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.MouseButtonEventArgs">MouseButtonEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.RowResizingController.OnPointerReleased(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Occurs when the pointer is released in SfCellGrid.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.MouseButtonEventArgs">MouseButtonEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.RowResizingController.DoubleTapped(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Occurs when the mouse pointer is double tapped on the cell.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.MouseButtonEventArgs">MouseButtonEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.RowResizingController.SetDragLine(Syncfusion.UI.Xaml.Grid.ScrollAxis.VisibleLineInfo)">
            <summary>
            Sets the row line while resizing. 
            </summary>
            <param name="dragLine">Visible line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.RowResizingController.ShowHidePopUp(System.Boolean)">
            <summary>
            Show or hide popup on app activated and deactivated
            </summary>
            <param name="show"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.RowResizingController.OnFrozenRowChange">
            <summary>
            Set the frozen start index, hide and unhide the out of view lines while set the frozen.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.RowResizingController.GetHiddenRowIndex">
            <summary>
            Returns the hidden row index
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.RowResizingController.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.RowResizingController"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.RowResizingController.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the 
            <see cref="T:Syncfusion.UI.Xaml.CellGrid.RowResizingController">RowResizingController</see>
            and optionally releases the managed resources.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.RowResizingController.ResizeColumnIndex">
            <summary>
            Gets or sets the value which indicates, the row resizing will be perform in which ColumnIndex while setting multiple header columns.
            </summary>
            <value>Column Index.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.RowResizingController.HitTestPrecision">
            <summary>
            Gets or sets the value, which is used to get the visible line when mouse over the row line.
            </summary>
            <value>Visible line.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.RowResizingController.TouchHitTestPrecision">
            <summary>
            Gets or sets the value, which is used to get the visible line when touch the rows line.
            </summary>
            <value>Visible line.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.RowResizingController.DragLine">
            <summary>
            Gets or sets the value which indicates row line while resize the column. If drag line null, then resizing will not happen.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.RowResizingController.StartFrozenRowIndex">
            <summary>
            Gets or sets the first visible row index
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.GridCommentTooltipService">
            <summary>
            Represents a class which holds the operations related with Comment popup and Tooltip popup in SfCellGrid.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCommentTooltipService.#ctor(Syncfusion.UI.Xaml.CellGrid.SfCellGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCommentTooltipService">GridCommentTooltipService</see> class. 
            </summary>
            <param name="cellgrid">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.SfCellGrid"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCommentTooltipService.HideTooltipCommentPopup">
            <summary>
            Hide the popup while scrolling
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCommentTooltipService.PointerMoved(System.Windows.Input.MouseEventArgs,Syncfusion.UI.Xaml.CellGrid.GridColumn,System.Boolean,System.Windows.Point,System.Windows.Rect)">
            <summary>
            Show the comment and tooltip popup when mouse is moved.
            </summary>
            <param name="e"></param>
            <param name="gridColumn">Specifies current row column index</param>
            <param name="isComment">The comment popup means its true, else show the tooltip popup</param>
            <param name="mousePosition"></param>
            <param name="arrangerect"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCommentTooltipService.HidePopup(System.Boolean)">
            <summary>
            Hide the comment, DataValidation and tooltip popup
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCommentTooltipService.UpdateDataValidationTooltipPopup(System.Int32,System.Int32)">
            <summary>
            Update the UpdateDataValidation tooltip popup
            </summary>
            <param name="columnIndex"></param>
            <param name="rowIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCommentTooltipService.CreatePopUpWindowChild(Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo,Syncfusion.UI.Xaml.CellGrid.Helpers.CellTooltipOpeningEventArgs)">
            <summary>
            Create the child and assign the popup template and content when child was null.
            </summary>
            <param name="style"></param>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCommentTooltipService.cellGrid_CurrentCellActivated(System.Object,Syncfusion.UI.Xaml.CellGrid.Helpers.CurrentCellActivatedEventArgs)">
            <summary>
            Show the DataValidation tooltip.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCommentTooltipService.ShowTooltip(System.Windows.Controls.ContentControl,System.Windows.Point,Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo,Syncfusion.UI.Xaml.CellGrid.Helpers.CellTooltipOpeningEventArgs)">
            <summary>
            Show the tooltip popup, the popup offsets is set based on Mouse position
            </summary>
            <param name="mousePosition"></param>
            <param name="style"></param>
            <param name="contentControl"></param>
             <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCommentTooltipService.ShowCommentTooltip(System.Windows.Controls.ContentControl,System.Windows.Rect,Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo,Syncfusion.UI.Xaml.CellGrid.Helpers.CellCommentOpeningEventArgs)">
            <summary>
            Show the comment popup.The popup offsets are set based on rect of current cell
            </summary>
            <param name="rect"></param>
            <param name="style"></param>
            <param name="contentControl"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCommentTooltipService.CheckCommentPosition(System.Windows.Point,System.Windows.Rect)">
            <summary>
            Check whether current mouse position is in commant path.
            </summary>
            <param name="mousePosition"></param>
            <param name="rect"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCommentTooltipService.GetPopupTemplate(System.String)">
            <summary>
            Get the comment and tooltip template
            </summary>
            <param name="templateString"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCommentTooltipService.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCommentTooltipService"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCommentTooltipService.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the.
            <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCommentTooltipService">GridCommentTooltipService</see>.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.PopupWindow.InitializePopupWindow(System.Windows.FlowDirection)">
            <summary>
            Initialize the popup window
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.PopupWindow.ShowPopup">
            <summary>
            Show the comment or tooltip popup
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.PopupWindow.HidePopup">
            <summary>
            Hide the comment or tooltip popup
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.PopupWindow.SetPopupOffset(System.Double,System.Double)">
            <summary>
            Set the Horizantal and Vertical offsets for popup
            </summary>
            <param name="HOffset">Horizantal offset</param>
            <param name="VOffset">Vertical offset</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.PopupWindow.SetPopupHeightWidth(System.Int32,System.Int32)">
            <summary>
            Sets the Height and width for the Popup
            </summary>
            <param name="Height">Popup Height</param>
            <param name="Width">Popup Width</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.PopupWindow.ProvideVisual(System.Windows.FrameworkElement)">
            <summary>
            Set the popup child, height and width for popup
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.PopupWindow.Dispose">
            <summary>
            Dispose the objects.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.PopupWindow.Child">
            <summary>
            Gets or sets the child element for popup control
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.PopupWindow.IsPopupOpen">
            <summary>
            Check whether comment or tooltip popup is open
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.GridConditionType">
            <summary>
            Specifies the type of conditon to be used in conditional formatting.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridConditionType.Equal">
            <summary>
            peforms an equal operation to the operands.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridConditionType.NotEqual">
            <summary>
            Performs a NotEquals operation on the operands.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridConditionType.LessThan">
            <summary>
            Performs a LessThan operation on the operands.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridConditionType.LessThanOrEqual">
            <summary>
            Performs a LessThanOrEqual operation on the operands.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridConditionType.GreaterThan">
            <summary>
            Performs a GreatherThan operation on the operands.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridConditionType.GreaterThanOrEqual">
            <summary>
            Performs a GreaterThanOrEqual operation on the operands.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridConditionType.Between">
            <summary>
            performs a between operation on the operands.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridConditionType.NotBetween">
            <summary>
            performs a not between operation on the operands.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridConditionType.Contains">
            <summary>
            performs whether specific text present in the cellvalue or not
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridConditionType.NotContains">
            <summary>
            performs whether specific text not present in the cellvalue or not
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridConditionType.BeginsWith">
            <summary>
            Check whether the cellvalue begins with specific text or not
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridConditionType.EndsWith">
            <summary>
            Check whether the cellvalue Ends with specific text or not
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridConditionType.Error">
            <summary>
            Check whether the cell is an error cell or not
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridConditionType.NoError">
            <summary>
            Check whether the cell is error cell or not
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.GridConditionalFormatType">
            <summary>
            Specifies the type of conditional format
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridConditionalFormatType.CellValue">
            <summary>
            Apply conditional formatting based on cellvalue
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridConditionalFormatType.Formula">
            <summary>
            Apply conditional formatting based on formulavalue
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridConditionalFormatType.Blank">
            <summary>
            Apply conditional formatting if the cell contains no value
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridConditionalFormatType.NoBlank">
            <summary>
            Apply conditional formatting if the cell contains any value
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridConditionalFormatType.Error">
            <summary>
            Apply conditional formatting if the cell contains error value
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridConditionalFormatType.NoError">
            <summary>
            Apply conditional formatting if the cell contains no error
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridConditionalFormatType.SpecificText">
            <summary>
            Apply conditional formatting if the cellvalue match with the specified value
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridConditionalFormatType.DatesOccurring">
            <summary>
            Apply the conditional formatting based on dates
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.GridTimePeriodType">
            <summary>
            specify the timeperiod type when using DatesOccuring conditional format type
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridTimePeriodType.Yesterday">
            <summary>
            Check whether the cellvalu match with yesterday date or not
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridTimePeriodType.Today">
            <summary>
            Check whether the cellvalu match with today date or not
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridTimePeriodType.Tomorrow">
            <summary>
            Check whether the cellvalu match with tomorrow date or not
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridTimePeriodType.InLast7Days">
            <summary>
            Check whether the cellvalu match with last 7 days of date or not
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridTimePeriodType.LastWeek">
            <summary>
            Check whether the cellvalue lies on last week dates or not
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridTimePeriodType.ThisWeek">
            <summary>
            Check whether the cellvalu match with current week dates or not
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridTimePeriodType.NextWeek">
            <summary>
            Check whether the cellvalu match with next week dates or not
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridTimePeriodType.LastMonth">
            <summary>
            Check whether the cellvalu match with last month dates or not
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridTimePeriodType.ThisMonth">
            <summary>
            Check whether the cellvalu match with current month date or not
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridTimePeriodType.NextMonth">
            <summary>
            Check whether the cellvalu match with next month date or not
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.GridCondition">
            <summary>
            To add the gridcondition in conditionalformat 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCondition.#ctor">
            <summary>
            Default gridcondition type as Equal
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCondition.#ctor(Syncfusion.UI.Xaml.CellGrid.GridConditionType,System.Object)">
            <summary>
            Add the gridcondition with conditintype and condition value
            </summary>
            <param name="conditiontype">specify the gridconditiontype using GridConditionType enum</param>
            <param name="value">specify the condition value to check</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCondition.#ctor(Syncfusion.UI.Xaml.CellGrid.GridConditionType,System.Object,System.Object)">
            <summary>
            Add the gridcondition with two condition value when condition type is between
            </summary>
            <param name="conditiontype">specify the gridconditiontype using GridConditionType enum</param>
            <param name="value1">condition check value1</param>
            <param name="value2">condition check value2</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCondition.#ctor(Syncfusion.UI.Xaml.CellGrid.GridTimePeriodType)">
            <summary>
            create Gridcondition with timeperiodtype when using DatesOccuring conditionformat type
            </summary>
            <param name="timePeriodType">Specify timeperiod type by using GridTimePeriodType enum</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCondition.Value1">
            <summary>
            Gets or sets the condition value1.
            </summary>
            <value>condition value1.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCondition.Value2">
            <summary>
            Gets or sets condition value2
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCondition.ConditionType">
            <summary>
            Gets or sets the gridcondition type
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCondition.TimePeriodType">
            <summary>
            Gets or sets the gridtimeperiod type
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCondition.RowIndex">
            <summary>
            Gets or sets the conditionalformat applyed cell rowindex.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCondition.ColumnIndex">
            <summary>
            Gets or sets the conditionalcormat applyed cell columnindex.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCondition.StartRow">
            <summary>
            Gets or sets first cell rowindex if same conditon applies to multiple cells. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCondition.StartColumn">
            <summary>
            Gets or sets first cell columnindex if same conditon applies to multiple cells. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCondition.Range">
            <summary>
            Gets or sets the conditional formatting range.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.GridConditionalFormat">
            <summary>
            create conditional format for each condition and added it to GridConditionalFormats collection
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridConditionalFormat.#ctor">
            <summary>
            create the conditionalformat with default conditionalformat type as cellvalue
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridConditionalFormat.#ctor(Syncfusion.UI.Xaml.CellGrid.GridConditionalFormatType)">
            <summary>
            create the conditionalformat with the specified the conditionalformat type
            </summary>
            <param name="conditionalformattype"> sets the conditionalformat type</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridConditionalFormat.#ctor(Syncfusion.UI.Xaml.CellGrid.GridConditionalFormatType,Syncfusion.UI.Xaml.CellGrid.GridConditionType,System.Object)">
            <summary>
            create the conditionalformat with conditionalformattype,conditiontype and value
            </summary>
            <param name="conditionformattype"> sets conditionalformat type</param>
            <param name="conditiontype">sets the conditiontype</param>
            <param name="value">sets the condition value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridConditionalFormat.#ctor(Syncfusion.UI.Xaml.CellGrid.GridConditionalFormatType,Syncfusion.UI.Xaml.CellGrid.GridConditionType,System.Object,System.Object)">
            <summary>
            create the conditionalformat with conditionalformattype,conditiontype,condition value1 and value2
            </summary>
            <param name="conditionalformattype">sets the conditionalformat type</param>
            <param name="conditiontype">sets the conditiontype</param>
            <param name="value1">sets the conditionvalue1</param>
            <param name="value2">sets the condition value2</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridConditionalFormat.#ctor(Syncfusion.UI.Xaml.CellGrid.GridTimePeriodType)">
            <summary>
            create the conditionalformat with timeperiod type
            </summary>
            <param name="timePeriodType">sets the timperiod type</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridConditionalFormat.GetCompileDelegate(Syncfusion.UI.Xaml.CellGrid.SfCellGrid,Syncfusion.UI.Xaml.CellGrid.GridConditionalFormat,System.String,System.Type,System.Boolean@)">
            <summary>
            Gets the compiled delegate.
            </summary>
            <param name="type">condition value type</param>
            <param name="grid"></param>
            <param name="conditionalformat"></param>
            <param name="data"></param>
            <param name="formatflag"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridConditionalFormat.Predicate(System.Linq.Expressions.ParameterExpression,System.String,Syncfusion.UI.Xaml.CellGrid.GridConditionType,System.Object)">
            <summary>
            return predicates based on the condition
            </summary>
            <param name="paramExpression">parameter expression such as cellvalue,formula.</param>
            <param name="propertyName">Name of the Property.</param>
            <param name="conditionType">Type of the condition.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridConditionalFormat.Style">
            <summary>
            Gets or sets conditional format styles into the gridconditinalformat
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridConditionalFormat.Condition">
            <summary>
            Gets or sets the gridcondition into conditionalformat
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridConditionalFormat.ConditionalFormatType">
            <summary>
            Gets or sets the conditionalformat type into gridconditionalformat
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.GridConditionalFormats">
            <summary>
            conditionalformats is a collection to hold the multiple conditionalformat
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.GridCopyPaste">
            <summary>
            All the Clipboard operations such as cut,copy,paste operations within the grid
            or cut,copy,paste the clipboard text from different source such as Excel,Notepad done here.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCopyPaste.#ctor">
            <summary>
            Initializes the GridCopyPaste 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCopyPaste.Copy">
            <summary>
            virtual method calls the copyrange method and trigger the events 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCopyPaste.Cut">
            <summary>
            virtual method calls the copyrange method with cutflag as true and trigger the clipboardcut events
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCopyPaste.Copy(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,System.Boolean)">
            <summary>
            copy the text into clipboard and copy the cellstyles into gridcelldata based on this 
            information only we have done the paste operation in paste method.
            </summary>
            <param name="copyRange">contains selected copy range</param>
            <param name="needToCut">if the flag is true then cut operation performed else copy operation performed</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCopyPaste.Paste">
            <summary>
            replace the copied styleinformation into existing cellstyles and add the covered cells based on the copied cells
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCopyPaste.GetClipboardText">
            <summary>
            store clipboard text into static clipboardtext member for copypaste operation
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCopyPaste.PasteFromClipboard(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            copied the text from the clipboard and stored into the appropriate range of cells in grid
            </summary>
            <param name="range">currenly selected paste range</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCopyPaste.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCopyPaste"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCopyPaste.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCopyPaste"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCopyPaste.Model">
            <summary>
            To get or set the model of the grid
            </summary>       
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCopyPaste.Data">
            <summary>
            To return the grid data
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCopyPaste.NeedToCut">
            <summary>
            To get or set the cutflag for copy/cut
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.GridModel">
            <summary>
            A class that holds all the data related information of the Grid
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridModel.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridModel"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridModel.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridModel"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridModel.InsertRows(System.Int32,System.Int32)">
            <summary>
            Inserts specified number of rows at the given row index.
            </summary>
            <param name="insertAtRowIndex">The row index to insert.</param>
            <param name="count">Number of rows to be inserted</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridModel.RemoveRows(System.Int32,System.Int32)">
            <summary>
            Deletes given number of rows from the specified index.
            </summary>
            <param name="removeAtRowIndex">The row index.</param>
            <param name="count">Number of rows to be removed.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridModel.InsertRowStyle(System.Int32,System.Int32)">
            <summary>
            Move row style and reset the default row style for inserted rows.
            </summary>
            <param name="insertAtRowIndex"></param>
            <param name="count"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridModel.InsertColumns(System.Int32,System.Int32)">
            <summary>
            Inserts the given number of columns at the specified column index.
            </summary>
            <param name="insertAtColumnIndex">The column index to insert.</param>
            <param name="count">Number of columns to be inserted.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridModel.RemoveColumns(System.Int32,System.Int32)">
            <summary>
            Removes given number of columns from the specified index.
            </summary>
            <param name="removeAtColumnIndex">The column index.</param>
            <param name="count">Number of columns to be removed.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridModel.ResizeRowsToFit(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,Syncfusion.UI.Xaml.CellGrid.Helpers.GridResizeToFitOptions)">
            <summary>
            Set the rowheight of given range based on the content height.
            </summary>
            <param name="range">resizing range</param>
            <param name="options">specify th resizeoptions such as includeheaders,Noshrinksize by default set as None</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridModel.ResizeColumnsToFit(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,Syncfusion.UI.Xaml.CellGrid.Helpers.GridResizeToFitOptions)">
            <summary>
            Set the columnwidth of given range based on the content width.
            </summary>
            <param name="range">specify the range to apply for resizing</param>
            <param name="options">specify the resizing options such as includeheaders,noshrinksize by default set as none</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridModel.GetCellSize(System.Int32,System.Int32)">
            <summary>
            Gets the actual size of the cell including margins and cell buttons. 
            Spanned cells will return the size of the whole cell
            covering neighboring cells.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
            <returns>The actual <see cref="M:Syncfusion.UI.Xaml.CellGrid.GridModel.GetCellSize(System.Int32,System.Int32)"/> of the cell including margins and cell buttons. </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridModel.OnClipboardPaste(Syncfusion.UI.Xaml.CellGrid.Helpers.GridCutPasteEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.UI.Xaml.CellGrid.GridModel.ClipboardPaste"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridCutPasteEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridModel.OnClipboardCopy(Syncfusion.UI.Xaml.CellGrid.Helpers.GridCutPasteEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.UI.Xaml.CellGrid.GridModel.ClipboardCopy"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridCutPasteEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridModel.OnClipboardCut(Syncfusion.UI.Xaml.CellGrid.Helpers.GridCutPasteEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.UI.Xaml.CellGrid.GridModel.ClipboardCut"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridCutPasteEventArgs"/> that contains the event data.</param>
        </member>
        <member name="E:Syncfusion.UI.Xaml.CellGrid.GridModel.RowsInserted">
            <summary>
            Occurs after a range of rows has been inserted.
            See <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridRangeInsertedEventArgs"/> for more details.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.CellGrid.GridModel.RowsRemoved">
            <summary>
            Occurs when a range of rows is removed.
            See <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridRangeRemovedEventArgs"/> for more details.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.CellGrid.GridModel.ColumnsInserted">
            <summary>
            Occurs after a range of columns has been inserted.
            See <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridRangeInsertedEventArgs"/> for more details.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.CellGrid.GridModel.ColumnsRemoved">
            <summary>
            Occurs after a range of columns has been removed.
            See <see cref="T:Syncfusion.UI.Xaml.CellGrid.Helpers.GridRangeRemovedEventArgs"/> for more details.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.CellGrid.GridModel.ClipboardPaste">
            <summary>
            Occurs when is called on the <see cref="E:Syncfusion.UI.Xaml.CellGrid.GridModel.ClipboardPaste"/> component of a <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridModel"/>.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.CellGrid.GridModel.ClipboardCopy">
            <summary>
            Occurs when is called on the <see cref="E:Syncfusion.UI.Xaml.CellGrid.GridModel.ClipboardCopy"/> component of a <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridModel"/>.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.CellGrid.GridModel.ClipboardCut">
            <summary>
            Occurs when is called on the <see cref="E:Syncfusion.UI.Xaml.CellGrid.GridModel.ClipboardCut"/> component of a <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridModel"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.GridAutoScroller">
            <summary>
            Represents a class which handles the  automatic scrolling of content when the user drags the pressed
            mouse to an edge of the control.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridAutoScroller.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridAutoScroller"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridAutoScroller.CanReleaseMouseCapture(System.Windows.Point,System.Windows.Point)">
            <summary>
            Retruns true, if needs to release mouse capture.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridAutoScroller.CanAutoScroll(System.Windows.Point)">
            <summary>
            Retruns true, if needs to capture the mouse.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridAutoScroller.ResetInsideScrollMargins">
            <summary>
            Resets the <see cref="P:Syncfusion.UI.Xaml.CellGrid.GridAutoScroller.InsideScrollMargin"/> property to its default value.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridAutoScroller.AutoScroll(System.Windows.Point)">
            <summary>
            Calculates the auto scroll index and scrolls to a particular position in the grid.
            </summary>
            <param name="mousePoint">Position of the mouse.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridAutoScroller.RaiseAutoScrollerValueChanged(System.Boolean,System.Boolean,System.Boolean,System.Boolean,Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Invokes the AutoScroller Value changed event.
            </summary>
            <param name="isLineUp">true when scrolling direction is up.</param>
            <param name="isLineDown">true when scrolling direction is down.</param>
            <param name="isLineLeft">true when scrolling direction is left.</param>
            <param name="isLineRight">true when scrolling direction is right.</param>
            <param name="rowColumnIndex">scrolling row column index</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridAutoScroller.OnAutoScrollingChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.UI.Xaml.CellGrid.GridAutoScroller.AutoScrollingChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridAutoScroller.HandlePointerOperations(Syncfusion.UI.Xaml.CellGrid.GridPointerEventArgs)">
            <summary>
            Handle the pointer/mouse operations
            </summary>
            <param name="args"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridAutoScroller.IsEnabled">
            <summary>
            Gets or sets the value whether to enable or disable the AutoScroller.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridAutoScroller.HorizontalScrollBar">
            <summary>
            Gets the state describing  the horizontal scrollbar.
            </summary>
            <value>The horizontal scrollbar state.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridAutoScroller.VerticalScrollBar">
            <summary>
            Gets the state describing for the vertical scroll bar.
            </summary>
            <value>The vertical scroll bar state.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridAutoScroller.Orientation">
            <summary>
            Disables or specifies the direction for automatic scrolling when the user drags
            the mouse cursor out of the scrolling area.
            </summary>
            <remarks>
            <list type="">
            <item>ScrollBars.None will disable scrolling.</item>
            <item>ScrollBars.Horizontal will enable horizontal scrolling.</item>
            <item>ScrollBars.Vertical will enable vertical scrolling.</item>
            <item>ScrollBars.Horizontal|ScrollBars.Vertical will enable both horizontal and vertical scrolling.</item>
            </list>
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridAutoScroller.AutoScrollBounds">
            <summary>
            Gets or sets the outer scrolling area. Typically the client area of the control.
            </summary>
            <value>Outer Scroll area.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridAutoScroller.InsideScrollBounds">
            <summary>
            Gets the inside scrolling area. The control will scroll if the user drags
            the mouse outside this area.
            </summary>
            <value>Inside Scroll area.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridAutoScroller.InsideScrollMargin">
            <summary>
            Gets or Sets the default margin for the scrolling area when the user moves the mouse to the margin 
            between InsideScrollBounds and AutoScrollBounds
            </summary>
            <value>Margin of Scroll area.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridAutoScroller.IntervalTime">
            <summary>
            Gets or sets the timer interval for auto scrolling.
            </summary>
            <value>Time interval.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridAutoScroller.AllowScrollingOnOutsideBounds">
            <summary>
            Gets or sets the value that indicates whether perform auto scrolling outside the bounds or inside the scroll margin.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="E:Syncfusion.UI.Xaml.CellGrid.GridAutoScroller.AutoScrollingChanged">
            <summary>
            Occurs when the AutoScrolling property is changed.
            </summary>
            <remarks>
            If you want to prevent autoscrolling, you should handle this event
            and reset the AutoScrolling property.
            </remarks>
        </member>
        <member name="E:Syncfusion.UI.Xaml.CellGrid.GridAutoScroller.AutoScrollerValueChanged">
            <summary>
            Occurs when the auto scroller value changed . 
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.GridAutoScroller.AutoScrollerValueChangedEventHandler">
            <summary>
            Represents a method that will handle the AutoScroller Valuechanged Event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.CellGrid.AutoScrollerValueChangedEventArgs">AutoScrollerValueChangedEventArgs</see> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.AutoScrollerValueChangedEventArgs">
             <summary>
            Provides data for the AutoScrollerValueChangedEventHandler event.
             </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.AutoScrollerValueChangedEventArgs.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Initializes a new instance for AutoScrollerValueChangedEventArgs class with the specified scrolling row column index and scrolling directions
            </summary>
            <param name="isLineUp">true when scrolling direction is Up</param>
            <param name="isLineDown">true when scrolling direction is down</param>
            <param name="isLineLeft">true when scrolling direction is left</param>
            <param name="isLineRight">true when scrolling direction is right</param>
            <param name="rowcol">scrolling row column index</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.AutoScrollerValueChangedEventArgs.RowColumnIndex">
            <summary>
            Gets or Sets the Scroll row column index.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.AutoScrollerValueChangedEventArgs.IsLineLeft">
            <summary>
            Indicates Scrolling Left
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.AutoScrollerValueChangedEventArgs.IsLineRight">
            <summary>
            Indicates Scrolling Right
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.AutoScrollerValueChangedEventArgs.IsLineUp">
            <summary>
            Indicates Scrolling Up
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.AutoScrollerValueChangedEventArgs.IsLineDown">
            <summary>
            Indicates Scrolling down
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell">
            <summary>
            Represents a class which maintains the information about the current cell of SfCellGrid.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.#ctor(Syncfusion.UI.Xaml.CellGrid.SfCellGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell">GridCurrentCell</see> class. 
            </summary>
            <param name="grid">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.SfCellGrid"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.BeginEdit(System.Boolean)">
            <summary>
            Begins the editing operation of CurrentCell.
            </summary>
            <param name="forceEdit">Set this true to avoid triggering events.</param>
            <returns>Returns true, if current cell enters into edit mode.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.EndEdit(System.Boolean)">
            <summary>
            Commit and end the editing operation of CurrentCell
            </summary>
            <param name="canCommit">If true, commit the new changes; otherwise revert to old value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.ValidateAndEndEdit">
            <summary>
            Validate and then finish the editing
            1.If Cancel=True and IsValid=False then currentcell remains in edit mode.
            2.If Cancel=True and IsValid=True then canceledit and currentcell remains in edit mode.
            3.If Cancel=False and IsValid=False then canceledit and currentcell moved to next cell.
            4.If Cancel=False and IsValid=True then endedit and currentcell moved to next cell.(Default)
            </summary>
            <returns>Returns true, if successfully finish the editing</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.Validate(System.Boolean@)">
            <summary>
            Validate the CurrentCell in SfCellGrid.
            </summary>
            <returns>True or False.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.Refresh">
            <summary>
            Refreshes the Current Range.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.RemoveCurrentCell">
            <summary>
            Remove the CurrentCell.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.MoveCurrentCell(System.Int32,System.Int32)">
            <summary>
            Move the CurrentCell to mentioned row and column index.
            </summary>
            <param name="rowIndex">Row index.</param>
            <param name="colIndex">Column index.</param>
            <returns>Returns true, if CurrentCell is moved.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.MoveCurrentCell(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Boolean)">
            <summary>
            Move the CurrentCell to mentioned row and column index.
            </summary>
            <param name="rowColIndex">RowColumnIndex.</param>
            <param name="forceMove">If true, then suspend all currentcell events while moving.</param>
            <returns>Returns true, if CurrentCell is moved.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.CanMove(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Determines whether to move the focus to next cell or not.
            </summary>
            <param name="rowCol">Coordinates of the cell.</param>
            <returns>True or False.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.HasCurrentCellAt(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Determines whether the CurrentCell is at particular RowColumnIndex or not.
            </summary>
            <param name="cellRowColumnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.HandlePointerOperations(System.Windows.Input.MouseEventArgs,Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Handles the pointer/mouse operations on CurrentCell
            </summary>
            <param name="e"></param>
            <param name="rowcolIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.HandleKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Handles the key down operation on currentCell
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.HandleKeyNavigation(System.Windows.Input.KeyEventArgs)">
            <summary>
            Used to Navigate the CurrentCell on KeyDown
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.ScrollInView(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Scroll the Grid to make the CurrentCell is in view
            </summary>
            <param name="rowColumnIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.ProcessPageUpNavigation(System.Boolean)">
            <summary>
            Used to process the key navigation on PageUp.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.ProcessPageDownNavigation(System.Boolean)">
            <summary>
            Used to process the key navigation on PageDown.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.EnsureMovingLeft(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex@)">
            <summary>
            Need to ensure and get the left move row column index when the adjacent is not enabled.
            </summary>
            <param name="moveRowColIndex"></param>
            <returns>Returns false, if need to skip moving current cell</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.EnsureMovingRight(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex@)">
            <summary>
            Need to ensure and get the right move row column index when the adjacent is not enabled.
            </summary>
            <param name="moveRowColIndex"></param>
            <returns>Returns false, if need to skip moving current cell</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.EnsureMovingUp(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex@)">
            <summary>
            Need to ensure and get the up move row column index when the adjacent is not enabled.
            </summary>
            <param name="moveRowColIndex"></param>
            <returns>Returns false, if need to skip moving current cell</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.EnsureMovingDown(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex@)">
            <summary>
            Need to ensure and get the down move row column index when the adjacent is not enabled.
            </summary>
            <param name="moveRowColIndex"></param>
            <returns>Returns false, if need to skip moving current cell</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.GetColumn(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Used to get the GridColumn
            </summary>
            <param name="rowcol"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.ProcessCurrentCell(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,Syncfusion.UI.Xaml.CellGrid.GridColumn)">
            <summary>
            Process the CurrentCell move.
            </summary>
            <param name="rowcol"></param>
            <param name="gridColumn"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.MoveCurrentCell(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,Syncfusion.UI.Xaml.CellGrid.GridColumn,System.Boolean,Syncfusion.UI.Xaml.CellGrid.Helpers.ActivationTrigger)">
            <summary>
            Move the CurrentCell
            </summary>
            <param name="rowColIndex"></param>
            <param name="gridColumn"></param>
            <param name="forceMove"></param>
            <param name="activationTrigger"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.RaiseCurrentCellActivatedEvent(Syncfusion.UI.Xaml.CellGrid.Helpers.ActivationTrigger)">
            <summary>
            Raise CurrentCellActivated event
            </summary>
            <param name="activationTrigger"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.RaiseCurrentCellActivatingEvent(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,Syncfusion.UI.Xaml.CellGrid.Helpers.ActivationTrigger)">
            <summary>
            Raise CurrentCellActiavting event
            </summary>
            <param name="rowColIndex"></param>
            <param name="activationTrigger"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.SelectCurrentCell(System.Int32,System.Int32,Syncfusion.UI.Xaml.CellGrid.GridColumn)">
            <summary>
            Select the CurrentCell and set the current column
            </summary>
            <param name="row"></param>
            <param name="col"></param>
            <param name="gridColumn"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.SelectCurrentCell(System.Int32,System.Int32)">
            <summary>
            Select the current cell
            </summary>
            <param name="row"></param>
            <param name="col"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.SetColumn(Syncfusion.UI.Xaml.CellGrid.GridColumn)">
            <summary>
            Set the GridColumn of CurrentCell
            </summary>
            <param name="gridColumn"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.GetMoveRowColumnIndexForEnterNavgation(System.Boolean,Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo)">
            <summary>
            Get the move current cell row column index when press Enter
            </summary>
            <param name="isShiftKey">True if Shift key is pressed otherwise false</param>
            <param name="coveredCell"><see cref="T:Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo"/>, if current cell is covered cell otherwise null</param>
            <returns>Return next current cell row column index</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.GetMoveRowColumnIndexForTabNavigation(System.Boolean,Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo)">
            <summary>
            Get the move current cell row column index when press Tab
            </summary>
            <param name="isShiftKey">True if Shift key is pressed otherwise false</param>
            <param name="coveredCell"><see cref="T:Syncfusion.UI.Xaml.CellGrid.CoveredCellInfo"/>, if current cell is covered cell</param>
            <returns>Return next current cell row column index when press Tab</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.GetNextSelectedRange(System.Int32)">
            <summary>
            Get the next selected range and set that range as activate range.
            </summary>
            <param name="nextIndex">index of current range</param>
            <returns>Next range</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.GetPreviousSelectedRange(System.Int32)">
            <summary>
            Get the previous selected range and set that range as activate range.
            </summary>
            <param name="prevIndex">index of current range</param>
            <returns>Previous range</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.GetNextMoveRowColumnIndex(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Get the next top left RowColumnIndex if next cell is coveredcell.
            Get the next cell of RowColumnIndex when next cell is coveredcell but not a top left index
            </summary>
            <param name="activeRange">Active range</param>
            <param name="rowIndex">Move rowIndex</param>
            <param name="columnIndex">Move columnIndex</param>
            <param name="isEnterKey">True if enter key is pressed otherwise tab key</param>
            <returns>Next RowColumnIndex</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.GetPreviousMoveRowColumnIndex(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Get the previous top left RowColumnIndex if previous cell is coveredcell.
            Get the previous cell of RowColumnIndex when previous cell is coveredcell but not a top left index
            </summary>
            <param name="activeRange">Active range</param>
            <param name="rowIndex"> rowIndex</param>
            <param name="columnIndex">Move columnIndex</param>
            <param name="isEnterKey">True if enter key is pressed otherwise tab key</param>
            <returns>Previous RowColumnIndex</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.GetControlValue">
            <summary>
            Used to get the control value from renderer.
            </summary>
            <returns>Value of the current cell.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.SetControlValue(System.Object)">
            <summary>
            Used to set the control value to renderer.
            </summary>
            <param name="value">Control value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.SetFocus(System.Boolean)">
            <summary>
            Used to set the focus using renderer.
            </summary>
            <param name="needToFocus">If true, set focus to edit element</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.ShouldGridTryToHandleKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Determines whether renderer handles key down or not.
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.ResetCurrentCellState">
            <summary>
            Used to reset the current cell state of the renderer.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.SetCurrentCellState">
            <summary>
            Used to set the CurrentCellState of the Renderer.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
            <summary>
            Invoked when the current cell gets input text.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.RaiseCurrentCellValidated">
            <summary>
            Raise the CurrentCellValidated event
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.RaiseCurrentCellTextChanged(System.String)">
            <summary>
            Raise CurrentCellTextChanged event
            </summary>
            <param name="changedetext"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.RaiseCurrentCellBeginEditEvent(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Invokes the CurrentCellBeginEdit event.
            </summary>
            <param name="rowColumnIndex">An instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>.</param>
            <returns>True or False.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.RaiseCurrentCellEndEditEvent(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Invokes the CurrentCellEndEdit event.
            </summary>
            <param name="rowColumnIndex">An instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.NotifyCurrentCellTexChanged(System.String)">
            <summary>
            Used ot notify when currentCell text changed
            </summary>
            <param name="ChangedText"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell"/> class.
            </summary>  
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.IsInMove">
            <summary>
            Gets or sets whether the current cell is in move
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.Column">
            <summary>
            Gets or Sets the of GridColumn of CurrentCell
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.PreviousRowColumnIndex">
            <summary>
            Gets or sets the RowColumnIndex of old CurrentCell
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.IsCurrentCellHidden">
            <summary>
            Returns whether current cell is hidden or not.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.IsValidated">
            <summary>
            Gets or sets whether the current is Validated or not
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.IsValidating">
            <summary>
            Gets or sets whether the current cell is in Validating
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.CurrentCellValue">
            <summary>
            Gets or sets the currentcellvalue
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.HasCurrentCellState">
            <summary>
            Returns the current cell state of renderer
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.HasDataValidationTooltip">
            <summary>
            Returns true, If datavalidation tooltip has been set to current cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.CellRowColumnIndex">
            <summary>
            Gets the instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>  of CurrentCell.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.RowIndex">
            <summary>
            Gets the row index of CurrentCell.
            </summary>
            <value>Row index.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.ColumnIndex">
            <summary>
            Gets the column index of CurrentCell.
            </summary>
            <value>Column index.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.Range">
            <summary>
            Gets the current cell range in SfCellGrid.
            </summary>
            <value>Current cell range.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.HasCurrentCell">
            <summary>
            Gets the value indicating  whether the Grid has CurrentCell or not.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.IsModified">
            <summary>
            Gets the value indicating whether the current cell value is modified on editing or not.
            </summary>
             <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.IsEditing">
            <summary>
            Gets or sets whether the current cell is in editing mode or not.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell.Style">
            <summary>
            Returns the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo"/> of CurrentCell.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.ISelectionController">
            <summary>
            An interface to control the selection functionalities of the grid.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ISelectionController.HandlePointerOperations(Syncfusion.UI.Xaml.CellGrid.GridPointerEventArgs,Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Handles the Pointer/Mouse Operations.
            </summary>
            <param name="args"></param>
            <param name="rowColIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.ISelectionController.HandleKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Handles the KeyDown operations
            </summary>
            <param name="args"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.ISelectionController.CurrentCell">
            <summary>
            Returns the CurrentCell of the SfCellGrid
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.ISelectionController.SelectedRanges">
            <summary>
            Returns the SelectedRanges of the SfCellGrid
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.ISelectionController.TouchHitTestPrecision">
            <summary>
            Determines the distance of touch precision point from touch indicator
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.GridPointerEventArgs">
            <summary>
            Class which represents the mouse pointer operations.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridPointerEventArgs.#ctor(Syncfusion.UI.Xaml.CellGrid.PointerOperation,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridPointerEventArgs">GridPointerEventArgs</see> class. 
            </summary>
            <param name="operation">One of the pointer options while selection. </param>
            <param name="eventArgs">Argument related with pointer.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridPointerEventArgs.Operation">
            <summary>
            Gets the type of PointerOperation. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridPointerEventArgs.OriginalEventArgs">
            <summary>
            Gets the pointer event arguments.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.PointerOperation">
            <summary>
            Defines the Mouse pointer operations while selection in SfCellGrid.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.PointerOperation.Pressed">
            <summary>
            Mouse pointer in pressed position.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.PointerOperation.Released">
            <summary>
            Mouse pointer in released position.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.PointerOperation.Tapped">
            <summary>
            Mouse pointer in click position.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.PointerOperation.DoubleTapped">
            <summary>
            Mouse pointer in double click position.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.PointerOperation.Move">
            <summary>
            Mouse pointer in moved state.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.PointerOperation.Exited">
            <summary>
            Mouse pointer in released state.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.PointerOperation.Entered">
            <summary>
            Mouse pointer in Entered state.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.PointerOperation.Wheel">
            <summary>
            Mouse pointer in wheel position.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.SelectionController">
            <summary>
            Represents a class which implements the selection behavior of CellGrid.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionController.#ctor(Syncfusion.UI.Xaml.CellGrid.SfCellGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.SelectionController">SelectionController</see> class. 
            </summary>
            <param name="grid">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.SfCellGrid"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionController.HandlePointerOperations(Syncfusion.UI.Xaml.CellGrid.GridPointerEventArgs,Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Handles the Pointer/Mouse Operations in SfCellGrid.
            </summary>
            <param name="args">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridPointerEventArgs"/>.</param>
            <param name="rowcolIndex">Coordinates of a cell.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionController.HandleKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Handles the KeyDown operations in SfCellGrid.
            </summary>
            <param name="args">An instance of <see cref="T:System.Windows.Input.KeyEventArgs"/> that contains data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionController.AddSelection(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Adds the selection on mentioned range.
            </summary>
            <param name="range">Range where to extend the selection.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionController.ClearSelection">
            <summary>
            Clears the selection.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionController.ProcessKeyNavigation(System.Windows.Input.KeyEventArgs)">
             <summary>
            Used to process the key navigation in SfCellGrid.
             </summary>
             <param name="args">An instance of <see cref="T:System.Windows.Input.KeyEventArgs"/> that contains data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionController.ProcessShiftKeyNavigation(System.Windows.Input.KeyEventArgs)">
            <summary>
            Used to process the key navigation when shift key is pressed.
            </summary>
            <param name="args">An instance of <see cref="T:System.Windows.Input.KeyEventArgs"/> that contains data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionController.ProcessShiftSelection(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Used to process the pointer/touch selection when shift key is pressed.
            </summary>
            <param name="rowcolIndex">An instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionController.ProcessHeaderSelection(System.Windows.Input.MouseEventArgs,Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Used to process the pointer/touch selection on Header(whole row/column).
            </summary>
            <param name="e">An instance of <see cref="T:System.Windows.Input.MouseEventArgs"/> that contains data.</param>
            <param name="rowcolIndex">An instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionController.ProcessPointerSelection(System.Windows.Input.MouseEventArgs,Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Used to process the pointer/touch normal selection.
            </summary>
            <param name="e">An instance of <see cref="T:System.Windows.Input.MouseEventArgs"/> that contains data.</param>
            <param name="rowcolIndex">An instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionController.ProcessHeaderDragSelection(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Used to process the pointer/touch selection on mouse move over header.
            </summary>
            <param name="rowcolIndex">An instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionController.ProcessDragSelection(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Used to process the pointer/touch selection on mouse move.
            </summary>
            <param name="rowcolIndex">An instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionController.OnPointerPressed(System.Windows.Input.MouseButtonEventArgs,Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Occurs when the pointer is pressed in SfCellGrid.
            </summary>
            <param name="e">An instance of <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> that contains data.</param>
            <param name="rowcolIndex">An instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionController.OnPointerMoved(System.Windows.Input.MouseEventArgs,Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Occurs when the pointer moves.
            </summary>
            <param name="e">An instance of <see cref="T:System.Windows.Input.MouseEventArgs"/> that contains data.</param>
            <param name="rowcolIndex">An instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionController.OnPointerReleased(System.Windows.Input.MouseButtonEventArgs,Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Occurs when the pointer released.
            </summary>
            <param name="e">An instance of <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> that contains data.</param>
            <param name="rowcolIndex">An instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionController.OnTapped(System.Windows.Input.MouseButtonEventArgs,Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Occurs when the pointer tapped in the cell.
            </summary>
            <param name="e">An instance of <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> that contains data.</param>
            <param name="rowcolIndex">An instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionController.OnDoubleTapped(System.Windows.Input.MouseButtonEventArgs,Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Occurs when the pointer double tapped in the cell.
            </summary>
            <param name="e">An instance of <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> that contains data.</param>
            <param name="rowcolIndex">An instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionController.ShowCurrentCell">
            <summary>
            Determines whether to show current cell or not on selection.
            </summary>
            <returns>If true, draws the current cell</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionController.OnPointerWheel(System.Windows.Input.MouseWheelEventArgs,Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Occurs when scroll the mouse wheel.
            </summary>
            <param name="e">An instance of <see cref="T:System.Windows.Input.MouseWheelEventArgs"/> that contains data.</param>
            <param name="rowcolIndex">An instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionController.UpdateLastSelectedRowColIndex(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Used to update the Last Selected RowCoumnIndex while moving current cell
            </summary>
            <param name="rowColumnIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionController.ConvertPointerDeviceTypeToSelectionTrigger(System.Windows.Input.InputDevice)">
            <summary>
            Converts the PointerDeviceType to ActivationTrigger
            </summary>
            <param name="pointerDeviceType"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionController.ClearSelectedCells(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo@,System.Boolean)">
            <summary>
            Used to clear the selected cells.
            </summary>
            <param name="newRange"></param>
            <param name="activeRangeOnly">Set this as true to clear the active range only</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionController.AddSelectedCells(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Used to add the selected cells
            </summary>
            <param name="range"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionController.ShowHidePopup(System.Boolean)">
            <summary>
            Helper method to show/hide the popup
            </summary>
            <param name="show"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionController.AdjustBasedOnCoveredCell(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo@)">
            <summary>
            Adjust the GridRangeInfo based on CoveredCell
            </summary>
            <param name="adjustedRange"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionController.RaiseSelectionChangingEvent(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo@,Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList,Syncfusion.UI.Xaml.CellGrid.Helpers.ActivationTrigger)">
            <summary>
            Raise Selection Changing event
            </summary>
            <param name="newRange"></param>
            <param name="selectionTrigger"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionController.RaiseSelectionChangedEvent(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,Syncfusion.UI.Xaml.CellGrid.GridRangeInfoList,Syncfusion.UI.Xaml.CellGrid.Helpers.ActivationTrigger)">
            <summary>
            Raise Selection Changed event
            </summary>
            <param name="newRange"></param>
            <param name="oldRanges"></param>
            <param name="selectionTrigger"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionController.ScrollFirstBodyCellToView(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex@)">
            <summary>
            Used to scroll the grid when dragging from frozen cell to normal cell
            </summary>
            <param name="rowColIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionController.WireEvents">
            <summary>
            Wire the Grid and AutoScroller events
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionController.UnWireEvents">
            <summary>
            Unwire the Grid and AutoScroler events
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionController.AutoScrollerValueChanged(System.Object,Syncfusion.UI.Xaml.CellGrid.AutoScrollerValueChangedEventArgs)">
            <summary>
            Occurs when the AutoScroller value changed.
            </summary>
            <param name="sender">Soruce of the event.</param>
            <param name="args">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.AutoScrollerValueChangedEventArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionController.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.SelectionController"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionController.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the 
            <see cref="T:Syncfusion.UI.Xaml.CellGrid.SelectionController">SelecionController</see>
            and optionally releases the managed resources.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SelectionController.ShowTouchIndicator">
            <summary>
            Determines whether touch indicator will be shown or not.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SelectionController.PointerMoveRowColIndex">
            <summary>
            Returns the last pointer move RowColumnIndex
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SelectionController.PointerDownRowColIndex">
            <summary>
            Returns the last pointer move RowColumnIndex
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SelectionController.Grid">
            <summary>
            Gets the value indicating the instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.SfCellGrid"/>.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.SfCellGrid"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SelectionController.Container">
            <summary>
            Gets the value indicating  the instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.VisualContainer"/>.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.VisualContainer"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SelectionController.Column">
            <summary>
            Gets the value indicating the instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridColumn"/> under the current pointer location.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridColumn"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SelectionController.SelectionFrame">
            <summary>
            Gets the value indicating the instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.SelectionPanel"/>.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.SelectionPanel"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SelectionController.SelectionTrigger">
            <summary>
            Gets the value indicating how the current selection is triggered.
            </summary>
            <value>One of the enum options of Activation.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SelectionController.TouchHitTestPrecision">
            <summary>
            Gets or sets the distance of touch precision point from touch indicator.
            </summary>
            <value>Distance of touch precision.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SelectionController.CurrentCell">
             <summary>
            Gets the value indicating the instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell"/>  of the SfCellGrid.
             </summary>
             <value>An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCurrentCell"/></value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SelectionController.SelectedRanges">
            <summary>
            Gets the list of selected ranges in Grid.
            </summary>
            <value>A collection of selected ranges.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SelectionController.LastSelectedRowColIndex">
            <summary>
            Returns the last selected RowColumnIndex.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.SelectionHelper">
            <summary>
            Helper class which is used to get the mouse pointer position, visible row/column index and handles the key operations.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionHelper.CheckAltKeyPressed">
            <summary>
            Check whether the Alt key is pressed or not.
            </summary>
            <returns>True if the key is pressed; otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionHelper.CheckControlKeyPressed">
            <summary>
            Check whether the Control key is pressed.
            </summary>
            <returns>True if the key is pressed;otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionHelper.CheckShiftKeyPressed">
            <summary>
            Check whether the Shift key is pressed
            </summary>
            <returns>True if the key is pressed;otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionHelper.GetGridColumn(Syncfusion.UI.Xaml.CellGrid.SfCellGrid,Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Returns the GridColumn for the given RowColumnIndex
            </summary>
            <param name="rowColumnIndex">Corresponding RowColumnIndex Value</param>
            <param name="cellGrid"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionHelper.GetGridRow(Syncfusion.UI.Xaml.CellGrid.SfCellGrid,System.Int32)">
            <summary>
            Returns the <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRow"/> for the given RowIndex in SfCellGrid.
            </summary>
            <param name="cellGrid">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.SfCellGrid"/>.</param>
            <param name="rowIndex">Row Index.</param>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridRow"/>.</value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionHelper.GetPointPosition(System.Windows.Input.MouseEventArgs,System.Windows.UIElement)">
            <summary>
            Method which returns the mouse position in SfCellGrid.
            </summary>
            <param name="args">An <see cref="T:System.Windows.Input.MouseEventArgs">MouseEventArgs</see> that contains the event data.</param>
            <param name="relativeTo">UIElement.</param>
            <returns>Position of the pointer.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionHelper.GetVisibleRowColumnIndex(Syncfusion.UI.Xaml.CellGrid.SfCellGrid,System.Int32,System.Int32)">
            <summary>
            Gets the visible <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/> for given row and column index.
            </summary>
            <param name="grid">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.SfCellGrid"/>.</param>
            <param name="rowIndex">Row Index.</param>
            <param name="columnIndex">Column Index.</param>
            <returns>An instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionHelper.GetPreviousVisibleRowColumnIndex(Syncfusion.UI.Xaml.CellGrid.SfCellGrid,System.Int32,System.Int32)">
            <summary>
            Get the previous visible <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/> for given row and column index.
            </summary>
            <param name="grid">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.SfCellGrid"/>.</param>
            <param name="rowIndex">Row Index.</param>
            <param name="columnIndex">Column Index.</param>
            <returns>An instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/>.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionHelper.GetPreviousVisibleRowIndex(Syncfusion.UI.Xaml.CellGrid.SfCellGrid,System.Int32)">
            <summary>
            Get the previous visible row index.
            </summary>
            <param name="grid">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.SfCellGrid"/>.</param>
            <param name="rowIndex">Row Index.</param>
            <returns>Row Index.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionHelper.GetPreviousVisibleColumnIndex(Syncfusion.UI.Xaml.CellGrid.SfCellGrid,System.Int32)">
            <summary>
            Get the previous visible column index.
            </summary>
            <param name="grid">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.SfCellGrid"/>.</param>
            <param name="colIndex">Column Index.</param>
            <returns>Column Index</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionHelper.GetFirstVisibleRowIndex(Syncfusion.UI.Xaml.CellGrid.SfCellGrid)">
            <summary>
            Helper method for find the first visible row index in view.
            </summary>
            <param name="grid">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.SfCellGrid"/>.</param>
            <returns>return the first row index when grid have visible row lines more than header row else returns headerrows.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionHelper.GetFirstVisibleColumnIndex(Syncfusion.UI.Xaml.CellGrid.SfCellGrid)">
            <summary>
            Helper method for find the first visible column index in view.
            </summary>
            <param name="grid">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.SfCellGrid"/>.</param>
            <returns>return the first column index when grid have visible columns lines more than header column else returns headercolumns.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionPanel.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.SelectionPanel">SelectionPanel</see> class. 
            </summary>
            <param name="name">Name of the panel.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            When overridden in a derived class, measures the size in layout required for
            child elements and determines a size for the <see cref="T:Syncfusion.UI.Xaml.CellGrid.SelectionPanel"/>derived class. 
            </summary>
            <param name="availableSize">The size that the panel can occupy.</param>
            <returns>The desired size of <see cref="T:Syncfusion.UI.Xaml.CellGrid.SelectionPanel"/>. </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the content of <see cref="T:Syncfusion.UI.Xaml.CellGrid.SelectionPanel"/> in <see cref="T:Syncfusion.UI.Xaml.CellGrid.SfCellGrid"/>.
            </summary>
            <param name="finalSize">The final size which the panel used to arrange itself.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionPanel.RenderSelectedCells">
            <summary>
            Used to draw the borders for selection in <see cref="T:Syncfusion.UI.Xaml.CellGrid.SfCellGrid"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionPanel.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.UI.Xaml.CellGrid.SelectionPanel"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.SelectionControl">
            <summary>
            Represents a control which is used for selection in SfCellGrid.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.SelectionControl">SelectionControl</see> class. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.SelectionControl.FillIndicatorVisibilityProperty">
            <summary>
            Identifies the FillIndicatorVisibility dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionControl.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or
            internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.SelectionControl.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or
            resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.SelectionControl.FillIndicatorVisibility">
            <summary>
            Gets or sets the visibility of Fill indicator.
            </summary>
            <value>Display state of the Fill indicator.</value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridFormulaTag.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridFormulaTag.#ctor(System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="formula">The parsed formula.</param>
            <param name="text">The computed value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridFormulaTag.#ctor(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="formula">The parsed formula.</param>
            <param name="text">The computed value.</param>
            /// <param name="row">The row at which this formula is being parsed.</param>
            <param name="col">The col at which this formula is being parsed.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridFormulaTag.ToString">
            <summary>
            Overriden.
            </summary>
            <returns>Displays the parsed formula and computed value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridFormulaTag.Reset">
            <summary>
            Sets Text and Formula to null and ParsedRow and ParsedCol to -1.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridFormulaTag.ResetText">
            <summary>
            Sets Text to null.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridFormulaTag.ResetFormula">
            <summary>
            Sets Text and Formula to null.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridFormulaTag.Formula">
            <summary>
            Gets / sets the parsed formula.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridFormulaTag.ParsedRow">
            <summary>
            Gets the column where the formula was last parsed.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridFormulaTag.ParsedCol">
            <summary>
            Gets the column where the formula was last parsed.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridFormulaTag.Text">
            <summary>
            Get / sets text representing the computed value.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.IGridCellRenderer.Arrange(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.UIElement,System.Windows.Rect)">
            <summary>
            Invoked when the visual children of cell is arranged in view. 
            </summary>
            <param name="cellRowColumnIndex">
            The Coordinates of the cell.
            </param>
            <param name="uiElement">
            The corresponding UIElement that is to be arranged.
            </param>
            <param name="cellRect">
            The corresponding size of cell element for arranging the UIElement.
            </param>       
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.IGridCellRenderer.Measure(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.UIElement,System.Windows.Size)">
            <summary>
            Determines the size of the current cell in <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="cellRowColumnIndex">Coordinates of a cell.</param>
            <param name="uiElement">Corresponing UI element to measure .</param>
            <param name="availableSize">The size of element.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.IGridCellRenderer.UnloadUIElements(Syncfusion.UI.Xaml.CellGrid.GridCell)">
            <summary>
            Invoked when the cell is scrolled out of view or unloaded from the view.
            <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase &lt; D,E &gt;"/> overrides this method and either removes the cell renderer visuals from the parent
            or hide them and reuse it later in same element depending on whether <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase&lt; D,E &gt;.AllowRecycle"/>  was set.
            </summary>
            <param name="uiElement">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.IGridCellRenderer.GetFormattedText(Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo)">
            <summary>
            Used to get the formatted text for the particular cell
            </summary>
            <param name="style">An instance of <see cref="T:Syncfusion.XlsIO.IStyle"/>.</param>
            <returns>An empty string</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.IGridCellRenderer.SetCurrentCellState(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.UIElement,System.Boolean,System.Boolean)">
            <summary>
            Set the current cell state when the current cell is active.
            </summary>
            <param name="currentCellIndex">Coordinates of a current cell</param>
            <param name="currentCellElement">An instance of <see cref="T:System.Windows.UIElement"/>.</param>
            <param name="isInEditing">True or False .</param>
            <param name="isFocused">True or False .</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.IGridCellRenderer.ResetCurrentCellState">
            <summary>
            Resets or updates the current cell state and style.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.IGridCellRenderer.ClearRecycleBin">
            <summary>
            Clears all the items from RecycleBin.
            </summary> 
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.IGridCellRenderer.RaiseSaveChanges">
            <summary>
            Invoked to save the current cell changes in <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>
            </summary>  
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.IGridCellRenderer.SetFocus(System.Boolean)">
            <summary>
            Used to invoke the Focus method to set the focus on the given UIElement.
            </summary>
            <param name="needToFocus">True or False .</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.IGridCellRenderer.SetControlValue(System.Object)">
            <summary>
            Used to set the value for the current cell.
            </summary>
            <param name="value">Current cell value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.IGridCellRenderer.GetControlValue">
            <summary>
            Used to get the control value for the current cell.
            </summary>
            <returns>null.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.IGridCellRenderer.ShouldGridTryToHandleKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Handles all the key down operations for the current cell in <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.KeyEventArgs">KeyEventArgs</see> that contains the event data.</param>
            <returns>True or False.</returns> 
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.IGridCellRenderer.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
            <summary>
            Invoked when the element gets input text.
            </summary>
            <param name="args">An <see cref="T:System.Windows.Input.TextCompositionEventArgs">TextCompositionEventArgs</see> that contains the event data.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.IGridCellRenderer.HasCurrentCellState">
            <summary>
            Gets a value indicating whether the current cell renderer is set or not.
            </summary>
            <value>
            Returns <b>true</b> if the current cell state is maintained; otherwise , <b>false</b>.
            </value> 
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.IGridCellRenderer.Grid">
            <summary>
            Gets or sets the value indicating the instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.SfCellGrid"/>.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.SfCellGrid"/></value>.
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.IGridCellRenderer.SupportDrawingOptimization">
            <summary>
            Gets or sets a value whether the cell content should be drawn or not. If true, draw its content else loads display element to display its content.
            </summary>
            <value><see langword="true"/> if the user wants to draw the content instead of loading the display uiElement; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.IGridCellRenderer.SupportRenderOptimization">
            <summary>
            Gets or sets a value indicates whether the edit element directly loads to display the content even the cell is not in edit mode. 
            </summary>      
            <value>
            <b>true</b> if the renderer supports directly to the drawing context ; otherwise, <b>false</b>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.IGridCellRenderer.DisplayElementOptimization">
            <summary>
            Gets or sets a value indicating whether to load the UIElement to display its content or not.
            </summary>
            <value><see langword="true"/> it will loads the display element for the cell only when it have content which should not empty; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.IGridCellRenderer.UseOnlyRendererElement">
            <summary>
            Gets or sets a value indicates whether to use the cell element (GridCell) to display its content.
            </summary>      
            <value>
            <b>true</b> if the grid cell is placed inside the renderer element; otherwise, <b>false</b>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.IGridCellRenderer.CurrentCellRendererElement">
            <summary>
            Gets a value indicating edit UIElement of current cell. It should be null when current cell is not in editing.
            </summary>
            <value>An instance of <see cref="T:System.Windows.UIElement"/></value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.IGridCellRenderer.CurrentCellElement">
            <summary>
            Gets a value indicating the current cell(<see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>) UIElement in <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <value>An instance of <see cref="T:System.Windows.UIElement"/></value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererBase.OnArrange(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.UIElement,System.Windows.Rect)">
            <summary>
            Invoked when the visual children of cell is arranged in view. 
            </summary>
            <param name="cellRowColumnIndex">
            The Coordinates of the cell.
            </param>
            <param name="uiElement">
            The corresponding UIElement that is to be arranged
            </param>
            <param name="cellRect">
            The corresponding size of cell element for arranging the UIElement
            </param>       
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererBase.OnMeasure(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.UIElement,System.Windows.Size)">
            <summary>
            Determines the size of the current cell in <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="cellRowColumnIndex">Coordinates of a cell.</param>
            <param name="uiElement">Corresponing UI element to measure .</param>
            <param name="availableSize">The size of element.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererBase.OnUnloadUIElements(Syncfusion.UI.Xaml.CellGrid.GridCell)">
            <summary>
            Invoked when the cell is scrolled out of view or unloaded from the view.
            <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase &lt; D,E &gt;"/> overrides this method and either removes the cell renderer visuals from the parent
            or hide them and reuse it later in same element depending on whether <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase&lt; D,E &gt;.AllowRecycle"/>  was set.
            </summary>
            <param name="uiElement">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererBase.GetFormattedText(Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo)">
            <summary>
            Used to get the formatted text for the particular cell.
            </summary>
            <param name="style">An instance of <see cref="T:Syncfusion.XlsIO.IStyle"/>.</param>
            <returns>An empty string</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererBase.ShouldGridTryToHandleKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Handles all the key down operations for the current cell in <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.KeyEventArgs">KeyEventArgs</see> that contains the event data.</param>
            <returns>True or False.</returns>       
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererBase.CurrentCellValueChanged(System.String)">
            <summary>
            Invoked when the current cell value is changed in <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <param name="ChangedText">Text to be changed.</param>
            <remarks>It also updates the floating cell with current text size.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererBase.OnSaveChanges">
            <summary>
            Updates the changes of current cell in <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererBase.RefreshContent">
            <summary>
            Refreshes the content of the current cell in <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererBase.SetControlValue(System.Object)">
            <summary>
            Used to set the value for the current cell.
            </summary>
            <param name="value">Current cell's value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererBase.GetControlValue">
            <summary>
            Used to get the control value for the current cell.
            </summary>
            <returns>null.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererBase.SetFocus(System.Windows.UIElement,System.Boolean)">
            <summary>
            Invoked to set the focus to the UIElement.
            </summary>
            <param name="uiElement">An instance of <see cref="N:System.Windows"/>.</param>
            <param name="needToFocus"><see langword="true"/>if keyboard focus and logical focus were set to this element; <see langword="false"/> if only logical focus was set to this element, or if the call to this method did not force the focus to change. </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererBase.ClearRecycleBin">
            <summary>
            Clears all the items from RecycleBin.
            </summary>     
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererBase.Arrange(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.UIElement,System.Windows.Rect)">
            <summary>
            Invoked when the visual children of cell is arranged in view. 
            </summary>
            <param name="cellRowColumnIndex">
            The Coordinates of the cell.
            </param>
            <param name="uiElement">
            The corresponding UIElement that is to be arranged
            </param>
            <param name="cellRect">
            The corresponding size of cell element for arranging the UIElement
            </param>       
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererBase.Measure(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.UIElement,System.Windows.Size)">
            <summary>
            Determines the size of the current cell in <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>
            </summary>
            <param name="cellRowColumnIndex">Coordinates of a cell</param>
            <param name="uiElement">Corresponing UI element to measure </param>
            <param name="availableSize">The size of element</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererBase.UnloadUIElements(Syncfusion.UI.Xaml.CellGrid.GridCell)">
            <summary>
            Invoked when the cell is scrolled out of view or unloaded from the view.
            <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase &lt; D,E &gt;"/> overrides this method and either removes the cell renderer visuals from the parent
            or hide them and reuse it later in same element depending on whether <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase&lt; D,E &gt;.AllowRecycle"/>  was set.
            </summary>
            <param name="uiElement">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererBase.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
            <summary>
            Invoked when the element gets input text
            </summary>
            <param name="args">An <see cref="T:System.Windows.Input.TextCompositionEventArgs">TextCompositionEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererBase.TextInput(System.Windows.Input.TextCompositionEventArgs)">
            <summary>
            Invoked when the element gets input through keyboard
            </summary>
            <param name="args">An <see cref="T:System.Windows.Input.TextCompositionEventArgs">TextCompositionEventArgs</see> that contains the event data.</param>
            <remarks>This function checks if the input text is backspace, then empty text is set; else the entered input is set</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererBase.UpdateCurrentCellState(System.Windows.UIElement,System.Boolean)">
            <summary>
            Updates the current cell state for the specified current cell renderer element.
            </summary>
            <param name="currentRendererElement">Current cell renderer element.</param>
            <param name="isInEdit">True or False</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererBase.SetCurrentCellState(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.UIElement,System.Boolean,System.Boolean)">
            <summary>
            Set the current cell state when the current cell is active.
            </summary>
            <param name="currentCellIndex">Coordinates of a current cell.</param>
            <param name="currentCellElement">An instance of System.Windows.UIElement.</param>
            <param name="isInEditing">True or False .</param>
            <param name="isFocused">True or False .</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererBase.ResetCurrentCellState">
            <summary>
            Resets or updates the current cell state and style.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererBase.RaiseSaveChanges">
            <summary>
            Invoked to save the current cell changes in <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>     
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererBase.SetFocus(System.Boolean)">
            <summary>
            Used to invoke the Focus method to set the focus on the given UIElement.
            </summary>
            <param name="needToFocus">True or False .</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererBase.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererBase.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase">SpreadsheetCellRendererBase</see>.
            </summary>
            <remarks>Performs application-defined tasks associated with freeing, releasing, or
            resetting unmanaged resources.</remarks>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererBase.PreviewInputText">
            <summary>
            Gets or sets a value indicating the input text for the renderer .
            </summary>
            <value>The text for the renderer</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererBase.IsEditable">
            <summary>
            Gets or sets a value indicating whether the user can perform editing on this cell type.
            </summary>
            <value><see langword="true"/> if the user able to perform edit operation ; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererBase.IsFocusible">
            <summary>
            Gets or sets a value indicating whether the user is able to focus the UIElement or not .
            </summary>
            <value><see langword="true"/> if the user can able to focus the element ; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererBase.HasCurrentCellState">
            <summary>
            Gets a value indicating whether the current cell renderer is set or not.
            </summary>
            <value>
            Returns <b>true</b> if the current cell state is maintained; otherwise , <b>false</b>.
            </value> 
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererBase.CurrentCellIndex">
            <summary>
            Gets a value indicating the current cell's coordinates.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex"/></value>
            <exception cref="T:System.InvalidOperationException"> 
            Thrown when the CurrentCellIndex is accessed before the current cell is maintained. 
            </exception>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererBase.CurrentCellElement">
            <summary>
            Gets a value indicating the current cell(<see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>) UIElement in <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>
            </summary>
            <value>An instance of <see cref="T:System.Windows.UIElement"/></value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererBase.CurrentCellRendererElement">
            <summary>
            Gets a value indicating edit UIElement of current cell. It should be null when current cell is not in editing.
            </summary>
            <value>An instance of <see cref="T:System.Windows.UIElement"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererBase.CurrentStyle">
            <summary>
            Gets a value indicating the style information for the current cell in <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/>.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.XlsIO.IStyle"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererBase.IsInEditing">
            <summary>
            Gets or sets a value indicating whether the current cell is in editing or not.
            </summary>
            <value><see langword="true"/> if the user can perform the editing in the current cell; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererBase.IsFocused">
            <summary>
            Gets or sets a value indicating whether the focus is set on the current cell in <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/> .
            </summary>
            <value><see langword="true"/> if the focus is set on current cell ; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererBase.DisplayElementOptimization">
             <summary>
            Gets or sets a value indicating whether to load the UIElement to display its content or not.
             </summary>
             <value><see langword="true"/> if it loads the display Element for the cell only when the content is not empty; otherwise, <see langword="false"/>.</value>
             <remarks>If true, it will loads the display element for the cell only when it have content. It the cell is empty, then it doesn’t load the display element.</remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererBase.SupportRenderOptimization">
             <summary>
            Gets or sets a value indicates whether the edit element directly loads to display the content even the cell is not in edit mode. 
             </summary>      
             <value>
             <b>true</b> if the renderer supports directly to the drawing context ; otherwise, <b>false</b>.
             </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererBase.UseOnlyRendererElement">
            <summary>
            Gets or sets a value indicates whether to use the cell element (GridCell) to display its content.
            </summary>      
            <value>
            <b>true</b> if the grid cell is placed inside the renderer element; otherwise, <b>false</b>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererBase.SupportDrawingOptimization">
            <summary>
            Gets or sets a value whether the cell content should be drawn or not. 
            </summary>
            <value><see langword="true"/> draw its content; else  loads display element to display its content.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererBase.MoveCurrentCell">
            <summary>
            Gets or sets a value whether the current cell can be moved by pressing the arrow keys while editing.
            </summary>
            <value>True or False</value>
            <remarks>Set as true, when current cell is first time edit the text or directly edit the text if that cell is not in edit mode whether cell is empty or not empty.
            And also if true, then only move the current cell when up or down key is pressed otherwise not move.
            Otherwise set as false.</remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererBase.Grid">
            <summary>
            Gets or sets the value indicating the instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.SfCellGrid"/>
            </summary>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.SfCellGrid"/></value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererCollection.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Component and optionally releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</param>
            <remarks>See the documentation for the <see cref="N:System.ComponentModel"/> class and its Dispose member.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererCollection.Add(System.String,Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.IGridCellRenderer)">
            <summary>
            Add the Renderers to the Renderer dictionary.
            </summary>
            <param name="key">Key to the SpreadsheetCellRenderer Collection.</param>
            <param name="renderer">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.IGridCellRenderer"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererCollection.Remove(System.String)">
            <summary>
            Remove the Renderer from dictionary for corresponding key value.
            </summary>
            <param name="key">Key to the SpreadsheetCellRenderer Collection.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererCollection.ContainsKey(System.String)">
            <summary>
            Checks whether the Renderer Dictionary contains the corresponding renderer Key.
            </summary>
            <param name="key">Key to the SpreadsheetCellRenderer Collection.</param>
            <returns>True if the collection contains the key;otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererCollection.ContainsValue(Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.IGridCellRenderer)">
            <summary>
            Checks whether the Renderer Dictionary contains the corresponding renderer.
            </summary>
            <param name="cellRenderer">An instance of <see cref="!:SpreadsheetCellRendererBase"/>. </param>
            <returns>True if the collection contains specific value; otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererCollection.CopyTo(Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.IGridCellRenderer[],System.Int32)">
            <summary>
            Copies the renderer elements of the System.Collections.ICollection to an System.Array, starting at a particular System.Array index.
            </summary>
            <param name="array">Collection of <see cref="!:SpreadsheetCellRendererBase"/>.</param>
            <param name="index">Index of the renderer element.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererCollection.Clear">
            <summary>
            Clears the values in Renderer Dictionary.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an
            <see cref="T:System.Array" />, starting at a particular <see
            cref="T:System.Array" /> index.
            </summary>
            <param name="index">The zero-based index in <paramref name="array" /> at which
            copying begins. </param>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is
            the destination of the elements copied from <see
            cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" />
            must have zero-based indexing. </param>
            <filterpriority>2</filterpriority>
            <exception cref="T:System.ArgumentException"><paramref name="array" /> is
            multidimensional.-or- The number of elements in the source <see
            cref="T:System.Collections.ICollection" /> is greater than the available space
            from <paramref name="index" /> to the end of the destination <paramref
            name="array" />.-or-The type of the source <see
            cref="T:System.Collections.ICollection" /> cannot be cast automatically to the
            type of the destination <paramref name="array" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" />
            is less than zero. </exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="array" /> is
            null. </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererCollection.GetEnumerator">
            <summary>
            Returns the Enumerator that iterates through collection for retriving the values.
            </summary>
            <returns>Content of the SpreadsheetCellRenderer collection </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererCollection.Item(System.String)">
            <summary>
            Gets or sets the value indicating the Indexer which will return the renderer for the corresponding key value.
            </summary>
            <param name="key">An Index of the renderer.</param>
            <value>An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.IGridCellRenderer"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererCollection.Values">
            <summary>
            Gets the value indicating the renderers in the collection.
            </summary>
            <value>The values in the hashtable.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererCollection.Keys">
            <summary>
            Gets the value indicating the keys in the renderer collection.
            </summary>
            <value>Keys in the hashtable.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererCollection.Count">
            <summary>
            Gets the number of elements contained in the <see
            cref="T:System.Collections.ICollection" />.
            </summary>
            <returns>
            The number of elements contained in the <see
            cref="T:System.Collections.ICollection" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see
            cref="T:System.Collections.ICollection" /> is synchronized (thread safe).
            </summary>
            <returns>
            true if access to the <see cref="T:System.Collections.ICollection" /> is
            synchronized (thread safe); otherwise, false.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellRendererCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see
            cref="T:System.Collections.ICollection" />.
            </summary>
            <returns>
            An object that can be used to synchronize access to the <see
            cref="T:System.Collections.ICollection" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridVirtualizingCellRendererBase`2.DisplayRecycleBin">
            <summary>
            Creates a new instance of <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.VirtualizingCellUIElementBin&lt;T&gt;"/> class.
            </summary>     
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridVirtualizingCellRendererBase`2.TemplateRecycleBin">
            <summary>
            Creates a new instance of <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.VirtualizingCellUIElementBin&lt;T&gt;"/> class. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridVirtualizingCellRendererBase`2.EditRecycleBin">
            <summary>
            Creates a new instance of <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.VirtualizingCellUIElementBin&lt;T&gt;"/> class. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridVirtualizingCellRendererBase`2.OnEnteredEditMode(System.Windows.UIElement)">
            <summary>
            Invoked when the cell is being entered into the edit mode.
            </summary>
            <param name="currentRendererElement">An instance of <see cref="T:System.Windows.UIElement"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridVirtualizingCellRendererBase`2.OnEditingComplete(System.Windows.UIElement)">
            <summary>
            Invoked when the editing operation is completed on the cell.
            </summary>
            <param name="currentRendererElement">An instance of <see cref="T:System.Windows.UIElement"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridVirtualizingCellRendererBase`2.OnUnloadUIElements(Syncfusion.UI.Xaml.CellGrid.GridCell)">
            <summary>
            Invoked when the cell is scrolled out of view or unloaded from the view.
            <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase &lt; D,E &gt;"/> overrides this method and either removes the cell renderer visuals from the parent
            or hide them and reuse it later in same element depending on whether <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase&lt; D,E &gt;.AllowRecycle"/>  was set.
            </summary>
            <param name="uiElement">An instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCell"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridVirtualizingCellRendererBase`2.OnArrange(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.UIElement,System.Windows.Rect)">
            <summary>
            Invoked when the visual children of cell is arranged in view. 
            </summary>
            <param name="cellRowColumnIndex">
            The Coordinates of the cell.
            </param>
            <param name="uiElement">
            The corresponding UIElement that is to be arranged.
            </param>
            <param name="cellRect">
            The corresponding size of cell element for arranging the UIElement.
            </param>        
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridVirtualizingCellRendererBase`2.OnMeasure(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.UIElement,System.Windows.Size)">
            <summary>
            Invoked to determine the size of the current cell.
            </summary>
            <param name="cellRowColumnIndex">Coordinates of a cell.</param>
            <param name="uiElement">The corresponding UIElement to measure.</param>
            <param name="availableSize">The size of element.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridVirtualizingCellRendererBase`2.ClearRecycleBin">
            <summary>
            Clears all the items from RecycleBin.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridVirtualizingCellRendererBase`2.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase">SpreadsheetVirtualizingCellRendererBase</see>.
            </summary>
            <remarks>Performs application-defined tasks associated with freeing, releasing, or
            resetting unmanaged resources.</remarks>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridVirtualizingCellRendererBase`2.OnCreateEditUIElement">
            <summary>
            Creates a new UIElement for the edit mode of cell.
            </summary>
            <returns>A UIElement for the edit mode.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridVirtualizingCellRendererBase`2.OnCreateDisplayUIElement">
            <summary>
            Creates a new UIElement for the display mode of cell.
            </summary>
            <returns>A UIElement for the display mode.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridVirtualizingCellRendererBase`2.OnCreateTemplateUIElement">
            <summary>
            Creates a new template UIElement for the cell.
            </summary>
            <returns>An instance of System.Windows.Controls.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridVirtualizingCellRendererBase`2.OnUpdateTemplateElement(System.Windows.Controls.ContentControl,Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo)">
            <summary>
            Updates the Template UIElement with particular style info.
            </summary>
            <param name="uiElement">Corresponding UIElement to update the template element.</param>
            <param name="style">An instance of <see cref="T:Syncfusion.XlsIO.IStyle"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridVirtualizingCellRendererBase`2.OnWireEditUIElement(`1)">
            <summary>
            Wires the events associated with edit UIElement.
            </summary>
            <param name="uiElement">
            The corresponding edit UIElement to wire its events.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridVirtualizingCellRendererBase`2.OnUnwireEditUIElement(`1)">
            <summary>
            Unwires the events associated with edit UIElement.
            </summary>
            <param name="uiElement">
            The corresponding edit UIElement to unwire its events.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridVirtualizingCellRendererBase`2.OnWireDisplayUIElement(`0)">
            <summary>
            Wires the events associated with display UIElement.
            </summary>
            <param name="uiElement">
            The corresponding display UIElement to wire its events.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridVirtualizingCellRendererBase`2.OnUnwireDisplayUIElement(`0)">
            <summary>
            Unwires the events associated with display UIElement.
            </summary>
            <param name="uiElement">
            The corresponding display UIElement to unwire its events.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridVirtualizingCellRendererBase`2.OnWireTemplateUIElement(System.Windows.Controls.ContentControl)">
            <summary>
            Wires the events associated with template UIElement.
            </summary>
            <param name="uiElement">
            The corresponding template UIElement to wire its events.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridVirtualizingCellRendererBase`2.OnUnWireTemplateUIElement(System.Windows.Controls.ContentControl)">
            <summary>
            Unwires the events associated with template UIElement.
            </summary>
            <param name="uiElement">
            The corresponding template UIElement to unwire its events.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridVirtualizingCellRendererBase`2.OnEditElementLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when the Edit UIElement loaded in <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetColumn"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:System.Windows.RoutedEventArgs">RoutedEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridVirtualizingCellRendererBase`2.OnEditElementLostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when the Edit UIElement loses its logical focus.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:System.Windows.RoutedEventArgs">RoutedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridVirtualizingCellRendererBase`2.AllowRecycle">
            <summary>
            Gets or sets a value indicating whether elements can be recycled when scrolled out of view.
            In this case when a cell is scrolled out of view
            it is moved into a recycle bin and the next time a new element is scrolled into
            view the element is recovered from the recycle bin and reinitialized with the
            new content of the cell. The default value is false.
            </summary>
            <value><c>true</c> if elements can be recycled when scrolled out of view; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridComboBoxCellRenderer.OnInitializeDisplayElement(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Controls.TextBlock,Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo,System.String)">
            <summary>
            Initialize the display value of combobox cell renderer.
            </summary>
            <param name="rowColumnIndex">initializing element rowindex and column index</param>
            <param name="uiElement">textblock</param>
            <param name="style">cellstyle</param>
            <param name="text">display text</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridComboBoxCellRenderer.OnInitializeEditElement(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Controls.ComboBox,Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo,System.String)">
            <summary>
            Initialize the edit element of combobox while loading in the grid.
            </summary>
            <param name="rowColumnIndex">edit element rowcolumnindex</param>
            <param name="uiElement">combobox</param>
            <param name="style">cellstyle</param>
            <param name="text">displaytext</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridComboBoxCellRenderer.OnUpdateEditCellStyle(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Controls.ComboBox,Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo,System.String)">
            <summary>
            Updates the edit elements while scrolling the grid.
            </summary>
            <param name="cellRowColumnIndex">cellRowColumnIndex</param>
            <param name="uiElement">Combobox</param>
            <param name="style">cellstyle</param>
            <param name="text">display text</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridComboBoxCellRenderer.OnUpdateCellStyle(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Controls.TextBlock,Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo,System.String)">
            <summary>
            Update the display element while scrolling the grid.
            </summary>
            <param name="cellRowColumnIndex">cellRowColumnIndex of updating cell</param>
            <param name="uiElement">combobox</param>
            <param name="style">cellstyle</param>
            <param name="text">display text</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCurrencyCellRenderer.ProcessPreviewInpueText(System.Windows.Input.KeyEventArgs)">
            <summary>
            Gets the preview input text while try edit the Currency textbox.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridFormulaCellRenderer.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridFormulaCellRenderer"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridNumericCellRenderer">
            <summary>
            This GridCellNumericRenderer class render the the display element as the textblock 
            and render the edit element as the SfNumericTextBox.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridNumericCellRenderer.OnInitializeDisplayElement(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Controls.TextBlock,Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo,System.String)">
            <summary>
            Initialize the properties of display element based on styles.
            </summary>
            <param name="rowColumnIndex">row and column index of cell</param>
            <param name="uiElement">display uielement</param>
            <param name="style">grid style information</param>
            <param name="text"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridNumericCellRenderer.OnInitializeEditElement(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,Syncfusion.Windows.Shared.DoubleTextBox,Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo,System.String)">
            <summary>
            Initialize the proerties of edit element (NumericTextBox) based on the styles.
            </summary>
            <param name="rowColumnIndex">row and column index of the cell</param>
            <param name="uiElement">edit uielement</param>
            <param name="style">grid style information</param>
            <param name="text"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridNumericCellRenderer.OnUpdateCellStyle(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Controls.TextBlock,Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo,System.String)">
            <summary>
            Update the display element styles while scrolling the grid.
            </summary>
            <param name="uiElement">display uielement</param>
            <param name="style">grid style information</param>
             <param name="cellRowColumnIndex"></param>
             <param name="text"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridNumericCellRenderer.OnUpdateEditCellStyle(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,Syncfusion.Windows.Shared.DoubleTextBox,Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo,System.String)">
            <summary>
            Update the edit element while scrolling the grid.
            </summary>
            <param name="uiElement">edit uielement.</param>
            <param name="style">grid style information.</param>
            <param name="cellRowColumnIndex"></param>
            <param name="text"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridNumericCellRenderer.ProcessPreviewInpueText(System.Windows.Input.KeyEventArgs)">
            <summary>
            Gets the preview input text while try edit the numeric textbox.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridNumericCellRenderer.GetControlValue">
            <summary>
            Returns the controlvalue of the current render element(SfNumericTextBox).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridNumericCellRenderer.SetControlValue(System.Object)">
            <summary>
            Returns the true if the control value is set else false.
            </summary>
            <param name="value">new control value</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridPercentCellRenderer.ProcessPreviewInpueText(System.Windows.Input.KeyEventArgs)">
            <summary>
            Gets the preview input text while try edit the Currency textbox.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridUpDownCellRenderer">
            <summary>
            This GridCellUpDownRenderer class render the the display element as the textblock 
            and render the edit element as the SfUpDownCellRenderer.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridUpDownCellRenderer.OnInitializeDisplayElement(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Controls.TextBlock,Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo,System.String)">
            <summary>
            Initialize the properties of display element based on styles.
            </summary>
            <param name="rowColumnIndex">row and column index of cell</param>
            <param name="uiElement">display uielement</param>
            <param name="style">grid style information</param>
             <param name="text"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridUpDownCellRenderer.OnInitializeEditElement(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,Syncfusion.Windows.Shared.UpDown,Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo,System.String)">
            <summary>
            Initialize the proerties of edit element (SfNumricUpDown) based on the styles.
            </summary>
            <param name="rowColumnIndex">row and column index of the cell</param>
            <param name="uiElement">edit uielement</param>
            <param name="style">grid style information</param>
            <param name="text"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridUpDownCellRenderer.OnUpdateCellStyle(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Windows.Controls.TextBlock,Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo,System.String)">
            <summary>
            Update the display element styles while scrolling the grid.
            </summary>
            <param name="uiElement">display uielement</param>
            <param name="style">grid style information</param>
            <param name="cellRowColumnIndex"></param>
            <param name="text">grid style information</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridUpDownCellRenderer.OnUpdateEditCellStyle(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,Syncfusion.Windows.Shared.UpDown,Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo,System.String)">
            <summary>
            Update the edit element while scrolling the grid.
            </summary>
            <param name="uiElement">edit uielement.</param>
            <param name="style">grid style information.</param>
            <param name="cellRowColumnIndex"></param>
            <param name="text"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridUpDownCellRenderer.uiElement_ValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            updates the value changes in the numeric updown.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridUpDownCellRenderer.GetControlValue">
            <summary>
            Returns the controlvalue of the current render- SfNumericUpDown.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridUpDownCellRenderer.SetControlValue(System.Object)">
            <summary>
            Returns the true if the control value is set else false.
            </summary>
            <param name="value">new control value</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridUpDownCellRenderer.ProcessPreviewInpueText(System.Windows.Input.KeyEventArgs)">
            <summary>
            Gets the preview input text while try edit the numeric updownedit.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellWrapper">
            <summary>
            This is a wrapper class that helps to bind a dependency property of an external WPF control with its cell bound value.
            This makes it possible to accommodate a data-bound template in grid cells.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.GridCellWrapper.ValueChanged">
            <summary>
            Occurs when the cell bound value changes.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.NamespaceDoc">
            <summary>
            Contains interface and classes to create the renderers for all supported cell types. 
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.VirtualizingCellUIElementBin`1">
            <summary>
            This class implements a cache of UIElement of the given type parameter T. It is used
            by the <see cref="T:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.VirtualizingCellUIElementBin`1"/> renderer to recycle UIElement 
            elements for cells that were scrolled out of view and delay unloading of UIElements.
            This reduces the number of times the UIElement needs to be created or unloaded and
            instead only the contents of the UIElement will be reinitialized with cell contents. <para/>
            </summary>
            <typeparam name="T">Type of the Element</typeparam>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.VirtualizingCellUIElementBin`1.Enqueue(Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.IGridCellRenderer,`0)">
            <summary>
            Enqueues the specified UI element.
            </summary>
            <param name="renderer">An instance of <see cref="!:ISpreadsheetCellRenderer"/>.</param>
            <param name="uiElement">The UIElement.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.VirtualizingCellUIElementBin`1.Dequeue(Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.IGridCellRenderer)">
            <summary>
            Dequeues an UIElement from the specified canvas.
            </summary>
            <param name="renderer">An instance of <see cref="!:ISpreadsheetCellRenderer"/>.</param>
            <returns>An UIElement</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.VirtualizingCellUIElementBin`1.Item(Syncfusion.UI.Xaml.CellGrid.GridCellRenderer.IGridCellRenderer)">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.Queue`1"/> for the specified Renderer.
            </summary>
            <value>An instance of <see cref="T:System.Collections.Generic.Queue`1"/>. </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Converter.NamespaceDoc">
            <summary>
            Contains classes to import the Excel into SfCellGrid.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Converter.ImportingCellFromExcelEventArgs">
            <summary>
            Importing event arguments
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Converter.ImportingCellFromExcelEventArgs.Handled">
            <summary>
            gets or sets whether the importing event is handled or not
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Converter.ImportingCellFromExcelEventArgs.Range">
            <summary>
            Gets the importing range
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Converter.ImportingCellFromExcelEventArgs.Sheet">
            <summary>
            Gets the importing worksheet
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Converter.ImportingCellFromExcelEventArgs.Cell">
            <summary>
            Gets the importing styleinformation of each cell
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Converter.ImportingCellFromExcelEventArgs.Mode">
            <summary>
            gets or sets the type of importing by default value
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Converter.ExcelImportingOptions">
            <summary>
            sets the importing method as delegate to handle gridcellimportingexcelhandler
            sets the importmode such as style,text by default value
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Converter.ExcelImportingOptions.#ctor(Syncfusion.UI.Xaml.CellGrid.Converter.GridCellImportFromExcelHandler)">
            <summary>
            create excelimportingoptions with importingeventhandler method
            </summary>
            <param name="ImportingEventHandler">method passed to <see cref="T:Syncfusion.UI.Xaml.CellGrid.Converter.GridCellImportFromExcelHandler"/> </param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Converter.ExcelImportingOptions.CellImportFromExcelHandler">
            <summary>
            gets or sets the importingevent handler method
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Converter.ExcelImportingOptions.ImportMode">
            <summary>
            gets or sets the type of importing by default value
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Converter.ExcelImportExtension">
            <summary>
            Done the operation of importing of excel sheet into grid.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Converter.ExcelImportExtension.ImportFromExcel(Syncfusion.UI.Xaml.CellGrid.SfCellGrid,System.IO.Stream)">
            <summary>
            Imports single sheet from excel to Grid.
            </summary>
            <param name="grid">The Grid.</param>
            <param name="fileStream">The File stream.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Converter.ExcelImportExtension.ImportFromExcel(Syncfusion.UI.Xaml.CellGrid.SfCellGrid,System.IO.Stream,Syncfusion.UI.Xaml.CellGrid.Converter.ExcelImportingOptions)">
            <summary>
            Imports single sheets from excel to Grid with excel importing options
            </summary>
            <param name="grid">The Grid.</param>
            <param name="fileStream">The File stream.</param>
            <param name="importingoptions">excelimportingoptions.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Converter.ExcelImportExtension.ImportFromExcel(Syncfusion.UI.Xaml.CellGrid.SfCellGrid,System.String)">
            <summary>
            Imports single sheets from excel to Grid.
            </summary>
            <param name="grid">The Grid.</param>
            <param name="file">File to import.</param>   
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Converter.ExcelImportExtension.ImportFromExcel(Syncfusion.UI.Xaml.CellGrid.SfCellGrid,System.String,Syncfusion.UI.Xaml.CellGrid.Converter.ExcelImportingOptions)">
            <summary>
            Imports single sheets from excel to Grid with excel importing options.
            </summary>
            <param name="grid">The Grid.</param>
            <param name="file">File to import</param>
            <param name="importingoptions">Excel importing options.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Converter.ExcelImportExtension.ImportFromExcel(Syncfusion.UI.Xaml.CellGrid.SfCellGrid,Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Imports single sheets from excel to Grid.
            </summary>
            <param name="grid">The grid.</param>
            <param name="sheet">The Sheet.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Converter.ExcelImportExtension.ImportFromExcel(Syncfusion.UI.Xaml.CellGrid.SfCellGrid,Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.CellGrid.Converter.ExcelImportingOptions)">
            <summary>
            Imports single sheets from excel to Grid with importing event handler.
            </summary>
            <param name="grid">The grid.</param>
            <param name="sheet">The sheet.</param>
            <param name="importingoptions">Excel importing options.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Converter.ExcelImportExtension.ImportRowHeightColumnWidth(Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.CellGrid.SfCellGrid)">
            <summary>
            Copies row height information from excel worksheet into grid.
            Copies column width information from excel worksheet into grid.
            </summary>
            <param name="sheet">Sheet to copy from.</param>
            <param name="grid">Grid to copy into.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Converter.ExcelImportExtension.ImportNamedRange(Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.CellGrid.SfCellGrid)">
            <summary>
            Copies the named range from excel worksheet into grid.
            </summary>
            <param name="sheet">The sheet.</param>
            <param name="grid">The grid.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Converter.ExcelImportExtension.ImportMergesToGrid(Syncfusion.XlsIO.IWorksheet,Syncfusion.UI.Xaml.CellGrid.SfCellGrid)">
            <summary>
            Copies merged ranges into grid.
            </summary>
            <param name="sheet">Destination worksheet.</param>
            <param name="grid">Source grid.</param>       
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Converter.ExcelImportExtension.GetFormat(System.String)">
            <summary>
            convert the excel format into grid supports formats.
            </summary>
            <param name="format">The format.</param>
            <returns>The format</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Converter.ExcelImportExtension.ImportExcelRangeToGrid(Syncfusion.UI.Xaml.CellGrid.SfCellGrid,Syncfusion.XlsIO.IWorksheet,Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.CellGrid.Converter.ExcelImportingOptions)">
            <summary>
            Actual operation of importing excel cellvalues and styles are importing done here
            </summary>
            <param name="grid">importing to grid</param>
            <param name="sheet">importing sheet</param>
            <param name="rangeToConvert">source cell range</param>
            <param name="importoptions">Excel importing options</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Converter.ExcelImportExtension.ImportCellStyle(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo,Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Sets grid cell style based on excel style.
            </summary>
            <param name="range">Source style copied from excel range</param>
            <param name="cell">Destination cell.</param>
            <param name="sheet">worksheet</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Converter.ExcelImportExtension.ImportBrush(Syncfusion.XlsIO.IStyle,Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo)">
            <summary>
            Sets cell's brush.
            </summary>
            <param name="excelStyle">Excel style containing information about brush.</param>
            <param name="cell">Style info to set brush in.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Converter.ExcelImportExtension.ImportAlignment(Syncfusion.XlsIO.IStyle,Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo)">
            <summary>
            Sets alignment of the GridStyleInfo.
            </summary>
            <param name="excelStyle">Excel style to get alignment block from.</param>
            <param name="cell">GridStyleInfo to set alignment block in.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Converter.ExcelImportExtension.ImportOrientation(Syncfusion.XlsIO.IStyle,Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo)">
            <summary>
            Copies orientation settings from excel style into grid cell.
            </summary>
            <param name="excelStyle">Source cell style.</param>
            <param name="cell">Destination grid cell.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Converter.ExcelImportExtension.ImportFont(Syncfusion.XlsIO.IStyle,Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo)">
            <summary>
            Sets font for the cell based on Excel style.
            </summary>
            <param name="excelStyle">Excel style to get font setting from.</param>
            <param name="cell">Cell style to set font.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Converter.ExcelImportExtension.ImportBorders(Syncfusion.XlsIO.IRange,Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo,Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Sets grid cell borders based on excel style.
            </summary>
            <param name="range">Source range where excel style copied.</param>
            <param name="cell">Destination cell.</param>
            <param name="sheet">Destination cell.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Converter.ExcelImportExtension.ConvertExcelBorder(Syncfusion.XlsIO.IBorder)">
            <summary>
            Converts excel border into grid border.
            </summary>
            <param name="border">Border to convert.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfoStore">
            <summary>
            Implements the data store for the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfo"/> object.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore">
             <summary>
             Provides storage for the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase"/> object.
             </summary>
             <remarks>
             You cannot instantiate a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/> class directly. You have
             to derive a concrete class from this class that you can instantiate.<para/>
             In derived classes of <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase"/>, you always need to
             implement a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase"/> / <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/>
             pair. The <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/> holds all the data that are specific
             to the style object and should be persisted.<para/>
             The <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase"/> is a wrapper around the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/>.
             It provides type safe accessor properties to modify data of the underlying
             data store and can hold temporary information about the style object that
             does not need to be persisted.<para/>
            
             In Essential Grid for example, the GridStyleInfo class holds extensive identity
             information about a style object such as cached base styles, row and column index,
             a reference to the grid model and more. These are all the information that can be discarded
             when the style is no longer used (because maybe the cell is not visible anymore). Only
             the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/> part needs to be kept alive.
             <para/>
             <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/> allows you to register any number of properties but keeps the data
             very memory efficient. Only properties that are actually used for a style
             object will be allocated for an object. The StyleObjectStore handles the storage of objects.
             For short integers, enums and Boolean values the data will be stored in a BitVector32
             structure to save even more memory.
             <para/>
             See the overview for <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase"/> for further discussion about style objects.
             </remarks>
             <seealso cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoIdentityBase"/>
             <seealso cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase"/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.IStyleInfo">
            <summary>
            Defines an interface implemented both by <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase"/> and <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/>
            that allows you to check the state of the object, read and write specific property and execute
            style operations with the <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.IStyleInfo.ModifyStyle(Syncfusion.UI.Xaml.CellGrid.Styles.IStyleInfo,Syncfusion.UI.Xaml.CellGrid.Styles.StyleModifyType)"/>. method.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.IStyleInfo.IsSubset(Syncfusion.UI.Xaml.CellGrid.Styles.IStyleInfo)">
            <summary>
            Compares all properties with another style object and indicates whether
            the current set of initialized properties is a subset of
            the other style object.
            </summary>
            <param name="style">The other style to compare with.</param>
            <returns>True if this style object is a subset of the other style object.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.IStyleInfo.ModifyStyle(Syncfusion.UI.Xaml.CellGrid.Styles.IStyleInfo,Syncfusion.UI.Xaml.CellGrid.Styles.StyleModifyType)">
            <summary>
            Applies changes to a style object as specified with <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleModifyType"/>.
            </summary>
            <param name="style">The style object to be applied on the current object.</param>
            <param name="mt">The actual operation to be performed.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.IStyleInfo.MergeStyle(Syncfusion.UI.Xaml.CellGrid.Styles.IStyleInfo)">
            <summary>
            Merges two styles. Resets all properties that differ among the two style object
            and keeps only those properties that are equal.
            </summary>
            <param name="style">The other style object this style object should merge with.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.IStyleInfo.ParseString(System.String)">
            <summary>
            Parses a given string and applies the results to affected properties in this style object.
            </summary>
            <param name="s">The string to be interpreted.</param>
            <remarks>
            <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.IStyleInfo.ParseString(System.String)"/> consumes strings previously generated with
            a <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.ToString(System.String,System.IFormatProvider)"/> method call.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.IStyleInfo.HasValue(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <summary>
            Indicates whether a specific property has been initialized for the current object.
            </summary>
            <param name="sip">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.IStyleInfo.GetValue(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <summary>
            Queries the value for a specific property that has been initialized for the current object.
            </summary>
            <param name="sip">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.IStyleInfo.IsEmpty">
            <summary>
            Indicates whether the style is empty.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.IStyleInfo.IsChanged">
            <summary>
            Indicates whether any properties for this object have changed since it was applied last time.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.IStyleInfo.Store">
            <summary>
            Returns the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/> object that holds all the data for this style object.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore.FindStyleInfoProperty(System.String)">
            <summary>
            Searches the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty"/> with the given name.
            </summary>
            <param name="name">The name of the property to look for.</param>
            <returns>A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty"/> that is associated with the specified name.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore.#ctor">
            <summary>
            Initializes an empty <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore.Clone">
            <summary>
            Creates an exact copy of the current object.
            </summary>
            <returns>A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/> with same data as the current object.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore.CopyTo(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore)">
            <summary>
            Copies all properties to another <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/>.
            </summary>
            <param name="target">The target to copy all properties to.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore.Equals(System.Object)">
            <override/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore.GetHashCode">
            <override/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore.ToString">
            <override/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore.ResetChangedBits">
            <summary>
            Resets all "Changed" bits that mark certain properties as modified.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore.Clear">
            <summary>
            Clears out all properties for this <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore.HasValue(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <summary>
            Indicates whether a specific property has been initialized for the current object.
            </summary>
            <param name="sip">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore.IsValueModified(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <summary>
            Indicates whether a specific property has been modified for the current object.
            </summary>
            <param name="sip">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore.SetValueModified(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty,System.Boolean)">
            <summary>
            Marks a specific property as modified or unmodified for the current object.
            </summary>
            <param name="sip">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
            <param name="value">The new value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore.ResetValue(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <summary>
            Marks a specific property as uninitialized for the current object.
            </summary>
            <param name="sip">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore.GetValue(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <summary>
            Queries the value for a specific property that has been initialized for the current object.
            </summary>
            <param name="sip">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore.GetShortValue(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <summary>
            Queries the <see cref="T:System.Int16"/> value for a specific property that has been initialized for the current object.
            </summary>
            <param name="sip">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore.SetValue(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty,System.Object)">
            <summary>
            Overloaded. Initializes the value for a specific property.
            </summary>
            <param name="sip">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
            <param name="value">The value to be saved for the property.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore.SetValue(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty,System.Int16)">
            <summary>
            Initializes the <see cref="T:System.Int16"/> value for a specific property.
            </summary>
            <param name="sip">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
            <param name="value">The value to be saved for the property.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore._EqualsProperty(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty,Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore)">
            <summary>
            
            </summary>
            <param name="sip"></param>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore._ModifyProperty(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty,Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore,Syncfusion.UI.Xaml.CellGrid.Styles.StyleModifyType)">
            <summary>
            
            </summary>
            <param name="sip"></param>
            <param name="style"></param>
            <param name="mt"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore.IsSubset(Syncfusion.UI.Xaml.CellGrid.Styles.IStyleInfo)">
            <summary>
            Compares all properties with another style object and determines
            if the current set of initialized properties is a subset of
            the other style object.
            </summary>
            <param name="istyle">The other style to compare with.</param>
            <returns>True if this style object is a subset of the other style object.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore.ModifyStyle(Syncfusion.UI.Xaml.CellGrid.Styles.IStyleInfo,Syncfusion.UI.Xaml.CellGrid.Styles.StyleModifyType)">
            <summary>
            Applies changes to a style object as specified with <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleModifyType"/>.
            </summary>
            <param name="istyle">The style object to be applied on the current object.</param>
            <param name="mt">The actual operation to be performed.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore.ModifyStyleKeepChanges(Syncfusion.UI.Xaml.CellGrid.Styles.IStyleInfo,Syncfusion.UI.Xaml.CellGrid.Styles.StyleModifyType)">
            <summary>
            Applies changes to a style object as specified with <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleModifyType"/>. If a property is modified
            its Changed flag is set so that the parent style object can identify modified properties in a subsequent Changed notification.
            It is called from CopyFrom and keeping changed bits is needed to properly raise
            StyleChanged notifications.
            </summary>
            <param name="istyle">The style object to be applied on the current object.</param>
            <param name="mt">The actual operation to be performed.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore.MergeStyle(Syncfusion.UI.Xaml.CellGrid.Styles.IStyleInfo)">
            <summary>
            Merges two styles. Resets all properties that differ among the two style objects
            and keeps only those properties that are equal.
            </summary>
            <param name="istyle">The other style object this style object should merge with.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore.ProcessWriteXml(System.Xml.XmlWriter,Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <summary>
            Allows customization of serializing the StyleInfoProperty. Returns True if you override
            this method and do not want default serialization behavior for this property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore.ProcessReadXml(System.Xml.XmlReader,Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <summary>
            Allows customization of serializing the StyleInfoProperty. Returns True if you override
            this method and do not want default serialization behavior for this property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Serializes all properties of this object to XML.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore.RegisterXmlSerializer(System.Type,System.Xml.Serialization.XmlSerializer)">
            <summary>
            Registers the XmlSerializer for a specific type. This XmlSerializer will
            be used when a object of the specified type is read back in from an xml stream. 
            You can for example register an "ImageHolder" serializer for a custom ImageHolder type
            and have that serializer be used when GridStyleInfo.CellValue contains an ImageHolder object.
            </summary>
            <param name="type"></param>
            <param name="xmlSerializer"></param>
            <example>
            <code>
            XmlSerializer imageHolderSerializer = new XmlSerializer(typeof(object), new Type[] { typeof(ImageHolder) });
            GridStyleInfoStore.RegisterXmlSerializer(typeof(ImageHolder), imageHolderSerializer);
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore.ReadXml(System.Xml.XmlReader)">
            <summary>
            Serializes all properties of this object from XML.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore.GetSchema">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore.StyleInfoProperties">
            <summary>
            Returns a collection with <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty"/> objects.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore.StaticDataStore">
            <summary>
            Static data must be declared static in derived classes (this avoids collisions
            when StyleInfoStore is used in the same project for different types of style
            classes).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore.PropertyGridSortOrder">
            <summary>
            The <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore.PropertyGridSortOrder"/> class checks this property
            to find out about the sort order of the properties in this <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore.IsEmpty">
            <summary>
            Indicates whether this is an empty object and no properties have been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore.IsChanged">
            <summary>
            Indicates whether any properties have been changed.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfoStore.TopProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfo.Top"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfoStore.LeftProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfo.Left"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfoStore.BottomProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfo.Bottom"/> property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfoStore.RightProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfo.Right"/> property. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfoStore.#ctor">
            <overload>
            Initializes a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfoStore"/>
            </overload>
            <summary>
            Initializes an empty <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfoStore"/>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfoStore.Clone">
            <override/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfoStore.StaticDataStore">
            <override/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfo">
            <summary>
            Provides a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectBase"/> object for borders in a cell. Each border side of
            the cell can be configured individually with a <see cref="T:System.Windows.Media.Pen"/> value. Border sides that
            have not been initialized will inherit default values from a base style.
            </summary>
            <example>
            The following code changes border information for cells:
            <code lang="C#">
            
                        Pen border = new Pen(GridBorderStyle.Solid, Color.FromArgb(57, 73, 122));
                        model[rowIndex, colIndex].Borders.Bottom = border;
                        model[rowIndex, colIndex].Borders.Right = border;
            </code>
            The following code hides grid lines for specific cells:
            <code lang="C#">
                        Pen border = new Pen(GridBorderStyle.None);
                        model[rowIndex, colIndex].Borders.Bottom = border;
                        model[rowIndex, colIndex].Borders.Right = border;
            </code>
            </example>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectBase">
            <summary>
            <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectBase"/> is an abstract base class for classes
            to be used as subobjects in a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase"/>.
            </summary>
            <remarks>
            <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectBase"/> is derived from <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase"/>
            and thus provides the same easy way to provide properties that can inherit values
            from base styles at run-time.<para/>
            The difference is that <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectBase"/> supports this inheritance
            mechanism as a subobject from a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase"/>. A subobject needs to
            have knowledge about its parent object and be able to walk the base styles from the
            parent object.<para/>
            Examples for implementation of <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectBase"/> are the font and border
            classes in Essential Grid.<para/>
            Programmers can derive their own style classes from <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectBase"/> 
            and add type-safe (and Intelli-sense) 
            supported custom properties to the style class. If you write your own 
            SpinButton class that needs individual properties, simply add a "CellSpinButtonInfo" 
            class as subobject. If you derive CellSpinButtonInfo from StyleInfoSubObjectBase, 
            your new object will support property inheritance from base styles.
            <para/>
            See the overview for <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase"/> for further discussion about style objects.
            </remarks>
            <example>The following example shows how you can use the GridFontInfo class in Essential Grid:
            <code lang="C#">
                    standard.Font.Facename = "Helvetica";
                    model[1, 3].Font.Bold = true;
                    string faceName = model[1, 3].Font.Facename; // any cell inherits standard style
                    Console.WriteLIne(faceName); // will output "Helvetica"
                    Console.WriteLIne(model[1, 3].Font.Bold); // will output "true"
                    Console.WriteLIne(model[1, 3].Font.HasFaceName); // will output "False"
            </code>
            </example>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase">
            <summary>
            Provides a wrapper object for the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/> object with type
            safe access to all properties stored in the style object.
            <para/>
            Style objects provide a very user friendly way to modify data. It is very much like in Excel VBA.
            For example, to change the bold setting for a cell, you simply call grid[5,2].Font.Bold = True.
            </summary>
            <remarks>
            The <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase"/> is a wrapper around the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/>.
            It provides type safe accessor properties to modify data of the underlying
            data store and can hold temporary information about the style object that
            does not need to be persisted.
            <para/>
            In Essential Grid for the example, the GridStyleInfo class holds extensive identity
            information about a style object such as cached base styles, row and column index,
            a reference to the grid model, and more. This is all the information that can be discarded
            when the style is no longer used (because maybe the cell is not visible anymore). Only
            the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/> part needs to be kept alive.
            <para/>
            Style objects only exist temporarily and will be created as a weak reference in a
            volatile data store. Once Garbage Collection kicks in smart style objects that are not
            referenced any more will be garbage collected. The volatile data cache can also be
            cleared manually.
            <para/>
            Because Style objects know their identity they can notify their owner of changes or
            load base style information when the user interacts with the style object. This allows
            you to make changes to a style object directly, such as Cell.Font.Bold = True;
            <para/>
            Style objects support property inheritance from parent styles, e.g. in a grid a cell
            can inherit properties from a parent row, column, table or a collection of names styles
            in a base styles map.
            <para/>
            Style objects support subobjects. Subobjects can support inheritance (e.g. a Font.Bold
            can be inherited). Immutable subobjects like BrushInfo don't support inheritance of
            individual properties.
            <para/>
            <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/> allows you to register any number of properties but keeps the data
            very memory efficient. Only properties that are actually used for a style
            object will be allocated for an object. The StyleObjectStore handles the storage of the object.
            For short integers, enums and Boolean values, the data will be stored in a BitVector32
            structure to save even more memory.
            <para/>
            Programmers can derive their own style classes from <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectBase"/>
            and add type-safe (and intellisense)
            supported custom properties to the style class. If you write, for example, your own
            SpinButton class that needs individual properties, simply add a �CellSpinButtonInfo�
            class as subobject. If you derive CellSpinButtonInfo from StyleInfoSubObjectBase,
            your new object will support property inheritance from base styles.
            <para/>
            Style objects can be written into a string (see <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.ToString(System.String,System.IFormatProvider)"/>) and later be recreated
            using the <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.ParseString(System.String)"/> method. When writing the string you have the option to show
            default values (use the �d� format). Subobjects will be identified with a dot
            �.�, e.g. �Font.Bold�
            <para/>
            Style object support several operations how to combine information from two styles. Style operations
            include: apply changes, apply initialized properties, override initialized properties, exclude properties.
            See the <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.ModifyStyle(Syncfusion.UI.Xaml.CellGrid.Styles.IStyleInfo,Syncfusion.UI.Xaml.CellGrid.Styles.StyleModifyType)"/> method.
            <para/>
            Style objects support BeginUpdate, EndUpdate mechanism. This allows users to batch several operations
            on a style object into one transaction.
            <para/>
            </remarks>
            <example>The following example shows how you can use the GridFontInfo class in Essential Grid:
            <code lang="C#">
                    standard.Font.Facename = "Helvetica";
                    model[1, 3].Font.Bold = true;
                    string faceName = model[1, 3].Font.Facename; // any cell inherits standard style
                    Console.WriteLIne(faceName); // will output "Helvetica"
                    Console.WriteLIne(model[1, 3].Font.Bold); // will output "true"
                    Console.WriteLIne(model[1, 3].Font.HasFaceName); // will output "False"
            </code>
            </example>
            <seealso cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoIdentityBase"/>
            <seealso cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.identity">
            <exclude/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase._store">
            <exclude/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.expandableObjects">
            <exclude/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.SetStore(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore)">
            <summary>
            Sets the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/> object that holds all the data for this style object.
            </summary>
            <param name="store"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.ClearCache">
            <summary>
            Clears the cache.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.#ctor">
            <summary>
            Overloaded. Initializes a new style object with no identity and data initialized.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.#ctor(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase"/> object and associates it with an existing <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/>.
            </summary>
            <param name="store">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/> that holds data for this object.
            All changes in this style object will be saved in the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/> object.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.#ctor(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoIdentityBase,Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase"/> object and associates it with an existing <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/> and <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoIdentityBase"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoIdentityBase"/> that holds the identity for this <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase"/>.</param>
            <param name="store">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/> that holds data for this object.
            All changes in this style object will be saved in the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/> object.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.#ctor(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoIdentityBase,Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore,System.Boolean)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase"/> object and associates it with an existing <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/> and <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoIdentityBase"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoIdentityBase"/> that holds the identity for this <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase"/>.</param>
            <param name="store">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/> that holds data for this object.
            All changes in this style object will be saved in the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/> object.</param>
            <param name="cacheValues">if set to <c>true</c> the style the resulting value of a property when inherited from a basestyle
            so that the property does not have to be evaluated multiple times when called repeatedly.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.Dispose">
            <summary>
            Releases all resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.Equals(System.Object)">
            <summary>
            Indicates whether two style objects are equal. Identity is left out with this comparison,
            only the data (<see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.Store"/>) are compared.
            </summary>
            <param name="obj">The other style object to compare the current object with.</param>
            <returns>True if both objects have equal data; false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.EqualsObject(System.Object,System.Object)">
            <summary>
            Compares two objects for equality. Works also with NULL references.
            </summary>
            <param name="obj1">The first object to compare.</param>
            <param name="obj2">The second object to compare.</param>
            <returns>True if both objects are equal.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.GetHashCode">
            <summary>
            Returns a hash code which is based on values inside the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.Store"/>.
            </summary>
            <returns>An integer hash code.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.ToString">
            <summary>
            Overloaded. Creates a formatted string for this style object. This string can
            later be consumed by <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.ParseString(System.String)"/>.
            </summary>
            <returns>A string with formatted style information.</returns>
            <remarks>
            Style objects can be formatted into a string that can be consumed 
            by <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.ParseString(System.String)"/> to recreate style information.
            <para/>
            When writing the string, you have the option to show default values 
            (use the �d� format). <para/>
            Subobjects will be identified with a period ".", e.g. "Font.Bold".
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.ToString(System.String)">
            <summary>
            Creates a formatted string for this style object. This string can
            later be consumed by <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.ParseString(System.String)"/>. You can specify
            "d" as format if you want to write out default values inherited from a base style.
            </summary>
            <param name="format">Use "d" if default values should be included; "G" and NULL are default.</param>
            <returns>A string with formatted style information.</returns>
            <remarks>
            Style objects can be formatted into a string that can be consumed 
            by <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.ParseString(System.String)"/> to recreate style information.
            <para/>
            When writing the string you have the option to show default values 
            (use the "d" format) or not. <para/>
            Subobjects will be identified with a period ".", e.g. "Font.Bold".
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.ToString(System.String,System.IFormatProvider)">
            <summary>
            Creates a formatted string for this style object. This string can
            later be consumed by <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.ParseString(System.String)"/>. You can specify
            "d" as format if you want to write out default values inherited from a base style.
            </summary>
            <param name="format">Use "d" if default values should be included; "G" and NULL are default.</param>
            <returns>A string with formatted style information.</returns>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> to be used
            for the <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.ToString(System.String,System.IFormatProvider)"/> operation. Can be NULL.</param>
            <remarks>
            Style objects can be formatted into a string that can be consumed 
            by <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.ParseString(System.String)"/> to recreate style information.
            <para/>
            When writing the string you have the option to show default values 
            (use the "d" format) or not. <para/>
            Subobjects will be identified with a period ".", e.g. "Font.Bold".
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.ParseString(System.String)">
            <summary>
            Parses a given string and applies it's results to affected properties in this style object.
            </summary>
            <param name="s">The string to be parsed.</param>
            <remarks>
            <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.ParseString(System.String)"/> consumes strings previously generated with
            a <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.ToString(System.String,System.IFormatProvider)"/> method call.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.BeginInit">
            <summary>
            Suspends raising <see cref="E:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.Changed"/> events until <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.EndInit"/> is called 
            and will not change the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.IsChanged"/> state of this object.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.EndInit">
            <summary>
            Resumes raising <see cref="E:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.Changed"/> events and resets the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.IsChanged"/> state of this object.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.BeginUpdate">
            <summary>
            Suspends raising <see cref="E:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.Changed"/> events until <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.EndUpdate"/> is called.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.EndUpdate">
            <summary>
            Suspends raising <see cref="E:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.Changed"/> events and if changes were
            made before the <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.EndUpdate"/> call, it will raise a changed
            notification immediately.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.GetDefaultStyle">
            <summary>
            Override this method to return a default style object for your derived class.
            </summary>
            <returns>A default style object.</returns>
            <remarks>
            You should cache the default style object in a static field.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.CreateSubObjectIdentity(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <summary>
            Override this method to create a product-specific identity object for a sub object.
            </summary>
            <returns>An identity object for a subobject of this style.</returns>
            <example>
            The following code is an example how Essential Grid creates GridStyleInfoSubObjectIdentity:
            <code lange="C#">
            public override StyleInfoSubObjectIdentity CreateSubObjectIdentity(StyleInfoProperty sip)
            {
            	return new GridStyleInfoSubObjectIdentity(this, sip);
            }
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.GetDefaultStyleInfoStore(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <summary>
            Locates the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/> in the list of base styles that 
            provides a specific property.
            </summary>
            <param name="sip">Identifies the property to look for.</param>
            <returns>The style store object that has the specified property.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.IntGetDefaultStyleInfo(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <summary>
            Locates the base style that has the specified property and returns its instance.
            </summary>
            <param name="sip">Identifies the property to look for.</param>
            <returns>The style object that has the specified property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.inStyleChanged">
            <exclude/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.OnStyleChanged(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <summary>
            Notifies the associated identity object that a specific property
            was changed and raises a <see cref="E:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.Changed"/> event.
            </summary>
            <param name="sip">Identifies the property to look for.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.OnStyleChanging(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <summary>
            Notifies the associated identity object that a specific property
            will be changed and raises a <see cref="E:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.Changing"/> event.
            </summary>
            <param name="sip">Identifies the property to look for.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.IsSubset(Syncfusion.UI.Xaml.CellGrid.Styles.IStyleInfo)">
            <summary>
            Compares all properties with another style object and indicates
            whether the current set of initialized properties is a subset of
            the other style object.
            </summary>
            <param name="istyle">The other style to compare with.</param>
            <returns>True if this style object is a subset of the other style object.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.CopyFrom(Syncfusion.UI.Xaml.CellGrid.Styles.IStyleInfo)">
            <summary>
            Copies properties from another style object. This method raises Changing and Changed 
            notifications if the other object differs. (ModifyStyle does not raise these events).
            </summary>
            <param name="istyle">The style object to be applied on the current object.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.ModifyStyle(Syncfusion.UI.Xaml.CellGrid.Styles.IStyleInfo,Syncfusion.UI.Xaml.CellGrid.Styles.StyleModifyType)">
            <summary>
            Applies changes to a style object as specified with <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleModifyType"/>.
            </summary>
            <param name="istyle">The style object to be applied on the current object.</param>
            <param name="mt">The actual operation to be performed.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.MergeStyle(Syncfusion.UI.Xaml.CellGrid.Styles.IStyleInfo)">
            <summary>
            Merges two styles. Resets all properties that differ among the two style objects
            and keeps only those properties that are equal.
            </summary>
            <param name="istyle">The other style object this style object should merge with.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.HasValue(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <summary>
            Indicates whether the specified property has been initialized for the current object.
            </summary>
            <param name="sip">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.IsValueModified(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <summary>
            Indicates whether the specified property has been modified for the current object.
            </summary>
            <param name="sip">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.ResetValue(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <summary>
            Marks the specified property as uninitialized for the current object.
            </summary>
            <param name="sip">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.NotifySubObjectChanged(Syncfusion.UI.Xaml.CellGrid.Styles.IStyleInfoSubObject)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.GetValue(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <summary>
            Queries the value for the specified property that has been initialized for the current object
            or locates it in a base style.
            </summary>
            <param name="sip">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.GetDefaultValue(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <summary>
            Gets the default value from a base style.
            </summary>
            <param name="sip">The sip.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.GetShortValue(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <summary>
            Queries the <see cref="T:System.Int16"/> value for the specified property that has been initialized for the current object
            or locates it in a base style.
            </summary>
            <param name="sip">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.SetValue(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty,System.Object)">
            <summary>
            Overloaded. Initializes the value for the specified property.
            </summary>
            <param name="sip">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
            <param name="value">The value to be saved for the property.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.SetValue(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty,System.Int16)">
            <summary>
            Initializes the <see cref="T:System.Int16"/> value for the specified property.
            </summary>
            <param name="sip">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
            <param name="value">The value to be saved for the property.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Serializes the contents of this object into an XML stream.
            </summary>
            <param name="writer">Represents the XML stream.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.GetSchema">
            <summary>
            Not implemented and returns NULL.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.ReadXml(System.Xml.XmlReader)">
            <summary>
            Deserializes the contents of this object from an XML stream.
            </summary>
            <param name="reader">Represents the XML stream.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.Identity">
            <summary>
            Gets / sets the identity information for the current <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.Store">
            <summary>
            The <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/> object that holds all the data for this style object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.ExpandableObjects">
            <exclude/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.CacheValues">
            <summary>
            Gets or sets a value indicating whether this instance should cache values for resolved base style properties.
            </summary>
            <value><c>true</c> if instance should cache values; otherwise, <c>false</c>.</value>
        </member>
        <member name="E:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.Changed">
            <summary>
            Occurs when a property in the style object or in a sub object is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.WeakReferenceChangedListeners">
            <summary>
            A list of listeners that will be referenced using a WeakReference. The
            listeners must implement the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.IStyleChanged"/> interface. When
            this style object <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.OnStyleChanged(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)"/> method is called it
            will then loop through all objects in this list and call each objects
            <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.IStyleChanged.StyleChanged(Syncfusion.UI.Xaml.CellGrid.Styles.StyleChangedEventArgs)"/> method.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.Changing">
            <summary>
            Occurs before a property in the style object or in a sub object is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.Updating">
            <summary>
            Indicates whether <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.BeginUpdate"/> was called for this object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.IsEmpty">
            <summary>
            Indicates whether the style is empty.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.IsChanged">
            <summary>
            Indicates whether any properties for this object have changed since it was applied last time.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.IStyleInfoSubObject">
            <summary>
            <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.IStyleInfoSubObject"/> defines an interface for classes
            used as sub-objects in a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase"/>.
            </summary>
            <remarks>
            <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectBase"/> implements this interface.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.IStyleInfoSubObject.MakeCopy(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase,Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <summary>
            Makes an exact copy of the current object.
            </summary>
            <param name="newOwner">The new owner style object for the copied object.</param>
            <param name="sip">The identifier for this object.</param>
            <returns>A copy of the current object and registered with the new owner style object.</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.IStyleInfoSubObject.Sip">
            <summary>
            Returns a unique identifier for this sub object in the owner style object. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.IStyleInfoSubObject.Owner">
            <summary>
            Returns a reference to the owner style object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.IStyleInfoSubObject.Data">
            <summary>
            Returns the data for this object. This is the StyleInfoStore from the constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectBase.#ctor(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore)">
            <summary>
            Overloaded. Initializes a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectBase"/> object and associates it with an existing <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/>.
            </summary>
            <param name="store">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/> that holds data for this object.
            All changes in this style object will be saved in the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/> object.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectBase.#ctor(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectIdentity,Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectBase"/> object and associates it with an existing <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectIdentity"/> that holds the identity for this <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase"/>.
            <param name="store">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/> that holds data for this object.</param>
            All changes in this style object will be saved in the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/> object.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectBase.Dispose(System.Boolean)">
            <summary>
            Releases all the resources used by the component.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectBase.OnStyleChanged(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <override/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectBase.IntGetDefaultStyleInfo(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <summary>
            Locates the base style that has the specified property and returns its instance.
            </summary>
            <param name="sip">Identifies the property to look for.</param>
            <returns>The style object that has the specified property.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectBase.MakeCopy(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase,Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <summary>
            Makes an exact copy of the current object.
            </summary>
            <param name="newOwner">The new owner style object for the copied object.</param>
            <param name="sip">The identifier for this object.</param>
            <returns>A copy of the current object registered with the new owner style object.</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectBase.SubObjectIdentity">
            <summary>
            Returns the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectIdentity"/> with identity information about this object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectBase.Sip">
            <summary>
            Returns a unique identifier for this subobject in the owner style object. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectBase.Data">
            <summary>
            Returns the data for this object. This is the StyleInfoStore from the constructor.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectBase.Owner">
            <summary>
            Returns a reference to the owner style object.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfo.CreateObject(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectIdentity,System.Object)">
            <summary>
            Creates the CellBordersInfo object.
            </summary>
            <param name="identity">The identity.</param>
            <param name="store">The store.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfo.#ctor">
            <overload>
            Initializes a new empty <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfo"/> object.
            </overload>
            <summary>
            Initializes a new empty <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfo"/> object.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfo.#ctor(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectIdentity)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfo"/>  object and associates it with an existing <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.CachedStyleInfoSubObjectIdentity"/> that holds the indentity for this <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfo"/>.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfo.#ctor(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectIdentity,Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfoStore)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfo"/>  object and associates it with an existing <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectIdentity"/> that holds the indentity for this <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfo"/>.
            <param name="store">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfoStore"/> that holds data for this <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfo"/>.
            All changes in this style object will saved in the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfoStore"/> object.</param>
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfo.MakeCopy(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase,Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <override/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfo.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfo"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfo.GetDefaultStyle">
            <summary>
            Returns <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfo.Default"/>
            </summary>
            <returns>A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfo"/> object with default values.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfo.ResetAll">
            <summary>
            Resets all four border sides with one command.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfo.ResetTop">
            <summary>
            Resets the top border
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfo.ResetLeft">
            <summary>
            Resets the left border
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfo.ResetBottom">
            <summary>
            Resets the bottom border
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfo.ResetRight">
            <summary>
            Resets the right border
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfo.Default">
            <summary>
            Returns a default <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfo"/> to be used with a default style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfo.All">
            <summary>
            Allows you to set all four border sides with one command.
            </summary>
            <example>
            <code lang="C#">
            model[2, 2].Borders.All = new Pen(GridBorderStyle.Solid, Color.FromArgb(100, 238, 122, 3));
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfo.Item(Syncfusion.UI.Xaml.CellGrid.Styles.CellBorderSide)">
            <summary>
            Returns the <see cref="T:System.Windows.Media.Pen"/> for the specified <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.CellBorderSide"/>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfo.Top">
            <summary>
            The top border
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfo.HasTop">
            <summary>
            Determines if the top border has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfo.Left">
            <summary>
            The left border
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfo.HasLeft">
            <summary>
            Determines if the left border has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfo.Bottom">
            <summary>
            The bottom border
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfo.HasBottom">
            <summary>
            Determines if the bottom border has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfo.Right">
            <summary>
            The right border
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.CellBordersInfo.HasRight">
            <summary>
            Determines if the right border has been initialized.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.CellBorderSide.Top">
            <summary>
            At top
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.CellBorderSide.Left">
            <summary>
            At left side
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.CellBorderSide.Bottom">
            <summary>
            At bottom
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.CellBorderSide.Right">
            <summary>
            At right side
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoIdentityBase">
            <summary>
            This is an abstract base class that provides identity information
            for <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase"/>  objects.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoIdentityBase.GetBaseStyle(Syncfusion.UI.Xaml.CellGrid.Styles.IStyleInfo,Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <summary>
            Loops through all base styles until it finds a style that has a specific property initialized.
            </summary>
            <param name="thisStyleInfo"></param>
            <param name="sip">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
            <returns>A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase"/> that has the property initialized.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoIdentityBase.Dispose">
            <summary>
            Releases all resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoIdentityBase.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoIdentityBase"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoIdentityBase.GetBaseStyleNotEmptyExpandable(Syncfusion.UI.Xaml.CellGrid.Styles.IStyleInfo,Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <summary>
            Loops through all base styles until it finds an expandable <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectBase"/>
            that has one or more properties initialized.
            </summary>
            <param name="thisStyleInfo">The style object.</param>
            <param name="sip">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
            <returns>A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase"/> that has the property initialized.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoIdentityBase.GetBaseStyles(Syncfusion.UI.Xaml.CellGrid.Styles.IStyleInfo)">
            <summary>
            Returns an array with base styles for the specified style object.
            </summary>
            <param name="thisStyleInfo">The style object.</param>
            <returns>An array of style objects that are base styles for the current style object.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoIdentityBase.OnStyleChanged(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase,Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <summary>
            Occurs when a property in the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase"/> has changed.
            </summary>
            <param name="style">The <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase"/> instance that has changed.</param>
            <param name="sip">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoIdentityBase.OnStyleChanging(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase,Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <summary>
            Occurs before a property in the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase"/> is changing.
            </summary>
            <param name="style">The <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase"/> instance that is changed.</param>
            <param name="sip">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoIdentityBase.InnerIdentity">
            <summary>
            Gets / sets another identity object to be used for determining base styles.
            GetBaseStyle will call InnerIdentity.GetBaseStyle if this object is not NULL.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoIdentityBase.IsDisposable">
            <summary>
            Gets or sets a value indicating whether this object is disposable.
            </summary>
            <value>
            	<c>true</c> if this object is disposable; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyleIdentity.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyleIdentity"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyleIdentity.GetBaseStyles(Syncfusion.UI.Xaml.CellGrid.Styles.IStyleInfo)">
            <override/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyleIdentity.ToString">
            <override/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyleIdentity.OnStyleChanged(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase,Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <override/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyleIdentity.Info">
            <summary>
            Results of ToString method.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyle">
            <summary>
            GridBaseStyle represents base styles in the grid. A base style has a name and holds the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo"/> object
            with style information. Cells in the grid can reference a base style with <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.BaseStyle"/>.
            </summary>
            <remarks>
            The grid has four system-defined base styles:
            <list type="table">
            <listheader><term>Name</term><description>Descriptions</description></listheader>
            <item><term>Standard</term><description>Holds cell information for all cells.</description></item>
            <item><term>Header</term><description>Holds cell information for row and column headers.</description></item>
            <item><term>Row Header</term><description>Holds cell information specific to row headers.</description></item>
            <item><term>Column Header</term><description>Holds cell information specific to column headers.</description></item>
            </list>
            You can format each cell in the grid individually, but settings that have not been initialized will be inherited from a base style
            whereas the standard style is the style that any cell will inherit information from.
            <para/>
            You can register custom base styles with the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStylesMap"/> map that you can access with <see cref="P:Syncfusion.UI.Xaml.CellGrid.GridModel.BaseStylesMap"/>.
            <para/>
            Base styles themselves can be inherited from other base styles. The "Row Header" base style is derived from the "Header" base style for example.
            </remarks>
            <example>
            The following example shows how to modify base styles and how to add a new custom base style:
            <code lang="C#">
                GridStyleInfo standard = model.BaseStylesMap["Standard"].StyleInfo;
                GridStyleInfo header = model.BaseStylesMap["Header"].StyleInfo;
                GridStyleInfo rowHeader = model.BaseStylesMap["Row Header"].StyleInfo;
                GridStyleInfo colHeader = model.BaseStylesMap["Column Header"].StyleInfo;
            
                standard.TextColor = Color.FromArgb(0, 21, 84);
                header.Interior = new BrushInfo(GradientStyle.Vertical, Color.FromArgb(238, 234, 216), Color.FromArgb(203, 199, 184));
                rowHeader.Interior = new BrushInfo(GradientStyle.Horizontal, Color.FromArgb(238, 234, 216), Color.FromArgb(203, 199, 184));
                standard.Font.Facename = "Helvetica";
                standard.Interior = new BrushInfo(Color.FromArgb(237, 240, 247));
            
            
                GridStyleInfo customStyle = model.BaseStylesMap["Custom Style"].StyleInfo;
                standard.Interior = new BrushInfo(Color.Green);
                    model[1, 1].BaseStyle = "Custom Style";
            </code>
            </example>
            <seealso cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStylesMap"/>
            <seealso cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyle.#ctor">
            <overload>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyle"/> object.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyle"/> object.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyle.#ctor(System.String,System.Boolean,Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore,Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStylesMap)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyle"/> with name and style information and associates it with a base styles map.
            </summary>
            <param name="name">The name of the base style.</param>
            <param name="isSystem">True if this is a system base style that cannot be deleted; False otherwise.</param>
            <param name="styleInfoStore">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore"/> with style settings.</param>
            <param name="styleInfoMap">The <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStylesMap"/> for this base style.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyle.#ctor(System.String,System.Boolean,Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyle"/> with name and style information.
            </summary>
            <param name="name">The name of the base style.</param>
            <param name="isSystem">True if this is a system base style that cannot be deleted; False otherwise.</param>
            <param name="styleInfoStore">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore"/> with style settings.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyle.#ctor(System.String,System.Boolean,Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyle"/> with name and style information.
            </summary>
            <param name="name">The name of the base style.</param>
            <param name="isSystem">True if this is a system base style that cannot be deleted; False otherwise.</param>
            <param name="styleInfo">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo"/> with style settings.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyle.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyle"/> with a name.
            </summary>
            <param name="name">The name of the base style.</param>
            <param name="isSystem">True if this is a system base style that cannot be deleted; False otherwise.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyle.Dispose(System.Boolean)">
            <override/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyle.Clone">
            <summary>
            Creates a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyle"/> object and copies all properties from this object.
            </summary>
            <returns>The new created <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyle"/> object.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyle.ToString">
            <override/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyle.Name">
            <summary>
            The base style name.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyle.IsSystem">
            <summary>
            Indicates if this a system style that cannot be removed.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyle.BaseStylesMap">
            <summary>
            The <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStylesMap"/> this base style belongs to.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyle.StyleInfo">
            <summary>
            The <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo"/> with style settings for this base style.
            </summary>
            <remarks>
            The <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo"/> returned by this property is simply a wrapper for
            the settings in <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyle.StyleInfoStore"/>.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyle.StyleInfoStore">
            <summary>
            The <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore"/> with style settings for this base style.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStylesMap">
            <summary>
            GridBaseStylesMap holds a collection of base styles for a grid and lets you add, remove, and change base styles.
            </summary>
            <remarks>
            A base style has a name and holds the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo"/> object
            with style information. Cells in the grid can reference a base style with <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.BaseStyle"/>.
            <para/>
            The grid has four system-defined base styles as discussed in <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyle"/> overview. The
            <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStylesMap.RegisterStandardStyles"/> method adds these system styles to the collection.
            <para/>
            You can register custom base styles with the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStylesMap"/> map that you can access with <see cref="P:Syncfusion.UI.Xaml.CellGrid.GridModel.BaseStylesMap"/>.
            <para/>
            Use <see cref="!:ShowGridBaseStylesMapDialog"/> to let users customize base styles at run-time.
            </remarks>
            <example>
            The following example shows how to modify base styles and how to add a new custom base style:
            <code lang="C#">
                GridStyleInfo standard = model.BaseStylesMap["Standard"].StyleInfo;
                GridStyleInfo header = model.BaseStylesMap["Header"].StyleInfo;
                GridStyleInfo rowHeader = model.BaseStylesMap["Row Header"].StyleInfo;
                GridStyleInfo colHeader = model.BaseStylesMap["Column Header"].StyleInfo;
            
                standard.TextColor = Color.FromArgb(0, 21, 84);
                header.Interior = new BrushInfo(GradientStyle.Vertical, Color.FromArgb(238, 234, 216), Color.FromArgb(203, 199, 184));
                rowHeader.Interior = new BrushInfo(GradientStyle.Horizontal, Color.FromArgb(238, 234, 216), Color.FromArgb(203, 199, 184));
                standard.Font.Facename = "Helvetica";
                standard.Interior = new BrushInfo(Color.FromArgb(237, 240, 247));
            
            
                GridStyleInfo customStyle = model.BaseStylesMap["Custom Style"].StyleInfo;
                standard.Interior = new BrushInfo(Color.Green);
                    model[1, 1].BaseStyle = "Custom Style";
            </code>
            </example>
            <seealso cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyle"/>
            <seealso cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStylesMap.ToString">
            <override/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStylesMap.#ctor">
            <summary>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStylesMap"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStylesMap.#ctor(Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyle[])">
            <summary>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStylesMap"/> and copies an array of base styles.
            </summary>
            <param name="baseStyles">An array with <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyle"/> styles.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStylesMap.Clone">
            <summary>
            Creates a new instance <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStylesMap"/> and initializes it with all base styles from this collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStylesMap.Dispose(System.Boolean)">
            <override/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStylesMap.GetBaseStylesMapStyles(System.String,System.Int32@)">
            <summary>
            Copies a base style and all base styles it depends on into an array.
            </summary>
            <param name="name">The name of the base style.</param>
            <param name="level">The maximum number of levels to look at when walking referenced
            base styles.</param>
            <returns>An array of <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyle"/> objects with the first base style and all base styles it depends on.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStylesMap.RegisterStandardStyles">
            <summary>
            Adds "Standard", "Header", "Row Header", and "Column Header" base styles.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStylesMap.GetNewBaseStyleName">
            <summary>
            Gets a suggestion for a new base style name, e.g. when the user adds a new
            base style in the <see cref="!:GridBaseStyleCollectionEditor"/>.
            </summary>
            <returns>A string for a new base style name.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStylesMap.Add(Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyle)">
            <summary>
            Adds a base style to the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStylesMap"/>.
            </summary>
            <param name="baseStyle">The base style to be added.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStylesMap.Remove(System.String)">
            <summary>
            Removes the base style with the specified name.
            </summary>
            <param name="name">The name of the base style to be removed.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStylesMap.AddRange(Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyle[])">
            <summary>
            Adds a range of base styles to the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStylesMap"/>.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStylesMap.CopyTo(Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyle[],System.Int32)">
            <summary>
            Copies all base styles into an array of <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyle"/> starting at specified index.
            </summary>
            <param name="values">The array of <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyle"/> where the values should be copied to.</param>
            <param name="index">The starting index in the destination array.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStylesMap.GetEnumerator">
            <summary>
            Returns an enumerator that can enumerate through the base styles object in this collection.
            </summary>
            <returns>An enumerator.</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStylesMap.Modified">
            <summary>
            Property Modified (bool)
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStylesMap.InCollectionEditor">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStylesMap.Item(System.String)">
            <summary>
            The <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyle"/> for the specified name.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStylesMap.Item(System.Int32)">
            <summary>
            Gets / sets a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyle"/> at the specified index.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStylesMap.Count">
            <summary>
            The number of base styles in the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStylesMap"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStylesMap.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to base styles table.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStylesMap.IsReadOnly">
            <summary>
            Gets a value indicating whether the base styles collection is Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStylesMap.IsSynchronized">
            <summary>
            Gets a value indicating whether the base styles collection is synchronized.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Empty">
            <summary>
            An empty style object.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.#ctor">
            <summary>
            Initalizes a new style object.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.#ctor(Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo)">
            <summary>
            Initalizes a new style object and copies all data from an existing style object.
            </summary>
            <param name="style">The style object that contains the original data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.#ctor(Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore)">
            <summary>
            Initalizes a new style object and associates it with an existing <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore"/>.
            </summary>
            <param name="store">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore"/> that holds data for this <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo"/>.
            All changes in this style object will be saved in the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore"/> object.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.#ctor(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoIdentityBase)">
            <summary>
            Initalizes a new style object and associates it with an existing <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoIdentity"/> that holds the indentity for this <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo"/>.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.#ctor(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoIdentityBase,Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore)">
            <summary>
            Initalizes a new style object and associates it with an existing <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoIdentity"/> that holds the indentity for this <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo"/>.
            </param>
            <param name="store">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore"/> that holds data for this <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo"/>.
            All changes in this style object will be saved in the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore"/> object.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.CreateSubObjectIdentity(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <override/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.GetOffLineCopy">
            <summary>
            Creates a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo"/> and copies its cell and identity information from the current object. The new
            instance will be made offline so that changes in this style object are not be stored in the GridData
            </summary>
            <returns>A new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo"/> instance.</returns>
            <remarks>
            Lets a style object load base styles and default values but disables
            saving changes back to the grid. (see OnStyleChanged below)
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetBackground">
            <summary>
            Resets <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Background"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetForeground">
            <summary>
            Resets text color information.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetHorizontalAlignment">
            <summary>
            Resets <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HorizontalAlignment"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetVerticalAlignment">
            <summary>
            Resets <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.VerticalAlignment"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetBaseStyle">
            <summary>
            Resets <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.BaseStyle"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetBorders">
            <summary>
            Resets the borders information.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetFont">
            <summary>
            Resets font information.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetCellItemTemplate">
            <summary>
            Resets <see cref="!:GridStyleInfo.CellTemplate"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetCellEditTemplate">
            <summary>
            Resets <see cref="!:GridStyleInfo.CellTemplate"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetCellItemTemplateKey">
            <summary>
            Resets <see cref="!:GridStyleInfo.CellTemplateKey"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetCellEditTemplateKey">
            <summary>
            Resets <see cref="!:GridStyleInfo.CellTemplateKey"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetCellType">
            <summary>
            Resets <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.CellType"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetCellValue">
            <summary>
            Resets <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.CellValue"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetCellValue2">
            <summary>
            Resets <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.CellValue2"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetDescription">
            <summary>
            Resets <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Description"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetFormatProvider">
            <summary>
            Resets <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.FormatProvider"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetReadOnly">
            <summary>
            Resets Read-only information.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetEnabled">
            <summary>
            Resets Enabled information.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetFormulaTag">
            <summary>
            Resets FormulaTag information.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetConditionalFormats">
            <summary>
            Resets conditional formats information.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetPadding">
            <summary>
            Resets padding information.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetTextTrimming">
            <summary>
            Resets TextTrimming information.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetTextWrapping">
            <summary>
            Resets TextWrapping information.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.GetFormattedText(System.Object)">
            <overload>
            Return formatted text for the specified value.
            GridStyleInfo.CultureInfo is used for conversion to string.
            </overload>
            <summary>
            Return formatted text for the specified value.
            </summary>
            <param name="value">The value to be formatted.</param>
            <returns>A string that holds the formatted text.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetText">
            <summary>
            Resets the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Text"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.GetText(System.Object)">
            <summary>
            Returns text for the specified value (ignoring any <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Format"/> settings).
            CultureInfo.CurrentCulture is used for conversion to string.
            </summary>
            <param name="value">The value to be converted to string.</param>
            <returns>A string that represents the value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetTag">
            <summary>
            Resets <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Tag"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetComment">
            <summary>
            Resets <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Comment"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetCommentTemplate">
            <summary>
            Resets <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.CommentTemplate"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetCommentBrush">
            <summary>
            Resets <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.CommentBrush"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetTooltip">
            <summary>
            Resets <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Tooltip"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetTooltipTemplate">
            <summary>
            Resets <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.TooltipTemplate"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetDataValidationTooltip">
            <summary>
            Resets <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.DataValidationTooltip"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetDataValidationTooltipTemplate">
            <summary>
            Resets <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.DataValidationTooltipTemplate"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetNumericEdit">
            <summary>
            Resets <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.NumericEdit"/>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetCurrencyEdit">
            <summary>
            Resets <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.CurrencyEdit"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetPercentEdit">
            <summary>
            Resets <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.PercentEdit"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetUpDownEdit">
            <summary>
            Resets <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.UpDownEdit"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetDateTimeEdit">
            <summary>
            Resets <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.DateTimeEdit"/>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetIsThreeState">
            <summary>
            Resets <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.IsThreeState"/>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetHyperlink">
            <summary>
            Resets the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Hyperlink"/>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetComboBox">
            <summary>
            Resets <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ComboBoxEdit"/>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetWantsKeyInput">
            <summary>
            Resets the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Hyperlink"/>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetAllowNull">
            <summary>
            Resets the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.AllowNull"/>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ResetNullValue">
            <summary>
            Resets the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.NullValue"/>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.CellIdentity">
            <summary>
            Holds identity information such as row and column index for the current <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Store">
            <summary>
            The <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore"/> object that holds all the data for this style object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Background">
            <summary>
            Gets or sets a background brush for the cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasBackground">
            <summary>
            Determines if <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Background"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Foreground">
            <summary>
            Gets or sets a foreground brush for the cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasForeground">
            <summary>
            Determines if text color has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HorizontalAlignment">
            <summary>
            Gets or sets horizontal alignment of text in the cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasHorizontalAlignment">
            <summary>
            Determines if <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HorizontalAlignment"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.VerticalAlignment">
            <summary>
            Gets or sets vertical alignment of text in the cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasVerticalAlignment">
            <summary>
            Determines if <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.VerticalAlignment"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.BaseStyle">
            <summary>
            Gets or sets the base style for this style instance with default values for properties that are not initialized for this style object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasBaseStyle">
            <summary>
            Determines if <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.BaseStyle"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Borders">
            <summary>
            Gets or sets cell borders.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasBorders">
            <summary>
            Determines if border information has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Font">
            <summary>
            Gets or sets the font information
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasFont">
            <summary>
            Determines if font information has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.CellItemTemplate">
            <summary>
            Gets or sets the Item DataTemplate for the cell
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasCellItemTemplate">
            <summary>
            Determines if <see cref="!:GridStyleInfo.CellTemplate"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.CellEditTemplate">
             <summary>
            Gets or sets the Edit DataTemplate for the cell.
             </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasCellEditTemplate">
            <summary>
            Determines if <see cref="!:GridStyleInfo.CellTemplate"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.CellItemTemplateKey">
            <summary>
            Gets or sets the Item DataTemplate Key for the cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasCellItemTemplateKey">
            <summary>
            Determines if <see cref="!:GridStyleInfo.CellTemplateKey"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.CellEditTemplateKey">
            <summary>
            Gets or sets the Edit DataTemplate Key for the cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasCellEditTemplateKey">
            <summary>
            Determines if <see cref="!:GridStyleInfo.CellTemplateKey"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.CellType">
            <summary>
            Gets or sets the cell type information for the cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasCellType">
            <summary>
            Determines if <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.CellType"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.CellValue">
            <summary>
            Gets or sets the cell value information for the cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasCellValue">
            <summary>
            Determines if <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.CellValue"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.CellValue2">
            <summary>
            Gets or sets the cell value 2 information of the cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasCellValue2">
            <summary>
            Determines if <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.CellValue2"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Description">
            <summary>
            Gets / sets the text that is shown in check box or pushbuttons.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasDescription">
            <summary>
            Determines if <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Description"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Format">
            <summary>
            Gets or sets the format information of a cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasFormat">
            <summary>
            Determines if <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Format"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.FormatProvider">
            <summary>
            Gets or sets the cell FormatProvider.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasFormatProvider">
            <summary>
            Determines if <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasFormatProvider"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ReadOnly">
            <summary>
            Gets or sets a value indicating whether cell contents can be modified by the user.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasReadOnly">
            <summary>
            Determines if Read-only information has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Enabled">
            <summary>
            Gets or sets a value indicating whether the cell can be activated as current cell or if the cell should be skipped when moving the current cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasEnabled">
            <summary>
            Determines if Enableed information has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.FormulaTag">
            <summary>
            Gets or sets the formula tag of the cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasFormulaTag">
            <summary>
            Determines if FormulaTag  has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ConditionalFormats">
            <summary>
            Gets or sets the conditionalformat information of cell
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasConditionalFormats">
            <summary>
            Determines if conditionalformats has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Padding">
            <summary>
            Gets or sets cell padding.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasPadding">
            <summary>
            Determines if padding has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.TextTrimming">
            <summary>
            Gets or sets how text is trimmed when it exceeds the edges of the cell text rectangle.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasTextTrimming">
            <summary>
            Determines if TextTrimming information has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.TextWrapping">
            <summary>
            Gets or sets a value indicating whether text should be wrapped when it does not fit into a single line.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasTextWrapping">
            <summary>
            Determines if TextWrapping information has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.FormattedText">
            <summary>
            Gets the value formatted with the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Format"/> mask and custom formatting of the <see cref="!:GridCellModelBase.GetFormattedText"/> method of the associated <see cref="!:GridCellModelBase"/> or sets the value by calling the <see cref="!:GridCellModelBase.ApplyFormattedText"/> of the associated <see cref="!:GridCellModelBase"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Text">
            <summary>
            Gets / sets the cellvalue as a string.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasText">
            <summary>
            Determines if <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Text"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.CellRenderer">
            <summary>
            Returns the associated <see cref="!:GridCellModelBase"/> for this style object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Tag">
            <summary>
            Gets or sets the custom tag you can associate with a cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasTag">
            <summary>
            Determines if <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Tag"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Comment">
            <summary>
            Gets or sets the text that should appear in the cell comment tooltip.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasComment">
            <summary>
            Determines if <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Comment"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.CommentTemplate">
            <summary>
            Gets or sets the comment template.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasCommentTemplate">
            <summary>
            Determines if <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.CommentTemplate"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.CommentBrush">
            <summary>
            Determines the Color of Comment Triangle
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasCommentBrush">
            <summary>
            Determines if <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.CommentBrush"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Tooltip">
            <summary>
            Gets or sets the text that should appear in the cell tooltip.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasTooltip">
            <summary>
            Determines if <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Tooltip"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.TooltipTemplate">
            <summary>
            Gets or sets the Tooltip template.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasTooltipTemplate">
            <summary>
            Determines if <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.TooltipTemplate"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.DataValidationTooltip">
            <summary>
            Gets or sets the text that should appear in the cell DataValidation Tooltip.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasDataValidationTooltip">
            <summary>
            Determines if <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.DataValidationTooltip"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.DataValidationTooltipTemplate">
            <summary>
            Gets or sets the DataValidation Tooltip template.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasDataValidationTooltipTemplate">
            <summary>
            Determines if <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.DataValidationTooltipTemplate"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.NumericEdit">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.NumericEdit"/>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasNumericEdit">
            <summary>
            Determines if <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.NumericEdit"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.CurrencyEdit">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.CurrencyEdit"/>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasCurrencyEdit">
            <summary>
            Determines if <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.CurrencyEdit"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.PercentEdit">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.PercentEdit"/>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasPercentEdit">
            <summary>
            Determines if <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.PercentEdit"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.UpDownEdit">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.UpDownEdit"/>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasUpDownEdit">
            <summary>
            Determines if <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.UpDownEdit"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.DateTimeEdit">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.DateTimeEdit"/>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasDateTimeEdit">
            <summary>
            Determines if <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.DateTimeEdit"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.IsThreeState">
            <summary>
            Gets or sets the IsThreeState property for checkbox.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasIsThreeState">
            <summary>
            Determines if <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.IsThreeState"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Hyperlink">
            <summary>
            Gets or sets the Hyperlink property for Hyperlink cell renderer.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasHyperlink">
            <summary>
            Determines if <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Hyperlink"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ComboBoxEdit">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.NumericEdit"/>
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasComboBox">
            <summary>
            Determines if <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ComboBoxEdit"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.WantsKeyInput">
            <summary>
            Gets or sets the WantsKeyInput property for Template cell renderer.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasWantsKeyInput">
            <summary>
            Determines if <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.WantsKeyInput"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.AllowNull">
            <summary>
            Gets or sets the AllowNull property for editors.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasAllowNull">
            <summary>
            Determines if <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.AllowNull"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.NullValue">
            <summary>
            Gets or sets the NullValue property for editors.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HasNullValue">
            <summary>
            Determines if <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.NullValue"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyleCollection">
            <summary>
                A collection that stores 'GridBaseStyle' objects.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyleCollection.#ctor">
            <summary>
                Initializes a new instance of 'GridBaseStyleCollection'.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyleCollection.#ctor(Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyleCollection)">
            <summary>
                Initializes a new instance of 'GridBaseStyleCollection' based on an already existing instance.
            </summary>
            <param name='griValue'>
                A 'GridBaseStyleCollection' from which the contents is copied
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyleCollection.#ctor(Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyle[])">
            <summary>
                Initializes a new instance of 'GridBaseStyleCollection' with an array of 'GridBaseStyle' objects.
            </summary>
            <param name='griValue'>
                An array of 'GridBaseStyle' objects with which to initialize the collection
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyleCollection.AddRange(Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyle[])">
            <summary>
                Copies the elements of an array at the end of this instance of 'GridBaseStyleCollection'.
            </summary>
            <param name='griValue'>
                An array of 'GridBaseStyle' objects to add to the collection.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyleCollection.AddRange(Syncfusion.UI.Xaml.CellGrid.Styles.GridBaseStyleCollection)">
            <summary>
                Adds the contents of another 'GridBaseStyleCollection' at the end of this instance.
            </summary>
            <param name='griValue'>
                A 'GridBaseStyleCollection' containing the objects to add to the collection.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueArray`1">
            <summary>
            A generic class that emulates a subset of a Dictionary{T}.
            Internally rows are hold in a dictionary and each row has a dictionary of cells.
            The class also provides support for adding, removing and moving rows and 
            columns.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueArray`1.Clear">
            <summary>
            Clears out the dictionary. There are no "OnMoved" callback triggered.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueArray`1.RemoveAll">
            <summary>
            Removes all entries from the dictionary and calls "OnRemoveCell" callback for each deleted cell.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueArray`1.Add(Syncfusion.UI.Xaml.CellGrid.Styles.SerializableKeyValuePair{Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,`0})">
            <summary>
            Adds the cell and its value the dictionary.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueArray`1.Add(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,`0)">
            <summary>
            Adds the cell and its value the dictionary. There is no "OnMoved" callback triggered.
            </summary>
            <param name="cell"></param>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueArray`1.Clear(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Removes the cell from the dictionary. There is no "OnRemoved" callback triggered.
            </summary>
            <param name="cell"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueArray`1.Remove(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Removes the cell from the dictionary. There is no "OnRemoved" callback triggered.
            </summary>
            <param name="cell"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueArray`1.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueArray`1"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueArray`1.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueArray`1"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridComboBoxStyleInfo">
            <summary>
            Provides a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectBase"/> object for numericcellstyles settings in a cell. 
            Each numericcell style property of the cell can be configured individually. <para/>
            numericcell style properties thathave not been initialized will inherit default 
            values from a base style.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridComboBoxStyleInfo.Dispose(System.Boolean)">
            <summary>
            Releases the all resources used by the Component.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridComboBoxStyleInfo.#ctor">
            <summary>
            Initialize the <see cref="!:GridNumricStyleInfo"/>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridComboBoxStyleInfo.#ctor(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectIdentity)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo"/>  object and associates it with an existing <see cref="!:GridStyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="!:GridStyleInfoSubObjectIdentity"/> that holds the indentity for this <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo"/>.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridComboBoxStyleInfo.#ctor(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectIdentity,Syncfusion.UI.Xaml.CellGrid.Styles.GridComboBoxStyleInfoStore)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo"/>  object and associates it with an existing <see cref="!:GridStyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="!:GridStyleInfoSubObjectIdentity"/> that holds the indentity for this <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo"/>.
            <param name="store">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfoStore"/> that holds data for this <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo"/>.
            All changes in this style object will saved in the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfoStore"/> object.</param>
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridComboBoxStyleInfo.MakeCopy(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase,Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <override/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridComboBoxStyleInfo.Default">
            <summary>
            Returns the default <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridComboBoxStyleInfo.GetDefaultStyle"/> style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridComboBoxStyleInfo.ItemSource">
            <summary>
            Gets or sets the itemsource for combobox.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridComboBoxStyleInfo.ValueMember">
            <summary>
            Gets or sets the ValueMember property for combobox.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridComboBoxStyleInfo.IsEditable">
            <summary>
            Gets or Sets the IsEditableProperty for combobox.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridComboBoxStyleInfo.StaysOpenOnEdit">
            <summary>
            Gets or Sets the StaysOpenOnEditProperty for combobox.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridComboBoxStyleInfoStore">
            <summary>
            Implements the data store for the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridNumericStyleInfo"/> object.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridComboBoxStyleInfoStore.DisplayMemberProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.DisplayMemeber"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridComboBoxStyleInfoStore.ValueMemberProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.ValueMember"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridComboBoxStyleInfoStore.IsEditableProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.IsEditable"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridComboBoxStyleInfoStore.ItemSourceProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.ItemSource"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridComboBoxStyleInfoStore.StaysOpenOnEditProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.StayOpensOnEdit"/>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridComboBoxStyleInfoStore.#ctor">
            <summary>
            Initializes an empty <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridComboBoxStyleInfoStore"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridComboBoxStyleInfoStore.Clone">
            <override/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfo">
            <summary>
            Provides a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectBase"/> object for currencycellstyles settings in a cell. 
            Each currencycell style property of the cell can be configured individually. <para/>
            numericcell style properties thathave not been initialized will inherit default 
            values from a base style.
            </summary>
            
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfo.Dispose(System.Boolean)">
            <summary>
            Releases the all resources used by the Component.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfo.#ctor">
            <summary>
            Initialize the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfo"/>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfo.#ctor(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectIdentity)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfo"/>  object and associates it with an existing <see cref="!:GridStyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="!:GridStyleInfoSubObjectIdentity"/> that holds the indentity for this <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfo"/>.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfo.#ctor(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectIdentity,Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfoStore)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo"/>  object and associates it with an existing <see cref="!:GridStyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="!:GridStyleInfoSubObjectIdentity"/> that holds the indentity for this <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfo"/>.
            <param name="store">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfoStore"/> that holds data for this <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfo"/>.
            All changes in this style object will saved in the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfoStore"/> object.</param>
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfo.MakeCopy(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase,Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <override/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfo.Default">
            <summary>
            Returns the default <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfo.GetDefaultStyle"/> style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfo.AllowScrollingOnCircle">
            <summary>
            Gets or Sets the AllowScrollingOnCircle property of currency edit cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfo.NegativeForeground">
            <summary>
            Gets or sets the NegativeForeground property of currency edit cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfo.PositiveForeground">
            <summary>
            Gets or sets the PositiveForeground property of currencyedit cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfo.MaxValue">
            <summary>
            Gets or sets the MaxValue property of CurrencyEdit cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfo.MinValue">
            <summary>
            Gets or sets the MinValue property of currencyedit cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfo.CurrencyDecimalSeparator">
            <summary>
            Gets or sets the currencydecimal separator for currency edit cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfo.CurrencyGroupSeparator">
            <summary>
            Gets or sets the currencygroupseparator for currency edit cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfo.CurrencyDecimalDigits">
            <summary>
            Gets or sets the decimal digits of currency edit cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfo.CurrencySymbol">
            <summary>
            Gets or sets the decimal digits of currency edit cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfo.CurrencyPositivePattern">
            <summary>
            Gets or sets the currency positive pattern of currency edit cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfo.CurrencyNegativePattern">
            <summary>
            Gets or sets the currency negative pattern of currency edit cell.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfoStore">
            <summary>
            Implements the data store for the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfo"/> object.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfoStore.AllowScrollingOnCircleProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.CurrencyEdit.AllowScrollingOnCircle"/>Property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfoStore.MinValueProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.CurrencyEdit.MinValue"/>Property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfoStore.MaxValueProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.CurrencyEdit.MaxValue"/>Property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfoStore.CurrencyDecimalSeparatorProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.CurrencyEdit.CurrencyDecimalSeparator"/>Property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfoStore.CurrencyGroupSeparatorProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.CurrencyEdit.CurrencyGroupSeparator"/>Property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfoStore.CurrencySymbolProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.CurrencyEdit.CurrencySymbol"/>Property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfoStore.CurrencyPositivePatternProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.CurrencyEdit.CurrencyPositivePattern"/>Property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfoStore.CurrencyNegativePatternProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.CurrencyEdit.CurrencyNegativePattern"/>Property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfoStore.PositiveForegroundProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.CurrencyEdit.PositiveForeground"/>Property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfoStore.NegativeForegroundProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.CurrencyEdit"/>Property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfoStore.CurrencyDecimalDigitsProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.CurrencyEdit.CurrencyDecimalDigits"/>Property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfoStore.#ctor">
            <summary>
            Initializes an empty <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfoStore"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfoStore.Clone">
            <override/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridDateTimeEditStyleInfo">
            <summary>
            Provides a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectBase"/> object for updowncellstyles settings in a cell. 
            Each numericcell style property of the cell can be configured individually. <para/>
            numericcell style properties thathave not been initialized will inherit default 
            values from a base style.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridDateTimeEditStyleInfo.Dispose(System.Boolean)">
            <summary>
            Releases the all resources used by the Component.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridDateTimeEditStyleInfo.#ctor">
            <summary>
            Initialize the <see cref="!:GridNumricStyleInfo"/>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridDateTimeEditStyleInfo.#ctor(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectIdentity)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo"/>  object and associates it with an existing <see cref="!:GridStyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="!:GridStyleInfoSubObjectIdentity"/> that holds the indentity for this <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo"/>.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridDateTimeEditStyleInfo.#ctor(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectIdentity,Syncfusion.UI.Xaml.CellGrid.Styles.GridDateTimeEditStyleInfoStore)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo"/>  object and associates it with an existing <see cref="!:GridStyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="!:GridStyleInfoSubObjectIdentity"/> that holds the indentity for this <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo"/>.
            <param name="store">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfoStore"/> that holds data for this <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo"/>.
            All changes in this style object will saved in the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfoStore"/> object.</param>
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridDateTimeEditStyleInfo.MakeCopy(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase,Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <override/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridDateTimeEditStyleInfo.MaxDate">
            <summary>
            Gets or sets the Maximum date.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridDateTimeEditStyleInfo.MinDate">
            <summary>
            gets or sets the minimum date.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridDateTimeEditStyleInfo.ShowRepeatButton">
            <summary>
            Gets or sets the ShowRepeatButtonProperty.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridDateTimeEditStyleInfo.Pattern">
            <summary>
            Gets or sets the pattern property of datetime edit.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridDateTimeEditStyleInfo.EnableDeleteKey">
            <summary>
            Gets or Sets the EnableDeleteKey Property.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridDateTimeEditStyleInfo.EnableClassicStyle">
            <summary>
            Gets or sets the EnableClassicStyle property.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridDateTimeEditStyleInfo.EnableBackspaceKey">
            <summary>
            Gets or sets the EnableBackspaceKey property.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridDateTimeEditStyleInfo.DisableDateSelection">
            <summary>
            Gets or sets the DisableDateSelection property.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridDateTimeEditStyleInfo.DateTimeFormatInfo">
            <summary>
            Gets or sets the DateTimeFormatInfo property.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridDateTimeEditStyleInfo.CustomPattern">
            <summary>
            Gets or sets the CustomPattern property.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridDateTimeEditStyleInfo.CanEdit">
            <summary>
            Gets or sets the CanEdit property.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridDateTimeEditStyleInfo.AllowScrollingOnCircle">
            <summary>
            Gets or sets the AllowScrollingOnCircle property.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridDateTimeEditStyleInfoStore">
            <summary>
            Implements the data store for the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridNumericStyleInfo"/> object.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridDateTimeEditStyleInfoStore.MaxDateProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.DateTimeEdit.MaxDate"/> Property.
            </summary>      
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridDateTimeEditStyleInfoStore.MinDateProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.DateTimeEdit.MinDate"/> Property.
            </summary>      
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridDateTimeEditStyleInfoStore.CustomPatternProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.DateTimeEdit.CustomPattern"/> Property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridDateTimeEditStyleInfoStore.DateTimeFormatInfoProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.DateTimeEdit.DateTimeFormat"/> Property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridDateTimeEditStyleInfoStore.CanEditProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.DateTimeEdit.CanEdit"/> Property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridDateTimeEditStyleInfoStore.PatternProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.DateTimeEdit.Pattern"/> Property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridDateTimeEditStyleInfoStore.EnableBackspaceKeyProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.DateTimeEdit.EnableBackspaceKey"/> Property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridDateTimeEditStyleInfoStore.EnableDeleteKeyProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.DateTimeEdit.EnableDeleteKey"/> Property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridDateTimeEditStyleInfoStore.EnableClassicStylePropety">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.DateTimeEdit.EnableDeleteKey"/> Property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridDateTimeEditStyleInfoStore.AllowScrollingOnCircleProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.DateTimeEdit.AllowScrollingOnCircle"/> Property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridDateTimeEditStyleInfoStore.ShowRepeatButtonProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.DateTimeEdit.ShowRepeatButton"/> Property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridDateTimeEditStyleInfoStore.DisableDateSelectionProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.DateTimeEdit.DisableDateSelection"/> Property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridDateTimeEditStyleInfoStore.#ctor">
            <summary>
            Initializes an empty <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridDateTimeEditStyleInfoStore"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridDateTimeEditStyleInfoStore.Clone">
            <override/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo">
            <summary>
            Provides a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectBase"/> object for font settings in a cell. 
            Each font property of the cell can be configured individually. <para/>
            Font properties thathave not been initialized will inherit default 
            values from a base style.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo.Dispose(System.Boolean)">
            <summary>
            Releases the all resources used by the Component.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo.#ctor">
            <overload>
            Initializes a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo"/>
            </overload>
            <summary>
            Initializes a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo"/>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo.#ctor(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectIdentity)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo"/>  object and associates it with an existing <see cref="!:GridStyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="!:GridStyleInfoSubObjectIdentity"/> that holds the indentity for this <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo"/>.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo.#ctor(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectIdentity,Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfoStore)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo"/>  object and associates it with an existing <see cref="!:GridStyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="!:GridStyleInfoSubObjectIdentity"/> that holds the indentity for this <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo"/>.
            <param name="store">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfoStore"/> that holds data for this <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo"/>.
            All changes in this style object will saved in the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfoStore"/> object.</param>
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo.MakeCopy(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase,Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <override/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo.GetDefaultStyle">
            <override/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo.ResetFontFamily">
            <summary>
            Resets <see cref="!:GridStyleInfo.FontFamily"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo.ResetFontSize">
            <summary>
            Resets <see cref="!:GridStyleInfo.FontSize"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo.ResetFontStretch">
            <summary>
            Resets <see cref="!:GridStyleInfo.FontStretch"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo.ResetFontStyle">
            <summary>
            Resets <see cref="!:GridStyleInfo.FontStyle"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo.ResetFontWeight">
            <summary>
            Resets <see cref="!:GridStyleInfo.FontWeight"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo.ResetOrientation">
            <summary>
            Resets the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo.Orientation"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo.ResetTextDecorations">
            <summary>
            Resets <see cref="!:GridStyleInfo.TextDecorations"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo.GetLineHeightValue">
            <summary>
            Gets actual value of LineHeight property. If LineHeight is Double.Nan, returns FontSize*FontFamily.LineSpacing 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo.Default">
            <summary>
            Returns a default <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo"/> to be used with a default style.
            </summary>
            <remarks>
            The <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Default"/> of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo"/> class
            will return the default border info that this method generates through its
            overriden version of <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo.GetDefaultStyle"/>.
             </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo.HasFontFamily">
            <summary>
            Determines if <see cref="!:GridStyleInfo.FontFamily"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo.HasFontSize">
            <summary>
            Determines if <see cref="!:GridStyleInfo.FontSize"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo.HasFontStretch">
            <summary>
            Determines if <see cref="!:GridStyleInfo.FontStretch"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo.HasFontStyle">
            <summary>
            Determines if <see cref="!:GridStyleInfo.FontStyle"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo.HasFontWeight">
            <summary>
            Determines if <see cref="!:GridStyleInfo.FontWeight"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo.Orientation">
            <summary>
            Gets or sets the orientation of this <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo"/> object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo.HasOrientation">
            <summary>
            Determines if the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo.Orientation"/> property has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo.HasTextDecorations">
            <summary>
            Determines if <see cref="!:GridStyleInfo.TextDecorations"/> has been initialized for the current object.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfoStore.FontFamilyProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.FontFamily"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfoStore.FontSizeProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.FontSize"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfoStore.FontStretchProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.FontStretch"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfoStore.FontStyleProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.FontStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfoStore.FontWeightProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.FontWeight"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfoStore.TextDecorationsProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.TextDecorations"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfoStore.OrientationProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.Orientation"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfoStore.#ctor">
            <overload>
            Initializes a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfoStore"/>
            </overload>
            <summary>
            Initializes an empty <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfoStore"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfoStore.Clone">
            <override/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfoStore.StaticDataStore">
            <override/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridNumericStyleInfo">
            <summary>
            Provides a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectBase"/> object for numericcellstyles settings in a cell. 
            Each numericcell style property of the cell can be configured individually. <para/>
            numericcell style properties thathave not been initialized will inherit default 
            values from a base style.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridNumericStyleInfo.Dispose(System.Boolean)">
            <summary>
            Releases the all resources used by the Component.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridNumericStyleInfo.#ctor">
            <summary>
            Initialize the <see cref="!:GridNumricStyleInfo"/>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridNumericStyleInfo.#ctor(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectIdentity)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo"/>  object and associates it with an existing <see cref="!:GridStyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="!:GridStyleInfoSubObjectIdentity"/> that holds the indentity for this <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo"/>.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridNumericStyleInfo.#ctor(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectIdentity,Syncfusion.UI.Xaml.CellGrid.Styles.GridNumericStyleInfoStore)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo"/>  object and associates it with an existing <see cref="!:GridStyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="!:GridStyleInfoSubObjectIdentity"/> that holds the indentity for this <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo"/>.
            <param name="store">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfoStore"/> that holds data for this <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo"/>.
            All changes in this style object will saved in the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfoStore"/> object.</param>
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridNumericStyleInfo.MakeCopy(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase,Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <override/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridNumericStyleInfo.Default">
            <summary>
            Returns the default <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridNumericStyleInfo.GetDefaultStyle"/> style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridNumericStyleInfo.AllowScrollingOnCircle">
            <summary>
            Gets or Sets the AllowScrollingOnCircle property of double edit cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridNumericStyleInfo.NegativeForeground">
            <summary>
            Gets or sets the NegativeForeground property of double edit cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridNumericStyleInfo.MaxValue">
            <summary>
            Gets or sets the MaxValue property of DoubleEdit cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridNumericStyleInfo.MinValue">
            <summary>
            Gets or sets the MinValue property of doubleedit cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridNumericStyleInfo.NumberDecimalSeparator">
            <summary>
            Gets or sets the number decimal separator for double edit cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridNumericStyleInfo.NumberGroupSeparator">
            <summary>
            Gets or sets the numbergroupseparator for double edit cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridNumericStyleInfo.NumberOfDecimalDigits">
            <summary>
            Gets or sets the decimal digits of numeric edit cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridNumericStyleInfo.NumberNegativePattern">
            <summary>
            Gets or sets the negative pattern of numeric edit cell.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridNumericStyleInfoStore">
            <summary>
            Implements the data store for the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridNumericStyleInfo"/> object.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridNumericStyleInfoStore.AllowScrollingOnCircleProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.DoubleEdit.AllowScrollingOnCircle"/>Property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridNumericStyleInfoStore.MinValueProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.DoubleEdit.MinValue"/>Property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridNumericStyleInfoStore.MaxValueProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.DoubleEdit.MaxValue"/>Property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridNumericStyleInfoStore.NumberDecimalSeparatorProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.DoubleEdit.NumberDecimalSeparator"/>Property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridNumericStyleInfoStore.NumberGroupSeparatorProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.DoubleEdit.NumberGroupSeparator"/>Property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridNumericStyleInfoStore.NegativeForegroundProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.DoubleEdit.MaxValidation"/>Property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridNumericStyleInfoStore.NumberOfDecimalDigitsProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.DoubleEdit.MaxNumberOfDecimalDigits"/>Property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridNumericStyleInfoStore.NumberNegativePatternProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.DoubleEdit.NumberNegativePattern"/>Property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridNumericStyleInfoStore.#ctor">
            <summary>
            Initializes an empty <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridNumericStyleInfoStore"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridNumericStyleInfoStore.Clone">
            <override/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridPercentStyleInfo">
            <summary>
            Provides a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectBase"/> object for currencycellstyles settings in a cell. 
            Each currencycell style property of the cell can be configured individually. <para/>
            numericcell style properties thathave not been initialized will inherit default 
            values from a base style.
            </summary>
            
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridPercentStyleInfo.Dispose(System.Boolean)">
            <summary>
            Releases the all resources used by the Component.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridPercentStyleInfo.#ctor">
            <summary>
            Initialize the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfo"/>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridPercentStyleInfo.#ctor(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectIdentity)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfo"/>  object and associates it with an existing <see cref="!:GridStyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="!:GridStyleInfoSubObjectIdentity"/> that holds the indentity for this <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfo"/>.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridPercentStyleInfo.#ctor(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectIdentity,Syncfusion.UI.Xaml.CellGrid.Styles.GridPercentStyleInfoStore)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo"/>  object and associates it with an existing <see cref="!:GridStyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="!:GridStyleInfoSubObjectIdentity"/> that holds the indentity for this <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfo"/>.
            <param name="store">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfoStore"/> that holds data for this <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfo"/>.
            All changes in this style object will saved in the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfoStore"/> object.</param>
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridPercentStyleInfo.MakeCopy(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase,Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <override/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridPercentStyleInfo.Default">
            <summary>
            Returns the default <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridPercentStyleInfo.GetDefaultStyle"/> style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridPercentStyleInfo.AllowScrollingOnCircle">
            <summary>
            Gets or Sets the AllowScrollingOnCircle property of percentage edit cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridPercentStyleInfo.NegativeForeground">
            <summary>
            Gets or sets the NegativeForeground property of percentage edit cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridPercentStyleInfo.MaxValue">
            <summary>
            Gets or sets the MaxValue property of percentage edit cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridPercentStyleInfo.MinValue">
            <summary>
            Gets or sets the MinValue property of percentage edit cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridPercentStyleInfo.PercentDecimalSeparator">
            <summary>
            Gets or sets the percentagedecimal separator for percentage edit cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridPercentStyleInfo.PercentGroupSeparator">
            <summary>
            Gets or sets the percentagegroupseparator for percent edit cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridPercentStyleInfo.PercentDecimalDigits">
            <summary>
            Gets or sets the decimal digits of percent edit cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridPercentStyleInfo.PercentSymbol">
            <summary>
            Gets or sets the decimal digits of percent edit cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridPercentStyleInfo.PercentPositivePattern">
            <summary>
            Gets or sets the percent positive pattern of percent edit cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridPercentStyleInfo.PercentNegativePattern">
            <summary>
            Gets or sets the percent negative pattern of percent edit cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridPercentStyleInfo.PercentEditMode">
            <summary>
            Gets or sets the percent mode.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridPercentStyleInfoStore">
            <summary>
            Implements the data store for the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridPercentStyleInfo"/> object.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridPercentStyleInfoStore.AllowScrollingOnCircleProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.PercentEdit.AllowScrollingOnCircle"/>Property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridPercentStyleInfoStore.MinValueProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.PercentEdit.MinValue"/>Property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridPercentStyleInfoStore.MaxValueProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.PercentEdit.MaxValue"/>Property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridPercentStyleInfoStore.PercentDecimalSeparatorProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.PercentEdit.PercentageDecimalSeparator"/>Property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridPercentStyleInfoStore.PercentGroupSeparatorProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.PercentEdit.PercentageGroupSeparator"/>Property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridPercentStyleInfoStore.PercentSymbolProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.PercentEdit.PercentageSymbol"/>Property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridPercentStyleInfoStore.PercentPositivePatternProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.PercentEdit.PercentagePositivePattern"/>Property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridPercentStyleInfoStore.PercentNegativePatternProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.PercentEdit.PercentageNegativePattern"/>Property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridPercentStyleInfoStore.NegativeForegroundProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.PercentEdit.NegativeForeground"/>Property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridPercentStyleInfoStore.PercentDecimalDigitsProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.PercentEdit.PercenatageDecimalDigits"/>Property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridPercentStyleInfoStore.PercentEditModeProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.PercentEdit.PercentEditMode"/>Property.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridPercentStyleInfoStore.#ctor">
            <summary>
            Initializes an empty <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridCurrencyStyleInfoStore"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridPercentStyleInfoStore.Clone">
            <override/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.NamespaceDoc">
            <summary>
            Contains classes which are used to maintain the data and style information of SfCellGrid. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoIdentity.#ctor(Syncfusion.UI.Xaml.CellGrid.Styles.GridVolatileCellStyles,System.Int32,System.Int32)">
            <overload>
            Initializes a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoIdentity"/>.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoIdentity"/> with a reference to <see cref="!:VolatileData"/>, row, and column index.
            </summary>
            <param name="data">A reference to <see cref="!:VolatileData"/>.</param>
            <param name="rowIndex">Row index.</param>
            <param name="colIndex">Column index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoIdentity.#ctor(Syncfusion.UI.Xaml.CellGrid.Styles.GridVolatileCellStyles,Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoIdentity"/> with a reference to <see cref="!:VolatileData"/>, row and column index, and offline state.
            </summary>
            <param name="data">A reference to <see cref="!:VolatileData"/>.</param>
            <param name="pos">Cell coordinates.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoIdentity.#ctor(Syncfusion.UI.Xaml.CellGrid.Styles.GridVolatileCellStyles,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoIdentity"/> with a reference to <see cref="!:VolatileData"/>, row and column index, and offline state.
            </summary>
            <param name="data">A reference to <see cref="!:VolatileData"/></param>
            <param name="rowIndex">Row index.</param>
            <param name="colIndex">Column index.</param>
            <param name="offLine">True if changes in this style object should not be stored in the associated <see cref="!:VolatileData"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoIdentity.#ctor(Syncfusion.UI.Xaml.CellGrid.Styles.GridVolatileCellStyles,Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Boolean)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoIdentity"/> with a reference to <see cref="!:VolatileData"/>, row and column index, and offline state.
            </summary>
            <param name="data">A reference to <see cref="!:VolatileData"/>.</param>
            <param name="pos">Cell coordinates.</param>
            <param name="offLine">True if changes in this style object should not be stored in the associated <see cref="!:VolatileData"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoIdentity.#ctor(Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoIdentity)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoIdentity"/> and copies its data from an existing object.
            </summary>
            <param name="other">The existing object to copy data from.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoIdentity.Finalize">
            <summary>
            Removes the associated cell cache object from the volatile data store.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoIdentity.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoIdentity"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoIdentity.MakeOfflineIdentity">
            <summary>
            Creates a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoIdentity"/> and copies its identity information from the current object. The new
            instance will be detached from <see cref="!:VolatileData"/> so that changes in this style object are not be stored in the associated <see cref="!:VolatileData"/>.
            </summary>
            <returns>A new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoIdentity"/> instance.</returns>
            <remarks>
            Lets a style object load base styles and default values but disables
            saving changes back to the grid. (see OnStyleChanged below)
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoIdentity.GetBaseStyles(Syncfusion.UI.Xaml.CellGrid.Styles.IStyleInfo)">
            <summary>
            Overriden. Returns base styles from <see cref="!:VolatileData"/> by calling <see cref="!:VolatileData.GetBaseStyles"/>.
            </summary>
            <param name="thisStyleInfo">A reference to a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.IStyleInfo"/>.</param>
            <returns>An array of base styles.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoIdentity.ResetBaseStylesCache">
            <exclude/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoIdentity.OnStyleChanged(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase,Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <summary>
            Overridden. If the style is not offline, saves its changes in the <see cref="!:VolatileData"/>.
            </summary>
            <param name="style">A reference to the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo"/> object.</param>
            <param name="sip">The <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty"/> that identifies the changed style property.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoIdentity.LookupCellRenderer(System.String)">
            <summary>
            Returns a <see cref="!:GridCellModelBase"/> for the specified id / cell type name.
            </summary>
            <param name="id">Cell type name.</param>
            <returns>The <see cref="!:GridCellModelBase"/> for the given id.</returns>
            <remarks>
            Calls <see cref="!:IGridData.LookupCellModel"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoIdentity.ToString">
            <override/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoIdentity.OffLine">
            <summary>
            True if changes in this style object should not be stored in the associated <see cref="!:VolatileData"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoIdentity.Data">
            <summary>
            Reference to <see cref="!:VolatileData"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoIdentity.RowIndex">
            <summary>
            The row index.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoIdentity.ColumnIndex">
            <summary>
            The column index.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoIdentity.CellRowColumnIndex">
            <summary>
            The cell coordinates.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.CellTypeProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.CellType"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.CellValueProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.CellValue"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.CellEditTemplateProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.CellEditTemplate"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.CellItemTemplateProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.CellItemTemplate"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.CellEditTemplateKeyProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.CellEditTemplateKey"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.CellItemTemplateKeyProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.CellItemTemplateKey"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.FormatProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Format"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.BaseStyleProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.BaseStyle"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.EnabledProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ReadOnly"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.BackgroundProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Background"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.ForegroundProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Foreground"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.BordersProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Borders"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.FontProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Font"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.DescriptionProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Description"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.TagProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Tag"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.HorizontalAlignmentProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.HorizontalAlignment"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.VerticalAlignmentProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.VerticalAlignment"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.FormatProviderProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.FormatProvider"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.PaddingProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Padding"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.ReadOnlyProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ReadOnly"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.TextWrappingProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.TextWrapping"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.TextTrimmingProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.TextTrmming"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.FormulaTagProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.FormulaTag"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.ConditionalFormatsProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ConditionalFormats"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.CommentProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Comment"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.CommentTemplateProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.CommentTemplate"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.CommentBrushProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.CommentBrush"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.TooltipProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.Tooltip"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.TooltipTemplateProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.TooltipTemplate"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.DataValidationTooltipProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.DataValidationTooltip"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.DataValidationTooltipTemplateProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.DataValidationTooltipTemplate"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.IsThreeStateProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.IsThreeState"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.GridNumericCellRendererProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.DoubleEdit"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.GridCurrencyCellRendererProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.CurrencyEdit"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.GridPercentageCellRendererProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.PercentEdit"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.GridUpDownCellRendererProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.UpDownEdit"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.GridComboBoxCellRendererProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.ComboBoxEdit"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.GridDateTimeEditrendererProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.DateTimeEdit"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.WantsKeyInputProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.WantsKeyInput"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.AllowNullProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.AllowNull"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.NullValueProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo.NullValue"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.HyperlinkProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleinfo.Hyperlink"/>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.#ctor">
            <overload>
            Initializes a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore"/>.
            </overload>
            <summary>
            Initializes a new empty <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfoStore.Clone">
            <override/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridUpDownStyleInfo">
            <summary>
            Provides a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectBase"/> object for updowncellstyles settings in a cell. 
            Each numericcell style property of the cell can be configured individually. <para/>
            numericcell style properties thathave not been initialized will inherit default 
            values from a base style.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridUpDownStyleInfo.Dispose(System.Boolean)">
            <summary>
            Releases the all resources used by the Component.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridUpDownStyleInfo.#ctor">
            <summary>
            Initialize the <see cref="!:GridNumricStyleInfo"/>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridUpDownStyleInfo.#ctor(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectIdentity)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo"/>  object and associates it with an existing <see cref="!:GridStyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="!:GridStyleInfoSubObjectIdentity"/> that holds the indentity for this <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo"/>.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridUpDownStyleInfo.#ctor(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectIdentity,Syncfusion.UI.Xaml.CellGrid.Styles.GridUpDownStyleInfoStore)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo"/>  object and associates it with an existing <see cref="!:GridStyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="!:GridStyleInfoSubObjectIdentity"/> that holds the indentity for this <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo"/>.
            <param name="store">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfoStore"/> that holds data for this <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfo"/>.
            All changes in this style object will saved in the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridFontInfoStore"/> object.</param>
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridUpDownStyleInfo.MakeCopy(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase,Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <override/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridUpDownStyleInfo.Default">
            <summary>
            Returns the default <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridUpDownStyleInfo.GetDefaultStyle"/> style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridUpDownStyleInfo.NumberOfDecimalDigits">
            <summary>
            Gets or sets the decimal digits of updown edit cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridUpDownStyleInfo.Maximum">
            <summary>
            Gets or sets the Maximum value of UpdownEdit cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridUpDownStyleInfo.Minimum">
            <summary>
            Gets or sets the Mnimum value of UpdownEdit cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridUpDownStyleInfo.Step">
            <summary>
            Gets or sets the increment or decrement value of updownedit cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridUpDownStyleInfo.AllowScrollingOnCircle">
            <summary>
            Gets or sets the IsScrollingOnCircle property of updownedit cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridUpDownStyleInfo.AllowEdit">
            <summary>
            Gets or sets the allowedit property of updownedit cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridUpDownStyleInfo.NegativeForeground">
            <summary>
            Gets or sets the NegativeForeground property of updownedit cell.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridUpDownStyleInfoStore">
            <summary>
            Implements the data store for the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridNumericStyleInfo"/> object.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridUpDownStyleInfoStore.MaximumProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.UpDownEdit.Maximum"/> Property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridUpDownStyleInfoStore.MinimumProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.UpDownEdit.Minimum"/> Property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridUpDownStyleInfoStore.NumberOfDecimalDigitsProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.UpDownEdit.MaxNumberOfDecimalDigits"/> Property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridUpDownStyleInfoStore.AllowEditProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.UpDownEdit.AllowEdit"/>
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridUpDownStyleInfoStore.IsScrollingOnCircleProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.UpDownEdit.IsScrollingProperty"/>
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridUpDownStyleInfoStore.StepProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.UpDownEdit.Step"/>
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.GridUpDownStyleInfoStore.NegativeForegroundProperty">
            <summary>
            Provides information about the <see cref="!:GridStyleInfo.UpDownEdit.NegativeForeground"/>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridUpDownStyleInfoStore.#ctor">
            <summary>
            Initializes an empty <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridNumericStyleInfoStore"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridUpDownStyleInfoStore.Clone">
            <override/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridVolatileCellStyles">
            <summary>
            VolatileData allocates its own style objects and maintains a weak reference to them.
            Once the style object is finalized, the weak reference is removed from the hashtable.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridVolatileCellStyles.GetItem(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Gets the cached style information for a specific cell.
            </summary>
            <param name="cell">The cell coordinate.</param>
            <returns>The cached GridStyleInfo; NULL if no cache entry was found.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridVolatileCellStyles.SetItem(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo)">
            <summary>
            Saves style information to be cached.
            </summary>
            <param name="cell">The cell coordinate.</param>
            <param name="style">The GridStyleInfo to be cached.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridVolatileCellStyles.ResetItem(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Resets cache for a specific cell.
            </summary>
            <param name="cell">The cell coordinates.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridVolatileCellStyles.Clear(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Resets cache for a specific cell.
            </summary>
            <param name="cell">The cell coordinates.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridVolatileCellStyles.Clear">
            <summary>
            Empty the cache.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridVolatileCellStyles.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridVolatileCellStyles"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.GridVolatileCellStyles.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridVolatileCellStyles"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridVolatileCellStyles.Item(System.Int32,System.Int32)">
            <summary>
            Gives access to a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.GridStyleInfo"/> at a given row and column index. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.GridVolatileCellStyles.BaseStylesMap">
            <summary>
            Gets the base styles map.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.IRowColumnIndexValueDictionaryCallbacks`1">
            <summary>
            An interface for callback functions of a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueDictionary`1"/>.
            You should call <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueDictionary`1.SetCallback(Syncfusion.UI.Xaml.CellGrid.Styles.IRowColumnIndexValueDictionaryCallbacks{`0})"/> to register
            your object that implements this interface with the collection.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.IRowColumnIndexValueDictionaryCallbacks`1.OnMovedCell(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,`0)">
            <summary>
            Called from <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueDictionary`1"/> when a cell
            is moved after a InsertRows, RemoveRows, InsertColumns or RemoveColumns
            method call.
            </summary>
            <param name="cellRowColumnIndex"></param>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.IRowColumnIndexValueDictionaryCallbacks`1.OnRemoveCell(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,`0)">
            <summary>
            Called when from <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueDictionary`1"/> when a cell
            is removed either by a RemoveRows, RemoveColumns, Remove or RemoveAll call.
            </summary>
            <param name="cellRowColumnIndex">Index of the cell row column.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.IntegerValueCellsDictionary`1">
            <summary>
            An object with a Cells dictionary. This class is used by
            <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueDictionary`1"/> for rows
            inside that dictionary where each row has cells.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.IntegerValueCellsDictionary`1.Cells">
            <summary>
            Gets or sets the dictionary of cells.
            </summary>
            <value>The cells.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueDictionary`1">
            <summary>
            A generic class that emulates a subset of a Dictionary{T}.
            Internally rows are held in a dictionary and each row has a dictionary of cells.
            The class also provides support for adding, removing and moving rows and 
            columns.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueDictionary`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueDictionary`1"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueDictionary`1.#ctor(Syncfusion.UI.Xaml.CellGrid.Styles.IRowColumnIndexValueDictionaryCallbacks{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueDictionary`1"/> class.
            </summary>
            <param name="callback">The callback for moved and removed cell notifications.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueDictionary`1.Clear">
            <summary>
            Clears out the dictionary. There are no "OnRemoveCell" notfications triggered.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueDictionary`1.RemoveAll">
            <summary>
            Removes all entries from the dictionary and calls <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.IRowColumnIndexValueDictionaryCallbacks`1.OnRemoveCell(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,`0)"/> 
            callback for each deleted cell.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueDictionary`1.ContainsKey(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Determines whether a cell exists.
            </summary>
            <param name="cell">The cell.</param>
            <returns>
            	<c>true</c> if the cell exists; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueDictionary`1.TryGetValue(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,`0@)">
            <summary>
            Tries to get the value if the cell exists.
            </summary>
            <param name="cell">The cell.</param>
            <param name="value">The value.</param>
            <returns>true if cell exits; false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueDictionary`1.Add(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,`0)">
            <summary>
            Adds the cell and its value the dictionary. There is no "OnMoveCell" callback triggered.
            </summary>
            <param name="cell"></param>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueDictionary`1.Clear(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Removes the cell from the dictionary. There is no "OnRemoveCell" callback triggered.
            </summary>
            <param name="cell"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueDictionary`1.Remove(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Removes the cell from the dictionary and calls <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.IRowColumnIndexValueDictionaryCallbacks`1.OnRemoveCell(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,`0)"/> 
            callback for the deleted cell.
            </summary>
            <param name="cell"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueDictionary`1.Remove(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Removes the specified cell span and calls <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.IRowColumnIndexValueDictionaryCallbacks`1.OnRemoveCell(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,`0)"/> 
            callback for each deleted cell.
            </summary>
            <param name="cellSpan">The cell span.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueDictionary`1.InsertRows(System.Int32,System.Int32,Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueDictionary{`0})">
            <summary>
            Inserts the rows and calls <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.IRowColumnIndexValueDictionaryCallbacks`1.OnMovedCell(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,`0)"/> 
            callback for each moved cell. When you specify moveCells then these cells
            will be added beginning at the first insert row.
            </summary>
            <param name="insertAtRowIndex">Index of the insert at row.</param>
            <param name="count">The count.</param>
            <param name="moveCells">The move cells.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueDictionary`1.RemoveRows(System.Int32,System.Int32,Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueDictionary{`0})">
            <summary>
            Removes the rows and calls <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.IRowColumnIndexValueDictionaryCallbacks`1.OnRemoveCell(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,`0)"/> 
            callback for each removed cell. When you specify moveCells the callback will not be called,
            instead the cells will be added to the moveCells dictionary. A subsequent
            InsertRows call can then insert the rows at a different location.
            </summary>
            <param name="removeAtRowIndex">Index of the remove at row.</param>
            <param name="count">The count.</param>
            <param name="moveCells">The move cells.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueDictionary`1.InsertColumns(System.Int32,System.Int32,Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueDictionary{`0})">
            <summary>
            Inserts the columns and calls <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.IRowColumnIndexValueDictionaryCallbacks`1.OnMovedCell(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,`0)"/> 
            callback for each moved cell. When you specify moveCells then these cells
            will be added beginning at the first insert column.
            </summary>
            <param name="insertAtColumnIndex">Index of the insert at column.</param>
            <param name="count">The count.</param>
            <param name="moveCells">The move cells.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueDictionary`1.RemoveColumns(System.Int32,System.Int32,Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueDictionary{`0})">
            <summary>
            Removes the columns and calls <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.IRowColumnIndexValueDictionaryCallbacks`1.OnRemoveCell(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,`0)"/> 
            callback for each removed cell. When you specify moveCells the callback will not be called,
            instead the cells will be added to the moveCells dictionary. A subsequent
            InsertColumns call can then insert the columns at a different location.
            </summary>
            <param name="removeAtColumnIndex">Index of the remove at column.</param>
            <param name="count">The count.</param>
            <param name="moveCells">The move cells.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueDictionary`1.SetCallback(Syncfusion.UI.Xaml.CellGrid.Styles.IRowColumnIndexValueDictionaryCallbacks{`0})">
            <summary>
            Sets the callback.
            </summary>
            <param name="callback">The callback.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueDictionary`1.OnMovedRow(System.Collections.Generic.KeyValuePair{System.Int32,Syncfusion.UI.Xaml.CellGrid.Styles.IntegerValueCellsDictionary{`0}},System.Int32)">
            <summary>
            Called when a row was moved. The default implementation of this method
            loops through all cells in the row and calls <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.IRowColumnIndexValueDictionaryCallbacks`1.OnMovedCell(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,`0)"/> 
            for each cell.
            </summary>
            <param name="rowEntry">The row entry.</param>
            <param name="rowIndex">Index of the row.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueDictionary`1.OnRemovedRow(System.Collections.Generic.KeyValuePair{System.Int32,Syncfusion.UI.Xaml.CellGrid.Styles.IntegerValueCellsDictionary{`0}})">
            <summary>
            Called when row was removed. The default implementation of this method
            loops through all cells in the row and calls <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.IRowColumnIndexValueDictionaryCallbacks`1.OnRemoveCell(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,`0)"/> 
            for each cell.
            </summary>
            <param name="rowEntry">The row entry.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueDictionary`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A enumerator that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueDictionary`1.Rows">
            <summary>
            Gets the rows.
            </summary>
            <value>The rows.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueDictionary`1.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueDictionary`1.Item(Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex)">
            <summary>
            Gets or sets the value for the specified cell.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.RowColumnIndexValueDictionary`1.RowColumnIndexValueDelegate">
            <summary>
            A delegate with a method to be called back while iterating through a
            range of cells with the <see cref="!:Iterate"/> method.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.BitVectorInt32">
            <devdoc>
               <para>Provides a simple light bit vector with easy integer or Boolean access to
                  a 32 bit storage.</para>
            </devdoc>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.BitVectorInt32.#ctor(System.Int32)">
            <devdoc>
            <para>Initializes a new instance of the BitVectorInt32 structure with the specified internal data.</para>
            </devdoc>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.BitVectorInt32.#ctor(Syncfusion.UI.Xaml.CellGrid.Styles.BitVectorInt32)">
            <devdoc>
            <para>Initializes a new instance of the BitVectorInt32 structure with the information in the specified 
               value.</para>
            </devdoc>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.BitVectorInt32.CreateMask">
            <devdoc>
               <para> Creates the first mask in a series.</para>
            </devdoc>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.BitVectorInt32.CreateMask(System.Int32)">
            <devdoc>
                Creates the next mask in a series.
            </devdoc>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.BitVectorInt32.CreateMaskFromHighValue(System.Int16)">
            <devdoc>
                Given a highValue, creates the mask
            </devdoc>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.BitVectorInt32.CreateSection(System.Int16)">
            <devdoc>
               <para>Creates the first section in a series, with the specified maximum value.</para>
            </devdoc>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.BitVectorInt32.CreateSection(System.Int16,Syncfusion.UI.Xaml.CellGrid.Styles.BitVectorInt32.Section)">
            <devdoc>
               <para>Creates the next section in a series, with the specified maximum value.</para>
            </devdoc>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.BitVectorInt32.ToString(Syncfusion.UI.Xaml.CellGrid.Styles.BitVectorInt32)">
            <devdoc>
            </devdoc>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.BitVectorInt32.ToString">
            <devdoc>
            </devdoc>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.BitVectorInt32.Item(System.Int32)">
            <devdoc>
               <para>Gets or sets a value indicating whether all the specified bits are set.</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.BitVectorInt32.Item(Syncfusion.UI.Xaml.CellGrid.Styles.BitVectorInt32.Section)">
            <devdoc>
               <para>Gets or sets the value for the specified section.</para>
            </devdoc>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.BitVectorInt32.Data">
            <devdoc>
               returns the raw data stored in this bit vector...
            </devdoc>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.BitVectorInt32.Section">
            <devdoc>
               <para> 
                  Represents an section of the vector that can contain a integer number.</para>
            </devdoc>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.BitVectorInt32.Section.ToString(Syncfusion.UI.Xaml.CellGrid.Styles.BitVectorInt32.Section)">
            <devdoc>
            </devdoc>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.BitVectorInt32.Section.ToString">
            <devdoc>
            </devdoc>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.CachedStyleInfoSubObjectIdentity">
            <summary>
            Provides style identity information for nested expandable objects of the GridStyleInfo and TreeStyleInfo classes.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectIdentity">
            <summary>
            Provides style identity information for subobjects.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectIdentity.Dispose(System.Boolean)">
            <summary>
            Release all the resources used by the component.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectIdentity.#ctor(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase,Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <summary>
            Instantiates a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectIdentity"/> for a 
            given owner and <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty"/>.
            </summary>
            <param name="owner">The owner style of the sub object.</param>
            <param name="sip">The identifier of the subobject in the owner object.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectIdentity.GetBaseStyles(Syncfusion.UI.Xaml.CellGrid.Styles.IStyleInfo)">
            <summary>
            Returns an array with base styles for the specified style object.
            </summary>
            <param name="thisStyleInfo">The style object.</param>
            <returns>
            An array of style objects that are base styles for the current style object.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectIdentity.Owner">
            <summary>
            Returns the owner style of the subobject.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectIdentity.Sip">
            <summary>
            Returns the identifier of the subobject in the owner object.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.CachedStyleInfoSubObjectIdentity.#ctor(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase,Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <summary>
            Creates a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectIdentity"/> object and associates it with a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase"/>.
            </summary>
            <param name="owner">The <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase"/> that owns this subobject.</param>
            <param name="sip">The <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty"/> descriptor for this expandable subobject.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.CachedStyleInfoSubObjectIdentity.GetBaseStyles(Syncfusion.UI.Xaml.CellGrid.Styles.IStyleInfo)">
            <override/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.CachedStyleInfoSubObjectIdentity.OnStyleChanged(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase,Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.CachedStyleInfoSubObjectIdentity"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.CachedStyleInfoSubObjectIdentity.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.CachedStyleInfoSubObjectIdentity"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.FrugalMapBase.Search(System.Int32)">
            <summary>
            Looks for an entry that contains the given key, null is returned if the
            key is not found. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.FrugalMapBase.Sort">
            <summary> 
            A routine used by enumerators that need a sorted map
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.FrugalMapBase.GetKeyValuePair(System.Int32,System.Int32@,System.Object@)">
            <summary>
            A routine used by enumerators to iterate through the map 
            </summary> 
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.FrugalMapBase.Iterate(System.Collections.Generic.List{System.Object},Syncfusion.UI.Xaml.CellGrid.Styles.FrugalMapIterationCallback)">
            <summary>
            A routine used to iterate through all the entries in the map
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.FrugalMapBase.Promote(Syncfusion.UI.Xaml.CellGrid.Styles.FrugalMapBase)">
            <summary> 
            Promotes the key/value pairs in the current collection to the next larger 
            and more complex storage model.
            </summary> 
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.FrugalMapBase.Count">
            <summary>
            Size of this data store 
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.SingleObjectMap">
            <summary>
            A simple class to handle a single key/value pair
            </summary> 
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.ThreeObjectMap">
            <summary>
            A simple class to handle a single object with 3 key/value pairs.  The pairs are stored unsorted 
            and uses a linear search.  Perf analysis showed that this yielded better memory locality and
            perf than an object and an array. 
            </summary> 
            <remarks>
            This map inserts at the last position.  Any time we add to the map we set _sorted to false. If you need 
            to iterate through the map in sorted order you must call Sort before using GetKeyValuePair.
            </remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.SixObjectMap">
            <summary>
            A simple class to handle a single object with 6 key/value pairs.  The pairs are stored unsorted 
            and uses a linear search.  Perf analysis showed that this yielded better memory locality and
            perf than an object and an array.
            </summary>
            <remarks> 
            This map inserts at the last position.  Any time we add to the map we set _sorted to false. If you need
            to iterate through the map in sorted order you must call Sort before using GetKeyValuePair. 
            </remarks> 
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.ArrayObjectMap">
            <summary>
            A simple class to handle an array of between 6 and 12 key/value pairs.  It is unsorted 
            and uses a linear search.  Perf analysis showed that this was the optimal size for both 
            memory and perf.  The values may need to be adjusted as the CLR and Avalon evolve.
            </summary> 
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.FrugalMapIterationCallback">
            <summary> 
                FrugalMapIterationCallback
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.StaticDataFieldAttribute">
            <summary>
            Allows you to specify a custom name for the StaticData field
            in a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/>. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.StaticDataFieldAttribute.Default">
            <summary>
            Specifies the default field name as "staticDataStore".
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StaticDataFieldAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StaticDataFieldAttribute"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StaticDataFieldAttribute.GetHashCode">
            <override/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StaticDataFieldAttribute.Equals(System.Object)">
            <override/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.StaticDataFieldAttribute.FieldName">
            <summary>
            Returns the field name in the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/> class 
            that identifies the static data store.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.Changed"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleChangedEventArgs.#ctor(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <summary>
            Initializes the object with the property that has changed.
            </summary>
            <param name="sip">Identifies the property that has changed.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.StyleChangedEventArgs.Sip">
            <summary>
            Returns the property that has changed.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleChangedEventHandler">
            <summary>
            Handles the <see cref="E:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.Changed"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.CreateSubObjectHandler">
            <exclude/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.SerializePropertyAttribute">
            <summary>
            Specifies whether a property should be serialized.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.SerializePropertyAttribute.Yes">
            <summary>
              <para>Specifies that a property should be serialized. 
              This <see langword="static" /> field is Read-only.</para>
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.SerializePropertyAttribute.No">
            <summary>
              <para>Specifies that a property should not be serialized. 
              This <see langword="static" /> field is Read-only.</para>
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.SerializePropertyAttribute.Default">
            <summary>
            The default setting for this attribute.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.SerializePropertyAttribute.#ctor(System.Boolean)">
            <summary>
              <para>Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.SerializePropertyAttribute"/> class.</para>
            </summary>
            <param name="serializeProperty">
              <see langword="True"/> if a property should be serialized; <see langword="False"/> otherwise. The default is <see langword="True"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.SerializePropertyAttribute.GetHashCode">
            <override/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.SerializePropertyAttribute.Equals(System.Object)">
            <override/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.SerializePropertyAttribute.IsSerializeProperty(System.Reflection.PropertyInfo)">
            <summary>
            Indicates whether the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.SerializePropertyAttribute"/> has been set for the property.
            </summary>
            <param name="info">A <see cref="T:System.Reflection.PropertyInfo"/></param>
            <returns>True if property has a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.SerializePropertyAttribute"/>; False otherwise.</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.SerializePropertyAttribute.SerializeProperty">
            <summary>
              <para>Indicates whether a property is shown in the ToString result.</para>
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.CloneablePropertyAttribute">
            <summary>
            Specifies whether a property should be cloned.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.CloneablePropertyAttribute.Yes">
            <summary>
              <para>Specifies that a property should be cloned if the assigned object implements ICloneable. 
              This <see langword="static" /> field is Read-only.</para>
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.CloneablePropertyAttribute.No">
            <summary>
              <para>Specifies that a property should never be cloned even if the assigned object implements ICloneable
              This <see langword="static" /> field is Read-only.</para>
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.CloneablePropertyAttribute.Default">
            <summary>
            The default setting for this attribute.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.CloneablePropertyAttribute.#ctor(System.Boolean)">
            <summary>
              <para>Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.CloneablePropertyAttribute"/> class.</para>
            </summary>
            <param name="cloneableProperty">
              <see langword="True"/> if a property should be should be cloned if the assigned object implements ICloneable; <see langword="False"/> otherwise. The default is <see langword="True"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.CloneablePropertyAttribute.GetHashCode">
            <override/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.CloneablePropertyAttribute.Equals(System.Object)">
            <override/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.CloneablePropertyAttribute.IsCloneableProperty(System.Reflection.PropertyInfo)">
            <summary>
            Indicates whether the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.CloneablePropertyAttribute"/> has been set for the property.
            </summary>
            <param name="info">A <see cref="T:System.Reflection.PropertyInfo"/></param>
            <returns>True if property has a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.CloneablePropertyAttribute"/>; false otherwise.</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.CloneablePropertyAttribute.CloneableProperty">
            <summary>
              <para>Indicates whether a property should be cloned if the assigned object implements ICloneable.</para>
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.DisposeablePropertyAttribute">
            <summary>
            Specifies whether a property should be disposed.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.DisposeablePropertyAttribute.Yes">
            <summary>
              <para>Specifies that a property should be disposed if the assigned object implements IDisposeable. 
              This <see langword="static" /> field is Read-only.</para>
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.DisposeablePropertyAttribute.No">
            <summary>
              <para>Specifies that a property should never be disposed even if the assigned object implements IDisposeable
              This <see langword="static" /> field is Read-only.</para>
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.DisposeablePropertyAttribute.Default">
            <summary>
            The default setting for this attribute.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.DisposeablePropertyAttribute.#ctor(System.Boolean)">
            <summary>
              <para>Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.DisposeablePropertyAttribute"/> class.</para>
            </summary>
            <param name="disposeableProperty">
              <see langword="True"/> if a property should be should be disposed if the assigned object implements IDisposeable; <see langword="False"/> otherwise. The default is <see langword="True"/></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.DisposeablePropertyAttribute.GetHashCode">
            <override/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.DisposeablePropertyAttribute.Equals(System.Object)">
            <override/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.DisposeablePropertyAttribute.IsDisposableProperty(System.Reflection.PropertyInfo)">
            <summary>
            Indicates whether the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.DisposeablePropertyAttribute"/> has been set for the property.
            </summary>
            <param name="info">A <see cref="T:System.Reflection.PropertyInfo"/>.</param>
            <returns>True if property has a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.DisposeablePropertyAttribute"/>; false otherwise.</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.DisposeablePropertyAttribute.DisposableProperty">
            <summary>
              <para>Indicates whether a property should be disposed if the assigned object implements IDisposeable.</para>
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.IStyleCloneable">
            <summary>
            Implement this interface if you want to assign this class to a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase"/> object's
            property and you need to control whether the object should be cloned.
            </summary>
            <remarks>
            This interface is only considered if the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.CloneablePropertyAttribute"/> of
            <see cref="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.IsCloneable"/> of the <seea cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty"/> is True. 
            (This is the default.) 
            </remarks>
            <seealso cref="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.IsCloneable"/> 
            <seealso cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.CloneablePropertyAttribute"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.IStyleCloneable.Clone">
            <summary>
            Clones this object.
            </summary>
            <returns>A reference to a clone of this object.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.IStyleCloneable.Dispose">
            <summary>
            Disposes this object.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.IStyleCloneable.ShouldClone">
            <summary>
            Returns True if this object should be cloned if you assign it to a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase"/> object's
            property; false otherwise.
            </summary>
            <returns>True if this object should be cloned if you assign it to a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase"/> object's
            property; false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.IStyleCloneable.ShouldDispose">
            <summary>
            Returns True if this object should be disposed if it is reset in a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase"/> object's
            property; false otherwise.
            </summary>
            <returns>True if this object should be disposed if it is reset in a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase"/> object's
            property; false otherwise.</returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.IStyleChanged">
            <summary>
            Implements the <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.IStyleChanged.StyleChanged(Syncfusion.UI.Xaml.CellGrid.Styles.StyleChangedEventArgs)"/> method which is called from
            <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.OnStyleChanged(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)"/> of a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase"/>
            if the object is in <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.WeakReferenceChangedListeners"/>
            collection.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.IStyleChanged.StyleChanged(Syncfusion.UI.Xaml.CellGrid.Styles.StyleChangedEventArgs)">
            <summary>
            Called from <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.OnStyleChanged(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)"/> of a 
            <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase"/> object.
            </summary>
            <param name="e">The <see cref="!:Syncfusion.Windows.Styles.StyleChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBaseConverter">
            <summary>
               <para>Provides a type converter to convert expandable objects to and from various
                  other representations.</para>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBaseConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
               <para>Indicates whether this converter can
                  convert an object to the given destination type using the specified context.</para>
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBaseConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
               <para>Converts the given value object to
                  the specified destination type using the specified context and arguments.</para>
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoObjectStore">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty">
            <summary>
            Provides a unique identifier for a property in a style object and stores
            information about the associated property.
            </summary>
            <remarks>
            <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty"/> is allocated once on the global heap for each
            property in a style object. Type safe <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase"/> wrappers make
            use of StyleInfoProperty to query, set or reset specific properties.
            <para/>
            Holds information about the property: PropertyType, Name, how to load and save
            its state in StyleInfoStore, attributes, etc.
            </remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.ComponentType">
            <summary>
            The type of the component this property is bound to.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.PropertyType">
            <summary>
            The type of the property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.PropertyName">
            <summary>
            The name of the property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.CreateObject">
            <summary>
            Represents a method that creates a Subobject of this type and associates it with a parent style object.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.IsExpandable">
            <summary>
            Indicates whether this is an object derived from <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoSubObjectBase"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.IsSerializable">
            <summary>
            Indicates whether this object supports being serialized. The value can be set
            with a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.SerializePropertyAttribute"/> in your class implementation.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.IsCloneable">
            <summary>
            Indicates whether this object should call ICloneable.Clone when an assigned object implements
            the ICloneable or <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.IStyleCloneable"/> interface. The value can be set
            with a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.CloneablePropertyAttribute"/> in your class implementation.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.IsDisposable">
            <summary>
            Indicates whether this object should call ICloneable.Clone when an assigned object implements
            the IDisposable or <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.IStyleCloneable"/> interface. The value can be set
            also with a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.DisposeablePropertyAttribute"/> in your class implementation.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.IsBrowsable">
            <summary>
            If property is marked with Browsable(true), custom attribute of this flag allows you
            to specify whether the property should appear in PropertyGrid. If property is marked
            with Browsable(false), then this setting will have no effect. Default is true.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.IsAnyObject">
            <summary>
            Indicates whether type information should be included when <see cref="E:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.Format"/> is called. Use
            this if PropertyType is System.Obbject and you want to be able to parse written values.
            An example is GridStyleInfo.CellValue. Default is false.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.IsConvertibleToBase64">
            <summary>
            Indicates whether type information should be converted to Base64 if associated
            Type converter supports converting value to and from Base64. An example is a bitmap assigned to GridStyleInfo.CellValue.
            If IsConvertibleToBase64String is true, then the grid will convert the bitmap to a Base64 string
            and write out the information in the GridStyleInfo.ToString() method and also in the WriteXml method. Default is false.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.SerializeXmlBehavior">
            <summary>
            Defines how to serialize property when style data is serialized to or from an XML stream
            with <see cref="T:System.Xml.Serialization.XmlSerializer"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.GetPropertyInfo">
            <summary>
            Returns the <see cref="T:System.Reflection.PropertyInfo"/> of this property.
            </summary>
            <returns>Property info of this property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.DataVectorIndex">
            <exclude/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.DataVectorSection">
            <exclude/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.MaxValue">
            <exclude/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.ObjectStoreKey">
            <exclude/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.ExpandableObjectStoreKey">
            <exclude/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.PropertyKey">
            <exclude/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.BitVectorMask">
            <exclude/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.BitVectorIndex">
            <exclude/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.DoNotInvalidateCellWhenChanged">
            <summary>
            Set this for "behind the scenes" properties that when changed
            do not affect the appearance of a cell.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.Index">
            <exclude/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.#ctor(System.Type,System.String,System.Int16,System.Type)">
            <summary>
            Initializes a new StyleInfoProperty.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.ToString">
            <override/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.FormatValue(System.Object)">
            <summary>
            Formats a given value that is of the same type as the <see cref="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.PropertyType"/>.
            </summary>
            <param name="value">The value to be formatted.</param>
            <returns>A string with formatted text.</returns>
            <remarks><see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore.ToString"/> calls this method.
            <para/>
            The <see cref="E:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.Format"/> event lets you customize the formatting of this property but care
            should be taken that the formatted text can be consumed by the <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.ParseValue(System.String)"/>
            method.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.ParseValue(System.String)">
            <summary>
            Overloaded. Parses a given value that is of the same type as the <see cref="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.PropertyType"/>.
            </summary>
            <param name="s">The string to be parsed.</param>
            <returns>An object of the same type as the <see cref="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.PropertyType"/> created from the parsed string information.</returns>
            <remarks>
            <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.ParseString(System.String)"/> calls this method.
            <para/>
            The <see cref="E:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.Parse"/> event lets you customize the parsing of this property.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.ParseValue(System.String,System.Type,System.IFormatProvider)">
            <summary>
            Parses a given value and converts it to a requested <see cref="T:System.Type"/>.
            </summary>
            <param name="s">The string to be parsed.</param>
            <param name="resultType">The <see cref="T:System.Type"/> for the resulting object.</param>
            <param name="provider">A format provider.</param>
            <returns>An object of type "resultType" created from the parsed string information.</returns>
            <remarks>
            The <see cref="E:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.Parse"/> event lets you customize the parsing of this property.
            </remarks>
        </member>
        <member name="E:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.Parse">
            <summary>
            Handles parse requests for this property.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.Format">
            <summary>
            Handles formatting requests for this property.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.WriteXml">
            <summary>
            Handles requests to serialize this property to an XML stream during an
            <see cref="!:XmlSerializer.Serialize()"/> operation of the <see cref="T:System.Xml.Serialization.XmlSerializer"/>
            class.
            </summary>
            <remarks>
            This event allows you to implement a different serialization mechanism if many style objects
            reference and share the same object, (e.g. if you assign a DataSet to
            several objects DataSource property). With such a scenario, you could write out an
            identifier and when the property is deserialized from an XML stream, you could
            reconstruct a reference to a datasource object based on the identifier.
            </remarks>
        </member>
        <member name="E:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.ReadXml">
            <summary>
            Handles requests to deserialize this property from an XML stream during an
            <see cref="!:XmlSerializer.Deserialize()"/> operation of the <see cref="T:System.Xml.Serialization.XmlSerializer"/>
            class.
            </summary>
            <remarks>
            This event allows you to implement a different serialization mechanism if many style objects
            reference and share the same object, (e.g. if you assign a DataSet to
            several objects DataSource property). With such a scenario, you could write out an
            identifier and when the property is deserialized from an XML stream you could
            reconstruct a reference to a datasource object based on the identifier.
            </remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.SerializeXmlBehavior">
            <summary>
            Defines how to serialize property when style data is serialized to or from an XML stream.
            with <see cref="T:System.Xml.Serialization.XmlSerializer"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.SerializeXmlBehavior.Default">
            <summary>
            Default. Serialize as string when type is simple. Using XmlSerializer for complex types
            or properties where the actual type is not known at compile-time (e.g. CellValue).
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.SerializeXmlBehavior.Skip">
            <summary>
            Skip this property. Do not serialize.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.SerializeXmlBehavior.SerializeAsString">
            <summary>
            Serialize this property as string using <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.FormatValue(System.Object)"/> and
            <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.ParseValue(System.String)"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.SerializeXmlBehavior.SerializeWithXmlSerializer">
            <summary>
            Serialize this property using <see cref="T:System.Xml.Serialization.XmlSerializer"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoPropertyConvertEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.Format"/> and <see cref="E:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.Parse"/> events.
            </summary>
            <remarks>
            The <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoPropertyConvertEventArgs"/> is used to format and unformat values represented by
            a property in a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/> object. The Format event occurs whenever a property
            is written out as string and the Parse event occurs whenever the value is read back in from a string.
            <para/>
            If you handle this event, store the resulting value into <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoPropertyConvertEventArgs.Value"/> and
            set <see cref="P:Syncfusion.UI.Xaml.CellGrid.Helpers.GridHandledEventArgs.Handled"/> to True.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoPropertyConvertEventArgs.#ctor(System.Object,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoPropertyConvertEventArgs"/> class.
            </summary>
            <param name="value">An Object that contains the value of the current property.</param>
            <param name="desiredType">The Type of the value.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoPropertyConvertEventArgs.Value">
            <summary>
            Gets / sets the value of the <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoPropertyConvertEventArgs"/> object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoPropertyConvertEventArgs.DesiredType">
            <summary>
            Returns the data type of the desired value.
            </summary>
            <remarks>
            The DesiredType property enables you to check the type of the property that the value is being converted to.
            </remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoPropertyConvertEventHandler">
            <summary>
            Handles the <see cref="E:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.Format"/> or <see cref="E:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.Parse"/> event.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoPropertyWriteXmlEventHandler">
            <summary>
            Handles the <see cref="E:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.WriteXml"/> event of <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoPropertyWriteXmlEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.WriteXml"/> event.
            </summary>
            <remarks>
            The <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoPropertyWriteXmlEventArgs"/> is used to serialize a property of a
            <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/> object. The WriteXml event occurs whenever a property
            is serialized to an XML stream during an <see cref="!:XmlSerializer.Serialize()"/> operation
            of the <see cref="T:System.Xml.Serialization.XmlSerializer"/> class.
            <para/>
            If you handle this event, you set <see cref="P:Syncfusion.UI.Xaml.CellGrid.Helpers.GridHandledEventArgs.Handled"/> to True.
            Handling this event allows you to customize the way the object is serialized or skip
            serialization.
            <para/>
            This event allows you to implement a different serialization mechanism if many style objects
            reference and share the same object, (e.g. if you assign a DataSet to
            several objects' DataSource property). With such a scenario, you could write out a
            identifier and when the property is deserialized from an XML stream, you could
            reconstruct a reference to a datasource object based on the identifier.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoPropertyWriteXmlEventArgs.#ctor(System.Xml.XmlWriter,Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore,Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoPropertyWriteXmlEventArgs"/> object.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> for the XML stream.</param>
            <param name="store">The style object that is being serialized.</param>
            <param name="sip">The property that is being serialized.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoPropertyWriteXmlEventArgs.Writer">
            <summary>
            Returns the <see cref="T:System.Xml.XmlWriter"/> for the XML stream.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoPropertyWriteXmlEventArgs.Store">
            <summary>
            Returns the style object that is being serialized.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoPropertyWriteXmlEventArgs.Sip">
            <summary>
            Returns the property that is being serialized. Call <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore.GetValue(Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)"/> of
            the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoPropertyWriteXmlEventArgs.Store"/> to get the value for this property.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoPropertyReadXmlEventHandler">
            <summary>
            Handles the <see cref="E:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.ReadXml"/> event of <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoPropertyReadXmlEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty.ReadXml"/> event.
            </summary>
            <remarks>
            The <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoPropertyReadXmlEventArgs"/> is used to deserialize a property of a
            <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore"/> object. The ReadXml event occurs whenever a property
            is deserialized from an XML stream during an <see cref="!:XmlSerializer.Deserialize()"/>
            operation of the <see cref="T:System.Xml.Serialization.XmlSerializer"/> class.
            <para/>
            If you handle this event, you set <see cref="P:Syncfusion.UI.Xaml.CellGrid.Helpers.GridHandledEventArgs.Handled"/> to True.
            Call <see cref="!:StyleInfoStore.SetValue()"/> of
            the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoPropertyReadXmlEventArgs.Store"/> to save the value for this property into the style object.
            Handling this event allows you to customize the way the object is deserialized or skip
            serialization.
            <para/>
            This event allows you to implement a different serialization mechanism if many style objects
            reference and share the same object, (e.g. if you assign a DataSet to
            several objects DataSource property). With such a scenario, you could write out an
            identifier and when the property is deserialized from an XML stream you could
            reconstruct a reference to a datasource object based on the identifier.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoPropertyReadXmlEventArgs.#ctor(System.Xml.XmlReader,Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoStore,Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoPropertyReadXmlEventArgs"/> object.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> for the XML stream.</param>
            <param name="store">The style object that is deserialized.</param>
            <param name="sip">The property that is being deserialized.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoPropertyReadXmlEventArgs.Reader">
            <summary>
            Returns the <see cref="T:System.Xml.XmlReader"/> for the XML stream.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoPropertyReadXmlEventArgs.Store">
            <summary>
            Returns the style object that is deserialized.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoPropertyReadXmlEventArgs.Sip">
            <summary>
            Returns the property that is being deserialized. Call <see cref="!:StyleInfoStore.SetValue()"/> of
            the <see cref="P:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoPropertyReadXmlEventArgs.Store"/> to save the value for this property into the style object.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.ValueConvert">
            <summary>
            <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.ValueConvert"/> provides conversion routines for values
            to convert them to another type and routines for formatting values.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.ValueConvert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
            <overload>
            Converts value from one type to another using an optional <see cref="T:System.IFormatProvider"/>.
            </overload>
            <summary>
            Converts value from one type to another using an optional <see cref="T:System.IFormatProvider"/>.
            </summary>
            <param name="value">The original value.</param>
            <param name="type">The target type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value.</param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.ValueConvert.ChangeType(System.Object,System.Type,System.IFormatProvider,System.Boolean)">
            <summary>
            Converts value from one type to another using an optional <see cref="T:System.IFormatProvider"/>.
            </summary>
            <param name="value">The original value.</param>
            <param name="type">The target type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value.</param>
            <param name="returnDbNUllIfNotValid">Indicates whether exceptions should be avoided or catched and return value should be DBNull if
            it cannot be converted to the target type.</param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.ValueConvert.ChangeType(System.Object,System.Type,System.IFormatProvider,System.String,System.Boolean)">
            <summary>
            Converts value from one type to another using an optional <see cref="T:System.IFormatProvider"/>.
            </summary>
            <param name="value">The original value.</param>
            <param name="type">The target type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value.</param>
            <param name="format">Format string.</param>
            <param name="returnDbNUllIfNotValid">Indicates whether exceptions should be avoided or catched and return value should be DBNull if
            it cannot be converted to the target type.</param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.ValueConvert.Parse(System.String,System.Type,System.IFormatProvider)">
            <summary>
            Overloaded. Parses the given text using the resultTypes "Parse" method or using a type converter.
            </summary>
            <param name="s">The text to parse.</param>
            <param name="resultType">The requested result type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value. Can be NULL.</param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.ValueConvert.Parse(System.String,System.Type,System.IFormatProvider,System.String)">
            <summary>
            Parses the given text using the resultTypes "Parse" method or using a type converter.
            </summary>
            <param name="s">The text to parse.</param>
            <param name="resultType">The requested result type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value. Can be NULL.</param>
            <param name="format">A format string used in a <see cref="M:System.Object.ToString"/> call. Right now
            format is only interpreted to enable roundtripping for formatted dates.
            </param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.ValueConvert.Parse(System.String,System.Type,System.IFormatProvider,System.String,System.Boolean)">
            <summary>
            Parse the given text using the resultTypes "Parse" method or using a type converter.
            </summary>
            <param name="s">The text to parse.</param>
            <param name="resultType">The requested result type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value. Can be NULL.</param>
            <param name="format">A format string used in a <see cref="M:System.Object.ToString"/> call. Right now
            format is only interpreted to enable roundtripping for formatted dates.
            </param>
            <param name="returnDbNUllIfNotValid">Indicates whether DbNull should be returned if value cannot be parsed. Otherwise an exception is thrown.</param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.ValueConvert.Parse(System.String,System.Type,System.IFormatProvider,System.String[],System.Boolean)">
            <summary>
            Parse the given text using the resultTypes "Parse" method or using a type converter.
            </summary>
            <param name="s">The text to parse.</param>
            <param name="resultType">The requested result type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value. Can be NULL.</param>
            <param name="formats">A string array holding permissible formats used in a <see cref="M:System.Object.ToString"/> call. Right now
            formats is only interpreted to enable roundtripping for formatted dates.
            </param>
            <param name="returnDbNUllIfNotValid">Indicates whether DbNull should be returned if value cannot be parsed. Otherwise an exception is thrown.</param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.ValueConvert.FormatValue(System.Object,System.Type,System.String,System.Globalization.CultureInfo,System.Globalization.NumberFormatInfo,System.IFormatProvider)">
            <summary>
            Generates display text using the specified format, culture info and number format.
            </summary>
            <param name="value">The value to format.</param>
            <param name="valueType">The value type on which formatting is based. The original value will first be converted to this type.</param>
            <param name="format">The format like in ToString(string format).</param>
            <param name="ci">The <see cref="T:System.Globalization.CultureInfo"/> for formatting the value.</param>
            <param name="nfi">The <see cref="T:System.Globalization.NumberFormatInfo"/> for formatting the value.</param>
            <param name="FormatProvider"></param>
            <returns>The string with the formatted text for the value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.ValueConvert.ParseValueWithTypeInformation(System.String,System.Object@)">
            <summary>
            Overloaded. Parses the given string including type information. String can be in format %lt;type&gt; 'value'
            </summary>
            <param name="valueAsString"></param>
            <param name="retVal"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.ValueConvert.ParseValueWithTypeInformation(System.String,System.Object@,System.Boolean)">
            <summary>
            Parses the given string including type information. String can be in format %lt;type&gt; 'value'
            </summary>
            <param name="valueAsString"></param>
            <param name="retVal"></param>
            <param name="allowConvertFromBase64">Indicates whether TypeConverter should be checked whether the type to be
            parsed supports conversion to/from byte array (e.g. an Image)</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.ValueConvert.TryConvertFromBase64String(System.Type,System.String,System.Object@)">
            <summary>
            Indicates whether the TypeConverter associated with the type supports conversion to/from a byte array (e.g. an Image). 
            If that is the case the string is converted to a byte array from a base64 string.
            </summary>
            <param name="type"></param>
            <param name="valueAsString"></param>
            <param name="retVal"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.ValueConvert.FormatValueWithTypeInformation(System.Object)">
            <summary>
            Overloaded. Formats the given value as string including type information. String will be in format %lt;type&gt; 'value'
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.ValueConvert.FormatValueWithTypeInformation(System.Object,System.Boolean)">
            <summary>
            Formats the given value as string including type information. String will be in format %lt;type&gt; 'value'
            </summary>
            <param name="value"></param>
            <param name="allowConvertToBase64">Indicates whether TypeConverter should be checked whether the type to be
            parsed supports conversion to/from byte array (e.g. an Image)</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.ValueConvert.TryConvertToBase64String(System.Object)">
            <summary>
            Indicates whether the TypeConverter associated with the type supports conversion to/from a byte array (e.g. an Image). 
            If that is the case the string is converted to a base64 string from a byte array.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.ValueConvert.GetTypeName(System.Type)">
            <summary>
            Returns the type name. If type is not in mscorlib, the assembly name is appended.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.ValueConvert.GetType(System.String)">
            <summary>
            Returns the type from the specified name. If an assembly name is appended the list of currently loaded
            assemblies in the current AppDomain are checked.
            </summary>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.ValueConvert.IsEmpty(System.String)">
            <summary>
            Indicates whether string is null or empty.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.ValueConvert.AllowFormatValueTrimEnd">
            <summary>
            Indicates whether <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.ValueConvert.FormatValue(System.Object,System.Type,System.String,System.Globalization.CultureInfo,System.Globalization.NumberFormatInfo,System.IFormatProvider)"/> should trim whitespace characters from
            the end of the formatted text.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.StaticData">
            <summary>
            Holds all StyleInfoProperties used by derived classes.
            This should go in a product specific StaticData.<para/>
            The concrete Style class could provide a static memory StaticData that belongs
            to the process and library.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StaticData.#ctor(System.Type,System.Type,System.Boolean)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StaticData"/> object with information about the parent style class.
            </summary>
            <param name="type"></param>
            <param name="styleInfoType">Will be used to access the PropertyInfo and its custom attributes for a property.</param>
            <param name="sortProperties"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StaticData.CreatePropertyGridSortOrder(System.String[])">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StaticData.AllocateDataVectorSection(System.Int16,System.Int32@)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StaticData.CreateStyleInfoProperty(System.Type,System.String)">
            <overload>
            Registers a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty"/> for the specified property.
            </overload>
            <summary>
            Registers a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty"/> for the specified property.
            </summary>
            <param name="type">The type of the property.</param>
            <param name="name">The name of the property.</param>
            <returns>The StyleInfoProperty with information about the property.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StaticData.CreateStyleInfoProperty(System.Type,System.String,Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoPropertyOptions)">
            <summary>
            Registers a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty"/> for the specified property.
            </summary>
            <param name="type">The type of the property.</param>
            <param name="name">The name of the property.</param>
            <param name="propertyOptions">Specifies options for the property.</param>
            <returns>The StyleInfoProperty with information about the property.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StaticData.CreateStyleInfoProperty(System.Type,System.String,System.Int16)">
            <summary>
            Registers a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty"/> for the specified property.
            </summary>
            <param name="type">The type of the property.</param>
            <param name="name">The name of the property.</param>
            <param name="maxValue">The maximal possible Int16 value for the property.</param>
            <returns>The StyleInfoProperty with information about the property.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StaticData.CreateStyleInfoProperty(System.Type,System.String,System.Int16,System.Boolean)">
            <summary>
            Registers a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty"/> for the specified property.
            </summary>
            <param name="type">The type of the property.</param>
            <param name="name">The name of the property.</param>
            <param name="maxValue">The maximal possible Int16 value for the property.</param>
            <param name="makeBitValue">Indicates whether this StyleInfoProperty should be registered as a member of the BitArray and not to allocate
            an object reference.</param>
            <returns>The StyleInfoProperty with information about the property.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StaticData.CreateStyleInfoProperty(System.Type,System.String,System.Int16,System.Boolean,Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoPropertyOptions)">
            <summary>
            Registers a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty"/> for the specified property.
            </summary>
            <param name="type">The type of the property.</param>
            <param name="name">The name of the property.</param>
            <param name="maxValue">The maximal possible Int16 value for the property.</param>
            <param name="makeBitValue">Indicates whether this StyleInfoProperty should be registered as a member of the BitArray and not to allocate
            an object reference.</param>
            <param name="propertyOptions">Specifies options for the property.</param>
            <returns>The StyleInfoProperty with information about the property.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.Styles.StaticData.CreateStyleInfoProperty(System.Type,System.String,System.Int16,System.Boolean,System.Type,Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoPropertyOptions)">
            <summary>
            Registers a <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty"/> for the specified property.
            </summary>
            <param name="type">The type of the property.</param>
            <param name="name">The name of the property.</param>
            <param name="maxValue">The maximal possible Int16 value for the property.</param>
            <param name="makeBitValue">Indicates whether this StyleInfoProperty should be registered as a member of the BitArray and not to allocate
            an object reference.</param>
            <param name="propertyOptions">Specifies options for the property.</param>
            <param name="componentType">The component type that hosts the property.</param>
            <returns>The StyleInfoProperty with information about the property.</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.StaticData.StyleInfoProperties">
            <summary>
            Returns a collection with <see cref="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoProperty"/> objects.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.StaticData.PropertyGridSortOrder">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.Styles.StaticData.IsEmpty">
            <summary>
            Indicates whether properties have been registered. Returns True if not registered; False otherwise.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoPropertyOptions">
            <summary>
            Specifies the options for style properties.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoPropertyOptions.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoPropertyOptions.Serializable">
            <summary>
            The property supports serialization.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoPropertyOptions.Cloneable">
            <summary>
            The property should be cloned when the parent style object is copied.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoPropertyOptions.Disposable">
            <summary>
            The property should be disposed when the parent style object is disposed.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoPropertyOptions.CloneableAndDisposable">
            <summary>
            The property should be disposed when the parent style object is disposed
            and cloned when the parent style object is copied.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoPropertyOptions.All">
            <summary>
            All of the above.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.Styles.StyleModifyType">
            <summary>
            StyleModifyType defines style operations for <see cref="M:Syncfusion.UI.Xaml.CellGrid.Styles.StyleInfoBase.ModifyStyle(Syncfusion.UI.Xaml.CellGrid.Styles.IStyleInfo,Syncfusion.UI.Xaml.CellGrid.Styles.StyleModifyType)"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleModifyType.Override">
            <summary>
            Copies all initialized properties.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleModifyType.ApplyNew">
            <summary>
            Copies only properties that have not been initialized in the target style object.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleModifyType.Copy">
            <summary>
            Copies all properties and resets properties in the target style.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleModifyType.Exclude">
            <summary>
            Resets properties in the target style that have been marked as initialized in the source style.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleModifyType.Remove">
            <summary>
            Clears out all properties.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.Styles.StyleModifyType.Changes">
            <summary>
            Copies and resets all properties in the target style when the property has been marked as changed in the source style.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.ScrollableFrame">
            <summary>
            This is a ScrollablePanel which inherits the IScrollableInfo. It handles all the scrolling related actions.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.ScrollableFrame.VerticalScrollBarVisibilityProperty">
            <summary>
            The vertical scrollbar visibility property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.ScrollableFrame.HorizontalScrollBarVisibilityProperty">
            <summary>
            The horizontal scrollbar visibility property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.ScrollableFrame.VerticalScrollBarOffsetProperty">
            <summary>
            The vertical offset property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.ScrollableFrame.HorizontalScrollBarOffsetProperty">
            <summary>
            The horizontal offset property
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.ScrollableFrame.HScrollBar">
            <summary>
            Gets the h scroll bar.
            </summary>
            <value>
            The h scroll bar.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.ScrollableFrame.VerticalScrollBarVisibility">
            <summary>
            Gets or sets the vertical scrollbar visibilty.
            </summary>
            <value>
            The vertical offset.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.ScrollableFrame.HorizontalScrollBarVisibility">
            <summary>
            Gets or sets the horizontal scrollbar visibilty.
            </summary>
            <value>
            The vertical offset.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.ScrollableFrame.VerticalScrollBarOffset">
            <summary>
            Gets or sets the vertical offset.
            </summary>
            <value>
            The vertical offset.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.CellGrid.ScrollableFrame.HorizontalScrollBarOffset">
            <summary>
            Gets or sets the horizontal offset.
            </summary>
            <value>
            The horizontal offset.
            </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.CellGrid.VisualContainer">
            <summary>
            This is a scrollable visual container which contains the all panels(CellsPanel, BordersPanel, SelectionPanel) of Grid as Children.
            Handles the arrange and measure logic of all elements.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.CellGrid.VisualContainer.IsInZooming">
            <summary>
            Used to skip the auto scrolling and other touch related stuffs while zooming is in progress. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.VisualContainer.#ctor">
            <summary>
            Creates a new instance.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.VisualContainer.InitializeHeaderLines">
            <summary>
            Initialize and add the Header lines into the container.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.VisualContainer.InitializeFrozenLines">
            <summary>
            Initialize and add the frozen lines into the container.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.VisualContainer.PregenerateRows(Syncfusion.UI.Xaml.Grid.ScrollAxis.VisibleLinesCollection,Syncfusion.UI.Xaml.Grid.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Generates the GridRow based on visible rows.
            </summary>
            <param name="visibleRows"></param>
            <param name="visibleColumns"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.VisualContainer.CreateOrRecycleRow(System.Int32,Syncfusion.UI.Xaml.Grid.ScrollAxis.ScrollAxisRegion)">
            <summary>
            Create or recycle the GridRow
            </summary>
            <param name="rowIndex"></param>
            <param name="region"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.VisualContainer.ArrangeFrozenLines">
            <summary>
            Used to arrange frozen/header vertical and horizontal lines
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.VisualContainer.InitializeChildPanels">
            <summary>
            Initialize and add the child panels.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.VisualContainer.MeasureChildPanels(System.Windows.Size)">
            <summary>
            Measure the child panels.
            </summary>
            <param name="availableSize"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.VisualContainer.ArrangeChildPanels(System.Windows.Rect)">
            <summary>
            Arrange the child panels.
            </summary>
            <param name="rect"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.VisualContainer.CreateSelectionPanel">
            <summary>
            Creates the SelectionPanel.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.VisualContainer.OnScrollColumns_Changed(System.Object,Syncfusion.UI.Xaml.Grid.ScrollAxis.ScrollChangedEventArgs)">
            <summary>
            Used to refresh the columns when visiblecolumns collection changed
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.VisualContainer.InvalidateMeasureInfo">
            <summary>
            Invalidates all the child panels.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.VisualContainer.EnsureItems(System.Boolean)">
            <summary>
            Ensure the visible row elements and visible column elements.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.VisualContainer.PreGenerateItems">
            <summary>
            Pregenerate the IRowElement based on visiblelines.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.VisualContainer.MeasureRows">
            <summary>
            Measure the row elements.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.VisualContainer.ArrangeRows">
            <summary>
            Arrange the row elements.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.VisualContainer.EnsureRows(Syncfusion.UI.Xaml.Grid.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Ensure and update the dirty rows and it elements.
            </summary>
            <param name="visibleRows"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.VisualContainer.EnsureColumns(Syncfusion.UI.Xaml.Grid.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Ensure the column elements in all rows
            </summary>
            <param name="visibleColumns"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.VisualContainer.FindStartEndIndex(Syncfusion.UI.Xaml.Grid.ScrollAxis.VisibleLinesCollection,Syncfusion.UI.Xaml.Grid.ScrollAxis.ScrollAxisRegion,System.Int32@,System.Int32@)">
            <summary>
            Used to find the start and end visible index based on ScrollAxisRegion
            </summary>
            <param name="visibleLines"></param>
            <param name="region"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.VisualContainer.InvalidateRowElements(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Invalidate the row elements which are in a specified range.
            </summary>
            <param name="range"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.VisualContainer.InvalidateRowElements">
            <summary>
            Invalidate all row elements.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.VisualContainer.RefreshRows(Syncfusion.UI.Xaml.CellGrid.GridRangeInfo)">
            <summary>
            Mark rows and their columns as dirty which are in a specified range.
            </summary>
            <param name="range"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.VisualContainer.RefreshAllRows">
            <summary>
            Mark all the rows and their columns as dirty.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.VisualContainer.RangeToRect(Syncfusion.UI.Xaml.Grid.ScrollAxis.ScrollAxisRegion,Syncfusion.UI.Xaml.Grid.ScrollAxis.ScrollAxisRegion,Syncfusion.UI.Xaml.Grid.ScrollAxis.RowColumnIndex,System.Boolean,System.Boolean)">
            <summary>
            For internal use.
            </summary>
            <param name="rowRegion">Scroll axis region for row.</param>
            <param name="columnRegion">Scroll axis region for column.</param>
            <param name="rowcolumn">Cell range.</param>
            <param name="allowEstimatesForOutOfViewRows">If set to true, allows estimate for out of view rows.</param>
            <param name="allowEstimatesForOutOfViewColumns">If set to true, allows estimate for out of view columns.</param>
            <returns>Visible rectangle for the given range.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.VisualContainer.RangeToRect(Syncfusion.UI.Xaml.Grid.ScrollAxis.ScrollAxisRegion,Syncfusion.UI.Xaml.Grid.ScrollAxis.ScrollAxisRegion,Syncfusion.UI.Xaml.CellGrid.GridRangeInfo,System.Boolean,System.Boolean)">
            <summary>
            For internal use.
            </summary>
            <param name="rowRegion">Scroll axis region for row.</param>
            <param name="columnRegion">Scroll axis region for column.</param>
            <param name="range">Cell range.</param>
            <param name="allowEstimatesForOutOfViewRows">If set to true, allows estimate for out of view rows.</param>
            <param name="allowEstimatesForOutOfViewColumns">If set to true, allows estimate for out of view columns.</param>
            <returns>Visible rectangle for the given range.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.VisualContainer.GetClipRect(Syncfusion.UI.Xaml.Grid.ScrollAxis.ScrollAxisRegion,Syncfusion.UI.Xaml.Grid.ScrollAxis.ScrollAxisRegion)">
            <summary>
            Gets the clipping bounds for the specified row and column region.
            </summary>
            <param name="rowRegion">The row region.</param>
            <param name="columnRegion">The column region.</param>
            <returns>A <see cref="M:Syncfusion.UI.Xaml.CellGrid.VisualContainer.GetClipRect(Syncfusion.UI.Xaml.Grid.ScrollAxis.ScrollAxisRegion,Syncfusion.UI.Xaml.Grid.ScrollAxis.ScrollAxisRegion)"/> with clipping bounds.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.CellGrid.VisualContainer.Dispose(System.Boolean)">
            <summary>
            Dispose the live instances.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
    </members>
</doc>
