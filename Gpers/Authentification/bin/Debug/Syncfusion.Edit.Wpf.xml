<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.Edit.Wpf</name>
    </assembly>
    <members>
        <member name="T:Syncfusion.Windows.Edit.EditControl">
            <summary>
            Represents Edit control. EditControl class contains properties and methods for
            users to customize and perform various activities related to EditControl.
            </summary>
            <remarks>
            <para>EditControl is an text or source code editor control. It can be used to
            create and modify text and source code files of supported file types.
            EditControl can be used to create editor applications like notepad or Microsoft
            Visual Studio IDE.</para>
            </remarks>
            <example>
            <para><b>XAML</b></para>
            <para></para>
            <para>&lt;Window x:Class=&quot;SampleApplication.Window1&quot;</para>
            <para> xmlns=&quot;http://
            schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</para>
            <para> xmlns:x=&quot;http:// schemas.microsoft.com/winfx/2006/xaml&quot;</para>
            <para>    Title=&quot;Window1&quot; Height=&quot;300&quot; Width=&quot;300&quot;
            xmlns:syncfusion=&quot;http:// schemas.syncfusion.com/wpf&quot;&gt;</para>
            <para>    &lt;Grid&gt;</para>
            <para>        &lt;syncfusion:EditControl
            Name=&quot;editControl1&quot;/&gt;</para>
            <para>    &lt;/Grid&gt;</para>
            <para>&lt;/Window&gt;</para>
            <para></para>
            <para><b>C#</b></para>
            <para></para>
            <para>EditControl editcontrol = new EditControl();</para>
            </example>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.IsLineBackgroundApplying">
            <summary>
             internal bool variable to identify if LineBackgroundApplying is created or not.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.mlines">
            <summary>
            object of LineItemsCollection
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.isReinitializeLines">
            <summary>
            internal bool variable to identify if the Lines collection need to be re-initialized.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.scrollControl">
            <summary>
            internal instance of EditScrollControl to store the reference of template child.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.clipboardtext">
            <summary>
            string variable to store copied or cut text when run in partial trust mode. Default value is empty
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.isAddingLinesCompleted">
            <summary>
            internal variable to check if there are still lines being added.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.knownLanguages">
            <summary>
            internal variable to store the list of file extension of all languages supported.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.IsEnterKeyPressed">
            <summary>
            internal variable to denote if the enter key has pressed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.IsSpaceKeyPressed">
            <summary>
            internal variable to denote if the space key has pressed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.IsPaste">
            <summary>
            internal variable to denote if the paste operation has perform.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.inputtimer">
            <summary>
            private variable to raise the expand items method when the cursor is idle.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.pinButton">
            <summary>
            local variable to hold reference to pin button in find results tab.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.findResultsTab">
            <summary>
            local variable to hold reference to find results tabcontrol.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.item">
            <summary>
            local variable to hold reference to find results tabitem.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.findResultsList">
            <summary>
            local variable to hold reference to listbox in the find results tab.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.findResultsTitleBar">
            <summary>
            local variable to hold reference to find results titlebar.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.findReplaceWindow">
            <summary>
            local variable to hold reference to find replace popup control.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.viewer">
            <summary>
            local variable to hold reference to scrollviewer in the control template.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.intellisenseBox">
            <summary>
            internal variable to hold reference to listbox in the intellisense popup.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.intellisensePopup">
            <summary>
            internal variable to hold reference to intellisense popup.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.isIntellisenseBoxOpen">
            <summary>
            internal variable to denote if the intellisense box is open.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.selectedIntellisenseItem">
            <summary>
            internal variable that denotes the selected intellisenseitem.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.intellisenseFilterString">
            <summary>
            internal variable to hold filter string typed by user
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.findResultsTimer">
            <summary>
            local DispatcherTimer to apply hide and view animations for find results tab.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.isHideFindResultsTab">
            <summary>
            local bool variable to identify if the find results tab has to be hidden.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.intellisenseArgs">
            <summary>
            Local variable to store the intellisense args values.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.onBeforeLineRenderArgs">
            <summary>
            Local variable to store the On Before Line Render Args values.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.replaceControl">
            <summary>
            Local variable to store the replace control
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.previousSelectedItem">
            <summary>
            Local variable to store the previous selected intellisense item
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.isInsertKeyToggled">
            <summary>
            Local variable to identify if the insert key is toggled.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.isAssemblyInitializing">
            <summary>
            Local variable to identify if the assembly initialization process is going on.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.textselectline">
            <summary>
            local variable text select line
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.SelectedTextPointerProperty">
            <summary>
            Using a DependencyProperty as the backing store for SelectedTextPointer.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.EnterKeyBehaviorProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.AllowDragDropProperty">
            <summary>
            DependencyProperty for AllowDragDrop
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.AcceptsTabProperty">
            <summary>
            DependencyProperty for AcceptsTab
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.IntellisenseModeProperty">
            <summary>
            DependencyProperty for IntellisenseMode
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.IntellisenseItemTemplateProperty">
            <summary>
            DependencyProperty for IntellisenseItemTemplate
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.IntellisenseBoxStyleProperty">
            <summary>
            DependencyProperty for IntellisenseBoxStyle
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.CustomLanguageProperty">
            <summary>
            DependencyProperty for CustomLanguage
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.IntellisenseCustomItemsSourceProperty">
            <summary>
            DependencyProperty for IntellisenseCustomItemsSource
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.EnableIntellisenseProperty">
            <summary>
            DependencyProperty for EnableIntellisense
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.AssemblyReferencesProperty">
            <summary>
            DependencyProperty for AssemblyReferences
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.ShowFindAndReplaceProperty">
            <summary>
            DependencyProperty for ShowFindAndReplace
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.HorizontalScrollBarVisibilityProperty">
            <summary>
            DependencyProperty for HorizontalScrollBarVisibility
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.ShowDefaultContextMenuProperty">
            <summary>
            DependencyProperty for ShowDefaultContextMenu
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.IsFindResultsTabClosedProperty">
            <summary>
            DependencyProperty for IsFindResultsTabClosed
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.FindResultsTabHeightProperty">
            <summary>
            DependencyProperty for FindResultsTabHeight
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.FindResultsTabVisibilityProperty">
            <summary>
            DependencyProperty for FindResultsTabVisibility
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.TabSpacesProperty">
            <summary>
            DependencyProperty for TabSpacesProperty
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.IsUndoEnabledProperty">
            <summary>
            DependencyProperty for IsUndoEnabledProperty
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.IsRedoEnabledProperty">
            <summary>
            DependencyProperty for IsRedoEnabledProperty
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.EnableOutliningProperty">
            <summary>
            DependencyProperty for EnableOutlining
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.SelectedTextProperty">
            <summary>
            DependencyProperty for SelectedTextProperty
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.VerticalScrollBarVisibilityProperty">
            <summary>
            DependencyProperty for VerticalScrollBarVisibility
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.DocumentSourceProperty">
            <summary>
            DependencyProperty for DocumentSource
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.PreferredWidthProperty">
            <summary>
            DependencyProperty for PreferredWidth
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.LineHeightProperty">
            <summary>
            DependencyProperty for LineHeight
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.DocumentLanguageProperty">
            <summary>
            DependencyProperty for DocumentLanguage
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.TextProperty">
            <summary>
            DependencyProperty for Text
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.ShowLineNumberProperty">
            <summary>
            DependencyProperty for ShowLineNumber
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.IsReadOnlyProperty">
            <summary>
            DependencyProperty for IsReadOnly
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.ShowOutliningProperty">
            <summary>
            DependencyProperty for ShowOutlining
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.IntellisensePopupHeightProperty">
            <summary>
            DependencyProperty for IntellisensePopupHeight
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.IntellisensePopupWidthProperty">
            <summary>
            DependencyProperty for IntellisensePopupWidth
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.CaretBrushProperty">
            <summary>
            DependencyProperty for CaretBrush Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.ShowBlockIndicatorLineProperty">
            <summary>
            DependencyProperty for ShowBlockIndicatorLine Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.BlockIndicatorLineStrokeProperty">
            <summary>
            DependencyProperty for BlockIndicatorLineStroke Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.BlockIndicatorLineThicknessProperty">
            <summary>
            DependencyProperty for BlockIndicatorLineThickness Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.SelectionBackgroundProperty">
            <summary>
            DependencyProperty for SelectionBackground Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.SelectionForegroundProperty">
            <summary>
            DependencyProperty for SelectionForeground Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.IsSelectionForegroundEnabledProperty">
            <summary>
            DependencyProperty for IsSelectionForegroundEnabled Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.LineNumberAreaBackgroundProperty">
            <summary>
            DependencyProperty for LineNumberAreaBackground Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.IsAutoLineNumberAreaWidthEnabledProperty">
            <summary>
            DependencyProperty for IsAutoLineNumberAreaWidthEnabled Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.LineNumberAreaWidthProperty">
            <summary>
            DependencyProperty for LineNumberAreaBackground Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.ActualLineNumberAreaWidthProperty">
            <summary>
            DependencyProperty for ActualLineNumberAreaWidth Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.LineNumberTextForegroundProperty">
            <summary>
            DependencyProperty for LineNumberTextForeground Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.OutliningAreaWidthProperty">
            <summary>
            DependencyProperty for OutliningAreaWidth Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.OutliningAreaBackgroundProperty">
            <summary>
            DependencyProperty for OutliningAreaBackground Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.IsTrackChangesEnabledProperty">
            <summary>
            DependencyProperty for IsTrackChangesEnabled Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.SavedLineIndicatorBrushProperty">
            <summary>
            DependencyProperty for SavedLineIndicatorBrush Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.ModifiedLineIndicatorBrushProperty">
            <summary>
            DependencyProperty for ModifiedLineIndicatorBrush Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.ChangesIndicatorWidthProperty">
            <summary>
            DependencyProperty for ChangesIndicatorWidth Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.CollapsedTextForegroundProperty">
            <summary>
            DependencyProperty for CollapsedTextForeground Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.IsAutoIndentationEnabledProperty">
            <summary>
            DependencyProperty for IsAutoIndentationEnabled Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.AcceptsReturnProperty">
            <summary>
            DependencyProperty for AcceptsReturn Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.IndentingOptionsProperty">
            <summary>
            DependencyProperty for IndentingOptions Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.SelectionChangedEvent">
            <summary>
            Bubbled RoutedEvent Identifies the SelectionChanged.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.m_SelectLinesOnDrop">
            <summary>
            Select Lines on drop
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnTextChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Gets called when Text property of the EditControl gets changed. Also it triggers
            the TextChanged Event of the EditControl.
            </summary>
            <param name="sender">DepdendencyObject, returns EditControl</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnLanguageChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Occurs when the DocumentLanguage property is changed
            </summary>
            <param name="d">The DependencyObject, Return EditControl on OnLanguageChanged event is raised</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnLineHeightChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Occurs when the LineHeight property is changed
            <param name="d">The DependencyObject, Return EditControl on OnLanguageChanged event is raised</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnSourceChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Occurs when the DocumentSource property gets changed.
            </summary>
            <param name="d">The DependencyObject, Return EditControl on SourceChanged event is raised</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnSourceChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Occurs when the DocumentSource property gets changed.
            </summary>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnPreferredWidthChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Occurs when the PreferredWidth property gets changed.
            </summary>
            <param name="obj">The DependencyObject, Return EditControl on SourceChanged event is raised</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnFontPropertiesChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Occurs when the FontFamily property gets changed.
            </summary>
            <param name="obj">The DependencyObject, Return EditControl when its Font property changed event is raised</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnFontPropertiesChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Occurs when the FontFamily and FontSize property gets changed.
            </summary>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnSelectedTextChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Occurs when the SelectedText property gets changed.
            </summary>
            <param name="obj">The DependencyObject, represents EditControl</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnSelectedTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Occurs when the SelectedText property gets changed.
            </summary>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnShowLineNumberChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Occurs when the ShowLineNumber property gets changed.
            </summary>
            <param name="obj">The DependencyObject, represents EditControl</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnEnableOutliningChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Occurs when the EnableOutlining property gets changed.
            </summary>
            <param name="obj">The DependencyObject, represents EditControl</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnShowDefaultContextMenuChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Occurs when the ShowLineNumber property gets changed.
            </summary>
            <param name="obj">The DependencyObject, represents EditControl</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnIntellisenseCustomSourceChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Occurs when the IntellisenseCustomSource property gets changed.
            </summary>
            <param name="obj">The DependencyObject, represents EditControl</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnCustomLanguageChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Occurs when custom language property gets changed. Updates the CurrentLanguage property and
            updates visuals to apply colors based on the custom language
            </summary>
            <param name="d">The DependencyObject, Return EditControl on OnCustomLanguageChanged event is raised</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.CoerceWidthOrHeightProperty(System.Windows.DependencyObject,System.Object)">
            <summary>
            Coerces the FindResultsTabHeight  property.
            </summary>
            <param name="d">The DependencyObject d.</param>
            <param name="baseValue">The base value.</param>
            <returns>The base value</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnFindResultsTabHeightChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Occurs when FindResultsTabHeight property gets changed.
            </summary>
            <param name="obj">The DependencyObject, Return EditControl on OnCustomLanguageChanged event is raised</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnCoerceIntellisensePopupHeight(System.Windows.DependencyObject,System.Object)">
            <summary>
            Coerces the IntellisensePopupHeight  property.
            </summary>
            <param name="d">The DependencyObject d.</param>
            <param name="baseValue">The base value.</param>
            <returns>The base value</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnIntellisensePopupHeightChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Occurs when IntellisensePopupHeight property gets changed.
            </summary>
            <param name="obj">The DependencyObject, Return EditControl on OnCustomLanguageChanged event is raised</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnAssemblyReferencesChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Occurs when FindResultsTabHeight property gets changed.
            </summary>
            <param name="obj">The DependencyObject, Return EditControl on OnCustomLanguageChanged event is raised</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnLineNumberPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DependencyPropertyChangedCallback for line number area related properties such
            aas LineNumberAreaWidth and IsAutoLineNumberAreaWidthEnabled
            </summary>
            <param name="obj">represents EditControl</param>
            <param name="args">represents DependencyPropertyChangedEventArgs</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnOutliningAreaWidthChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DependencyPropertyChangedCallback for OutliningAreaWidth DependencyProperty.
            </summary>
            <param name="obj">represents EditControl</param>
            <param name="args">represents DependencyPropertyChangedEventArgs</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnChangesIndicatorWidthChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DependencyPropertyChangedCallback for ChangesIndicatorWidth DependencyProperty.
            </summary>
            <param name="obj">represents EditControl</param>
            <param name="args">represents DependencyPropertyChangedEventArgs</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.BeginAssemblyInit">
            <summary>
            A method to specify that the adding or removing assemblies to the Assembly references property has been started.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.EndAssemblyInit">
            <summary>
            A method to specify that the adding or removing assemblies to the Assembly references property has been completed.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Syncfusion.Windows.Edit.EditControl"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.Windows.Edit.EditControl">EditControl</see> class.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.Inbetweentag">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.EditControl_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Sets the focus of the control whent the control gets loaded.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Occurs the TextChanged event.
            </summary>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.AddFiltersToOpenDialog(Microsoft.Win32.FileDialog)">
            <summary>
            Helper method to include all the supported file types to FileOpen or FileSave dialog
            </summary>
            <param name="dialog">The dialog.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.GetLanguageBase(Syncfusion.Windows.Edit.Languages)">
            <summary>
            Helper method to get the LanguageBase object based on the Language Enum
            </summary>
            <param name="item">represents Language item</param>
            <returns>an instance of LanguageBase based on the language selected.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.LoadFile">
            <summary>
            LoadFile method is used to open a file in the EditControl. It shows up a
            OpenFileDialog in order for the users to select the file to be opened using
            EditControl and returns a bool value stating the whether file open was
            successful.
            </summary>
            <remarks>
            <para>Load the specified file from the opendialog box.</para>
            </remarks>
            <returns>
            <para>Return true when the file loaded, otherwise return false</para>
            </returns>
            <example>
            <para><b>C#</b></para>
            <para>editControl1.LoadFile();</para>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.LoadFile(System.String)">
            <summary>
            This method does not display OpenFileDialog and loads the file specified as the
            parameter of the method. It returns a bool value stating the file open was
            successful.
            </summary>
            <remarks>
            <para>Load the specified filename into the EditControl.</para>
            </remarks>
            <param name="fileName">String type, specifies the name of the file to be
            loaded.</param>
            <returns>
            <para>Returns a bool value stating the file open was successful.</para>
            </returns>
            <example>
            <para><b>C#</b></para>
            <para></para>
            <para>editControl1.LoadFile(&quot;C:\test.txt&quot;);</para>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.LoadFile(System.String,System.Text.Encoding)">
            <summary>
            Overload of LoadFile function with Encoding as additional argument
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="encoding">The encoding.</param>
            <returns>
            Returns true when File loaded, otherwise return false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.LoadFile(System.String,System.Boolean,System.Boolean)">
            <summary>
            Overload of LoadFile function with Convert and Shared as additional arguments
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="convert">if set to <c>true</c> [convert].</param>
            <param name="shared">if set to <c>true</c> [shared].</param>
            <returns>Returns true when File loaded, otherwise return false.</returns>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditControl.checkSource">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.LoadFile(System.String,System.Boolean,System.Boolean,System.Text.Encoding)">
            <summary>
            Function used to load the content from the file to the control
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="convert">if set to <c>true</c> [convert].</param>
            <param name="shared">if set to <c>true</c> [shared].</param>
            <param name="encoding">The encoding.</param>
            <returns>Returns true when File length greater than 0, otherwise return false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.ExecuteTab">
            <summary>
            Helper method for Tab key activity
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.ExecuteInsertNewLine">
            <summary>
            Helper method for Insert new line operation (Ctrl + Enter)
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.InitializeLanguage(Syncfusion.Windows.Edit.Languages)">
            <summary>
            Helper method to intialize CurrentLanguage property based on the
            DocumentLanguage property.
            </summary>
            <remarks>
            Whenever a new language support is added to EditControl, its corresponding
            initialization need to be done in this method
            </remarks>
            <param name="languages">represents the DocumentLanguage property</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.AddClipboardText(System.Int32,System.Int32)">
            <summary>
            Helper method to insert text in the clipboard. This method gets called when Paste command is executed.
            </summary>
            <param name="line">The line number.</param>
            <param name="cursorindex">The cursorindex.</param>
            <returns>Returns the text count from the startindex to end index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.AddText(Syncfusion.Windows.Edit.EditAction)">
            <summary>
            Helper method to add text to the control based on Action performed
            </summary>
            <param name="action">The action.</param>
            <returns>Returns the cursor index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.UndoEnter(Syncfusion.Windows.Edit.EditAction)">
            <summary>
            Helper method to perform undo operation for enter key
            </summary>
            <param name="action">The Edit action.</param>
            <returns>Returns the Cursor index</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.PasteSelectedText(Syncfusion.Windows.Edit.EditAction)">
            <summary>
            Helper method to paste the text that is selected before performing any action
            </summary>
            <param name="action">The action.</param>
            <returns>Returns the End pointer of the pasted text</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.RemoveText(Syncfusion.Windows.Edit.EditAction)">
            <summary>
            Helper method to remove text based on the edit action
            </summary>
            <param name="action">The Edit action.</param>
            <returns>Returns the Cursor index</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.RedoEnter(Syncfusion.Windows.Edit.EditAction)">
            <summary>
            Helper method to perform Redo opertion for enter key
            </summary>
            <param name="action">The Edit Action.</param>
            <returns>Returns the Cursor index</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.PasteText(System.Int32,System.Int32,System.String)">
            <summary>
            Helper method to paste operation
            </summary>
            <param name="line">The line number.</param>
            <param name="cursorindex">The cursorindex.</param>
            <param name="strtext">The start text.</param>
            <returns>Returns the Selection pointer</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.GetText">
            <summary>
            Helper method that returns the text in the control
            </summary>
            <returns>Returns the all text of the presenter</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.GetTextRange(System.Int32,System.Int32)">
            <summary>
            Helper method that returns the text in the control with in start and end index
            </summary>
            <returns>Returns the all text of the presenter</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.SaveFile">
            <summary>
            Save method is used to save the text in the EditControl under a file name with
            different supported file types.
            </summary>
            <remarks>
            <para>When Save method is called a SaveFileDialog method is displayed in order
            for the users to provide the file name and select target locations.</para>
            </remarks>
            <returns>
            <para>Returns true when Save Dialog box opened otherwise return false</para>
            </returns>
            <example>
            <para><b>C#</b></para>
            <para></para>
            <para>EditControl1.Save();</para>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.SaveFile(System.String)">
            <summary>
            Save method is used to save the text in the EditControl under the file name
            specified
            </summary>
            <param name="FileName">represents the file name under which the text needs to be
            saved.</param>
            <returns>
            <para>Returns true when Save Dialog box opened otherwise return false</para>
            </returns>
            <example>
            <para><b>C#</b></para>
            <para> </para>
            <para>EditControl1.Save(&quot;C:\test.txt&quot;);</para>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.GetExpandAllCanExecute">
            <summary>
            Returns true or false based in order for the ExpandAll command to be executed
            </summary>
            <returns>Return true when the language is not text otherwise return false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.IncreaseIndent(Syncfusion.Windows.Edit.LineItem,System.Int32)">
            <summary>
            Helper method to append empty string at the begining of the line's text.
            </summary>
            <param name="line">represents the line number</param>
            <param name="indentsize">represents the number of spaces to be included for an indent.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.IncreaseIndent(Syncfusion.Windows.Edit.SelectionPointer,System.Int32)">
            <summary>
            Helper method to append empty string at the begining of the all the lines with in the selected range
            </summary>
            <param name="selection">represents the text selection area</param>
            <param name="indentsize">represents the number of spaces to be included for an indent.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.DecreaseIndent(Syncfusion.Windows.Edit.LineItem,System.Int32)">
            <summary>
            Helper method to remove appended empty string at the begining of the line's text.
            </summary>
            <param name="line">represents the line number</param>
            <param name="indentsize">represents the number of spaces to be included for an indent.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.DecreaseIndent(Syncfusion.Windows.Edit.SelectionPointer,System.Int32)">
            <summary>
            Helper method to append empty string at the begining of the all the lines with in the selected range
            </summary>
            <param name="selection">represents the text selection area</param>
            <param name="indentsize">represents the number of spaces to be included for an indent.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.InitializeFindObject">
            <summary>
            Helper method to initialize Find Replace Window
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.ExpandLine(System.Int32)">
            <summary>
            ExpandLine method
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.ExpandLineUpTopLevel(System.Int32)">
            <summary>
            ExpandLineUpTopLevel method
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.InitializeIntellisensePopup">
            <summary>
            Helper method to initialize IntellisensePopup
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.UpdateSelectedIntellisenseItem(Syncfusion.Windows.Edit.IIntellisenseItem)">
            <summary>
            Helper method to update the selected intellisense item contents
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.SelectLines(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            A method to select single line or multiline text with in the specified range.
            </summary>
            <remarks>
            All the parameters are 0 based index values.
            </remarks>
            <param name="startLine">represents the selection start line number.</param>
            <param name="endLine">represents the selection end line number</param>
            <param name="startIndex">represents the selection start index.</param>
            <param name="endIndex">represents the selection end index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.GoToLine(System.Int32)">
            <summary>
            Go to the Select line 
            </summary>
            <param name="LineNumber">Selected number</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.ShowGoToLine(System.Int32)">
            <summary>
            Show Go To Line
            </summary>
            <param name="LineNumber">navigatelinenumber</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.ShowGoToLine">
            <summary>
            Show Go To Line Window
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.RegisterUnderlineFormat(System.Windows.Media.Brush,Syncfusion.Windows.Edit.Interfaces.UnderlineStyle)">
            <summary>
            Register the Under line format
            </summary>
            <param name="color"></param>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.SetUnderline(Syncfusion.Windows.Edit.SelectionPointer,Syncfusion.Windows.Edit.Interfaces.ISnippetFormat)">
            <summary>
            Set underline for the Pointer 
            </summary>
            <param name="pointer"></param>
            <param name="formatedtext"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.RemoveUnderLine(Syncfusion.Windows.Edit.SelectionPointer)">
            <summary>
            Remove Under line for the  pointer
            </summary>
            <param name="pointer"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.viewer_ScrollChanged(System.Object,System.Windows.Controls.ScrollChangedEventArgs)">
            <summary>
            Event handler to update the visibility of caret when scrolled horizontally
            </summary>
            <param name="sender">represents the ScrollViewer in the control template</param>
            <param name="e">represents ScrollChangedEventArgs</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.SetLineBackground(System.Int32,System.Boolean,System.Windows.Media.Brush)">
            <summary>
            Set the background to a specified Line.
            </summary>
            <param name="lineNumber">To specify the Line Number to be customized.</param>
            <param name="isFullLine">To specify whether to highlight Background for full line or within text limit. </param>
            <param name="brush">To specify the Brush to customize the Line Background.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.ResetLineBackground(System.Int32)">
            <summary>
            To reset the Line Background. 
            </summary>
            <param name="lineNumber">To specify the Line Number to reset to default Background. </param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.intellisenseBox_MouseDoubleClick(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Event handler to update the text when an item is double clicked on the intellisense box.
            </summary>
            <param name="sender">represents the listbox in the intellisense popup</param>
            <param name="e">represents MouseButtonEventArgs</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.viewer_LostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event handler to update the focus
            </summary>
            <param name="sender">represents the ScrollViewer in the control template</param>
            <param name="e">represents RoutedEventArgs</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.viewer_GotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event handler to update the focus
            </summary>
            <param name="sender">represents the ScrollViewer in the control template</param>
            <param name="e">represents RoutedEventArgs</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.Lines_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Event handler to update the <see cref="P:Syncfusion.Windows.Edit.EditControl.Text"/> on LineItemsColletionChange.
            </summary>
            <param name="sender"></param>
            <param name="e">represents NotifyCollectionChangedEventArgs</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnApplyTemplate">
            <summary>
            This method gets called when the control template is applied
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.EditControl_SizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Invoked when EditControl SizeChanged
            </summary>
            <param name="sender">EditControl</param>
            <param name="e">Size changed event argument</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
            <summary>
            ContextMenuOpening override event to restrict displaying context menu in the linenumber and expand collapse region
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
            <summary>
            Override to perform operations when text is entered in the control.
            In this override, Text input is captured and operations are performed based on the text input.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.TextCompositionEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.ClearAllText">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.PlaceLine(System.Int32,System.Boolean,System.Text.StringBuilder,System.Int32)">
            <summary>
            Place the line properly Line
            </summary>
            <param name="linenum">line Number</param>
            <param name="setcursor">set cursor or not</param>
            <param name="builder">StringBuilder</param>
            <param name="spacecount">spacecount</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            override to perform operations when key is down
            In this override method key inputs are captured and tab inputs are applied
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.KeyEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            override to perform operations when key is up
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.KeyEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            override to update the focus of the control when control gets Focussed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            override to update the focus of the control when control loses Focussed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnAutoIndentCanExecute(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Updates AutoIndent command's can execute property
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.CanExecuteRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnAutoIndentExecute(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Occurs when AutoIndent command is executed
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnCopyExecute(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Occurs when Copy command is executed
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnCutExecute(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            occurs when Cut command is executed
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnCutCanExecute(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Updates Cut command's can execute property
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.CanExecuteRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnCopyCanExecute(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Updates Copy command's can execute property
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.CanExecuteRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnDeleteCanExecute(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Updates CanExecute of Delete command
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.CanExecuteRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnDeleteExecute(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Occurs when the delete command is executed.
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnBackCanExecute(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Updates CanExecute of the Backspace command
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.CanExecuteRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnBackExecute(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Occurs when backspace button is pressed or backspace command is executed
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnIgnoreCanExecute(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Ignore command is created to restrict other idle keyboard shortcuts
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.CanExecuteRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnIgnoreExecute(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Ignore command is created to restrict other idle keyboard shortcuts
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnPasteExecute(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Occurs when the paste command is executed
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnPasteCanExecute(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Updates can execute arguement of paste command
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.CanExecuteRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnOpenCanExecute(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Updates canexecute argument of open command
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.CanExecuteRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnSaveCanExecute(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Updates canexecute argument of Save command
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.CanExecuteRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnGotolineCanExecute(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Updates canexecute argument of GoToLine command
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.CanExecuteRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnNewCanExecute(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Updates canexecute argument of new command.
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.CanExecuteRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnOpenExecute(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Occurs when the open command is executed.
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnSaveExecute(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Occurs when save command is executed
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnNewExecute(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Occurs when new command is executed
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnSelectAllCanExecute(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Updates the CanExecute of the SelectAll command
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.CanExecuteRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnSelectAllExecute(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Occurs when SelectAll command is executed.
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnOutliningExecute(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when Outlining command is executed.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnOutliningCanExecute(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Occurs when Outlining command is executed.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnUndoCanExecute(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Updates the CanExecute of the Undo command
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.CanExecuteRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnUndoExecute(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Occurs when Undo command is executed.
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnRedoCanExecute(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Updates CanExecute of Redo command
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.CanExecuteRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnRedoExecute(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Occurs when Redo command is executed.
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnExpandAllExecute(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Occurs when ExpandAll command is executed
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnExpandAllCanExecute(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Updates CanExecute for ExpandAll command
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.CanExecuteRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnCollapseAllCanExecute(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Updates CanExecute for CollapseAll command
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.CanExecuteRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnCollapseAllExecute(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Occurs when CollapseAll command is executed
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnFindAndReplaceCanExecute(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Updates CanExecute for ParentControl command
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.CanExecuteRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnReplaceCanExecute(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Updates CanExecute for Replace command
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.CanExecuteRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnFindExecute(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Occurs when Find command is executed
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnGoToLineExecute(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Occurs when GoToLine command is executed
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnReplaceExecute(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Occurs when Replace command is executed
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnSearchExecute(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Occurs when Search command is executed
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnSearchInSelectedCanExecute(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Updates CanExecute for Searchinselected command
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.CanExecuteRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnSearchInSelectedExecute(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Occurs when Search in Selected command is executed
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnFindAllReferencesExecute(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Occurs when FindAllReferences command is executed
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnShowIntellisenseCanExecute(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
             Can execute event handler for Show intellisense
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnShowIntellisenseExecute(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Occurs when ShowIntellisense command is executed
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnInsertNewLineExecute(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Occurs when InsertNewLine command is executed
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnInsertNewLineCanExecute(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Can Execute event handler for InsertNewLine command
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnSelectCurrentWordExecute(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Occurs when InsertNewLine command is executed
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnSelectCurrentWordCanExecute(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Can Execute event handler for InsertNewLine command
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnIncreaseIndentCanExecute(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Can Execute event handler for increase indent command
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnIncreaseIndentExecute(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Occurs when increase indent command is executed
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnDecreaseIndentCanExecute(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Can Execute event handler for decrease indent command
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnDecreaseIndentExecute(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Occurs when decrease indent command is executed
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnCommentSelectionCanExecute(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Can Execute event handler for comment selection command
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnCommentSelectionExecute(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Occurs when comment selection command is executed
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnUncommentSelectionCanExecute(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Can Execute event handler for comment selection command
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OnUncommentSelectionExecute(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Occurs when comment selection command is executed
            </summary>
            <param name="target">The target.</param>
            <param name="args">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.InitializeCommandBindings">
            <summary>
            Helper method to initialize commands shortcut keys
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.ExecuteFindAll">
            <summary>
            Finds all  the occurrences of the FindText specified in FindOptions and displays the list
            of occurences in the Find Symbol Results tab in EditControl.
            </summary>
            <remarks>
            FindOptions property of the EditControl can be used to set the Find related
            parameters
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.ExecuteReplaceAll">
            <summary>
            Replaces all  the occurrences of the FindText specified in FindOptions with ReplaceText
            </summary>
            <remarks>
            FindOptions property of the EditControl can be used to set the Find related
            parameters
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.ExecuteReplace">
            <summary>
            Replaces the immediate occurrence of FindText specified in FindOptions with ReplaceText
            </summary>
            <remarks>
            FindOptions property of the EditControl can be used to set the Find related
            parameters
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.ExecuteFindNext">
            <summary>
            Finds the next occurrence of FindText specified in FindOptions
            </summary>
            <remarks>
            FindOptions property of the EditControl can be used to set the Find related
            parameters
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.FindAllOccurences">
            <summary>
            Finds  all the occurrences of FindText specified in FindOptions. Results can be obtained using SearchResults.FindAllResult property of EditControl class
            </summary>
            <remarks>
            FindOptions property of the EditControl can be used to set the Find related
            parameters
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.FindAllOccurrences">
            <summary>
            Finds  all the occurrences of FindText specified in FindOptions. Results can be obtained using SearchResults.FindAllResult property of EditControl class
            </summary>
            <remarks>
            FindOptions property of the EditControl can be used to set the Find related
            parameters
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.OpenFindWindow(Syncfusion.Windows.Edit.Tabs)">
            <summary>
            Helper method to open the Find window
            </summary>
            <param name="activetab">Active Tab of Find And Replace Window</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.RaiseIntellisenseBoxOpeningEvent(Syncfusion.Windows.Edit.EditIntellisenseArgs)">
            <summary>
            Helper method to raise IntellisenseBoxOpening event
            </summary>
            <param name="args">represents the EditIntellisenseArgs value</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.RaiseLineBackgroundChangingEvent(Syncfusion.Windows.Edit.OnBeforeLineRenderArgs)">
            <summary>
            Helper method to raise IntellisenseBoxOpening event
            </summary>
            <param name="args">represents the EditIntellisenseArgs value</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditControl.RaiseIntellisenseDrillDownEvent(Syncfusion.Windows.Edit.EditIntellisenseArgs)">
            <summary>
            Helper method to raise IntellisenseDrillDownEvent event
            </summary>
            <param name="args">represents the EditIntellisenseArgs value</param>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.IsResettingLineBackground">
            <summary>
             internal bool variable to identify if Resetting is called or not.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Edit.EditControl.FindReplaceWindowOpened">
            <summary>
            When FindReplaceWindowOpened
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Edit.EditControl.FindReplaceWindowClosed">
            <summary>
             When FindReplaceWindowClosed
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Edit.EditControl.SelectedTextChanged">
            <summary>
            Occurs when text in the EditControl is selected.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Edit.EditControl.TextChanged">
            <summary>
            Occurs when text in the EditControl is gets changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Edit.EditControl.DocumentSourceChanged">
            <summary>
            Occurs when DocumentSource property gets changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Edit.EditControl.IntellisenseBoxOpening">
            <summary>
            Occurs before the IntellisenseBox is displayed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Edit.EditControl.IntellisenseDrillDown">
            <summary>
            Occurs when a intellisense drills down to sub -items
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Edit.EditControl.OnBeforeLineRender">
            <summary>
            Occurs before applying LineBackground
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.Text">
            <summary>
            Gets or sets a value indicating text in EditControl.
            </summary>
            <remarks>
            <para>By default, it is set to string.Empty.</para>
            </remarks>
            <example>
            <para><b>XAML</b></para>
            <para> </para>
            <para>&lt;syncfusion:EditControl Name=&quot;editControl1&quot;
            Text=&quot;Setting Text Property&quot;/&gt;</para>
            <para> </para>
            <para><b>C#</b></para>
            <para> </para>
            <para>editControl1.Text = @&quot;Setting Text Property&quot;;</para>
            </example>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.DocumentLanguage">
            <summary>
            Gets or sets Language for the text in EditControl. Syntax highlighting and
            outlining of text in EditControl are performed based on the language set using
            this property.
            </summary>
            <remarks>
            <para>Specifies the Document language.</para>
            </remarks>
            <value>
            <para>Type: <see
            cref="T:Syncfusion.Windows.Edit.Languages">Syncfusion.Windows.Edit.Languages</see></para>
            </value>
            <example>
            <para><b>XAML</b></para>
            <para></para>
            <para>&lt;syncfusion:EditControl Name=&quot;editControl1&quot;
            DocumentLanguage=&quot;CSharp&quot;/&gt;</para>
            <para></para>
            <para><b>C#</b></para>
            <para></para>
            <para>editControl1.DocumentLanguage = Languages.VisualBasic;</para>
            </example>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.LineHeight">
            <summary>
            Gets and sets the height of each line in EditControl.
            </summary>
            <remarks>
            <para>The LineHeight property specifies the line height in the
            EditControl.</para>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.PreferredWidth">
            <summary>
            Gets or sets required width of the control. This property is used for internal
            to arrange and measure the control.
            </summary>
            <remarks>
            PreferredWidth calculate the preferred width of the EditControl.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.DocumentSource">
            <summary>
            Gets or sets source for EditControl. The filename specified will be loaded in
            the EditControl.
            </summary>
            <remarks>
            <para>Document Source of the EditControl.</para>
            </remarks>
            <example>
            <para><b>XAML</b></para>
            <para></para>
            <para>&lt;syncfusion:EditControl Name=&quot;editControl1&quot;
            DocumentSource=&quot;C:\test.txt&quot;&gt;</para>
            <para></para>
            <para><b>C#</b></para>
            <para></para>
            <para>editControl1.DocumentSource = &quot;C:\test.txt&quot;;</para>
            </example>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.ShowLineNumber">
            <summary>
            Gets or sets a value indicating whether line number to be displayed or not.
            </summary>
            <remarks>
            <para>ShowLineNumber property checks the Line number visibility.</para>
            </remarks>
            <value>
            <para>Set <b>True</b> if Line number has to be displayed; otherwise,
            <b>false</b>. By default it is set to true.</para>
            </value>
            <example>
            <para><b>XAML</b></para>
            <para></para>
            <para>&lt;syncfusion:EditControl Name=&quot;editControl1&quot;
            ShowLineNumber=&quot;True&quot;/&gt;</para>
            <para></para>
            <para><b>C#</b></para>
            <para></para>
            <para>editControl1.ShowLineNumber = false;</para>
            </example>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.IsReadOnly">
            <summary>
            Gets or sets a value indicating whether read only mode is enabled or not.
            </summary>
            <remarks>
            <para>Set<b> True</b> if this read only has to be enabled; otherwise,
            <b>false</b>. By default, it is set to false.</para>
            </remarks>
            <example>
            <para><b>XAML</b></para>
            <para></para>
            <para>&lt;syncfusion:EditControl Name=&quot;editControl1&quot;
            IsReadOnly=&quot;True&quot;/&gt;</para>
            <para></para>
            <para><b>C#</b></para>
            <para></para>
            <para>editControl1.IsReadOnly = true;</para>
            </example>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.HorizontalScrollBarVisibility">
            <summary>
            Gets or sets a value indicating Visibility of Horizontal ScrollBar.
            </summary>
            <remarks>
            <para>By default, it is set to Auto, wherein the ScrollBar will be visible when required.</para>
            </remarks>
            <example>
            <para><b>XAML</b></para>
            <para></para>
            <para>&lt;syncfusion:EditControl Name=&quot;editControl1&quot;
            HorizontalScrollBarVisibility=&quot;Visible&quot;/&gt;</para>
            <para></para>
            <para><b>C#</b></para>
            <para></para>
            <para>editControl1.HorizontalScrollBarVisibility = ScrollBarVisibility.Visible;</para>
            </example>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.VerticalScrollBarVisibility">
            <summary>
            Gets or sets a value indicating Visibility of Vertical ScrollBar.
            </summary>
            <remarks>
            <para>By default, it is set to Auto, wherein the ScrollBar will be visible when required.</para>
            </remarks>
            <example>
            <para><b>XAML</b></para>
            <para></para>
            <para>&lt;syncfusion:EditControl Name=&quot;editControl1&quot;
            VerticalScrollBarVisibility=&quot;Visible&quot;/&gt;</para>
            <para></para>
            <para><b>C#</b></para>
            <para></para>
            <para>editControl1.VerticalScrollBarVisibility = ScrollBarVisibility.Visible;</para>
            </example>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.SelectedText">
            <summary>
            Gets a value indicating the selected text of EditControl.
            </summary>
            <remarks>
            <para>It is readonly property</para>
            </remarks>
            <example>
            <para><b>XAML</b></para>
            <para> </para>
            <para>&lt;TextBox x:Name=&quot;textBox1&quot; Text=&quot;{Binding
            ElementName=editControl1, Path=SelectedText}&quot;/&gt;</para>
            <para> </para>
            <para><b>C#</b></para>
            <para> </para>
            <para>textBox1.Text = editControl1.SelectedText;</para>
            </example>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.SelectedTextPointer">
            <summary>
            Gets or Sets the Selection text pointer
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.EnableOutlining">
            <summary>
            Gets or sets a value indicating whether Outlining of text in EditControl should
            be applied.
            </summary>
            <remarks>
            <para>EnableOutlining property enables the outlining of text in EditControl.  It
            set <b>True</b> if outlining of the text in EditControl to be enabled ;
            otherwise, <b>false</b>. By default, it is set to true.</para>
            </remarks>
            <example>
            <para><b>XAML</b></para>
            <para></para>
            <para>&lt;syncfusion:EditControl Name=&quot;EditControl1&quot;
            EnableOutlining=&quot;True&quot;/&gt;</para>
            <para></para>
            <para><b>C#</b></para>
            <para></para>
            <para>EditControl1.EnableOutlining = false;</para>
            </example>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.ShowDefaultContextMenu">
            <summary>
            Gets or sets a value indicating whether built-in context menu should be
            displayed.
            </summary>
            <remarks>
            <para>ShowDefaultContextMenu sets <b>True</b> if built-in context menu has to be
            displayed; otherwise, <b>false</b>. By default, it is set to true. </para>
            </remarks>
            <example>
            <para><b>XAML</b></para>
            <para></para>
            <para>&lt;syncfusion:EditControl Name=&quot;EditControl1&quot;
            ShowDefaultContextMenu=&quot;False&quot;&gt;</para>
            <para></para>
            <para><b>C#</b></para>
            <para></para>
            <para>EditControl1.ShowDefaultMenu = false;</para>
            </example>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.ShowFindAndReplace">
            <summary>
            Get or set a value indicating whether Find And Replace Window has to be shown or not
            </summary>
            /// <para>ShowFindAndReplace property returns the Visibility mode of Find And replace.</para>
            <remark></remark>
            <value>
            <para>Set <b>True</b> if Find And Replace window has to be displayed;
            otherwise, <b>False</b>. By default, it is set to True.</para>
            </value>
            <example>
            <para><b>XAML</b></para>
            <para></para>
            <para>&lt;syncfusion:EditControl Name=&quot;EditControl1&quot;
            ShowFindAndReplace=&quot;True&quot;&gt;</para>
            <para></para>
            <para><b>C#</b></para>
            <para></para>
            <para>EditControl1.ShowFindAndReplace = True;</para>
            </example>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.IsUndoEnabled">
            <summary>
            Gets or sets a value indicating whether this instance supports Undo operation or
            not.
            </summary>
            <remarks>
            <para><b>XAML</b></para>
            <para>&lt;EditControl x:Name=&quot;editControl1&quot;
            IsUndoEnabled=&quot;True&quot;/&gt;</para>
            <para> </para>
            <para><b>C#</b></para>
            <para>EditControl editControl1 = new EditControl();</para>
            <para>editControl1.IsUndoEnabled = true;</para>
            </remarks>
            <value>
            <see langword="true"/> if this instance allows undo operations to be performed ;
            otherwise, <see langword="false"/>.
            </value>
            <seealso
            cref="P:Syncfusion.Windows.Edit.EditControl.IsRedoEnabled">IsRedoEnabled
            Property</seealso>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.IsRedoEnabled">
            <summary>
            Gets or sets a value indicating whether this instance supports Redo operation or
            not.
            </summary>
            <remarks>
            <para><b>XAML</b></para>
            <para>&lt;EditControl x:Name=&quot;editControl1&quot;
            IsRedoEnabled=&quot;True&quot;/&gt;</para>
            <para> </para>
            <para><b>C#</b></para>
            <para>EditControl editControl1 = new EditControl();</para>
            <para>editControl1.IsRedoEnabled = true;</para>
            </remarks>
            <value>
            <see langword="true"/> if this instance allows undo operations to be performed ;
            otherwise, <see langword="false"/>.
            </value>
            <seealso
            cref="P:Syncfusion.Windows.Edit.EditControl.IsUndoEnabled">IsUndoEnabled
            Property</seealso>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.TabSpaces">
            <summary>
            Gets or sets a value indicating the number of spaces to included when the tab
            key is pressed.
            </summary>
            <remarks>
            By default, its value is set to 5.
            </remarks>
            <value>
            System.Int
            </value>
            <seealso cref="P:Syncfusion.Windows.Edit.EditControl.AcceptsTab">Accepts Tab
            Property</seealso>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.FindResultsTabVisibility">
            <summary>
            Gets or sets a value indicating the Visibility mode of the find results tab.
            </summary>
            <remarks>
            <para><b>XAML</b></para>
            <para>&lt;EditControl x:Name=&quot;editControl&quot;
            FindResultsTabVisibility=&quot;Visible&quot;/&gt;</para>
            <para></para>
            <para><b>C#</b></para>
            <para>editControl1.FindResultsTabVisibility = TabVisibility.Collapsed;</para>
            </remarks>
            <value>
            <see
            cref="T:Syncfusion.Windows.Edit.TabVisibility">T:Syncfusion.Windows.Edit.TabVisibility</see>
            </value>
            <seealso
            cref="T:Syncfusion.Windows.Edit.TabVisibility">T:Syncfusion.Windows.Edit.TabVisibility</seealso>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.FindResultsTabHeight">
            <summary>
            Gets or sets a value indicating desired height of the find results tab..
            </summary>
            <remarks>
            <para><b>XAML</b></para>
            <para>&lt;EditControl x:Name=&quot;editControl1&quot;
            FindResultsTabHeight=&quot;200&quot;/&gt;</para>
            <para></para>
            <para><b>C#</b></para>
            <para>editControl1.FindResultsTabHeight=&quot;150&quot;;</para>
            <para></para>
            <para>By default, this property has a value of 150.</para>
            </remarks>
            <value>
            System.Double
            </value>
            <seealso
            cref="P:Syncfusion.Windows.Edit.EditControl.FindResultsTabVisibility">P:Syncfusion.Windows.Edit.EditControl.FindResultsTabVisibility</seealso>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.IsFindResultsTabClosed">
            <summary>
            Gets or sets a value indicating whether the Find Results Tab is closed or not .
            </summary>
            <value>
            <see langword="true"/> if the find results tab in the EditControl is closed;
            otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.AssemblyReferences">
            <summary>
            Gets or sets a collection of Uri specifying the prebuilt assemblies that can be
            used by the EditControl to display Classes, Properties, Events and Methods in
            the Auto intellisense mode.
            </summary>
            <remarks>
            List&lt;Uri&gt; uriList = new List&lt;Uri&gt;();
            <para>uriList.Add(new
            Uri(&quot;C:\Assemblies\Syncfusion.Edit.WPF.dll&quot;,UriKind.Absolute));</para>
            <para>uriList.Add(new
            Uri(&quot;C:\Assemblies\Syncfusion.Shared.WPF.dll&quot;,UriKind.Absolute));</para>
            <para>editControl1.AssemblyReferences = uriList;</para>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.EnableIntellisense">
            <summary>
            Gets or sets a value indicating whether Intellisense is enabled in this instance
            of EditControl .
            </summary>
            <remarks>
            <para><b>XAML</b></para>
            <para>&lt;EditControl x:Name=&quot;editControl1&quot;
            EnableIntellisense=&quot;True&quot;/&gt;</para>
            <para></para>
            <para><b>C#</b></para>
            <para>editControl1.EnableIntellisense=false;</para>
            </remarks>
            <value>
            <see langword="true"/> if this instance support intellisense; otherwise, <see
            langword="false"/>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.IntellisenseMode">
            <summary>
            Gets or sets a value indicating the intellisense mode. It supports two modes
            viz, Auto and Custom. In Auto mode, intellisense items are auto generated based
            on the language lexems, assembly references included. Where as in the Custom
            mode, users have to set the IntellisenseCustomItemsSource property to specify
            the items to be displayed in the intellisense.
            </summary>
            <remarks>
            <b>XAML</b>
            <para>&lt;EditControl x:Name=&quot;editControl1&quot;
            IntellisenseMode=&quot;Auto&quot;/&gt;</para>
            <para></para>
            <para><b>C#</b></para>
            <para>editControl1.IntellisenseMode = IntellisenseMode.Custom;</para>
            </remarks>
            <seealso
            cref="P:Syncfusion.Windows.Edit.EditControl.IntellisenseCustomItemsSource">P:Syncfusion.Windows.Edit.EditControl.IntellisenseCustomItemsSource</seealso>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.CustomLanguage">
            <summary>
            Gets or sets an instance of LanguageBase type indicating the custom language.
            </summary>
            <seealso
            cref="T:Syncfusion.Windows.Edit.LanguageBase">T:Syncfusion.Windows.Edit.LanguageBase</seealso>
            <seealso
            cref="T:Syncfusion.Windows.Edit.ProceduralLanguageBase">T:Syncfusion.Windows.Edit.ProceduralLanguageBase</seealso>
            <seealso
            cref="T:Syncfusion.Windows.Edit.MarkupLanguageBase">T:Syncfusion.Windows.Edit.MarkupLanguageBase</seealso>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.AcceptsTab">
            <summary>
            Gets or sets a value indicating whether this instance of EditControl accepts tab
            key in the content.
            </summary>
            <remarks>
            <para><b>XAML</b></para>
            <para>&lt;EditControl x:Name=&quot;editControl1&quot;
            AcceptsTab=&quot;True&quot;/&gt;</para>
            <para></para>
            <para><b>C#</b></para>
            <para>editControl1.AcceptsTab=false;</para>
            <para></para>
            <para>By default Accepts Tab property is set to true.</para>
            </remarks>
            <value>
            <see langword="true"/> if the control has to add additional spaces based on
            TabSpaces property; otherwise, <see langword="false"/> to move the focus to next
            focusable control.
            </value>
            <seealso
            cref="P:Syncfusion.Windows.Edit.EditControl.AcceptsTab">AcceptsTab</seealso>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.IntellisenseItemTemplate">
            <summary>
            Gets or sets a DataTemplate to be applied to a IntellisenseBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.IntellisenseBoxStyle">
            <summary>
            Gets or sets a Style to be applied to a IntellisenseBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.IntellisenseCustomItemsSource">
            <summary>
            Gets or sets a collection of Business object inherited from IIntellisenseItem to
            be dispalyed in the IntellisenseBox.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.ShowOutlining">
            <summary>
            Gets or sets a value indicating whether Hidden or Visible displayed.
            </summary>
            <remarks>
            <para>ShowOutlining property returns the Visibility mode of outlining.</para>
            </remarks>
            <value>
            <para>Set <b>Visible</b> if built-in context menu has to be displayed;
            otherwise, <b>Hidden</b>. By default, it is set to Visible.</para>
            </value>
            <example>
            <para><b>XAML</b></para>
            <para></para>
            <para>&lt;syncfusion:EditControl Name=&quot;EditControl1&quot;
            ShowDefaultContextMenu=&quot;Visible&quot;&gt;</para>
            <para></para>
            <para><b>C#</b></para>
            <para></para>
            <para>EditControl1.ShowDefaultMenu = Visible;</para>
            </example>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.IntellisensePopupHeight">
            <summary>
            Gets or sets a value indicating desired height of the Intellisense popup..
            </summary>
            <remarks>
            <para><b>XAML</b></para>
            <para>&lt;EditControl x:Name=&quot;editControl1&quot;
            IntellisensePopupHeight=&quot;200&quot;/&gt;</para>
            <para></para>
            <para><b>C#</b></para>
            <para>editControl1.IntellisensePopupHeight=&quot;150&quot;;</para>
            <para></para>
            <para>By default, this property has a value of 150.</para>
            </remarks>
            <value>
            System.Double
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.IntellisensePopupWidth">
            <summary>
            Gets or sets a value indicating desired width of Intellisense Popup.
            </summary>
            <remarks>
            <para><b>XAML</b></para>
            <para>&lt;EditControl x:Name=&quot;editControl1&quot;
            IntellisensePopupWidth=&quot;200&quot;/&gt;</para>
            <para></para>
            <para><b>C#</b></para>
            <para>editControl1.IntellisensePopupWidth=&quot;150&quot;;</para>
            <para></para>
            <para>By default, this property has a value of 150.</para>
            </remarks>
            <value>
            System.Double
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.CaretBrush">
            <summary>
            Gets or sets the Brush to be applied for Cursor.
            </summary>
            <remarks>
            <b>XAML</b>
            <para>&lt;syncfusion:EditControl x:Name=&quot;editControl1&quot;
            CaretBrush=&quot;Red&quot;/&gt;</para>
            <para></para>
            <para><b>C#</b></para>
            <para>editControl1.CaretBrush = Brushes.Green;</para>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.ShowBlockIndicatorLine">
            <summary>
            Gets or sets a value indicating whether the vertical line in the expand collapse
            area should be displayed or not.
            </summary>
            <remarks>
            <b>XAML</b>
            <para>&lt;syncfusion:EditControl x:Name=&quot;editControl1&quot;
            ShowBlockIndicatorLine=&quot;False&quot;/&gt;</para>
            <para></para>
            <para><b>C#</b></para>
            <para>editControl1.ShowBlockIndicatorLine = true;</para>
            </remarks>
            <value>
            <see langword="true"/> if the vertical line has to be displayed; otherwise, <see
            langword="false"/>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.BlockIndicatorLineStroke">
            <summary>
            Gets or sets to applied to the vertical line in the expand or collapse area.
            </summary>
            <remarks>
            <b>XAML</b>
            <para>&lt;syncfusion:EditControl x:Name=&quot;editControl1&quot;
            BlockIndicatorLineStroke=&quot;Red&quot;/&gt;</para>
            <para></para>
            <para><b>C#</b></para>
            <para>editControl1.BlockIndicatorLineStroke = Brushes.Green;</para>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.BlockIndicatorLineThickness">
            <summary>
            Gets or sets the thickness of the line in the expand collapse area of
            EditControl.
            </summary>
            <remarks>
            <b>XAML</b>
            <para>&lt;syncfusion:EditControl x:Name=&quot;editControl1&quot;
            BlockIndicatorLineThickness=&quot;2&quot;/&gt;</para>
            <para></para>
            <para><b>C#</b></para>
            <para>editControl1.BlockIndicatorLineThickness=1d;</para>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.SelectionBackground">
            <summary>
            Gets or sets background brush for selected text.
            </summary>
            <remarks>
            <b>XAML</b>
            <para>&lt;syncfusion:EditControl x:Name=&quot;editControl1&quot;
            SelectionBackground=&quot;DarkGray&quot;/&gt;</para>
            <para> </para>
            <para><b>C#</b></para>
            <para>editControl1.SelectionBackground = Brushes.DodgerBlue;</para>
            </remarks>
            <value>
            By default, this property is set to DodgerBlue SolidColorBrush.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.SelectionForeground">
            <summary>
            Gets or sets text foreground for selected text.
            </summary>
            <remarks>
            <b>XAML</b>
            <para>&lt;syncfusion:EditControl x:Name=&quot;editControl1&quot;
            SelectionForeground=&quot;Yellow&quot;/&gt;</para>
            <para> </para>
            <para><b>C#</b></para>
            <para>editControl1.SelectionForeground = Brushes.Green; </para>
            </remarks>
            <value>
            By Default, this property value is set to White. This brush value gets applied
            when IsSelectionForegroundEnabled property is set to true else, text foreground for
            selected text will be applied from default text foreground or based on syntax
            highlighting colors.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.IsSelectionForegroundEnabled">
            <summary>
            Gets or sets a value indicating whether this instance will apply foreground for
            selected text using SelectionForeground property.
            </summary>
            <remarks>
            <b>XAML</b>
            <para>&lt;syncfusion:EditControl x:Name=&quot;editControl1&quot;
            IsSelectionForegroundEnabled=&quot;False&quot;/&gt;</para>
            <para></para>
            <para><b>C#</b></para>
            <para>editControl1.IsSelectionForegroundEnabled = true;</para>
            </remarks>
            <value>
            <see langword="true"/> if this instance show apply SelectionForeground to
            selected; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.LineNumberAreaBackground">
            <summary>
            Gets or sets a Brush value that is applied as background of LineNumberArea.
            </summary>
            <remarks>
            <b>XAML</b>
            <para>&lt;syncfusion:EditControl x:Name=&quot;editControl1&quot;
            LineNumberAreaBackground=&quot;LightGreen&quot;/&gt;</para>
            <para></para>
            <para><b>C#</b></para>
            <para>editControl1.LineNumberAreaBackground=Brushes.Yellow;</para>
            </remarks>
            <value>
            By default, its value is set to Brushes.WhiteSmoke.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.IsAutoLineNumberAreaWidthEnabled">
            <summary>
            Gets or sets a value indicating whether the width of the line number area has to
            be calculated automatically based on the number of lines.
            </summary>
            <remarks>
            <b>XAML</b>
            <para>&lt;syncfusion:EditControl x:Name=&quot;editControl1&quot;
            IsAutoLineNumberAreaWidthEnabled=&quot;False&quot;/&gt;</para>
            <para></para>
            <para><b>C#</b></para>
            <para>editControl1.IsAutoLineNumberAreaWidthEnabled = false;</para>
            </remarks>
            <value>
            <see langword="true"/> if this instance has to calculate the line number area
            width; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.LineNumberAreaWidth">
            <summary>
            Gets or sets a value indicating the Width of the line number area. This width
            gets applied only when IsAutoLineNumberAreaWidthEnabled property is set to
            false.
            </summary>
            <remarks>
            <b>XAML</b>
            <para>&lt;syncfusion:EditControl x:Name=&quot;editControl1&quot;
            LineNumberAreaWidth=&quot;50&quot;/&gt;</para>
            <para></para>
            <para><b>C#</b></para>
            <para>editControl1.LineNumberAreaWidth = 40d;</para>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.ActualLineNumberAreaWidth">
            <summary>
            Gets the actual width of line number area irrespective of
            IsAutoLineNumberAreaWidthEnabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.LineNumberTextForeground">
            <summary>
            Gets or sets line number text foreground.
            </summary>
            <remarks>
            <b>XAML</b>
            <para>&lt;syncfusion:EditControl x:Name=&quot;editControl1&quot;
            LineNumberTextForeground=&quot;Yellow&quot;/&gt;</para>
            <para> </para>
            <para><b>C#</b></para>
            <para>editControl1.LineNumberTextForeground = Brushes.Green; </para>
            </remarks>
            <value>
            By Default, this property value is set to Black
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.OutliningAreaWidth">
            <summary>
            Gets or sets width of the outlining (expand collapse) area.
            </summary>
            <remarks>
            <b>XAML</b>
            <para>&lt;syncfusion:EditControl x:Name=&quot;editControl1&quot;
            OutliningAreaWidth=&quot;40&quot;/&gt;</para>
            <para></para>
            <para><b>C#</b></para>
            <para>editControl1.OutliningAreaWidth = 50d;</para>
            </remarks>
            <value>
            By default, its value is set to 20.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.OutliningAreaBackground">
            <summary>
            Gets or sets the background Brush to be applied to outlining (expand collapse)
            area.
            </summary>
            <remarks>
            <b>XAML</b>
            <para>&lt;syncfusion:EditControl x:Name=&quot;editControl1&quot;
            OutliningAreaBackground=&quot;LightBlue&quot;/&gt;</para>
            <para></para>
            <para><b>C#</b></para>
            <para>editControl1.OutliningAreaBackground=Brushes.Yellow;</para>
            </remarks>
            <value>
            By default, its value is set to Brushes.Transparent.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.IsTrackChangesEnabled">
            <summary>
            Gets or sets a value indicating whether the changes done to the text needs to
            highlighted or not.
            </summary>
            <remarks>
            <b>XAML</b>
            <para>&lt;syncfusion:EditControl x:Name=&quot;editControl1&quot;
            IsTrackChangesEnabled=&quot;False&quot;/&gt;</para>
            <para></para>
            <para><b>C#</b></para>
            <para>editControl.IsTrackChangesEnabled=true;</para>
            </remarks>
            <value>
            <see langword="true"/> if this instance should highlight the changes done to the
            text ; otherwise, <see langword="false"/>.
            <para></para>
            <para>By default, its value is set to true.</para>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.SavedLineIndicatorBrush">
            <summary>
            Gets or sets the Brush to be applied in the changes indicator for saved line.
            </summary>
            <remarks>
            <b>XAML</b>
            <para>&lt;syncfusion:EditControl x:Name=&quot;editControl1&quot;
            SavedLineIndicatorBrush=&quot;CadetBlue&quot;/&gt;</para>
            <para></para>
            <para><b>C#</b></para>
            <para>editControl1.SavedLineIndicatorBrush = Brushes.Magenta;</para>
            </remarks>
            <value>
            By default, its value is set to LightGreen.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.ModifiedLineIndicatorBrush">
            <summary>
            Gets or sets the Brush to be applied to changes indicator for a modified line
            that has not yet been saved.
            </summary>
            <remarks>
             <b>XAML</b>
            <para>&lt;syncfusion:EditControl x:Name=&quot;editControl1&quot;
            ModifiedLineIndicatorBrush=&quot;CadetBlue&quot;/&gt;</para>
            <para></para>
            <para><b>C#</b></para>
            <para>editControl1.ModifiedLineIndicatorBrush = Brushes.Magenta;</para>
            </remarks>
            <value>
            By default, its value is set to Brushes.Yellow
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.ChangesIndicatorWidth">
            <summary>
            Gets or sets the Width of the changes indicator.
            </summary>
            <remarks>
            <b>XAML</b>
            <para>&lt;syncfusion:EditControl x:Name=&quot;editControl1&quot;
            ChangesIndicatorWidth=&quot;10&quot;/&gt;</para>
            <para></para>
            <para><b>C#</b></para>
            <para>editControl1.ChangesIndicatorWidth = 3d;</para>
            </remarks>
            <value>
            By default, its value is set to 4.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.IndentingOptions">
            <summary>
            Gets or sets the indenting options of the EditControl.
            </summary>
            <remarks>
            Supports three types of indentations and Smart indenting options is set as
            default value for this property.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.IsAutoIndentationEnabled">
            <summary>
            Gets or sets a value indicating whether this auto indentation is supported or
            not.
            </summary>
            <value>
            <see langword="true"/> if this instance supports auto indentation; otherwise,
            <see langword="false"/>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.AcceptsReturn">
            <summary>
            Gets / Sets whether to add the new line when enter key pressed.
            </summary>
            <value>
            <see langword="true"/> New line will be added.
            <see langword="false"/>New line will not be added 
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.CollapsedTextForeground">
            <summary>
            Gets or sets foreground brush value for ellipsis text and border.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Edit.EditControl.SelectionChanged">
            <summary>
            Occurs when [SelectionChanged].
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.AllowDragDrop">
            <summary>
            Gets or sets indicating whether allow to drag text or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.EnterKeyBehavior">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.Lines">
            <summary>
            Gets the collection of lines in EditControl.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.CurrentLanguage">
            <summary>
            Gets an instance of LanguageBase based on the DocumentLanguage property.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.LineNumber">
            <summary>
            Gets the line number where the cursor is currently located.
            </summary>
            <remarks>
            <para>LineNumber property returns the current line number.</para>
            </remarks>
            <example>
            <para><b>C#</b></para>
            <para></para>
            <para>int i = editControl1.LineNumber;</para>
            </example>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.CursorIndex">
            <summary>
            Gets current index of text where the cursor is located in EditControl pane.
            </summary>
            <remarks>
            <para>CursorIndex returns the caret index.</para>
            </remarks>
            <example>
            <para><b>C#</b></para>
            <para></para>
            <para>int index = editControl1.CursorIndex;</para>
            </example>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.FindOptions">
            <summary>
            Gets or sets a instance of FindOptions indicating the options selected in the FindReplace Window.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.FindReplaceWindow">
            <summary>
            FindReplaceWindow readonly property
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.ScrollControl">
            <summary>
            Gets an instance of EditScrollControl in the template.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.SelectLinesOnDrop">
            <summary>
            Gets / Sets to Select Lines on Drop
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.UndoManager">
            <summary>
            Gets or sets an instance of UndoManager
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditControl.SearchResults">
            <summary>
            Get or sets a value indicating the Search results.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.OnBeforeLineRenderEventHandler">
            <summary>
            Delegate for OnBeforeLineRender Event
            </summary>
            <param name="sender">Gets the sender object from the reporting source</param>
            <param name="args">Gets the OnBeforeLineRenderArgs object from the reporting source</param>
        </member>
        <member name="T:Syncfusion.Windows.Edit.OnBeforeLineRenderArgs">
            <summary>
            Class defines EditLineBackground Event Args
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.OnBeforeLineRenderArgs.LineItem">
            <summary>
            Gets/Sets to specify the LineItem to be customized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.OnBeforeLineRenderArgs.IsFullLine">
            <summary>
            Gets/Sets to specify whether to highlight Background for full line or within text limit.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.OnBeforeLineRenderArgs.BackgroundColor">
            <summary>
            Gets/Sets to specify the Brush to customize the Line Background.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.Format">
            <summary>
            Format derives from ISnippetFormat
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.Interfaces.ISnippetFormat">
            <summary>
            Interface for linecolor and Underlinestyle
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Interfaces.ISnippetFormat.LineColor">
            <summary>
            Gets or Sets the LineColor
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Interfaces.ISnippetFormat.UnderlineStyle">
            <summary>
            Gets or sets the UnderlineStyle
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.Format._linecolor">
            <summary>
            Holds the line Color
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.Format._underlinestyle">
            <summary>
            Holds the _underlinestyle
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Format.#ctor(System.Windows.Media.Brush,Syncfusion.Windows.Edit.Interfaces.UnderlineStyle)">
            <summary>
            Constructor
            </summary>
            <param name="color"></param>
            <param name="style"></param>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Format.LineColor">
            <summary>
            Get or Set Line color
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Format.UnderlineStyle">
            <summary>
            Get or Set UnderlineStyle
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.ApplyExpandCollapseArgs">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.ApplyExpandCollapseArgs.ExpandInformation">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.ApplyExpandCollapseArgs.LanguageBlocks">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.ApplyExpandCollapseArgs.Source">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.ApplyExpandCollapseArgs.Assemblies">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.ApplyExpandCollapseArgs.Lexems">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.ApplyExpandCollapseArgs.Formats">
             <summary>
            
             </summary>
        </member>
        <member name="T:Syncfusion.EditWPFAssembly">
            <summary>
            EditWPFAssembly has the information about the EditControl and its assembly information.
            </summary>
        </member>
        <member name="F:Syncfusion.EditWPFAssembly.Name">
            <summary>
            Public Name variable for getting assembly name. It is read only.
            </summary>
        </member>
        <member name="F:Syncfusion.EditWPFAssembly.Assembly">
            <summary>
            Public Assembly object for reading assembly information. It is read only.
            </summary>
        </member>
        <member name="F:Syncfusion.EditWPFAssembly.RootNamespace">
            <summary>
            Public RootNamespace variable is for root namespace.
            </summary>
        </member>
        <member name="M:Syncfusion.EditWPFAssembly.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Syncfusion.EditWPFAssembly"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.EditWPFAssembly.AssemblyResolver(System.Object,System.ResolveEventArgs)">
            <summary>
            AssemblyResolver is used to get the assembly name
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ResolveEventArgs"/> instance containing the event data.</param>
            <returns>Returns the assembly name.</returns>
        </member>
        <member name="T:Syncfusion.AssemblyInfo">
            <summary>
            Internal AssemblyInfo class is used to get the assembly information.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.BlockCodes">
            <summary>
            Blockcodes is an internal class used to hold a group of values for syntax highlighting purpose.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.BlockCodes.startline">
            <summary>
            instance for BlockStartLine property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.BlockCodes.endateol">
            <summary>
            instance for CloseAtEOL property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.BlockCodes.starttext">
            <summary>
            instance for BlockStartText property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.BlockCodes.endtext">
            <summary>
            instance for BlockEndText property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.BlockCodes.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Edit.BlockCodes"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.BlockCodes.#ctor(System.Int32,System.Boolean,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Edit.BlockCodes"/> class.
            </summary>
            <param name="startLine">Gets the integer value of startLine from the reporting source</param>
            <param name="eol">Gets the bool value of eol from the reporting source</param>
            <param name="startText">Gets the string value of startText from the reporting source</param>
            <param name="endText">Gets the string value of endText from the reporting source</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.BlockCodes.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Edit.BlockCodes.BlockStartLine">
            <summary>
            Gets or sets the Block StartLine property.
            </summary>
            <value>
            Type: System.Int32
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.BlockCodes.CloseAtEOL">
            <summary>
            Gets or sets a value indicating whether lexical element has multiline or not. By default it is set to false.
            </summary>
            <value>
            Type: System.Boolean
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.BlockCodes.BlockStartText">
            <summary>
            Gets or sets the Block Start Text
            </summary>
            <value>
            Type: System.String
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.BlockCodes.BlockEndText">
            <summary>
            Gets or sets the Block End Text
            </summary>
            <value>
            Type: System.String
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.BlockCodes.SubLexems">
            <summary>
            Gets or sets the Sub Lexems
            </summary>
            <value>
            Type: System.Collections.IEnumerable
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.BlockCodes.LexemType">
            <summary>
            Gets or sets the Lexem type
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.BlockListener">
            <summary>
            BlockListener class is used to hold values for expand or collapse the items.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.BlockListener.GetHashCode">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="F:Syncfusion.Windows.Edit.BlockListener.mstarttext">
            <summary>
            instance for BlockStart property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.BlockListener.mendtext">
            <summary>
            instance for BlockEnd property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.BlockListener.mplinenumber">
            <summary>
            instance for ParentLineNumber property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.BlockListener.misprep">
            <summary>
            instance for IsPreprocessor property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.BlockListener.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Edit.BlockListener"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.BlockListener.#ctor(System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Edit.BlockListener"/> class.
            </summary>
            <param name="parent">Gets the integer value of parent from the reporting source</param>
            <param name="startText">Gets the string value of startText from the reporting source</param>
            <param name="endText">Gets the string value of endText from the reporting source</param>
            <param name="isPreprocessor">Gets the bool value of isPreprocessor from the reporting source</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.BlockListener.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.BlockListener.Equals(System.Object)">
             <summary>
            
             </summary>
             <param name="obj"></param>
             <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Edit.BlockListener.BlockStart">
            <summary>
            Gets or sets the Block StartLine property.
            </summary>
            <value>
            Type: System.String
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.BlockListener.BlockEnd">
            <summary>
            Gets or sets the Block StartLine
            </summary>
            <value>
            Type: System.String
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.BlockListener.ParentLineNumber">
            <summary>
            Gets or sets the Block StartLine
            </summary>
            <value>
            Type: System.Int32
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.BlockListener.IsPreprocessor">
            <summary>
            Gets or sets a value indicating whether the Lexem element is Preprocessor or not. By default it is set to false.
            </summary>
            <value>
            Type: System.Boolean
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.BlockListener.IsRegex">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.BlockListener.CheckParentType">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.BlockListener.LexemType">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.BlockListener.ParentLexemType">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.BlockListener.EndLineNumber">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.BlockListener.ScopeLevel">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.BlockListener.IsCollapsible">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.BlockListener.IsIndent">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.BlockListener.StartLine">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.BlockListener.IgnoreEndBlock">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.BlockListener.EndBlockOnRecurrence">
             <summary>
            
             </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.BoolToVisibilityConverter">
            <summary>
            IValueConverter implemented class that return Visibility value based on bool
            input
            </summary>
            <remarks>
            The BoolToVisibilityConverter used to contert Boolean value into the Visibility value
            converter.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Edit.BoolToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts bool value to visibility enumeration. returns Visible when the value passed is true else it returns hidden.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>Returns a converted value.</returns>
            <remarks>This converter is used to check the boolean value and convert that boolean into visibility enumeration.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Edit.BoolToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts back the bool value.
            </summary>
            <remarks>
            <para>ConvertBack method used to converts back the boolean value from the source
            value.</para>
            </remarks>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            <para>Returns a converted value. If the method returns null, the valid null
            value is used.</para>
            </returns>
        </member>
        <member name="T:Syncfusion.Windows.Edit.LineItemsCollection">
            <summary>
            LineItemsCollection class is used to hold the collection of individual lineitems.
            </summary>
            <remarks>
            LineItemsCollection class contains the lineitem collection and each lineitem object has the line information
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Edit.LineItem">Syncfusion.Windows.Edit.LineItem</seealso>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LineItemsCollection.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LineItemsCollection.#ctor(System.Collections.Generic.IEnumerable{System.String})">
             <summary>
            
             </summary>
             <param name="lines"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LineItemsCollection.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
             <summary>
            
             </summary>
             <param name="e"></param>
        </member>
        <member name="E:Syncfusion.Windows.Edit.LineItemsCollection.OnLineItemTextchanged">
            <summary>
            Occurs when <see cref="T:Syncfusion.Windows.Edit.LineItem"/> is Changed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.LineItemsCollection.LineItemTextchanged">
            Handles <see cref="T:Syncfusion.Windows.Edit.LineItem"/> event.
            <summary>
            <param name="e">A <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> value that contains the event data.</param>
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.LineItemsColletionChanged">
            <summary>
            Handles <see cref="T:Syncfusion.Windows.Edit.LineItemsColletionChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> value that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Edit.FormatsCollection">
            <summary>
            FormatsCollection class is used to contain a collection of Formats in
            LanguageBase
            </summary>
            <remarks>
            The FormatsCollection class contains the collection of Format information of Lexems.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Edit.EditFormats">Syncfusion.Windows.Edit.EditFormats</seealso>
        </member>
        <member name="M:Syncfusion.Windows.Edit.FormatsCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Edit.FormatsCollection"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.FormatsCollection.#ctor(System.Collections.Generic.IEnumerable{Syncfusion.Windows.Edit.EditFormats})">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Edit.FormatsCollection"/> class.
            </summary>
            <param name="collection">Gets the EditFormats object to collection from the reporting source</param>
        </member>
        <member name="T:Syncfusion.Windows.Edit.LexemCollection">
            <summary>
            LexemCollection class is used to contain a collection of Formats in Lexems
            </summary>
            <remarks>
            The LexemCollection class contain the collection of lexems and its properties.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Edit.Lexem">Syncfusion.Windows.Edit.Lexem</seealso>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LexemCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Edit.LexemCollection"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LexemCollection.#ctor(System.Collections.Generic.IEnumerable{Syncfusion.Windows.Edit.Lexem})">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Edit.LexemCollection"/> class.
            </summary>
            <param name="collection">Gets the Lexem object to collection from the reporting source</param>
        </member>
        <member name="T:Syncfusion.Windows.Edit.Implementation.GoToLine">
            <summary>
            Interaction logic for GoToLine.xaml
            </summary>
            <summary>
            GoToLine
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.Implementation.GoToLine.m_editor">
            <summary>
            Edit control variable
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.Implementation.GoToLine.Selectline">
            <summary>
            selectline
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.Implementation.GoToLine.AltKeyPressed">
            <summary>
            indicates Alt Key Pressed or not.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Implementation.GoToLine.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Implementation.GoToLine.GoToLine_Unloaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Releases all resources 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Implementation.GoToLine.GoToLine_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Invoked when GoToLine window loaded
            </summary>
            <param name="sender">GoToLine</param>
            <param name="e">Routed event argument</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Implementation.GoToLine.GoToLine_PreviewKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Invoked when Preview key down
            </summary>
            <param name="sender">GotoLine window</param>
            <param name="e">The key event</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Implementation.GoToLine.OnSourceInitialized(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Implementation.GoToLine.Cancelbutton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Invoked when click cancel button 
            </summary>
            <param name="sender">Go to line</param>
            <param name="e">The routed event</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Implementation.GoToLine.CalculateSelectline">
            <summary>
            Calculate the Selected line to navigate
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Implementation.GoToLine.OKbutton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Invoked when Ok button click
            </summary>
            <param name="sender">Go to line window</param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Implementation.GoToLine.Dispose">
            <summary>
            Releases all resources 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Implementation.GoToLine.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Implementation.GoToLine.Editor">
            <summary>
            Gets or Sets Edit Control 
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.Implementation.NumericTextBox">
            <summary>
            Numeric TextBox class
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Implementation.NumericTextBox.NumericTextBox_TextChanged(System.Object,System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Invoked when Text changed
            </summary>
            <param name="sender">NumericTextBox</param>
            <param name="e">TextChanged Event Args</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Implementation.NumericTextBox.NumericTextBox_ValueChanged(System.Object,System.EventArgs)">
            <summary>
            Invoked when value changed
            </summary>
            <param name="sender">NumericTextBox</param>
            <param name="e">Event argument</param>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Implementation.NumericTextBox.Value">
            <summary>
            Value changed or not
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Implementation.NumericTextBox.MinValue">
            <span class="code-SummaryComment"/><summary>
            Indicates the minimum value for the numeric textbox control.
            <span class="code-SummaryComment"/></summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Implementation.NumericTextBox.MaxValue">
            <span class="code-SummaryComment"/><summary>
            Indicates the maximum value for the numeric textbox control.
            </summary>
            <span class="code-SummaryComment"/>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Implementation.NumericTextBox.Enable">
            <summary>
            Indicates for enable the Ok Button or not
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Implementation.NumericTextBox.ImageVisibility">
            <summary>
            Indicates Error image visible or not
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.KeyGestureExt">
            <summary>
            KeyGestureExt class is an extension of KeyGesture class. This class contains
            implementation for supporting multiple key gestures additionally.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.KeyGestureExt.keyCollection">
            <summary>
            Local variable to hold any number of Keys in a KeyGesture.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.KeyGestureExt.keyIndex">
            <summary>
            Local static variable holds the index of key pressed to match keys from KeyCollection.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.KeyGestureExt.prevKeyTime">
            <summary>
            Local static variable holds the DateTime value when the last matching key was pressed.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.KeyGestureExt.#ctor(System.Windows.Input.Key)">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.Windows.Edit.KeyGestureExt">KeyGestureExt</see> class.
            </summary>
            <param name="key">specifies the key in a KeyGesture</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.KeyGestureExt.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.Windows.Edit.KeyGestureExt">KeyGestureExt</see> class.
            </summary>
            <param name="key">Specifies the key in a KeyGesture</param>
            <param name="modfiers">Specifies the modifier key</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.KeyGestureExt.#ctor(System.Collections.Generic.List{System.Windows.Input.Key},System.Windows.Input.ModifierKeys)">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.Windows.Edit.KeyGestureExt">KeyGestureExt</see> class.
            </summary>
            <param name="keys">Specifies the collection of Keys for multiple Key KeyGesture.
            Keys should be given in the order they have to be matched.</param>
            <param name="modifiers">Specifies the Modifier key.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.KeyGestureExt.Matches(System.Object,System.Windows.Input.InputEventArgs)">
            <summary>
            Overridden method of KeyGesture class used to match the KeyGestures.
            </summary>
            <param name="targetElement">Specifies the element on which the KeyGesture is
            set.</param>
            <param name="inputEventArgs">Specifies the KeyEventArgs containing information
            related to the key pressed and modifiers.</param>
            <returns>
            returns true if the key gestures match else returns false.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Edit.KeyGestureExt.KeyCollection">
            <summary>
            Gets or sets the Keys collection for key gesture.
            </summary>
            <remarks>
            Keys should be given in the order in which they have to be matched.
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Edit.IIntellisenseItem">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.IIntellisenseItem.Text">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.IIntellisenseItem.Icon">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.IIntellisenseItem.NestedItems">
             <summary>
            
             </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.IntellisenseBoxEventHandler">
            <summary>
            Delegate for SelectionPointerChangedEvent
            </summary>
            <param name="sender">Gets the sender object from the reporting source</param>
            <param name="args">Gets the EditIntellisenseArgs object from the reporting source</param>
        </member>
        <member name="T:Syncfusion.Windows.Edit.EditIntellisenseArgs">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditIntellisenseArgs.LineIndex">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditIntellisenseArgs.CursorIndex">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditIntellisenseArgs.SelectedItem">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditIntellisenseArgs.CurrentScope">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditIntellisenseArgs.TextInput">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditIntellisenseArgs.Assemblies">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditIntellisenseArgs.Cancel">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditIntellisenseArgs.ItemsSource">
             <summary>
            
             </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.EditTypeInfo">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditTypeInfo.Name">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditTypeInfo.Namespace">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditTypeInfo.FullName">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditTypeInfo.IsPublic">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditTypeInfo.IsStatic">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditTypeInfo.IsInterface">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditTypeInfo.IsEnum">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditTypeInfo.IsClass">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditTypeInfo.IsProperty">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditTypeInfo.IsEvent">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditTypeInfo.IsMethod">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditTypeInfo.IsInstance">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditTypeInfo.IsNamespace">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditTypeInfo.Description">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditTypeInfo.BaseType">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditTypeInfo.NestedItems">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditTypeInfo.Text">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditTypeInfo.Icon">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditTypeInfo.LexemType">
             <summary>
            
             </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.EditTypeCollection">
            <summary>
            usidljdjfdsj;fkv
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditTypeCollection.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditTypeCollection.#ctor(System.Collections.Generic.IEnumerable{Syncfusion.Windows.Edit.IIntellisenseItem})">
             <summary>
            
             </summary>
             <param name="collection"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditTypeCollection.IndexOf(Syncfusion.Windows.Edit.IIntellisenseItem)">
             <summary>
            
             </summary>
             <param name="item"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditTypeCollection.Insert(System.Int32,Syncfusion.Windows.Edit.IIntellisenseItem)">
             <summary>
            
             </summary>
             <param name="index"></param>
             <param name="item"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditTypeCollection.RemoveAt(System.Int32)">
             <summary>
            
             </summary>
             <param name="index"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditTypeCollection.Add(Syncfusion.Windows.Edit.IIntellisenseItem)">
             <summary>
            
             </summary>
             <param name="item"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditTypeCollection.Clear">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditTypeCollection.Contains(Syncfusion.Windows.Edit.IIntellisenseItem)">
             <summary>
            
             </summary>
             <param name="item"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditTypeCollection.CopyTo(Syncfusion.Windows.Edit.IIntellisenseItem[],System.Int32)">
             <summary>
            
             </summary>
             <param name="array"></param>
             <param name="arrayIndex"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditTypeCollection.Remove(Syncfusion.Windows.Edit.IIntellisenseItem)">
             <summary>
            
             </summary>
             <param name="item"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditTypeCollection.GetEnumerator">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditTypeCollection.ContainsType(System.String)">
             <summary>
            
             </summary>
             <param name="Name"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditTypeCollection.GetEditTypeInfo(System.String)">
             <summary>
            
             </summary>
             <param name="Name"></param>
             <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditTypeCollection.Item(System.Int32)">
             <summary>
            
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditTypeCollection.Count">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditTypeCollection.IsReadOnly">
             <summary>
            
             </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.FindOptions">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.FindOptions.ReplaceHistoryProperty">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.FindOptions.FindHistoryProperty">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.FindOptions.StatusMessageProperty">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.FindOptions.IsFindTabActiveProperty">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.FindOptions.IsReplaceTabActiveProperty">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.FindOptions.IsFindSymbolTabActiveProperty">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.FindOptions.#ctor(Syncfusion.Windows.Edit.EditControl,Syncfusion.Windows.Shared.NonStickingPopup)">
             <summary>
            
             </summary>
             <param name="editor"></param>
             <param name="parentwindow"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.FindOptions.#ctor(Syncfusion.Windows.Edit.EditControl)">
             <summary>
            
             </summary>
             <param name="editor"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.FindOptions.ExecuteFindCommand">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.FindOptions.ExecuteReplaceCommand">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.FindOptions.ExecuteReplaceAllCommand">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.FindOptions.ExecuteFindAllCommand">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.FindOptions.ExecuteShowFindTabCommand">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.FindOptions.ExecuteShowReplaceTabCommand">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.FindOptions.FindCanExecute">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.FindOptions.ReplaceCanExecute">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Edit.FindOptions.FindNextCommand">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.FindOptions.ReplaceCommand">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.FindOptions.ReplaceAllCommand">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.FindOptions.FindAllCommand">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.FindOptions.ShowFindTabCommand">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.FindOptions.ShowReplaceTabCommand">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.FindOptions.ReplaceHistory">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.FindOptions.FindHistory">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.FindOptions.StatusMessage">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.FindOptions.IsFindTabActive">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.FindOptions.IsReplaceTabActive">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.FindOptions.IsFindSymbolTabActive">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.FindOptions.DropDownListSelectedIndex">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.FindOptions.IsFindActive">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.FindOptions.IsReplaceActive">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.FindOptions.IsFindSymbolActive">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.FindOptions.Editor">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.FindOptions.ParentWindow">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.FindOptions.FindText">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.FindOptions.ReplaceText">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.FindOptions.IsMatchCase">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.FindOptions.IsMatchWholeWord">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.FindOptions.IsSearchUp">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.FindOptions.IsIncludeHiddenText">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.FindOptions.IsWholeWordChecked">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.FindOptions.IsPrefix">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.FindOptions.IsSubstring">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.FindOptions.IsSelectionSelected">
             <summary>
            
             </summary>
        </member>
        <member name="E:Syncfusion.Windows.Edit.FindOptions.PropertyChanged">
             <summary>
            
             </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.FindOptions.FindAndReplaceCommand">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.FindOptions.FindAndReplaceCommand.#ctor(System.Action{System.Object})">
             <summary>
            
             </summary>
             <param name="execute"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.FindOptions.FindAndReplaceCommand.#ctor(System.Action{System.Object},System.Predicate{System.Object})">
             <summary>
            
             </summary>
             <param name="execute"></param>
             <param name="canExecute"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.FindOptions.FindAndReplaceCommand.CanExecute(System.Object)">
             <summary>
            
             </summary>
             <param name="parameter"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.FindOptions.FindAndReplaceCommand.Execute(System.Object)">
             <summary>
            
             </summary>
             <param name="parameter"></param>
        </member>
        <member name="E:Syncfusion.Windows.Edit.FindOptions.FindAndReplaceCommand.CanExecuteChanged">
             <summary>
            
             </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.FindReplaceControl">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.FindReplaceControl.#cctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.FindReplaceControl.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.FindReplaceControl.FindReplaceControl_Loaded(System.Object,System.Windows.RoutedEventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.FindReplaceControl.OnApplyTemplate">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.FindReplaceControl.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
             <summary>
            
             </summary>
             <param name="e"></param>
        </member>
        <member name="T:Syncfusion.Windows.Edit.FindReplacePopup">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.FindReplacePopup.#cctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.FindReplacePopup.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.FindReplacePopup.OnMouseMove(System.Windows.Input.MouseEventArgs)">
             <summary>
            
             </summary>
             <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.FindReplacePopup.OnOpened(System.EventArgs)">
             <summary>
            
             </summary>
             <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.FindReplacePopup.onHorizontalOffsetChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
             <summary>
            
             </summary>
             <param name="obj"></param>
             <param name="args"></param>
        </member>
        <member name="T:Syncfusion.Windows.Edit.IntellisensePopup">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.IntellisensePopup.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.LineItemExpandInformation">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LineItemExpandInformation.Text">
            <summary>
            Gets or sets the Text in a line
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LineItemExpandInformation.IsExpanded">
            <summary>
            Gets or sets a value indicating whether the line is expanded or not
            </summary>
            <value>
            Type: System.Boolean
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LineItemExpandInformation.ContainsLines">
            <summary>
            Gets or sets a value indicating whether ContainsLines contain child item.
            </summary>
            <value>
            Type: System.Boolean
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LineItemExpandInformation.StartLine">
            <summary>
            Gets or sets the StartLine
            </summary>
            <value>
            Type: System.Int32
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LineItemExpandInformation.EndLine">
            <summary>
            Gets or sets the EndLine
            </summary>
            <value>
            Type: System.Int32
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LineItemExpandInformation.IsSelected">
            <summary>
            Gets or sets a value indicating whether the line is selected.
            </summary>
            <value>
            Type: System.Boolean
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LineItemExpandInformation.PreprocessorText">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LineItemExpandInformation.ParentLineNumber">
            <summary>
            Gets or sets the ParentLineNumber
            </summary>
            <value>
            Type: System.Int32
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LineItemExpandInformation.LineStartBlock">
            <summary>
            Gets or sets the LineStartBlock
            </summary>
            <value>
            Type: Syncfusion.Windows.Edit.BlockCodes
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LineItemExpandInformation.LineStartFormat">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LineItemExpandInformation.ContainsPreprocessor">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LineItemExpandInformation.ToggleExpansion">
             <summary>
            
             </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.SearchResult">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.SearchResult.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.SearchResult.MatchingLineItem">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.SearchResult.CaptureText">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.SearchResult.CurrentLineItem">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.SearchResult.CursorIndex">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.SearchResult.CurrentSelection">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.SearchResult.EditTextSelection">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.SearchResult.CurrentIndex">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.SearchResult.FindAllResult">
             <summary>
            
             </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.FindResult">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.FindResult.Text">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.FindResult.LineNumber">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.FindResult.Index">
             <summary>
            
             </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.Interfaces.UnderlineStyle">
            <summary>
            UnderLineStyle Options
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.Interfaces.UnderlineStyle.Solid">
            <summary>
            This options define underline style as Solid
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.Interfaces.UnderlineStyle.Dot">
            <summary>
            This options define underline style as Dot
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.Interfaces.UnderlineStyle.Dash">
            <summary>
            This options define underline style as Dash
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.Interfaces.UnderlineStyle.DashDot">
             <summary>
            This options define underline style as DashDot
             </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.EditFormats">
            <remarks>
             Edit Format has formatname, font, fontsize and foreground properties.
             </remarks>
             <example>
             <para><b>XAML</b></para>
             <para></para>
             <para></para>
             <para>&lt;Window x:Class=&quot;SampleApplication.Window1&quot;</para>
             <para> xmlns=&quot;http://
             schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</para>
             <para> xmlns:x=&quot;http:// schemas.microsoft.com/winfx/2006/xaml&quot;</para>
             <para>    Title=&quot;Window1&quot; Height=&quot;300&quot; Width=&quot;300&quot;
             xmlns:syncfusion=&quot;http:// schemas.syncfusion.com/wpf&quot;&gt;</para>
             <para>    &lt;Grid&gt;</para>
             <para>        &lt;syncfusion:EditFormats Name=&quot;KeywordFormat&quot;
             Font=&quot;Arial&quot; FontSize=&quot;12&quot; /&gt;</para>
             <para>    &lt;/Grid&gt;</para>
             <para>&lt;/Window&gt;</para>
             <para></para>
             <para></para>
             <para><b>C#</b></para>
             <para></para>
             <para>EditFormats EditFormats1 = new EditFormats();</para>
             <para>EditFormats1.FormatName = &quot;KeywordFormat&quot;</para>
             <para>EditFormats1.Font = &quot;Arial&quot;</para>
             <para>EditFormats1.FontSize = &quot;12&quot;</para>
             </example>
        </member>
        <member name="T:Syncfusion.Windows.Edit.IFormat">
            <summary>
            IFormat interface has the Formats of Lexems.
            </summary>
            <remarks>
            IFormat contains the formatname properties which used to access format
            collection properties of a lexem.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Edit.IFormat.FormatName">
            <summary>
            Gets or sets the name of the format.
            </summary>
            <value>The name of the format.</value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.IFormat.FontFamily">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.IFormat.FontSize">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.IFormat.Foreground">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditFormats.formatName">
            <summary>
             variable of FormatName property.
            </summary>
            <value>
            Type: System.String
            </value>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditFormats.font">
            <summary>
            instance for Font property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditFormats.fontSize">
            <summary>
            instance for FontSize property. By default it is set to double.NaN.
            </summary>
            <returns>
            <para>Type: System.Double</para>
            </returns>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditFormats.foreground">
            <summary>
            instance for Foreground property. By default it is set to Brushes.Black.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditFormats.FormatName">
            <summary>
            Gets or sets name of the Format object. Name property is used to identify the text style in the Language class
            </summary>
            <remarks>Specifies the FormatName of the Lexem.</remarks>
            <value>
            Type: System.String
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditFormats.FontFamily">
            <summary>
            Gets or sets the FontFamily to be applied when this instance of Format is applied.
            </summary>
            <remarks>Specifies the Font name of the Lexem</remarks>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditFormats.FontSize">
            <summary>
            Gets or sets the FontSize to be applied when this instance of Format is applied
            </summary>
            <remarks>Specifies the Font Size of the Lexem</remarks>
            <value>
            Type: System.Double
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditFormats.Foreground">
            <summary>
            Gets or sets the Foreground to be applied when this instance of Format is applied
            </summary>
            <remarks>Specifies the Foreground color of the Lexem</remarks>
        </member>
        <member name="T:Syncfusion.Windows.Edit.Lexem">
            <summary>
            Lexem class holds values related to a lexical element used in a Language
            configuration
            </summary>
            <remarks>
            Lexem class has Starttext, Endtext, Multiline, type, format properties of a
            Lexem.
            </remarks>
            <example>
            <para><b>XAML</b></para>
            <para></para>
            <para></para>
            <para>&lt;Window x:Class="SampleApplication.Window1"</para>
            <para> xmlns="http://
            schemas.microsoft.com/winfx/2006/xaml/presentation"</para>
            <para> xmlns:x="http:// schemas.microsoft.com/winfx/2006/xaml"</para>
            <para>    Title="Window1" Height="300" Width="300"
            xmlns:syncfusion="http:// schemas.syncfusion.com/wpf"&gt;</para>
            <para>    &lt;Grid&gt;</para>
            <para>        &lt;syncfusion:Lexem StartText="/*"
            EndText="*/" FormatName="CommentType" /&gt;</para>
            <para>    &lt;/Grid&gt;</para>
            <para>&lt;/Window&gt;</para>
            <para></para>
            <para></para>
            <para><b>C#</b></para>
            <para></para>
            <para>Lexem Lexem1 = new Lexem();</para>
            <para>Lexem1.StartText = "/*"</para>
            <para>Lexem1.EndText = "*/"</para>
            <para>Lexem1.FormatName = "CommentType"</para>
            </example>
            <seealso cref="T:Syncfusion.Windows.Edit.IBlock">Syncfusion.Windows.Edit.IBlock</seealso>
            <seealso cref="T:Syncfusion.Windows.Edit.IFormat">Syncfusion.Windows.Edit.IFormat</seealso>
        </member>
        <member name="T:Syncfusion.Windows.Edit.ILexem">
             <summary>
            
             </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.IBlock">
            <summary>
            IBlock interface has the Block properties of Lexems
            </summary>
            <remarks>
            IBlock contain the properties of a lexem like StartText, EndText, Ismultiline
            etc.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Edit.IBlock.StartText">
            <summary>
            Gets or sets the start text.
            </summary>
            <value>The start text.</value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.IBlock.EndText">
            <summary>
            Gets or sets the end text.
            </summary>
            <value>The end text.</value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.IBlock.IsMultiline">
            <summary>
            Gets or sets a value indicating whether this instance is multiline.
            </summary>
            <value>
                <c>true</c> if this instance is multiline; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.IBlock.LexemType">
            <summary>
            Gets or sets the type of the lexem.
            </summary>
            <value>The type of the lexem.</value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.IBlock.ContainsEndText">
            <summary>
            Gets or sets a value indicating whether [contains end text].
            </summary>
            <value><c>true</c> if the Lexem contains the end text; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.ILexem.SubLexems">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.ILexem.IsRegex">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.ILexem.FormatName">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.ILexem.ScopeLevel">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.ILexem.ShowAlternateIntellisenseText">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.ILexem.IntellisenseDisplayText">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.ILexem.ExcludeItemInIntellisense">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.ILexem.Indent">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.ILexem.IsCollapsible">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.ILexem.EndBlockOnRecurrence">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.Lexem.starttext">
            <summary>
             variable of StartText property.
            </summary>
            <remarks>Specifies the Start text of a Lexem</remarks>
            <value>
            Type: System.String
            </value>
        </member>
        <member name="F:Syncfusion.Windows.Edit.Lexem.endtext">
            <summary>
             variable of EndText property.
            </summary>
            <remarks>Specifies the End text of a Lexem</remarks>
            <value>
            Type: System.String
            </value>
        </member>
        <member name="F:Syncfusion.Windows.Edit.Lexem.multiline">
            <summary>
             variable of IsMultiline property.
            </summary>
            <remarks>Specifies the Multiline option of a Lexem</remarks>
        </member>
        <member name="F:Syncfusion.Windows.Edit.Lexem.type">
            <summary>
             variable of LexemType property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.Lexem.contains">
            <summary>
             variable of ContainsEndText property.
            </summary>
            <value>
            Type: System.Boolean
            </value>
        </member>
        <member name="F:Syncfusion.Windows.Edit.Lexem.format">
            <summary>
             variable of FormatName property.
            </summary>
            <value>
            Type: System.String
            </value>
        </member>
        <member name="F:Syncfusion.Windows.Edit.Lexem.isregex">
            <summary>
             variable of IsRegex property
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Lexem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Edit.Lexem"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Lexem.IsRegex">
            <summary>
            Gets or sets a value indicating whether the IsRegex is true or false. This denotes the Start and EndText properties contains Regex patterns. By default it is set to false.
            </summary>
            <value>
            Type: System.Boolean
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Lexem.StartText">
            <summary>
            Gets or sets the start text of a lexical element.
            </summary>
            <value>
            Type: System.String
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Lexem.EndText">
            <summary>
            Gets or sets the end text of a lexical element
            </summary>
            <value>
            Type: System.String
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Lexem.IsMultiline">
            <summary>
            Gets or sets a value indicating whether the IsMultiline is true or false. This property denotes whether this lexical element can last for multiple lines. By default it is set to false.
            </summary>
            <value>
            Type: System.Boolean
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Lexem.LexemType">
            <summary>
            Gets or sets type of lexem.
            </summary>
            <value>
            Type: Syncfusion.Windows.Edit.EditTokenType
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Lexem.ContainsEndText">
            <summary>
            Gets or sets a value indicating whether the ContainsEndText is true or false. This denotes whether this lexical element contains end value to be captured. By default it is set to false.
            </summary>
            <value>
            Type: System.Boolean
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Lexem.CheckParentLexemType">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Lexem.ParentLexemType">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Lexem.FormatName">
            <summary>
            Gets or sets the name of EditFormat object to be applied when this lexical element is captured
            </summary>
            <value>
            Type: System.String
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Lexem.SubLexems">
            <summary>
            Gets the SubLexems collection for applying nested coloring of lexical elements
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Lexem.IntellisenseDisplayText">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Lexem.ScopeLevel">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Lexem.ShowAlternateIntellisenseText">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Lexem.ExcludeItemInIntellisense">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Lexem.Indent">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Lexem.IsCollapsible">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Lexem.EndBlockOnRecurrence">
             <summary>
            
             </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.EditLanguage">
            <summary>
            EditLanguage class is used to creating Language configurations for Syntax
            highlighting and Outlining
            </summary>
            <remarks>
            Edit Language class contains the format collection and lexem collection with
            language name, file extension, case sensitive, text foreground properties.
            </remarks>
            <example>
            <para><b>XAML</b></para>
            <para></para>
            <para>&lt;Window x:Class="SampleApplication.Window1"</para>
            <para> xmlns="http://
            schemas.microsoft.com/winfx/2006/xaml/presentation"</para>
            <para> xmlns:x="http:// schemas.microsoft.com/winfx/2006/xaml"</para>
            <para>    Title="Window1" Height="300" Width="300"
            xmlns:syncfusion="http:// schemas.syncfusion.com/wpf"&gt;</para>
            <para>    &lt;Grid&gt;</para>
            <para>        &lt;syncfusion:EditLanguage Name="CSharp"
            LanguageType="Procedural" FileExtension=".cs;/&gt;</para>
            <para>    &lt;/Grid&gt;</para>
            <para>&lt;/Window&gt;</para>
            <para></para>
            <para><b>C#</b></para>
            <para></para>
            <para>EditLanguage EditLanguage1 = new EditLanguage();</para>
            <para>EditLanguage1.Name = "CSharp";</para>
            <para>EditLanguage1.StartLine = "Procedural";</para>
            <para>EditLanguage1.FileExtension = ".cs";</para>
            </example>
            <seealso cref="T:Syncfusion.Windows.Edit.EditLanguage">Syncfusion.Windows.Edit.EditLanguage</seealso>
            <seealso cref="T:Syncfusion.Windows.Edit.FormatsCollection">Syncfusion.Windows.Edit.FormatsCollection</seealso>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditLanguage.langname">
            <summary>
            instance for Name property.
            </summary>
            <value>
            Type: System.String
            </value>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditLanguage.fileextension">
            <summary>
            instance for FileExtension property.
            </summary>
            <value>
            Type: System.String
            </value>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditLanguage.casesensitive">
            <summary>
            instance for case sensitive property.
            </summary>
            <value>
            Type: System.Boolean
            </value>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditLanguage.textforeground">
            <summary>
            instance for TextForeground property.  default color is black.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditLanguage.blockstart">
            <summary>
            instance for BlockStart property.
            </summary>
            <value>
            Type: System.String
            </value>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditLanguage.blockend">
            <summary>
            instance for BlockEnd property.
            </summary>
            <value>
            Type: System.String
            </value>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditLanguage.formats">
            <summary>
            instance for Formats property.
            </summary>
            <value>
            Type: Syncfusion.Windows.Edit.FormatsCollection
            </value>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditLanguage.lexems">
            <summary>
            instance for Lexems property.
            </summary>
            <value>
            Type: Syncfusion.Windows.Edit.LexemCollection
            </value>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditLanguage.langtype">
            <summary>
            instance for LanguageType property.
            </summary>
            <value>
            Type: Syncfusion.Windows.Edit.EditLanguageType
            </value>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditLanguage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Edit.EditLanguage"/> class.
            </summary>
            <remarks>
            EditLanguage constructor used to initializes the Format and Lexem collections.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditLanguage.GetFormat(System.String)">
            <summary>
            Helper method to retrieve format from the formats collection with name as its parameter
            </summary>
            <param name="fname">Gets the Formatname from the reporting source</param>
            <returns>EditFormat object from Formats collection of EditLanguage class</returns>
            <remarks>Edit format method used to get the format properties of the specified format name.</remarks>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditLanguage.Name">
            <summary>
            Gets or sets Name of the Language.
            </summary>
            <remarks>
            <para>Specifies the Name of the Language.</para>
            </remarks>
            <value>
            <para>Type: System.String</para>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditLanguage.FileExtension">
            <summary>
            Gets or sets File Extension supported by the language
            </summary>
            <remarks>
            <para>Specifies the file extension.</para>
            </remarks>
            <value>
            <para>Type: System.String</para>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditLanguage.CaseSensitive">
            <summary>
            Gets or sets a value indicating whether the Language has case sensitive or not
            </summary>
            <remarks>
            Specifies the particular language is case sensitive or not.
            </remarks>
            <value>
            Type: System.Boolean
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditLanguage.TextForeground">
            <summary>
            Gets or sets foreground brush to be applied when no Lexems are applicable for
            the text
            </summary>
            <remarks>
            <para>Specifies the particular language Text Foreground.</para>
            </remarks>
            <value>
            <para>TextForeground = Brushes.Green;</para>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditLanguage.BlockStart">
            <summary>
            Gets or sets BlockStart property. Specifies the start symbol that denotes start of a block of code
            </summary>
            <remarks>
            Specifies the Block start text.
            </remarks>
            <value>
            Type: System.String
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditLanguage.BlockEnd">
            <summary>
            Gets or sets BlockEnd property. Specifies the end symbol that denotes end of block of code
            </summary>
            <remarks>
            Specifies the Block End text.
            </remarks>
            <value>
            Type: System.String
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditLanguage.Formats">
            <summary>
            Gets a collection type property that contains the list of text styles to be applied to the language
            </summary>
            <remarks>This Format property returns the Format Collection to the language content.</remarks>
            <value>
            Type: Syncfusion.Windows.Edit.FormatsCollection
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditLanguage.Lexems">
            <summary>
            Gets a Collection type property that contains the list of Lexical elements to be colored using the defined formats
            </summary>
            <remarks>This Lexems property returns the Lexems Collection.</remarks>
            <value>
            Type: Syncfusion.Windows.Edit.LexemCollection
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditLanguage.LanguageType">
            <summary>
            Gets or sets a Specific type of language. For instance, Procedural or Markup
            </summary>
            <remarks>The LanguageType property used to get and sets the language types like Procedural or Markup.</remarks>
            <value>
            Type: Syncfusion.Windows.Edit.EditLanguageType
            </value>
        </member>
        <member name="T:Syncfusion.Windows.Edit.SQLLanguage">
             <summary>
            
             </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.ProceduralLanguageBase">
             <summary>
            
             </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.LanguageBase">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LanguageBase.literalCount">
            <summary>
            A public variable literalcount
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LanguageBase.currentBlockCount">
            <summary>
            A Publicly declared CurrentBlockCount variable
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LanguageBase.isCurrentBlockComment">
            <summary>
            A publicly declared IsCurrentBlockComment variable
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LanguageBase.langName">
            <summary>
            instance for Name property.
            </summary>
            <value>
            Type: System.String
            </value>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LanguageBase.isRegexApplied">
            <summary>
            bool variable used to check whether the regex applied or not
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LanguageBase.fileExtension">
            <summary>
            instance for FileExtension property.
            </summary>
            <value>
            Type: System.String
            </value>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LanguageBase.caseSensitive">
            <summary>
            instance for case sensitive property.
            </summary>
            <value>
            Type: System.Boolean
            </value>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LanguageBase.isMatched">
            <summary>
            instance for Matching the Regex 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LanguageBase.textForeground">
            <summary>
            instance for TextForeground property.  default color is black.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LanguageBase.blockStart">
            <summary>
            instance for BlockStart property.
            </summary>
            <value>
            Type: System.String
            </value>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LanguageBase.blockEnd">
            <summary>
            instance for BlockEnd property.
            </summary>
            <value>
            Type: System.String
            </value>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LanguageBase.commentsCol">
            <summary>
            Private Lexem collection object for get the comments type of lexems.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LanguageBase.operatorsCol">
            <summary>
            Private Lexem collection object for get the operators type of lexems.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LanguageBase.keywordsCol">
            <summary>
            Private Lexem collection object for get the keywords type of lexems.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LanguageBase.literalsCol">
            <summary>
            Private Lexem collection object for get the literals type of lexems.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LanguageBase.currentColor">
            <summary>
            Private Brush object for get the current Foreground of Lexems.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LanguageBase.isThreadRunning">
            <summary>
            internal bool variable to identify if the thread is running
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LanguageBase.currentListener">
            <summary>
            internal variable to hold the current block listener
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LanguageBase.blocksStack">
            <summary>
            internal stack object of type BlockListener to hold the parent blocks while applying expand and collapse.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LanguageBase.scopeDefinitions">
            <summary>
            internal variable to hold the list of scopes availables. Its updated in the ApplyExpandCollapse and used in Intellisense to identify the items to
            be displayed in the intellisense in auto mode at different scopes.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LanguageBase.typesCollection">
            <summary>
            internal variable that holds all the namespace and types in a tree structure. Its constructed based on the assemblies added as reference in EditControl instance.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LanguageBase.instancesCollection">
            <summary>
            internal variable that holds the collection of instances in the current scope.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LanguageBase.includedNamespaces">
            <summary>
            internal variable that holds the list of namespaces being added in the content.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LanguageBase.currentScope">
            <summary>
            internal variable that holds the reference to current scope.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LanguageBase.defaultItems">
            <summary>
            internal collection objects to hold items generated from Language Lexem
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LanguageBase.customItems">
            <summary>
            internal collection objects to hold items generated based on current scope and selected item.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LanguageBase.timer">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LanguageBase.timerValue">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LanguageBase.currentItem">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LanguageBase.selectedIntellisenseItems">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LanguageBase.previousSelectedItem">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LanguageBase.indentBlocks">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LanguageBase.wordIndex">
            <summary>
            Indicates the current word index for formatting
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LanguageBase.LexemProperty">
            <summary>
            Dependency property for Lexem property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LanguageBase.FormatsProperty">
            <summary>
            Dependency property for Formats property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LanguageBase.SupportsOutliningProperty">
            <summary>
            Dependency property for Supports Outlining property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LanguageBase.IsIndentSelectionOnTabEnabledProperty">
            <summary>
            Dependency property for IsIndentSelectionOnTabEnabled Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LanguageBase.isUpdating">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.#ctor(Syncfusion.Windows.Edit.EditControl)">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.Windows.Edit.LanguageBase">LanguageBase</see> class.
            </summary>
            <param name="control">represents the parent EditControl</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.SplitTextToLines">
            <summary>
            A helper method to split the text in the EditControl in to individual lines.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.CalculatePreferredWidth">
            <summary>
            Helper method to calculate preferred width to be applied to the ScrollColumn based on the text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.ApplyFormats(Syncfusion.Windows.Edit.LineItem)">
            <summary>
            Helper method to apply coloring to a line item.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.SplitTextToWords(System.String)">
            <summary>
            Helper method to Split text in to individual words based on SplitWordsRegex
            </summary>
            <param name="text">represents the text to be splitted</param>
            <returns>a list of WordDetails objects after splitting the text</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.SplitTextToWords(System.String,System.Int32)">
            <summary>
            Helper method to Split text in to individual words based on SplitWordsRegex
            </summary>
            <param name="text">represents the text to be splitted</param>
            <param name="lineNumber">represents the line number</param>
            <returns>a list of WordDetails objects after splitting the text</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.ApplyColor(System.String,System.Int32)">
            <summary>
            Helper method to apply coloring to the text based on the Lexems in the Language configurations
            </summary>
            <param name="text">The text to apply color.</param>
            <param name="line">The line number of the text.</param>
            <returns>Returns the IFormat</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.UpdateWordFormats(Syncfusion.Windows.Edit.WordDetails,Syncfusion.Windows.Edit.IFormat)">
            <summary>
            Helper method to update text styles in the words property of the LineItem
            </summary>
            <param name="words">The words from the word details collection.</param>
            <param name="format">The format of the word.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.ResetLine(Syncfusion.Windows.Edit.LineItem)">
            <summary>
            internal helper method to reset the line's coloring when the text is changed.
            </summary>
            <param name="item">represents the line item object</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.GetSplittedText(Syncfusion.Windows.Edit.LineItem)">
            <summary>
            Helper method to get the splitted text from a LineItem object
            </summary>
            <param name="item">represents a LineItem</param>
            <returns>the splitted string </returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.ResetColor(System.Int32)">
            <summary>
            internal helper method to reset the color of the a line
            </summary>
            <param name="line"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.GeneratePattern">
            <summary>
            Helper method to generate Regex pattern to tokenize procedural code using the lexems in Language configurations
            </summary>
            <returns>Retturns the Regex pattern.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.AppendEscapeForPattern(System.String)">
            <summary>
            Appends the escape for pattern.
            </summary>
            <param name="str">The text to append.</param>
            <returns>Returns the append text.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.GetFormat(System.String)">
            <summary>
            Helper method to retreive IFormat object from the Formats Collection based on FormatName
            </summary>
            <returns>Retturns the IFormat object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.OnLexemsChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            PropertyChangedCallback for Lexem DependencyProperty
            </summary>
            <param name="obj">represents the dependency object</param>
            <param name="e">represents the DependencypPropertyChangedEventArgs</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.OnLexemsChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Helper method to perform operations when the Lexem property gets changed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.OnFormatsChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            PropertyChangedCallback for Formats DependencyProperty
            </summary>
            <param name="obj">represents the dependency object</param>
            <param name="e">represents the DependencypPropertyChangedEventArgs</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.OnFormatsChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Helper method to perform operations when the Formats property gets changed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.ApplyExpandItems">
            <summary>
            Helper method to Apply Expansions for the content in the EditControl.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.InitializeApplyExpandCollapse">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.RefreshExpandItems(System.Int32)">
            <summary>
            Helper method to refresh lines expansions from a specified line number. Here line number refers to the index (starts from 0)
            </summary>
            <param name="line"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.ApplyExpandCollapse(Syncfusion.Windows.Edit.ApplyExpandCollapseArgs)">
            <summary>
            Helper method for perform expand collapse for line items. This method can be overridden if custom expand logics has be implemented.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.GetBlockStartList">
            <summary>
            Helper method to generate the list of BlockListener objects from language Lexem
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.GetCollapsedItemText(Syncfusion.Windows.Edit.LineItem)">
            <summary>
            Helper method that returns the text to be displayed when a line is collapsed.
            </summary>
            <param name="item">represents the line item</param>
            <returns>a string to be displayed when a line is collapsed</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.OnLineItemRender(Syncfusion.Windows.Edit.LineItem,System.Windows.Media.DrawingContext)">
            <summary>
            Helper method that performs the rendering of line item.
            </summary>
            <param name="item">represents the line item</param>
            <param name="context">represents the drawingcontext object</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.UpdateCollapsedItemSelectionPointer(Syncfusion.Windows.Edit.LineItem)">
            <summary>
            Helper method to update the SelectionPointer when the item is in collapsed state.
            </summary>
            <param name="item">represents the collapsed item</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.GetCollapsedItemSelectionEndIndex(Syncfusion.Windows.Edit.LineItem,System.Int32)">
            <summary>
            Helper method to calculate the end index of the selection for a collapsed lineitem. This method helps to specify different end index for different languages.
            </summary>
            <param name="lineitem">represents the collapsed line item</param>
            <param name="regularEndIndex">represents the end index in expanded state</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.OnCommentCommandExecute(Syncfusion.Windows.Edit.LineItem)">
            <summary>
            Helper method perform the Comment Command operations for an individual line
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.OnCommentCommandExecute(Syncfusion.Windows.Edit.SelectionPointer)">
            <summary>
            Helper method perform the Comment Command operations for lines in a selected range
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.OnCommentCommandExecute(Syncfusion.Windows.Edit.LineItem,System.Int32,Syncfusion.Windows.Edit.ILexem)">
            <summary>
            Helper method perform the Comment Command operations for an individual line
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.OnUncommentCommandExecute(Syncfusion.Windows.Edit.LineItem)">
            <summary>
            Helper method perform the Uncomment Command operations for an individual line
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.OnUncommentCommandExecute(Syncfusion.Windows.Edit.LineItem,Syncfusion.Windows.Edit.ILexem)">
            <summary>
            Helper method perform the Uncomment Command operations for an individual line
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.OnUncommentCommandExecute(Syncfusion.Windows.Edit.SelectionPointer)">
            <summary>
            Helper method perform the Comment Command operations for lines in a selected range
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.OnTextInput(System.Int32,System.Windows.Input.TextCompositionEventArgs)">
            <summary>
            Helper method to perform any language related operations when the user inputs any character in EditControl.
            </summary>
            <param name="currentLineNumber">represents the current line number</param>
            <param name="e">represent TextCompositionEventArgs</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.ShowIntellisenseBox(Syncfusion.Windows.Edit.EditIntellisenseArgs)">
             <summary>
            
             </summary>
             <param name="args"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.PositionIntellisenseBox(Syncfusion.Windows.Edit.EditIntellisenseArgs)">
            <summary>
            Method to adjust the position of the intellisense box.
            </summary>
            <param name="args">represents the cursor index</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.UpdateEditTypeInfoList(Syncfusion.Windows.Edit.EditTypeCollection,System.String)">
            <summary>
            Helper method to iterate through the namespace tree and add items accordingly
            </summary>
            <param name="infoList"></param>
            <param name="typeName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.InitializeNamespaces(System.Collections.Generic.IEnumerable{System.Uri})">
            <summary>
            Helper method to load generate namespace tree.
            </summary>
            <param name="assemblies">represents the list of assemblies added</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.ApplyFilterToIntellisense(System.String)">
            <summary>
            Helper method to select the item in the intellisense listbox when the text is typed by the user.
            </summary>
            <param name="intellisenseFilterString">represents current word text</param>
            <returns>index of the selected item.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.LineContainsNamespaceDeclaration(Syncfusion.Windows.Edit.ScopeDefinition,System.String)">
            <summary>
            Helper method to check if the line content contains Namespace declaration.
            </summary>
            <param name="scope">represents the ScopeDefinition of the line</param>
            <param name="leadingText">represents the leading text from the current location</param>
            <returns>whether the text contains the namespace declaration or not</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.GetMatchingNamespaceDeclarationLexems(Syncfusion.Windows.Edit.ScopeDefinition,System.String)">
            <summary>
            Helper method to get NamespaceDeclaration type of ILexem from Lexem property.
            </summary>
            <param name="scope">represents the ScopeDefinition of the line</param>
            <param name="leadingText">represents the leading text from the current location</param>
            <returns>a collection of ILexem object matching the namespace declaration text if any</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.GetNamespaceScopeDefinition(System.Int32)">
            <summary>
            Helper method to get the namespace ScopeDefinition of specified line
            </summary>
            <param name="line">represents the line number</param>
            <returns>a value indicating the ScopeDefinition of the specified line</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.GetTypesFromString(Syncfusion.Windows.Edit.EditTypeCollection,System.String)">
            <summary>
            Helper method to iterate to the types collection tree and find the type given. This is a recursive method that splits the text based with "." and iterates to returns the nested types under the type name.
            </summary>
            <param name="collection"></param>
            <param name="typeName"></param>
            <returns>a collection of EditTypeInfo objects under the type name</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.GetTypeFromString(Syncfusion.Windows.Edit.EditTypeCollection,System.String)">
            <summary>
            Helper method to iterate to the types collection tree and find the type given. This is a recursive method that splits the text based with "." and iterates to returns the nested types under the type name.
            </summary>
            <param name="collection"></param>
            <param name="typeName"></param>
            <returns>a collection of EditTypeInfo objects under the type name</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.GetBaseTypeFromFullName(System.String)">
            <summary>
            Helper method to get an EditTypeInfo instances from TypesCollection based on the full name of the type.
            </summary>
            <param name="typeName">represents full name of the type including namespace</param>
            <returns>EditTypeInfo instance from the types collection.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.GetBaseType(System.String)">
            <summary>
            Helper method to get an EditTypeInfo instances from TypesCollection based on the name of the type.
            </summary>
            <param name="typeName">represents full name of the type without namespace</param>
            <returns>EditTypeInfo instance from the types collection.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.HideIntellisensePopup">
            <summary>
            Method to Hide Intellisense Popup.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.UpdateTypesForIncludedNamespaces(System.Collections.Generic.IEnumerable{System.Uri})">
            <summary>
            Helper method to load generate types in namespace tree.
            </summary>
            <param name="assemblies">represents the list of assemblies added</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.ExecuteDeleteText">
            <summary>
            Helper method for delete key activity
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.ExecuteBackspace">
            <summary>
            Helper method for backspace key activity
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.GetTextInCollapsedArea(Syncfusion.Windows.Edit.LineItem)">
             <summary>
            
             </summary>
             <param name="lineItem"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.GetSelectionEndIndex(Syncfusion.Windows.Edit.LineItem)">
             <summary>
            
             </summary>
             <param name="lineitem"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LanguageBase.GetIndentLevel(System.Int32)">
             <summary>
            
             </summary>
             <param name="lineNumber"></param>
             <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LanguageBase.Lexem">
            <summary>
            Gets or Sets a collection of type of ILexem indicating the language configurations. It has been modified to IEnumerable type to allow the
            users to binding a custom collection as language lexems.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LanguageBase.Formats">
            <summary>
            Gets or Sets a collection of type of IFormat indicating the language configurations. It has been modified to IEnumerable type to allow the
            users to binding a custom collection as language formats.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LanguageBase.SupportsOutlining">
            <summary>
            Gets or Sets a value indicating whether the language supports outlining
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LanguageBase.IsIndentSelectionOnTabEnabled">
            <summary>
            Gets or sets a value indicating whether the selected should be indented or removed when tab key is pressed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LanguageBase.ParentControl">
            <summary>
            Gets a value indicating the parent EditControl reference.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LanguageBase.SplitLinesRegex">
            <summary>
            Gets or sets a value indicating the Regex to be applied for splitting the text in lines.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LanguageBase.SplitWordsRegex">
            <summary>
            Gets or sets a value indicating the Regex to be applied for splitting the lines into individual tokens.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LanguageBase.IsSplitTextToWords">
            <summary>
            Gets or sets a value indicating if the text in lines has to be splitted in to tokens.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LanguageBase.CurrentBlock">
            <summary>
            internal property to hold a reference to current BlockCodes instance used in applying syntax colors
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LanguageBase.CurrentFormat">
            <summary>
            internal property to hold a reference to current IFormat instance used in applying in syntax colors.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LanguageBase.ApplyColoring">
            <summary>
            Gets or sets a value indicating if the language supports syntax highlighting
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LanguageBase.Name">
            <summary>
            Gets or sets Name of the Language.
            </summary>
            <remarks>
            <para>Specifies the Name of the Language.</para>
            </remarks>
            <value>
            <para>Type: System.String</para>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LanguageBase.FileExtension">
            <summary>
            Gets or sets File Extension supported by the language
            </summary>
            <remarks>
            <para>Specifies the file extension.</para>
            </remarks>
            <value>
            <para>Type: System.String</para>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LanguageBase.CaseSensitive">
            <summary>
            Gets or sets a value indicating whether the Language has case sensitive or not
            </summary>
            <remarks>
            Specifies the particular language is case sensitive or not.
            </remarks>
            <value>
            Type: System.Boolean
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LanguageBase.TextForeground">
            <summary>
            Gets or sets foreground brush to be applied when no Lexems are applicable for
            the text
            </summary>
            <remarks>
            <para>Specifies the particular language Text Foreground.</para>
            </remarks>
            <value>
            <para>TextForeground = Brushes.Green;</para>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LanguageBase.BlockStart">
            <summary>
            Gets or sets BlockStart property. Specifies the start symbol that denotes start of a block of code
            </summary>
            <remarks>
            Specifies the Block start text.
            </remarks>
            <value>
            Type: System.String
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LanguageBase.BlockEnd">
            <summary>
            Gets or sets BlockEnd property. Specifies the end symbol that denotes end of block of code
            </summary>
            <remarks>
            Specifies the Block End text.
            </remarks>
            <value>
            Type: System.String
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LanguageBase.SupportsIntellisense">
            <summary>
            Gets or sets a value indicating whether the language supports Intellisense or not
            </summary>
            <remarks>
            Specifies the particular language supports Intellisense or not.
            </remarks>
            <value>
            Type: System.Boolean
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LanguageBase.DocumentBlocks">
            <summary>
            internal variable to hold a list of Blocks including preprocessors in the entire content.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LanguageBase.EllipsisText">
             <summary>
            Gets or sets a value indicating the text to be displayed when a block is collapsed. By default its set to "..."
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LanguageBase.TypesCollection">
            <summary>
            Gets the Types tree generated based on the assembly references.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LanguageBase.IntellisenseDrillDownChar">
            <summary>
            Gets or sets a value indicating a char on which the sub-items of the intellisense items to displayed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LanguageBase.IntellisenseCommitCharacters">
            <summary>
            Gets or sets a value indicating when the selected intellisense items to be appended. The string given will be coverted to individual characters internally and
            verified to append the selected item to text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LanguageBase.CommitsIntellisenseItemOnSpaceBar">
            <summary>
            Gets or sets a value indicating whether the selected intellisense items to be appended when space bar is pressed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LanguageBase.IndentableBlocks">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.ProceduralLanguageBase.#ctor(Syncfusion.Windows.Edit.EditControl)">
             <summary>
            
             </summary>
             <param name="control"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.ProceduralLanguageBase.ApplyColor(System.String,System.Int32)">
             <summary>
            
             </summary>
             <param name="text"></param>
             <param name="line"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.ProceduralLanguageBase.ApplyExpandCollapse(Syncfusion.Windows.Edit.ApplyExpandCollapseArgs)">
             <summary>
            
             </summary>
             <param name="args"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.SQLLanguage.#ctor(Syncfusion.Windows.Edit.EditControl)">
             <summary>
            
             </summary>
             <param name="control"></param>
        </member>
        <member name="F:Syncfusion.Windows.Edit.UndoManager.undostack">
            <summary>
            Private object of type EditAction
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.UndoManager.redostack">
            <summary>
            Private object of type EditAction
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.UndoManager.isNewUndoItem">
            <summary>
            internal bool variable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.UndoManager.Add(Syncfusion.Windows.Edit.EditAction)">
            <summary>
            Helper method to add an EditAction object to UndoStack.
            </summary>
            <remarks>
            <para>Add the Action into the Stack.</para>
            </remarks>
            <param name="action">Gets the Current EditAction</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.UndoManager.GetLastAction">
            <summary>
            Pops the last item in the UndoStack and returns an EditAction object
            </summary>
            <remarks>
            This method is used to catch the last action.
            </remarks>
            <returns>
            Returns last Edit action.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.UndoManager.GetRedoAction">
            <summary>
            Pops the last item in the RedoStack and returns an EditAction object
            </summary>
            <returns>Returns last Redo action.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.UndoManager.ActionCount">
            <summary>
            returns the number of actions in the Undo stack
            </summary>
            <remarks>
            This method is get the total no of action count.
            </remarks>
            <returns>
            Returns 0 when undo stack is null
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.UndoManager.CheckGroupAction(Syncfusion.Windows.Edit.EditAction)">
            <summary>
            Helper method that compares the current action with the previous action and groups it, if the current and previous action are Type
            </summary>
            <param name="current">Gets the current Edit action.</param>
            <returns>Returns action type.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.UndoManager.UndoAction">
            <summary>
            Method that performs Undo operations based on the ActionType. With Control being
            the target of the action.
            </summary>
            <remarks>
            The Undo action method used to undo the last action.  This method is based on
            the Action type.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Edit.UndoManager.BringLineItemToView(System.Int32,System.Int32,Syncfusion.Windows.Edit.EditAction)">
            <summary>
            Helper method to update cursor position and selection when undo or redo operations are done.
            </summary>
            <param name="linenumber"></param>
            <param name="cursorindex"></param>
            <param name="action"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.UndoManager.BringLineItemToView(System.Int32,System.Int32,Syncfusion.Windows.Edit.EditAction,System.Boolean)">
            <summary>
            Helper method to update cursor position and selection when undo or redo operations are done.
            </summary>
            <param name="linenumber"></param>
            <param name="cursorindex"></param>
            <param name="action"></param>
            <param name="allowSelection"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.UndoManager.RedoAction">
            <summary>
            Method that performs Redo operations based on the ActionType. With Control being
            the target of the action.
            </summary>
            <remarks>
            This method is used for Redo operation.  This Redo operation is based on the
            ActionType.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Edit.UndoManager.AddRedo(Syncfusion.Windows.Edit.EditAction)">
            <summary>
            Helper method to add items to Redo stack object
            </summary>
            <param name="action">The Edit Action.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.UndoManager.RedoCount">
            <summary>
            Returns number of items in the RedoStack.
            </summary>
            <returns>Returns redo stack count.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.UndoManager.ClearActions">
            <summary>
            Clears all Actions.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.UndoManager.IsNewUndoItem">
            <summary>
            Gets or sets a value indicating whether IsNewUndoItem is true or false.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.UndoManager.ParentControl">
            <summary>
            Gets or sets a value indicating the instance of parent EditControl.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.EditAction">
            <summary>
            EditAction is a Helper class used to store the data regarding the actions performed on the EditControl
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditAction.action">
            <summary>
            Private object of type ActionType.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditAction.line">
            <summary>
            instance for LineNumber.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditAction.cursorindex">
            <summary>
            instance for CursorIndex.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditAction.text">
            <summary>
            instance for Text.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditAction.newline">
            <summary>
            Private bool variable of NewLine.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditAction.selectionpointer">
            <summary>
            Private object of type SelectionPointer
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditAction.multilinepointer">
            <summary>
            Private object of type SelectionPointer
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditAction.seltext">
            <summary>
            instance for SelectedText.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditAction.isselected">
            <summary>
            Private bool variable of IsSelected.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditAction.isselectall">
            <summary>
            Private bool variable of IsSelectAll.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditAction.#ctor">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <remarks>
            The EditAction Constructor.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditAction.LineNumber">
            <summary>
            Gets or sets the LineNumber
            </summary>
            <remarks>
            Specified the Line number.
            </remarks>
            <value>
            Type: System.Int32
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditAction.CursorIndex">
            <summary>
            Gets or sets the CursorIndex.
            </summary>
            <remarks>
            Specifies the current CursorIndex.
            </remarks>
            <value>
            Type: System.Int32
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditAction.Action">
            <summary>
            Gets or sets the action type.
            </summary>
            <remarks>
            This Property is used to contain the ActionType for Undo and Redo operations.
            </remarks>
            <value>
            Type: <see
            cref="T:Syncfusion.Windows.Edit.ActionType">Syncfusion.Windows.Edit.ActionType</see>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditAction.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <remarks>
            This Property is used to get and set the text from the EditControl.
            </remarks>
            <value>
            Type: System.String
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditAction.NewLine">
            <summary>
            Gets or sets a value indicating whether the NewLine is true or false.
            </summary>
            <remarks>
            This Property specifies the NewLine action.
            </remarks>
            <value>
            <c>true</c> if newline action performed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditAction.Pointer">
            <summary>
            Gets or sets the selection pointer.
            </summary>
            <remarks>
            This Property specifies the selection pointer values.
            </remarks>
            <value>
            Type: <see
            cref="T:Syncfusion.Windows.Edit.SelectionPointer">Syncfusion.Windows.Edit.SelectionPointer</see>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditAction.MultilinePointer">
            <summary>
            Gets or sets the multiline pointer.
            </summary>
            <remarks>
            This Property specifies the multiple selection pointer values.
            </remarks>
            <value>
            Type: <see
            cref="T:Syncfusion.Windows.Edit.SelectionPointer">Syncfusion.Windows.Edit.SelectionPointer</see>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditAction.SelectedText">
            <summary>
            Gets or sets the Selected Text
            </summary>
            <remarks>
            This Property contains the selected text.
            </remarks>
            <value>
            Type: System.String
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditAction.IsSelected">
            <summary>
            Gets or sets a value indicating whether IsSelected is true or false;
            </summary>
            <remarks>
            This property specifies the selection is allowed or not.
            </remarks>
            <value>
            <c>true</c> if this instance is selected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditAction.IsSelectAll">
            <summary>
            Gets or sets a value indicating whether IsSelectAll is true or false.
            </summary>
            <remarks>
            This Property specifies the Select all is allowed or not.
            </remarks>
            <value>
            <c>true</c> if this instance is select all; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditAction.Lexem">
            <summary>
            Gets or sets the Lexem.
            </summary>
            <remarks>
            This Property specifies the Lexem value.
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Edit.Int32ToStringConverter">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Int32ToStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
             <summary>
            
             </summary>
             <param name="value"></param>
             <param name="targetType"></param>
             <param name="parameter"></param>
             <param name="culture"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Int32ToStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
             <summary>
            
             </summary>
             <param name="value"></param>
             <param name="targetType"></param>
             <param name="parameter"></param>
             <param name="culture"></param>
             <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Edit.BooleanToBackgroundBrushConverter">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.BooleanToBackgroundBrushConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
             <summary>
            
             </summary>
             <param name="value"></param>
             <param name="targetType"></param>
             <param name="parameter"></param>
             <param name="culture"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.BooleanToBackgroundBrushConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
             <summary>
            
             </summary>
             <param name="value"></param>
             <param name="targetType"></param>
             <param name="parameter"></param>
             <param name="culture"></param>
             <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Edit.BooleanToBorderBrushConverter">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.BooleanToBorderBrushConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
             <summary>
            
             </summary>
             <param name="value"></param>
             <param name="targetType"></param>
             <param name="parameter"></param>
             <param name="culture"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.BooleanToBorderBrushConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
             <summary>
            
             </summary>
             <param name="value"></param>
             <param name="targetType"></param>
             <param name="parameter"></param>
             <param name="culture"></param>
             <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Edit.InvertedBooleanToBorderBrushConverter">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.InvertedBooleanToBorderBrushConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
             <summary>
            
             </summary>
             <param name="value"></param>
             <param name="targetType"></param>
             <param name="parameter"></param>
             <param name="culture"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.InvertedBooleanToBorderBrushConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
             <summary>
            
             </summary>
             <param name="value"></param>
             <param name="targetType"></param>
             <param name="parameter"></param>
             <param name="culture"></param>
             <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Edit.InvertedBooleanToBackgroundBrushConverter">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.InvertedBooleanToBackgroundBrushConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
             <summary>
            
             </summary>
             <param name="value"></param>
             <param name="targetType"></param>
             <param name="parameter"></param>
             <param name="culture"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.InvertedBooleanToBackgroundBrushConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
             <summary>
            
             </summary>
             <param name="value"></param>
             <param name="targetType"></param>
             <param name="parameter"></param>
             <param name="culture"></param>
             <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Edit.FindResultToTextConverter">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.FindResultToTextConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
             <summary>
            
             </summary>
             <param name="value"></param>
             <param name="targetType"></param>
             <param name="parameter"></param>
             <param name="culture"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.FindResultToTextConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
             <summary>
            
             </summary>
             <param name="value"></param>
             <param name="targetType"></param>
             <param name="parameter"></param>
             <param name="culture"></param>
             <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Edit.TabVisibilityToVisibilityConverter">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.TabVisibilityToVisibilityConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
             <summary>
            
             </summary>
             <param name="values"></param>
             <param name="targetType"></param>
             <param name="parameter"></param>
             <param name="culture"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.TabVisibilityToVisibilityConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
             <summary>
            
             </summary>
             <param name="value"></param>
             <param name="targetTypes"></param>
             <param name="parameter"></param>
             <param name="culture"></param>
             <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Edit.LinePropertiesToStyleConverter">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LinePropertiesToStyleConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
             <summary>
            
             </summary>
             <param name="values"></param>
             <param name="targetType"></param>
             <param name="parameter"></param>
             <param name="culture"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LinePropertiesToStyleConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
             <summary>
            
             </summary>
             <param name="value"></param>
             <param name="targetTypes"></param>
             <param name="parameter"></param>
             <param name="culture"></param>
             <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Edit.EditTypeInfoToImageSourceConverter">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditTypeInfoToImageSourceConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
             <summary>
            
             </summary>
             <param name="value"></param>
             <param name="targetType"></param>
             <param name="parameter"></param>
             <param name="culture"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditTypeInfoToImageSourceConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
             <summary>
            
             </summary>
             <param name="value"></param>
             <param name="targetType"></param>
             <param name="parameter"></param>
             <param name="culture"></param>
             <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Edit.TabSelectionConverter">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.TabSelectionConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
             <summary>
            
             </summary>
             <param name="values"></param>
             <param name="targetType"></param>
             <param name="parameter"></param>
             <param name="culture"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.TabSelectionConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
             <summary>
            
             </summary>
             <param name="value"></param>
             <param name="targetTypes"></param>
             <param name="parameter"></param>
             <param name="culture"></param>
             <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Edit.OrBasedVisibilityConverter">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.OrBasedVisibilityConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
             <summary>
            
             </summary>
             <param name="values"></param>
             <param name="targetType"></param>
             <param name="parameter"></param>
             <param name="culture"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.OrBasedVisibilityConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
             <summary>
            
             </summary>
             <param name="value"></param>
             <param name="targetTypes"></param>
             <param name="parameter"></param>
             <param name="culture"></param>
             <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Edit.TabSelectionToTextConverter">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.TabSelectionToTextConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
             <summary>
            
             </summary>
             <param name="values"></param>
             <param name="targetType"></param>
             <param name="parameter"></param>
             <param name="culture"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.TabSelectionToTextConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
             <summary>
            
             </summary>
             <param name="value"></param>
             <param name="targetTypes"></param>
             <param name="parameter"></param>
             <param name="culture"></param>
             <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Edit.EndLineToLineHeightConverter">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EndLineToLineHeightConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
             <summary>
            
             </summary>
             <param name="values"></param>
             <param name="targetType"></param>
             <param name="parameter"></param>
             <param name="culture"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EndLineToLineHeightConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
             <summary>
            
             </summary>
             <param name="value"></param>
             <param name="targetTypes"></param>
             <param name="parameter"></param>
             <param name="culture"></param>
             <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Edit.XMLLanguage">
             <summary>
            
             </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.MarkupLanguageBase">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.MarkupLanguageBase.coloringDetails">
            <summary>
            Local variable of SyntaxColoringDetails to store current color information
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.MarkupLanguageBase.patternStack">
            <summary>
            Private SyntaxColoringDetails object for get the patterns in stack.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.MarkupLanguageBase.formatStack">
            <summary>
            Private IFormat object for get the Formats in stack.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.MarkupLanguageBase.blockStack">
            <summary>
            Private IFormat object for get the Formats in stack.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.MarkupLanguageBase.markupCol">
            <summary>
            Private Lexem collection object for get the markup type of lexems.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.MarkupLanguageBase.othersCol">
            <summary>
            Private Lexem collection object for get the other type of lexems.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.MarkupLanguageBase._isinbetween">
            <summary>
            Property to check whether the given text is data.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.MarkupLanguageBase.#ctor(Syncfusion.Windows.Edit.EditControl)">
             <summary>
            
             </summary>
             <param name="control"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.MarkupLanguageBase.OnLexemsChanged(System.Windows.DependencyPropertyChangedEventArgs)">
             <summary>
            
             </summary>
             <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.MarkupLanguageBase.SplitTextToLines">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.MarkupLanguageBase.ApplyExpandCollapse(Syncfusion.Windows.Edit.ApplyExpandCollapseArgs)">
             <summary>
            
             </summary>
             <param name="args"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.MarkupLanguageBase.ResetColor(System.Int32)">
            <summary>
            internal helper method to reset the color of the a line
            </summary>
            <param name="line"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.MarkupLanguageBase.GetBlockStartList">
            <summary>
            Returns a list of the preprocessers defined in the language configurations
            </summary>
            <returns>Returns the Lexem List</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.MarkupLanguageBase.GetTextInCollapsedArea(Syncfusion.Windows.Edit.LineItem)">
             <summary>
            
             </summary>
             <param name="lineItem"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.MarkupLanguageBase.GetSelectionEndIndex(Syncfusion.Windows.Edit.LineItem)">
             <summary>
            
             </summary>
             <param name="lineitem"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.MarkupLanguageBase.GetIndentLevel(System.Int32)">
             <summary>
            
             </summary>
             <param name="lineNumber"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.MarkupLanguageBase.ExecuteDeleteText">
            <summary>
            Helper method for delete key activity
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.MarkupLanguageBase.ExecuteBackspace">
            <summary>
            Helper method for backspace key activity
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.XMLLanguage.#ctor(Syncfusion.Windows.Edit.EditControl)">
             <summary>
            
             </summary>
             <param name="control"></param>
        </member>
        <member name="T:Syncfusion.Windows.Edit.SyntaxColoringDetails">
            <summary>
            Internal class used for store syntax coloring details
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.SyntaxColoringDetails.pattern">
            <summary>
            Private string variable for Pattern.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.SyntaxColoringDetails.currentColor">
            <summary>
            Private Brush object for current color.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.SyntaxColoringDetails.collection">
            <summary>
            Private List&lt;ILexem&gt; object for Lexems.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.SyntaxColoringDetails.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Edit.SyntaxColoringDetails"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.SyntaxColoringDetails.Pattern">
            <summary>
            Gets or sets the Pattern.
            </summary>
            <value>The pattern.</value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.SyntaxColoringDetails.CurrentColor">
            <summary>
            Gets or sets the color of the current Lexem.
            </summary>
            <value>The color of the current Lexem.</value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.SyntaxColoringDetails.Lexems">
            <summary>
            Gets or sets the lexems.
            </summary>
            <value>The lexems.</value>
        </member>
        <member name="T:Syncfusion.Windows.Edit.VBLanguage">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.VBLanguage.#ctor(Syncfusion.Windows.Edit.EditControl)">
             <summary>
            
             </summary>
             <param name="control"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.VBLanguage.ApplyExpandCollapse(Syncfusion.Windows.Edit.ApplyExpandCollapseArgs)">
             <summary>
            
             </summary>
             <param name="args"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.VBLanguage.GetIndentLevel(System.Int32)">
             <summary>
            
             </summary>
             <param name="lineNumber"></param>
             <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Edit.CSharpLanguage">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.CSharpLanguage.#ctor(Syncfusion.Windows.Edit.EditControl)">
             <summary>
            
             </summary>
             <param name="control"></param>
        </member>
        <member name="T:Syncfusion.Windows.Edit.EditCommands">
            <summary>
            EditCommands is a Static class that contains all definitions of RoutedUICommands
            that can be used in EditControl.
            </summary>
            <remarks>
            The EditCommand class contains the Edit menu properties like New, Open, Save,
            Copy, Cut, Expandall, Collapseall etc.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Edit.EditCommands">Syncfusion.Windows.Edit.EditCommands</seealso>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditCommands.New">
            <summary>
            Initializes a new instance of the RoutedUICommand class for New operation
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditCommands.Open">
            <summary>
            Initializes a new instance of the RoutedUICommand class for Open operation
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditCommands.Save">
            <summary>
            Initializes a new instance of the RoutedUICommand class for Save operation
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditCommands.Copy">
            <summary>
            Initializes a new instance of the RoutedUICommand class for Copy operation
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditCommands.Cut">
            <summary>
            Initializes a new instance of the RoutedUICommand class for Cut operation
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditCommands.Paste">
            <summary>
            Initializes a new instance of the RoutedUICommand class for Paste operation
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditCommands.SelectAll">
            <summary>
            Initializes a new instance of the RoutedUICommand class for SelectAll operation
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditCommands.Outlining">
            <summary>
            Initializes a new instance of the RoutedUICommand class for Outlining operation.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditCommands.Undo">
            <summary>
            Initializes a new instance of the RoutedUICommand class for Undo operation
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditCommands.Redo">
            <summary>
            Initializes a new instance of the RoutedUICommand class for Redo operation
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditCommands.Delete">
            <summary>
            Initializes a new instance of the RoutedUICommand class for Delete operation
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditCommands.Backspace">
            <summary>
            Initializes a new instance of the RoutedUICommand class for Backspace operation
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditCommands.IgnoreKeys">
            <summary>
            Initializes a new instance of the RoutedUICommand class for IgnoreKeys operation
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditCommands.ExpandAll">
            <summary>
            Initializes a new instance of the RoutedUICommand class for ExpandAll operation
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditCommands.CollapseAll">
            <summary>
            Initializes a new instance of the RoutedUICommand class for CollapseAll operation
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditCommands.Find">
            <summary>
            Initializes a new instance of the RoutedUICommand class for Find operation
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditCommands.Replace">
            <summary>
            Initializes a new instance of the RoutedUICommand class for Replace operation
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditCommands.Search">
            <summary>
            Initializes a new instance of the RoutedUICommand class for Search Text operation
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditCommands.SearchInSelected">
            <summary>
            Initializes a new instance of the RoutedUICommand class for Search Text in selected text operation
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditCommands.FindAllReferences">
            <summary>
            Initializes a new instance of the RoutedUICommand class for Find All references operation
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditCommands.ShowIntellisense">
            <summary>
            Initializes a new instance of the RoutedUICommand class for Show Intellisense operation
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditCommands.IncreaseIndent">
            <summary>
            Initializes a new instance of the RoutedUICommand class for Increase Indent operation
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditCommands.DecreaseIndent">
            <summary>
            Initializes a new instance of the RoutedUICommand class for Decrease Indent operation
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditCommands.CommentSelection">
            <summary>
            Initializes a new instance of the RoutedUICommand class for Comment Selection operation
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditCommands.UncommentSelection">
            <summary>
            Initializes a new instance of the RoutedUICommand class for UnComment Selection operation
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditCommands.InsertNewLine">
            <summary>
            Initializes a new instance of the RoutedUICommand class for Inserting an empty line (Ctrl + Enter) operation.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditCommands.SelectCurrentWord">
            <summary>
            Initializes a new instance of the RoutedUICommand class for selecting current word.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditCommands.AutoIndent">
            <summary>
            Initializes a new instance of the RoutedUICommand class for Auto-indentation operation.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditCommands.GoToLine">
            <summary>
            Initializes a new instance of the RoutedUICommand class for GoToLine operation.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.EditScrollControl">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditScrollControl.rowheights">
            <summary>
            Internal property to store row details
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditScrollControl.columnwidths">
            <summary>
            Internal property to store Column details
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditScrollControl.m_linenumber">
            <summary>
            instance for LineNumber property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditScrollControl.IsDragging">
            <summary>
            bool variable IsDragging for check text dragging or not.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditScrollControl.m_index">
            <summary>
            instance for CaretIndex property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditScrollControl.m_currentitem">
            <summary>
            instance for Caret property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditScrollControl.parentControl">
            <summary>
            internal variable to hold EditControl reference.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditScrollControl.isShiftPressed">
            <summary>
            bool variable isShiftPressed for check Shift pressed or not.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditScrollControl.selectionStartLine">
            <summary>
            int variable to hold the Selection start line.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditScrollControl.selectionStartIndex">
            <summary>
            int variable to hold the selection start index.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditScrollControl.isSelectionstarted">
            <summary>
            bool variable indicating if the selection has started.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditScrollControl.isSelectedAll">
            <summary>
            bool variable indicating if all the text in the control is selected.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditScrollControl.isEllipsisSelected">
            <summary>
            bool variable indicating if Ellipsis for collapsed item is selected.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.InitializeValues(Syncfusion.Windows.Edit.EditControl)">
            <summary>
            Internal helper method to initialize the values for RowHeightsProvider and ColumnWidthsProvider.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.OnArrangeContent(System.Windows.Size)">
            <summary>
            Overriden method of ScrollAxisControl. It is used in the control to arrange the
            items based on the VisibleLinesCollection.
            </summary>
            <param name="arrangeSize">Specifies the size available for arrange the
            items.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.RearrangeLines">
            <summary>
            Method to rearrange lines based on font size changes dynamically.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.ArrangeRow(Syncfusion.Windows.Controls.Scroll.VisibleLineInfo,System.Windows.Point)">
            <summary>
            Helper method used to Arrange items in the control.
            </summary>
            <param name="visibleRow">represents VisibleLineInfo of current item</param>
            <param name="corner">represents the point value</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.ArrangeLineItemElement(System.Int32,Syncfusion.Windows.Controls.Scroll.VisibleLineInfo,Syncfusion.Windows.Controls.Scroll.VisibleLineInfo,System.Windows.Rect)">
            <summary>
            Helper method used to Arrange LineItem objects
            </summary>
            <param name="rowIndex">represents the index of the row</param>
            <param name="visibleColumn">represents the column where it has to be placed</param>
            <param name="visibleRow">represents the visibleRow object containing the size of visible row</param>
            <param name="cellRect">represents the Rect object</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.ArrangeLineNumberElement(System.Int32,Syncfusion.Windows.Controls.Scroll.VisibleLineInfo,Syncfusion.Windows.Controls.Scroll.VisibleLineInfo,System.Windows.Rect)">
            <summary>
            Helper method used to Arrange Line number textblocks
            </summary>
            <param name="rowIndex">represents the index of the row</param>
            <param name="visibleColumn">represents the column where it has to be placed</param>
            <param name="visibleRow">represents the visibleRow object containing the size of visible row</param>
            <param name="arrangeRect">represents the Rect object</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.ArrangeLineStateIndicatorElement(System.Int32,Syncfusion.Windows.Controls.Scroll.VisibleLineInfo,Syncfusion.Windows.Controls.Scroll.VisibleLineInfo,System.Windows.Rect)">
            <summary>
            Helper method used to Arrange line state indicator elements
            </summary>
            <param name="rowIndex">represents the index of the row</param>
            <param name="visibleColumn">represents the column where it has to be placed</param>
            <param name="visibleRow">represents the visibleRow object containing the size of visible row</param>
            <param name="arrangeRect">represents the Rect object</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.ArrangeExpandCollapseElement(System.Int32,Syncfusion.Windows.Controls.Scroll.VisibleLineInfo,Syncfusion.Windows.Controls.Scroll.VisibleLineInfo,System.Windows.Rect)">
            <summary>
            Helper method used to Arrange Expand collapse buttons
            </summary>
            <param name="rowIndex">represents the index of the row</param>
            <param name="visibleColumn">represents the column where it has to be placed</param>
            <param name="visibleRow">represents the visibleRow object containing the size of visible row</param>
            <param name="arrangeRect">represents the Rect object</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.UpdateExpandStatus(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Helper method to update the Hidden state of the VisibleLineInfo between a range
            </summary>
            <param name="start">represents the start index from where the hidden state has to be updated</param>
            <param name="end">represents the end index from where the hidden state has to be updated</param>
            <param name="hidden">represents the hidden state to be applied for the VisibleLineInfo object</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.GetParentExpanded(Syncfusion.Windows.Edit.LineItem)">
            <summary>
            Helper method to check if the parent line item is expanded
            </summary>
            <param name="item">represents the lineitem to which this condition has to be checked</param>
            <returns>a value indicating whether the item's parent is expanded or not</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.ClearCanvasChildren(Syncfusion.Windows.Controls.Scroll.ScrollControlChildFrame,System.Type)">
            <summary>
            Helper method used to clear all children in Canvas.
            </summary>
            <param name="canvas">represents the canvas object</param>
            <param name="objectType"> represents the Type</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.ResetItems">
            <summary>
            Internal helper method to reset the internal collections and line sizes.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.CalculateLineNumberColumnWidth">
            <summary>
            Helper method to calculate the width of the line number column in
            EditScrollControl. Width of the column is calculated based on the number of
            lines in the EditControl.Lines collection
            </summary>
            <returns>
            returns desired width of the line number column
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.GetLineItem(System.Windows.Point)">
            <summary>
            Returns lineitem on a given location. Used to get the lineitem on which the click was made
            </summary>
            <param name="point">The point of the click position.</param>
            <returns>Returns the Line item based on the point position.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.SetCursorLocation(Syncfusion.Windows.Edit.LineItem,System.Windows.Point)">
            <summary>
            Helper method to update the cursor location
            </summary>
            <param name="lineitem">The lineitem to update the cursor location.</param>
            <param name="pt">The point object used to update the cursor point.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.RemoveCursorLayer(Syncfusion.Windows.Edit.LineItem)">
            <summary>
            Helper method to remove cursor from LineItem
            </summary>
            <param name="item">The Line item for remove the cursor.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.GetCursor(Syncfusion.Windows.Edit.LineItem)">
            <summary>
            Helper method that returns Cursor object in the lineitem
            </summary>
            <param name="item">The Line item for get the cursor.</param>
            <returns>Returns the Cursor object based on the specified line item.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.FindPosition(Syncfusion.Windows.Edit.LineItem,System.Windows.Point)">
            <summary>
            Returns Index of the character in the text based on the point value
            </summary>
            <param name="currentitem">The current line item.</param>
            <param name="point">The point to get the cursor index.</param>
            <returns>Returns the current item Index value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.MoveCursorToLineItem(System.Int32)">
            <summary>
            Helper method to move cursor to specified lineitem
            </summary>
            <param name="index">The index to move the cursor position.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.GetNextWord(System.Int32)">
            <summary>
            Helper method that fetches immediate next word
            </summary>
            <param name="index">The index of the word.</param>
            <returns>Returns the index of the next word.</returns>
            <remarks>GetNextWord used to fetch the next word, based on the index value.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.GenerateCollapsedItemWordsCollection(System.String,Syncfusion.Windows.Edit.LineItem)">
            <summary>
            Helper method to generate words for iterating when control + arrow key is used for collapsed lines
            </summary>
            <param name="strText">represents the collapsed item text</param>
            <param name="currentLineItem"> represents the currentLine</param>
            <returns>returns a list of WordDetails based on the text</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.GetCurrentWord(System.Int32)">
            <summary>
            Gets the current word.
            </summary>
            <param name="index">The index of the word.</param>
            <returns>Returns the current word.</returns>
            <remarks>GetCurrentWord used to fetch the current word, based on the index value.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.GetPreviousWordIndex(System.Int32)">
            <summary>
            Fetches the previous word boundary based on the index
            </summary>
            <param name="index">The index of the current word.</param>
            <returns>Returns the Previous word's start index.</returns>
            <remarks>GetPreviousWord used to fetch the previous word's start index, based on the index value.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.GetPreviousWord(System.Int32)">
            <summary>
            Fetches the previous word boundary based on the index
            </summary>
            <param name="index">The index of the current word.</param>
            <returns>Returns the Previous word.</returns>
            <remarks>GetPreviousWord used to fetch the previous word's start index, based on the index value.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.GetSelectedText(Syncfusion.Windows.Edit.SelectionPointer)">
            <summary>
            Helper method to get the Selected text based on the SelectionPointer object
            </summary>
            <param name="pointer">The pointer of the text.</param>
            <returns>Returns the selected text based on the selection pointer.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.UpdateSelectionPointer(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Helper method to update the selection pointer. In this method, values are StartLine and EndLine are validated and updated accordingly.
            </summary>
            <param name="startline">The startline of the selection pointer.</param>
            <param name="endline">The endline of the selection pointer.</param>
            <param name="startIndex">The start index of the selection pointer.</param>
            <param name="endindex">The endindex of the selection pointer.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.UpdateSelection(Syncfusion.Windows.Edit.SelectionPointer,System.Int32)">
            <summary>
            Updates Selection in a LineItem based on SelectionPointer and index
            </summary>
            <param name="pointer">The selection pointer to update the selection.</param>
            <param name="i">The Line number of the selection pointer.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.AddSelectionLayer(System.Int32,System.Int32,System.Int32)">
            <summary>
            Helper method that generates Selection rectangle geometry based on the selected text width and adds SelectionLayer adorner to the LineItem.
            </summary>
            <param name="line">The line to generate selection rectangle.</param>
            <param name="startIndex">The start index of the line.</param>
            <param name="endindex">The end index of the line.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.RemoveSelectionLayer(System.Int32)">
            <summary>
            Helper method to remove selection layer from the Lineitem
            </summary>
            <param name="line">The line number to remove selection layer.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.ClearSelection">
            <summary>
            Helper method to clear selection
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.KeyDownPreview(System.Windows.Input.KeyEventArgs)">
            <summary>
            Helper method used for moving cursor position based on key pressed and updates selection when shift is pressed
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.KeyUpPreview(System.Windows.Input.KeyEventArgs)">
            <summary>
            Releases the text selection and sets SelectedText property
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.RemoveSelectedText(Syncfusion.Windows.Edit.SelectionPointer)">
            <summary>
            Helper method to remove the text with in the selected area.
            </summary>
            <param name="selectionPointer">represents the text selection pointer</param>
            <returns>a value indicating the cursorindex</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.RemoveTextRange(Syncfusion.Windows.Edit.SelectionPointer)">
            <summary>
            Helper method to remove selected text
            </summary>
            <param name="pointer">The Selection pointer of Line.</param>
            <returns>Returns the text</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.ExecuteSelectAll">
            <summary>
            Helper method to Select all the lineitems in the panel.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.ShowToolTipWhenOverEllipsis(System.Windows.DependencyObject,System.Windows.Point)">
            <summary>
            Helper method to show tooltip when mouse is hovered on the collapsed area.
            </summary>
            <param name="element">represents on DependencyObject to which tooltip to be set.</param>
            <param name="pt">represents mouse' current position</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.CheckMouseOverEllipsis(System.Windows.Point)">
            <summary>
            Helper method to check if the mouse position is over the Ellipsis.
            </summary>
            <param name="pt">represents the mouse position</param>
            <returns>whether the mouse position is inside or outside of the ellipsis area</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.HandleDoubleClick(Syncfusion.Windows.Edit.LineItem,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Helper method to handle double click operation on a word.
            </summary>
            <param name="clickitem">represents the lineitem on which the double click was made</param>
            <param name="e">represents MouseEventArgs</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            MouseLeftButtonDown preview event
            Sets cursor location after calculating the index and current lineitem
            Initiates selection
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> that contains the event data. The event data reports that the left mouse button was pressed.</param>
            <remarks>OnPreviewMouseLeftButtonDown fires when the Mouseleft button down. It update the selection pointer.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            MouseLeftButtonUp Preview event override, updates selection and selected text when the mouse is released.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> that contains the event data. The event data reports that the left mouse button was released.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.CreateScrollAxis(System.Windows.Controls.Orientation,System.Boolean,Syncfusion.Windows.Controls.Scroll.IScrollBar,Syncfusion.Windows.Controls.Scroll.ILineSizeHost)">
            <summary>
            
            </summary>
            <param name="orientation"></param>
            <param name="pixelScroll"></param>
            <param name="scrollBar"></param>
            <param name="lineSizes"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.OnDragOver(System.Windows.DragEventArgs)">
             <summary>
            
             </summary>
             <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            MouseMove event override - updates selection, updates scrollbar offset when the mouse is moved out of the viewing area
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> that contains the event data.</param>
            <remarks>Each mouse move event the control update the selection pointer.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            OnGotFocus - updates the visibility of the cursor to visible.
            </summary>
            <param name="e">represents the RoutedEventArgs</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            OnGotFocus - updates the visibility of the cursor to visible.
            </summary>
            <param name="e">represents the RoutedEventArgs</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.Lines_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Updates the EditScrollControl values when an item is added or removed from the Lines Collection.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.TextSelectionPointer_SelectionPointerChanged(System.Object,Syncfusion.Windows.Edit.SelectionPointerChangedEventArgs)">
            <summary>
            Event gets fired when the SelectionPointer property gets updated and updates selection accordingly
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">The <see cref="T:Syncfusion.Windows.Edit.SelectionPointerChangedEventArgs"/> instance containing the event data.</param>
            <remarks>TextSelectionPointer_SelectionPointerChanged fires when the Selection Pointer changed in Edit control.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.content_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Click Event handler for Toggle button to expand and collapse the item.
            </summary>
            <param name="sender">represents the toggle button initiating the click the event</param>
            <param name="e">represents the EventArgs</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.EditScrollControl.sellayer_MouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            SelectionLayar mousemove event to show tooltip when hovered on a collapsed area ellipsis
            </summary>
            <param name="sender">represents the Selection Layer</param>
            <param name="e">represents the MouseEventArgs</param>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditScrollControl.LineNumber">
            <summary>
            Gets or sets current linenumber
            </summary>
            <value>
            Type: System.Int32
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditScrollControl.CaretIndex">
            <summary>
            Gets or sets the index of the caret.
            </summary>
            <value>
            Type: System.Int32
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditScrollControl.Caret">
            <summary>
            Gets Cursor object
            </summary>
            <value>
            Type: Syncfusion.Windows.Edit.CursorLayer
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditScrollControl.CurrentLineItem">
            <summary>
            Gets or sets the current line item.
            </summary>
            <value>
            Type: Syncfusion.Windows.Edit.LineItem
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditScrollControl.ParentEditControl">
            <summary>
            Gets the parent edit control.
            </summary>
            <value>
            Type: Syncfusion.Windows.Edit.EditControl
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditScrollControl.FixedWidth">
            <summary>
            Gets a value indicating the total width of fixed columns (LineNumber and Expand
            Collapse Column) in the EditScrollControl.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.EditScrollControl.TextSelectionPointer">
            <summary>
            Gets or sets the TextSelectionPointer
            </summary>
            <value>
            Type: <see
            cref="T:Syncfusion.Windows.Edit.SelectionPointer">Syncfusion.Windows.Edit.SelectionPointer</see>
            </value>
        </member>
        <member name="T:Syncfusion.Windows.Edit.PixelScrollAxisExt">
            <summary>
            Represents the PixelScrollAxisExt class
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.PixelScrollAxisExt.#ctor(Syncfusion.Windows.Controls.Scroll.IScrollBar,Syncfusion.Windows.Controls.Scroll.ILineSizeHost,Syncfusion.Windows.Controls.Scroll.IDistancesHost)">
            <summary>
            Represents the PixelScrollAxisExt command
            </summary>
            <param name="sb"></param>
            <param name="scrollLinesHost"></param>
            <param name="distancesHost"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.PixelScrollAxisExt.#ctor(Syncfusion.Windows.Controls.Scroll.ScrollAxisBase,Syncfusion.Windows.Controls.Scroll.IScrollBar,Syncfusion.Windows.Controls.Scroll.ILineSizeHost,Syncfusion.Windows.Controls.Scroll.IDistancesHost)">
            <summary>
            Represents the PixedScrollAxisExt constructor
            </summary>
            <param name="parentScrollAxis"></param>
            <param name="sb"></param>
            <param name="scrollLinesHost"></param>
            <param name="distancesHost"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.PixelScrollAxisExt.ScrollToPreviousLine">
            <summary>
            Scrolls to previous line.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.PixelScrollAxisExt.ScrollToPreviousPage">
            <summary>
            Scrolls to previous page.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.PixelScrollAxisExt.AlignScrollLine">
            <summary>
            Aligns the scroll line.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.CursorLayer">
            <summary>
            CursorLayer class is used as an adorner for cursor. The adorner gets invalidated
            when the caretposition property is changed.
            </summary>
            <remarks>
            CursorLayer class contains the Cursor properties like the cursor index, cursor
            line.
            </remarks>
            Syncfusion.Windows.Edit.ICursor
        </member>
        <member name="T:Syncfusion.Windows.Edit.ICursor">
            <summary>
            ICursor interface has the Cursor properties of Cursor layer
            </summary>
            <remarks>ICorsor has CursorIndex and LineNumber property.  The CursorIndex specifies the current position of the cursor and the LineNumber specifies the current cursor linenumber.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Edit.ICursor.MoveTo(System.Int32)">
            <summary>
            Moves the cursor pointer to a particular location.
            </summary>
            <param name="i">The index of cursor position.</param>
            <returns>Returns the cursor index</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.ICursor.MoveToBegin">
            <summary>
            Moves to begin.
            </summary>
            <returns>Returns the cursor index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.ICursor.MoveToEnd">
            <summary>
            Moves to end.
            </summary>
            <returns>Returns the cursor index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.ICursor.Show">
            <summary>
            Shows the cursor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.ICursor.Hide">
            <summary>
            Hides the cursor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.ICursor.CursorIndex">
            <summary>
            Gets or sets the index of the cursor.
            </summary>
            <value>The index of the cursor.</value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.ICursor.LineNumber">
            <summary>
            Gets or sets the line number.
            </summary>
            <value>The line number.</value>
        </member>
        <member name="F:Syncfusion.Windows.Edit.CursorLayer.CaretPositionProperty">
            <summary>
            DependencyProperty for CaretPosition
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.CursorLayer.mindex">
            <summary>
            instance for CursorIndex property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.CursorLayer.mline">
            <summary>
            instance for LineNumber property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.CursorLayer.mlineitem">
            <summary>
            instance for LineItem property, in which cursor is placed
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.CursorLayer.#ctor(System.Windows.UIElement)">
            <summary>
            Initializes a new instance of the  class.
            </summary>
            <remarks>
            <para>The Cursor Layer constructor.</para>
            </remarks>
            <param name="adornedElement">Gets the UIElement object from the reporting
            source.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.CursorLayer.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            OnRender method to render the cursor
            </summary>
            <param name="drawingContext">The drawingContext with the type of DrawingContext</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.CursorLayer.CursorLayer_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Applying a double animation to provide the blinking effect
            </summary>
            <param name="sender">Gets the sender object from the reporting source</param>
            <param name="e">Gets the RoutedEventArgs object from the reporting
            source</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.CursorLayer.OnCaretPositionChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            HorizontalScrollbar is updated to adjust based on the cursor position
            </summary>
            <param name="d">DepdendencyObject, returns CursorLayer</param>
            <param name="e">DependencyPropertyChangedEventArgs, returns old and new
            value</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.CursorLayer.MoveTo(System.Int32)">
            <summary>
            Method to move the cursor to specified number of characters. here it denotes the
            number of characters to be moved.
            </summary>
            <remarks>
            <para>The MoveTo method moves the cursor position into original index value,
            which is specified index value. And also set the caret position.</para>
            </remarks>
            <param name="i">Gets the int value from the reporting source</param>
            <returns>
            <para>Returns the CursorIndex at the specified position.</para>
            </returns>
            <example>
            <para>int a = MoveTo(20);</para>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Edit.CursorLayer.Show">
            <summary>
            Show the current visibility of Cursor.
            </summary>
            <remarks>
            <para>Show method Visible the current source from its hide visibility mode.  It
            mainly used to visible the cursor.</para>
            </remarks>
            <example>
            <para>Show();</para>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Edit.CursorLayer.Hide">
            <summary>
            Hide the current visibility of Cursor.
            </summary>
            <remarks>
            <para>Hide method hide the current source from its show visibility mode.  It
            mainly used to hide the cursor.</para>
            </remarks>
            <example>
            <para>Hide();</para>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Edit.CursorLayer.MoveToBegin">
            <summary>
            Moves the cursor to the start of the line
            </summary>
            <remarks>
            The MoveToBegin method moves the cursor pointer at the beginning of the line.
            </remarks>
            <returns>
            Returns the CursorIndex at the beginning of the line
            </returns>
            <example>
            <para>int a = MoveToBegin();</para>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Edit.CursorLayer.MoveToEnd">
            <summary>
            Moves the cursor to the end of line
            </summary>
            <remarks>
            <para>The MoveToEnd method moves the cursor position at the end of the
            line</para>
            </remarks>
            <returns>
            <para>Returns the CursorIndex at the end of the line</para>
            </returns>
            <example>
            <para>int a = MoveToEnd();</para>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Edit.CursorLayer.MoveToLocation(System.Int32)">
            <summary>
            Helper method to move the cursor to specified index. parameter newindex is used
            to specify the target index.
            </summary>
            <remarks>
            <para>This method moves the cursor pointer at the new index position.</para>
            </remarks>
            <param name="newIndex">Gets the new index of the cursor from the reporting
            source</param>
            <returns>
            <para>Returns the CursorIndex at the particular loacation</para>
            </returns>
            <example>
            <para>int a = MoveToLocation(15);</para>
            </example>
        </member>
        <member name="P:Syncfusion.Windows.Edit.CursorLayer.CaretPosition">
            <summary>
            Gets or sets the cursor position
            </summary>
            <remarks>CaretPosition specifies the Caret position of the cursor.</remarks>
        </member>
        <member name="P:Syncfusion.Windows.Edit.CursorLayer.LineItemHost">
            <summary>
            Gets or sets the lineitem in which cursor is placed.
            </summary>
            <value>
            Type: <see
            cref="T:Syncfusion.Windows.Edit.LineItem">Syncfusion.Windows.Edit.LineItem.</see>
            </value>
            <remarks>LineItemHost specifies the Lineitem with its line properties.</remarks>
        </member>
        <member name="P:Syncfusion.Windows.Edit.CursorLayer.CursorIndex">
            <summary>
            Gets or sets current index
            </summary>
            <remarks>
            <para>Specifies the cursor index.</para>
            </remarks>
            <value>
            <para>Type: System.Int32 </para>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.CursorLayer.LineNumber">
            <summary>
            Gets or sets current linenumber.
            </summary>
            <remarks>
            <para>Specifies the current line number.</para>
            </remarks>
            <value>
            <para>Type: System.Int32 </para>
            </value>
        </member>
        <member name="T:Syncfusion.Windows.Edit.ActionType">
            <summary>
            Specifies the types of action supported by Undo manager
            </summary>
            <remarks>
            <para></para>
            <list type="table">
            <listheader>
            <term>Value</term>
            <description>Description</description></listheader>
            <item>
            <term>Delete</term>
            <description>Specifies Delete action type in Undo Manager.</description></item>
            <item>
            <term>Backspace</term>
            <description>Specifies Backspace action type in Undo Manager.</description></item>
            <item>
            <term>Cut</term>
            <description>Specifies Cut action type in Undo Manager.</description></item>
            <item>
            <term>Paste</term>
            <description>Specifies Paste action type in Undo Manager.</description></item>
            <item>
            <term>Enter</term>
            <description>Specifies Enter action type in Undo Manager.</description></item>
            <item>
            <term>Type</term>
            <description>Specified Type action supported by Undo manager.</description></item>
            </list>
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Edit.ActionType.Type">
            <summary>
            Specifies Type action supported by Undo manager.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.ActionType.Delete">
            <summary>
            Specifies Delete action supported by Undo manager.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.ActionType.Backspace">
            <summary>
            Specifies Backspace action supported by Undo manager.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.ActionType.Cut">
            <summary>
            Specifies Cut action supported by Undo manager.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.ActionType.Paste">
            <summary>
            Specifies Paste action supported by Undo manager.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.ActionType.Enter">
            <summary>
            Specifies Enter action supported by Undo manager.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.ActionType.Tab">
            <summary>
            Specifies Tab action supported by Undo manager.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.ActionType.Replace">
            <summary>
            Specifies Replace action supported by Undo manager.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.ActionType.ReplaceAll">
            <summary>
            Specifies Replace All action supported by Undo manager.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.ActionType.IncreaseIndent">
            <summary>
            Specified Increase Indent action supported by Undo manager.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.ActionType.DecreaseIndent">
            <summary>
            Specified Decrease Indent action supported by Undo manager.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.ActionType.CommentSelection">
            <summary>
            Specified Comment Selection action supported by Undo manager.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.ActionType.UncommentSelection">
            <summary>
            Specified UnComment Selection action supported by Undo manager.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.Languages">
            <summary>
            Displays list of Languages supported by Essential Edit WPF
            </summary>
            <remarks>
            <para></para>
            <para></para>
            <para></para>
            <para></para>
            <list type="table">
            <listheader>
            <term>Value</term>
            <description>Description</description></listheader>
            <item>
            <term>Text</term>
            <description>Represents plain text and syntax highlighting will not be applied
            the text in the EditControl.</description></item>
            <item>
            <term>CSharp</term>
            <description>Represents C# files and applies syntax highlighting and outlining
            based on the built - in language specification for C#.</description></item>
            <item>
            <term>VisualBasic</term>
            <description>Represents Visual Basic files and applies syntax highlighting and
            outlining based on the built - in language specification for Visual
            Basic.</description></item>
            <item>
            <term>XAML</term>
            <description>Represents XAML files and applies syntax highlighting based on the
            built - in language specification for XAML.</description></item>
            <item>
            <term>XML</term>
            <description>Represents XML files and applies syntax highlighting based on the
            built - in language specification for XML.</description></item>
            <item>
            <term>Custom</term>
            <description>Represents user defined files and applies syntax highlighting based
            on the user defined language configurations applied using CustomLanguage
            property of EditControl class.</description></item></list>
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Edit.Languages.Text">
            <summary>
            Represents plain Text and syntax highlighting will not be applied
            the text in the EditControl.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.Languages.CSharp">
            <summary>
            Represents C# files and applies syntax highlighting and outlining
            based on the built - in language specification for C#.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.Languages.Custom">
            <summary>
            Represents user defined files and applies syntax highlighting based
            on the user defined language configurations applied using CustomLanguage
            property of EditControl class.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.Languages.VisualBasic">
            <summary>
            Represents Visual Basic files and applies syntax highlighting and
            outlining based on the built - in language specification for Visual
            Basic.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.Languages.XML">
            <summary>
            Represents XML files and applies syntax highlighting based on the
            built - in language specification for XML.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.Languages.XAML">
            <summary>
            Represents XAML files and applies syntax highlighting based on the
            built - in language specification for XAML.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.Languages.SQL">
            <summary>
            Represents XAML files and applies syntax highlighting based on the
            built - in language specification for XAML.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.EditTokenType">
            <summary>
            Specifies types of tokens supported by EditLanguage lexems
            </summary>
            <remarks>
            <para></para>
            <para></para>
            <list type="table">
            <listheader>
            <term>Value</term>
            <description>Description</description></listheader>
            <item>
            <term>Literals</term>
            <description>Represents the SyntaxHighlighting to the text. The Literal format
            color is applies to the text, which is located between start and end
            Text.</description></item>
            <item>
            <term>Keyword</term>
            <description>Represents the SyntaxHighlighting to the text. The Keyword format
            color is applies to the text, which is located between start and end
            Text.</description></item>
            <item>
            <term>Comment</term>
            <description>Represents the SyntaxHighlighting to the text. The Comment format
            color is applies to the text, which is located between start and end
            Text.</description></item>
            <item>
            <term>Preprocessor</term>
            <description>Represents the SyntaxHighlighting to the text. The Preprocessor
            format color is applies to the text, which is located between start and end
            Text.</description></item>
            <item>
            <term>Custom</term>
            <description>Represents user defined format and applies syntax highlighting based
            on the user defined format color.</description></item></list>
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditTokenType.Literals">
            <summary>
            Specified the Literal Token
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditTokenType.Keyword">
            <summary>
            Specified the Keyword Token
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditTokenType.Comment">
            <summary>
            Specified the Comment Token
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditTokenType.Operator">
            <summary>
            Specified the Operator Token
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditTokenType.Preprocessor">
            <summary>
            Specified the Preprocessor Token
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditTokenType.Custom">
            <summary>
            Specified the Custom Token
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditTokenType.CodeSnippet">
            <summary>
            Specified the CodeSnippet Token
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditTokenType.Property">
            <summary>
            Specified the Property Token
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditTokenType.NamespaceDeclaration">
            <summary>
            Specified the NamespaceDeclaration Token
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.Tabs">
            <summary>
            Tabs present in Find and Replace Window
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.Tabs.FindTab">
            <summary>
            Find Tab of Find And Replace Window
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.Tabs.ReplaceTab">
            <summary>
            Replace Tab of Find And Replace Window
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.Tabs.FindSymbolTab">
            <summary>
            Find Symbol Tab of Find And Replace Window
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.TabVisibility">
            <summary>
            Specifies the visibility of Find results tab.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.TabVisibility.Auto">
            <summary>
            Auto  - FindResults Tab will be whenever Find Symbol options is used and will be hidden when the Window is Closed explicitly or when FindReplace Window is closed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.TabVisibility.Visible">
            <summary>
            Visible - FindResults Tab will always be visible
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.TabVisibility.Collapsed">
            <summary>
            Collapsed - FindResults tab will always be collapsed even when the Find Symbol options is used.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.EditLanguageType">
            <summary>
            Specifies the types of languages
            </summary>
            <remarks>
            <para></para>
            <list type="table">
            <listheader>
            <term>Value</term>
            <description>Description</description></listheader>
            <item>
            <term>Procedural</term>
            <description>Represents the Procedural language like c, c++ etc.</description></item>
            <item>
            <term>Markup</term>
            <description>Represents the Markup language like XML and XAML.</description></item>
            </list>
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditLanguageType.Procedural">
            <summary>
            Specified the Procedural Language
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EditLanguageType.Markup">
            <summary>
            Specified the Markup Language
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.ScopeLevel">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.ScopeLevel.None">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.ScopeLevel.Namespace">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.ScopeLevel.Class">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.ScopeLevel.Member">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.ScopeLevel.StaticMember">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.ScopeLevel.All">
             <summary>
            
             </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.IntellisenseMode">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.IntellisenseMode.Auto">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.IntellisenseMode.Custom">
             <summary>
            
             </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.LineModificationState">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LineModificationState.Unchanged">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LineModificationState.Modified">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LineModificationState.Saved">
             <summary>
            
             </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.IndentingOptions">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.IndentingOptions.None">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.IndentingOptions.Block">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.IndentingOptions.Smart">
             <summary>
            
             </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.EnterKeyBehavior">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EnterKeyBehavior.Default">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.EnterKeyBehavior.VS">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.Localization.ResourceWrapper">
            <summary>
            Represents the ResourceWrapper class
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Localization.ResourceWrapper.#ctor">
            <summary>
            Represents the ResourceWrapper constructor
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.ResourceWrapper.UndoText">
            <summary>
            Get and set the UndoText 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.ResourceWrapper.RedoText">
            <summary>
             Get and set the RedoText 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.ResourceWrapper.CutText">
            <summary>
             Get and set the CutText Property 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.ResourceWrapper.CopyText">
            <summary>
             Get and set the CopyText Property 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.ResourceWrapper.PasteText">
            <summary>
             Get and set the PasteText Property 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.ResourceWrapper.SelectallText">
            <summary>
             Get and set the SelectallText Property 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.ResourceWrapper.OutliningText">
            <summary>
            Get and set the OutliningText Property
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.ResourceWrapper.ExpandallText">
            <summary>
             Get and set the ExpandallText Property 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.ResourceWrapper.CollapseallText">
            <summary>
             Get and set the Collapseall Property 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.ResourceWrapper.IncreaseindentText">
            <summary>
             Get and set the IncreaseindentText Property 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.ResourceWrapper.DecreaseindentText">
            <summary>
             Get and set the DecreaseindentText Property 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.ResourceWrapper.CommentlinesText">
            <summary>
             Get and set the CommentlinesText Property 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.ResourceWrapper.UncommentlinesText">
            <summary>
             Get and set the UnCommentlinesText Property 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.ResourceWrapper.QuickfindText">
            <summary>
             Get and set the QuickFindText property
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.ResourceWrapper.FindsymbolText">
            <summary>
            Get and set the FindSymbolText property
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.ResourceWrapper.SwitchtoquickfindtooltipText">
            <summary>
            Get and set the SwicthtoquickfindtooltipText Property
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.ResourceWrapper.SwitchtofindsymboltooltipText">
            <summary>
            Get and set the Swicthtofindsymboltooltiptext property
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.ResourceWrapper.QuickreplaceText">
            <summary>
            Get and set the QuickReplaceText property
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.ResourceWrapper.SwitchtoquickreplacetooltipText">
            <summary>
            Get and set the SwitchtoquickreplacetooltipText Property
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.ResourceWrapper.FindoptionText">
            <summary>
            Get and set the FindOptionText property
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.ResourceWrapper.FindnextText">
            <summary>
            Get and set the FindnextTextProperty which is used for searching for next text
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.ResourceWrapper.OKButtonText">
            <summary>
            Get and set the OKButtonText which is used for Go to Line support
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.ResourceWrapper.CancelButtonText">
            <summary>
            Get and set the OKButtonText which is used for Go to Line support
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.ResourceWrapper.GoToLineHeaderText">
            <summary>
            Get and set the GoToLineHeaderText which is used for Go to Line support
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.ResourceWrapper.LineNumberText">
            <summary>
            Get and set the LineNumberText which is used for Go to Line support
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.ResourceWrapper.FindallText">
            <summary>
            Get and set the FindallText property 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.ResourceWrapper.ReplaceText">
            <summary>
             Get and set the ReplaceText Property
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.ResourceWrapper.ReplaceallText">
            <summary>
            Get and set the ReplaceallText Property
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.ResourceWrapper.FindwhatText">
            <summary>
            Get and set the FindWhatText property
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.ResourceWrapper.ReplacewithText">
            <summary>
            Get and set the ReplacewithText property
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.ResourceWrapper.FindSymbolResultText">
            <summary>
            Get and set the FindSymbolResultText property
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.ResourceWrapper.LookinText">
            <summary>
            Get and set the LookinText property 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.ResourceWrapper.MatchcaseText">
            <summary>
            Get and set the MatchCaseText property which is used for matching the case of the Text
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.ResourceWrapper.MatchwholewordText">
            <summary>
            Get and set the MatchWholeWordText property which is used for purpose of matching the whole word
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.ResourceWrapper.SearchupText">
            <summary>
            Get and set the SearchupText property
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.ResourceWrapper.SearchhiddenText">
            <summary>
            Get and set the SearchhiddenText property
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.ResourceWrapper.WholewordText">
            <summary>
            Get and set the WholeWordText property
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.ResourceWrapper.PrefixText">
            <summary>
            Get and set the PrefixText Property
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.ResourceWrapper.SubstringText">
            <summary>
            Get and set the SubStringText property
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.ResourceWrapper.FindandreplaceheaderText">
            <summary>
            Get and set the FindandReplaceHeader Text property
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.ResourceWrapper.CurrentdocumentText">
            <summary>
            Get and set the CurrentDocumentText Property
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.ResourceWrapper.SelectionText">
            <summary>
            Get and set the SelectionText Property
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.Localization.SR">
            <summary>
            Sealed class for SR
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Localization.SR.ReleaseResources">
            <summary>
            Static method for Release Resources
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Localization.SR.GetString(System.Globalization.CultureInfo,System.String,System.Object[])">
            <summary>
            Method to return culture and name
            </summary>
            <param name="culture"></param>
            <param name="name"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Localization.SR.GetString(System.String)">
            <summary>
            Method to return name
            </summary>
            <param name="name"></param>
            <returns>name</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Localization.SR.GetString(System.String,System.Object[])">
            <summary>
            Method to return name
            </summary>
            <param name="name"></param>
            <param name="args"></param>
            <returns>name</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Localization.SR.GetString(System.Globalization.CultureInfo,System.String)">
            <summary>
            Method to return culture and name
            </summary>
            <param name="culture"></param>
            <param name="name"></param>
            <returns>culture and name</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Localization.SR.GetObject(System.Globalization.CultureInfo,System.String)">
            <summary>
            Method to return Culture and name
            </summary>
            <param name="culture"></param>
            <param name="name"></param>
            <returns>culture and name</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Localization.SR.GetObject(System.String)">
            <summary>
            Method to return name
            </summary>
            <param name="name"></param>
            <returns>name</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Localization.SR.GetBoolean(System.Globalization.CultureInfo,System.String)">
            <summary>
            Method to return boolean value for name and culture
            </summary>
            <param name="culture"></param>
            <param name="name"></param>
            <returns>boolean value for name and culture</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Localization.SR.GetBoolean(System.String)">
            <summary>
            Method to return boolean value for name
            </summary>
            <param name="name"></param>
            <returns>boolean for name</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Localization.SR.GetByte(System.Globalization.CultureInfo,System.String)">
            <summary>
            Method to return byte for culture and name
            </summary>
            <param name="culture"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Localization.SR.GetByte(System.String)">
            <summary>
            Method to return name as byte
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Localization.SR.GetChar(System.Globalization.CultureInfo,System.String)">
            <summary>
            Method to return cultur and name as char
            </summary>
            <param name="culture"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Localization.SR.GetChar(System.String)">
            <summary>
            Method to return name as char
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Localization.SR.GetDouble(System.Globalization.CultureInfo,System.String)">
            <summary>
            Method to return culture and name as double
            </summary>
            <param name="culture"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Localization.SR.GetDouble(System.String)">
            <summary>
            Method to return the name as double
            </summary>
            <param name="name"></param>
            <returns>name</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Localization.SR.GetFloat(System.Globalization.CultureInfo,System.String)">
            <summary>
            Method to return the cultur and name as float
            </summary>
            <param name="culture"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Localization.SR.GetFloat(System.String)">
            <summary>
            Method to return name as float
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Localization.SR.GetInt(System.String)">
            <summary>
            Method to return name as int
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Localization.SR.GetInt(System.Globalization.CultureInfo,System.String)">
            <summary>
            Method to return culture and name as int
            </summary>
            <param name="culture"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Localization.SR.GetLong(System.String)">
            <summary>
            Method to return name as long
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Localization.SR.GetLong(System.Globalization.CultureInfo,System.String)">
            <summary>
            Method to return culture and name as long
            </summary>
            <param name="culture"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Localization.SR.GetShort(System.Globalization.CultureInfo,System.String)">
            <summary>
            Method to return culture and name as short
            </summary>
            <param name="culture"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Localization.SR.GetShort(System.String)">
            <summary>
            Method to return name as short
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Localization.SR.SetDefaultNamespace(System.String)">
            <summary>
            Provide DefaultNamespace to ResourceManager if DefaultNameSpace and AssemblyName are different. 
            </summary>
            <param name="nameSpace">DefaultNamespace</param>
        </member>
        <member name="T:Syncfusion.Windows.Edit.Localization.Syncfusion_Edit_Wpf">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.Syncfusion_Edit_Wpf.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.Syncfusion_Edit_Wpf.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.Syncfusion_Edit_Wpf.CollapseallText">
            <summary>
              Looks up a localized string similar to Collapse All.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.Syncfusion_Edit_Wpf.CommentlinesText">
            <summary>
              Looks up a localized string similar to Comment Lines.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.Syncfusion_Edit_Wpf.CopyText">
            <summary>
              Looks up a localized string similar to Copy.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.Syncfusion_Edit_Wpf.CurrentdocumentText">
            <summary>
              Looks up a localized string similar to Current Document.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.Syncfusion_Edit_Wpf.CutText">
            <summary>
              Looks up a localized string similar to Cut.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.Syncfusion_Edit_Wpf.DecreaseindentText">
            <summary>
              Looks up a localized string similar to Decrease Indent.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.Syncfusion_Edit_Wpf.ExpandallText">
            <summary>
              Looks up a localized string similar to Expand All.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.Syncfusion_Edit_Wpf.FindallText">
            <summary>
              Looks up a localized string similar to Find All.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.Syncfusion_Edit_Wpf.FindandreplaceheaderText">
            <summary>
              Looks up a localized string similar to Find and Replace.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.Syncfusion_Edit_Wpf.FindnextText">
            <summary>
              Looks up a localized string similar to Find Next.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.Syncfusion_Edit_Wpf.FindoptionText">
            <summary>
              Looks up a localized string similar to Find Options.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.Syncfusion_Edit_Wpf.FindSymbolResultText">
            <summary>
              Looks up a localized string similar to Find Symbol Results.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.Syncfusion_Edit_Wpf.FindsymbolText">
            <summary>
              Looks up a localized string similar to Find Symbol.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.Syncfusion_Edit_Wpf.FindwhatText">
            <summary>
              Looks up a localized string similar to Fin_d what.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.Syncfusion_Edit_Wpf.IncreaseindentText">
            <summary>
              Looks up a localized string similar to Increase Indent.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.Syncfusion_Edit_Wpf.LookinText">
            <summary>
              Looks up a localized string similar to _Look in.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.Syncfusion_Edit_Wpf.MatchcaseText">
            <summary>
              Looks up a localized string similar to Match _case.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.Syncfusion_Edit_Wpf.MatchwholewordText">
            <summary>
              Looks up a localized string similar to Match _whole word.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.Syncfusion_Edit_Wpf.OutliningText">
            <summary>
              Looks up a localized string similar to Outlining.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.Syncfusion_Edit_Wpf.PasteText">
            <summary>
              Looks up a localized string similar to Paste.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.Syncfusion_Edit_Wpf.PrefixText">
            <summary>
              Looks up a localized string similar to Pref_ix.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.Syncfusion_Edit_Wpf.QuickfindText">
            <summary>
              Looks up a localized string similar to Quick Find.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.Syncfusion_Edit_Wpf.QuickreplaceText">
            <summary>
              Looks up a localized string similar to Quick Replace.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.Syncfusion_Edit_Wpf.RedoText">
            <summary>
              Looks up a localized string similar to Redo.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.Syncfusion_Edit_Wpf.ReplaceallText">
            <summary>
              Looks up a localized string similar to Replace All.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.Syncfusion_Edit_Wpf.ReplaceText">
            <summary>
              Looks up a localized string similar to Replace.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.Syncfusion_Edit_Wpf.ReplacewithText">
            <summary>
              Looks up a localized string similar to Re_place with.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.Syncfusion_Edit_Wpf.SearchhiddenText">
            <summary>
              Looks up a localized string similar to Search _hidden text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.Syncfusion_Edit_Wpf.SearchupText">
            <summary>
              Looks up a localized string similar to Search _up.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.Syncfusion_Edit_Wpf.SelectallText">
            <summary>
              Looks up a localized string similar to Select All.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.Syncfusion_Edit_Wpf.SelectionText">
            <summary>
              Looks up a localized string similar to Selection.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.Syncfusion_Edit_Wpf.SubstringText">
            <summary>
              Looks up a localized string similar to _Substring.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.Syncfusion_Edit_Wpf.SwitchtofindsymboltooltipText">
            <summary>
              Looks up a localized string similar to Switch to Find Symbol.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.Syncfusion_Edit_Wpf.SwitchtoquickfindtooltipText">
            <summary>
              Looks up a localized string similar to Switch to Quick Find.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.Syncfusion_Edit_Wpf.SwitchtoquickreplacetooltipText">
            <summary>
              Looks up a localized string similar to Switch to Quick Replace.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.Syncfusion_Edit_Wpf.UncommentlinesText">
            <summary>
              Looks up a localized string similar to Uncomment Lines.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.Syncfusion_Edit_Wpf.UndoText">
            <summary>
              Looks up a localized string similar to Undo.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Localization.Syncfusion_Edit_Wpf.WholewordText">
            <summary>
              Looks up a localized string similar to _Whole word.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.InsertionManager">
            <summary>
            InsertionManager is class used to insert and replace the text for the EditControl.
            </summary>
            <remarks>
            The InsertionManager class contains insertion and replace information of EditControl.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Edit.InsertionManager.InsertText(System.String,System.String,System.Int32)">
            <summary>
            Insert the new text into the existing text.
            </summary>
            <param name="existingtext">Gets the Existing text from the reporting source</param>
            <param name="insertiontext">Gets the new text from the reporting source</param>
            <param name="index">Gets the index position of the text to be insert</param>
            <returns>Returns the result string which contains the new text</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.InsertionManager.ReplaceText(System.String,System.String,System.Int32)">
            <summary>
            Replace the existing text with new text in InsertionManager.
            </summary>
            <param name="existingtext">Gets the Existing text from the reporting source</param>
            <param name="replacetext">Gets the text to be replace</param>
            <param name="index">Gets the index position of the text to be replace</param>
            <returns>Returns the result string</returns>
        </member>
        <member name="T:Syncfusion.Windows.Edit.ScopeDefinition">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.ScopeDefinition.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.ScopeDefinition.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Edit.ScopeDefinition.Type">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.ScopeDefinition.ScopeName">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.ScopeDefinition.StartLine">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.ScopeDefinition.EndLine">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.ScopeDefinition.StartItem">
             <summary>
            
             </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.LineItem">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LineItem.IsExpandedProperty">
            <summary>
            DependencyProperty for IsExpanded
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LineItem.ContainsLinesProperty">
            <summary>
            DependencyProperty for ContainsLines
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LineItem.TextProperty">
            <summary>
            DependencyProperty for Text
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LineItem.IsChildrenExpandedProperty">
            <summary>
            DependencyProperty for IsChildrenExpanded
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LineItem.LineNumberProperty">
            <summary>
            DependencyProperty for LineNumber
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LineItem.SelectionPathProperty">
            <summary>
            Gets or sets the SelectionPath
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LineItem.IsSelectedProperty">
            <summary>
            Gets or sets the IsSelected
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LineItem.EndLineProperty">
            <summary>
            Gets or sets EndLine property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LineItem.StartLineProperty">
            <summary>
            Gets or sets StartLine property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LineItem.ParentLineNumberProperty">
            <summary>
            Gets or sets ParentLineNumber property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LineItem.IsEndLineProperty">
            <summary>
            Gets or sets IsEndLine Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LineItem.LineStateProperty">
            <summary>
             // Using a DependencyProperty as the backing store for LineState.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LineItem.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
             <summary>
            
             </summary>
             <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LineItem.RaiseTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
             <summary>
            
             </summary>
             <param name="e"></param>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LineItem.textwidth">
            <summary>
            instance for TextWidth property.
            </summary>
            <value>
            Type: System.Double
            </value>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LineItem.selectionstartindex">
            <summary>
            instance for SelectionStartIndex property.
            </summary>
            <value>
            Type: System.Int32
            </value>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LineItem.selectionendindex">
            <summary>
            instance for SelectionEndIndex property.
            </summary>
            <value>
            Type: System.Int32
            </value>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LineItem.linestartblock">
            <summary>
            instance for LineStartBlock property.
            </summary>
            <value>
            Type: Syncfusion.Windows.Edit.BlockCodes
            </value>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LineItem.setcursoronload">
            <summary>
            instance for SetCursoronLoad property.
            </summary>
            <value>
            Type: System.Boolean
            </value>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LineItem.setcursorindex">
            <summary>
            instance for SetCursorIndex property.
            </summary>
            <value>
            Type: System.Int32
            </value>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LineItem.wordlist">
            <summary>
            instance for WordDetails property.
            </summary>
            <value>
            Type: Syncfusion.Windows.Edit.WordDetails
            </value>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LineItem.collection">
            <summary>
            Object of VisualCollection.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LineItem.parentcontrol">
            <summary>
            Object of EditControl.
            </summary>
            <value>
            Type: Syncfusion.Windows.Edit.EditControl
            </value>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LineItem.isBackgroundColorModified">
            <summary>
            Indicate whether the BackgroundColor of the Line modified or not.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.LineItem.IsFullLine">
            <summary>
            Indicate whether it is full line or not.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LineItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Edit.LineItem"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LineItem.#cctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Edit.LineItem"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LineItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Edit.LineItem"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LineItem.LineItem_Unloaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Remove CursorLayer object from LineItem and set SetCursorOnLoad and SetCursorIndex
            </summary>
            <param name="sender">represents the LineItem object</param>
            <param name="e">represents RoutedEventArgs</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LineItem.LineItem_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Applying a DrawingVisual to collection.
            </summary>
            <param name="sender">Gets the sender object from the reporting source</param>
            <param name="e">Gets the RoutedEventArgs object from the reporting source</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LineItem.GetLineNumber">
            <summary>
            Helper method to get the LineNumber of LineItem from Lines collection EditControl
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LineItem.GetEditControl">
            <summary>
            Helper method to get reference of parent EditControl in VisualTree
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LineItem.InitializeValues">
            <summary>
            Helper method to initialize events for LineItem object
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LineItem.DrawText(System.Windows.Media.DrawingVisual)">
            <summary>
            Helper method used to render the text in the line using a DrawingVisual
            </summary>
            <remarks>
            DrawTest method draws the text based on the lineheight, preferred width. The
            text should be formatted with fontfamily, fontsize, foreground properties.
            </remarks>
            <param name="drawingVisual"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LineItem.GetPreprocessorType">
            <summary>
            Helper method to get the Preprocessor or Block that it represents.
            </summary>
            <returns>a BlockListener object indicating the block details</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LineItem.Refresh">
            <summary>
            Helper method to Refresh the LineItem's properties
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LineItem.CalculateItemWidth(System.String)">
            <summary>
            Helper method to calculate the width of the lineitem
            </summary>
            <param name="text">Gets the text from the reporting source</param>
            <returns>Returns the width of the text</returns>
            <remarks>CalculateItemWidth is used to calculate the item width based on the specified text.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LineItem.CalculateItemHeight(System.String)">
            <summary>
            Helper method to calculate the height of the lineitem
            </summary>
            <param name="text">Gets the text from the reporting source</param>
            <returns>Return the formatted text height</returns>
            <remarks>CalculateItemHeight is used to calculate the item height based on the specified text.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LineItem.UpdateCursorPosition">
            <summary>
            Helper method to update the cursor position and selection when a line item object is collapsed or expanded.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LineItem.GetLineItemExpandDetails">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LineItem.CopyExpandDetails(Syncfusion.Windows.Edit.LineItem)">
             <summary>
            
             </summary>
             <param name="item"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LineItem.OnSelectionPathChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Gets called when SelectionPath property of the SelectionLayer gets changed. Also it triggers
            the SelectionPathChanged Event of the SelectionLayer.
            </summary>
            <param name="d">DepdendencyObject, returns SelectionLayer</param>
            <param name="e">DependencyPropertyChangedEventArgs, returns old and new
            value</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LineItem.OnContainsLinesChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when ContainsLinesChanged.
            </summary>
            <param name="d">DepdendencyObject from the requested source</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LineItem.OnTextChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when Text Changed.
            </summary>
            <param name="d">DepdendencyObject from the requested source</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LineItem.OnExpandedChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when ExpandedChanged.
            </summary>
            <param name="d">DepdendencyObject from the requested source</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LineItem.GetVisualChild(System.Int32)">
            <summary>
            Overrides <see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)"/>, and returns a child at the specified index from a collection of child elements.
            </summary>
            <param name="index">The zero-based index of the requested child element in the collection.</param>
            <returns>
            The requested child element. This should not return null; if the provided index is out of range, an exception is thrown.
            </returns>
            <remarks>GetVisualChild is the Override method used to get the visual child from the visual collection based on the index value.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LineItem.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.LineItem.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
             <summary>
            
             </summary>
             <param name="e"></param>
        </member>
        <member name="E:Syncfusion.Windows.Edit.LineItem.OnItemTextChanged">
            <summary>
            Occurs when <see cref="T:Syncfusion.Windows.Edit.LineItem"/> is Changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LineItem.BackgroundColor">
            <summary>
            Gets or set the Background Color of a line 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LineItem.Text">
            <summary>
            Gets or sets the Text in a line
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LineItem.LineNumber">
            <summary>
            Gets the line number of the text
            </summary>
            <value>
            Type: System.Int32
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LineItem.TextWidth">
            <summary>
            Gets or sets width of the text in the line
            </summary>
            <value>
            Type: System.Double
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LineItem.IsSelected">
            <summary>
            Gets or sets a value indicating whether the line is selected.
            </summary>
            <value>
            Type: System.Boolean
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LineItem.SelectionStartIndex">
            <summary>
            Gets or sets the Start index of the text selection in the line
            </summary>
            <value>
            Type: System.Int32
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LineItem.IsExpanded">
            <summary>
            Gets or sets a value indicating whether the line is expanded or not
            </summary>
            <value>
            Type: System.Boolean
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LineItem.ContainsLines">
            <summary>
            Gets or sets a value indicating whether ContainsLines contain child item.
            </summary>
            <value>
            Type: System.Boolean
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LineItem.StartLine">
            <summary>
            Gets or sets the StartLine
            </summary>
            <value>
            Type: System.Int32
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LineItem.EndLine">
            <summary>
            Gets or sets the EndLine
            </summary>
            <value>
            Type: System.Int32
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LineItem.SelectionEndIndex">
            <summary>
            Gets or sets the End index of the text selection
            </summary>
            <value>
            Type: System.Int32
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LineItem.ParentControl">
            <summary>
            Gets parent editcontrol
            </summary>
            <value>
            Type: Syncfusion.Windows.Edit.EditControl
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LineItem.ParentLineNumber">
            <summary>
            Gets or sets the ParentLineNumber
            </summary>
            <value>
            Type: System.Int32
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LineItem.LineStartBlock">
            <summary>
            Gets or sets the LineStartBlock
            </summary>
            <value>
            Type: Syncfusion.Windows.Edit.BlockCodes
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LineItem.SetCursorOnLoad">
            <summary>
            Gets or sets a value indicating whether the SetCursorOnLoad true or false.
            </summary>
            <value>
            Type: System.Boolean
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LineItem.SetCursorIndex">
            <summary>
            Gets or sets the SetCursorIndex
            </summary>
            <value>
            Type: System.Int32
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LineItem.IsChildrenExpanded">
            <summary>
            Gets or sets a value indicating whether the IsChildrenExpanded is true or false
            </summary>
            <value>
            Type: System.Boolean
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LineItem.WordsCollection">
            <summary>
            Gets the WordsCollection
            </summary>
            <value>
            Type: System.Int32
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LineItem.IsEndLine">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LineItem.SelectionPath">
            <summary>
            Gets or sets the SelectionPath
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LineItem.LineState">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.LineItem.VisualChildrenCount">
            <summary>
            Gets the number of visual child elements.
            </summary>
            <returns>
            The number of visual child elements for this element.
            </returns>
            <remarks>VisualChildrenCount is the Override method used to get the count of the visual child from the visual collection.</remarks>
        </member>
        <member name="T:Syncfusion.Windows.Edit.LineItem.ItemTextChanged">
            <summary>
            Handles <see cref="T:Syncfusion.Windows.Edit.LineItem"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> value that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Edit.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.SelectionPointer">
            <summary>
            SelectionPointer class is used to hold values related to text selection
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.SelectionPointer.startindex">
            <summary>
            instance for StartIndex property.
            </summary>
            <value>
            Type: System.Int32
            </value>
        </member>
        <member name="F:Syncfusion.Windows.Edit.SelectionPointer.endindex">
            <summary>
            instance for EndIndex property.
            </summary>
            <value>
            Type: System.Int32
            </value>
        </member>
        <member name="F:Syncfusion.Windows.Edit.SelectionPointer.startline">
            <summary>
            instance for StartLine property.
            </summary>
            <value>
            Type: System.Int32
            </value>
        </member>
        <member name="F:Syncfusion.Windows.Edit.SelectionPointer.endline">
            <summary>
            instance for EndLine property.
            </summary>
            <value>
            Type: System.Int32
            </value>
        </member>
        <member name="F:Syncfusion.Windows.Edit.SelectionPointer.temp">
            <summary>
            temp variable for LineIndex property.
            </summary>
            <value>
            Type: System.Int32
            </value>
        </member>
        <member name="M:Syncfusion.Windows.Edit.SelectionPointer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Edit.SelectionPointer"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.SelectionPointer.OnSelectionPointerChanged(Syncfusion.Windows.Edit.SelectionPointerChangedEventArgs)">
            <summary>
            When PropertyChanged event raised, that property is changed on a component.
            </summary>
            <param name="args">The arguments of Selection pointer values changed</param>
        </member>
        <member name="P:Syncfusion.Windows.Edit.SelectionPointer.StartLine">
            <summary>
            Gets or sets the Start line of the Selection
            </summary>
            <value>
            Type: System.Int32
            </value>
            <remarks>
            Specifies the StartLine.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Edit.SelectionPointer.EndLine">
            <summary>
            Gets or sets the End line of the Selection
            </summary>
            <value>
            Type: System.Int32
            </value>
            <remarks>
            Specifies the EndLine.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Edit.SelectionPointer.StartIndex">
            <summary>
            Gets or sets the Start Index of the Selection
            </summary>
            <value>
            Type: System.Int32
            </value>
            <remarks>
            Specifies the StartIndex.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Edit.SelectionPointer.EndIndex">
            <summary>
            Gets or sets the End Index of the Selection
            </summary>
            <value>
            Type: System.Int32
            </value>
            <remarks>
            Specifies the EndIndex.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Edit.SelectionPointer.SelectionPointerChanged">
            <summary>
            Occurs when SelectionPointerChanged in the SelectionPointer.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.SelectionPointerChangedEventHandler">
            <summary>
            Delegate for SelectionPointerChangedEvent
            </summary>
            <param name="sender">Gets the sender object from the reporting source</param>
            <param name="args">Gets the SelectionPointerChangedEventArgs object from the reporting source</param>
        </member>
        <member name="T:Syncfusion.Windows.Edit.SelectionPointerChangedEventArgs">
            <summary>
            Custom eventargs class for Selection pointer values
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.SelectionPointerChangedEventArgs.mnewvalue">
            <summary>
            instance for NewValue property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.SelectionPointerChangedEventArgs.moldvalue">
            <summary>
            instance for OldValue property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.SelectionPointerChangedEventArgs.mproperty">
            <summary>
            instance for PropertyName property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.SelectionPointerChangedEventArgs.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Edit.SelectionPointerChangedEventArgs"/> class.
            </summary>
            <param name="property">Gets the property from the reporting source</param>
            <param name="oldValue">Gets the oldValue from the reporting source</param>
            <param name="newValue">Gets the newValue from the reporting source</param>
        </member>
        <member name="P:Syncfusion.Windows.Edit.SelectionPointerChangedEventArgs.NewValue">
            <summary>
            Gets the new value of the property
            </summary>
            <value>
            Type: System.Int32
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.SelectionPointerChangedEventArgs.OldValue">
            <summary>
            Gets the old values of the property
            </summary>
            <value>
            Type: System.Int32
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.SelectionPointerChangedEventArgs.PropertyName">
            <summary>
            Gets the name of the property
            </summary>
            <value>
            Type: System.String
            </value>
        </member>
        <member name="T:Syncfusion.Windows.Edit.TextLanguage">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.TextLanguage.#ctor(Syncfusion.Windows.Edit.EditControl)">
             <summary>
            
             </summary>
             <param name="control"></param>
        </member>
        <member name="T:Syncfusion.Windows.Edit.Utils">
            <summary>
            Utils contains static method to perform utility functions
            </summary>
            <remarks>
            The Util class used to bound the objects and also it has format methods like GetWidth, GetFormattedText.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Utils.GetWidth(System.String,System.Windows.Media.FontFamily,System.Double,System.Windows.Media.Brush)">
            <summary>
            GetWidth method used to calculate the text width based on the text, fontfamily, fontsize and
            foreground
            </summary>
            <remarks>
            This method used to calculate the width of the text.
            </remarks>
            <param name="text">The text to format.</param>
            <param name="fontFamily">Fontfamily of the text.</param>
            <param name="fontSize">Fontsize of the text.</param>
            <param name="foreground">Foreground of the text.</param>
            <returns>
            Returns the formatted text width.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Utils.GetHeight(System.String,System.Windows.Media.FontFamily,System.Double,System.Windows.Media.Brush)">
            <summary>
            GetHeight method used to calculate the text height based on the text, fontfamily, fontsize and
            foreground
            </summary>
            <remarks>
            This method used to calculate the width of the text.
            </remarks>
            <param name="text">The text to format.</param>
            <param name="fontFamily">Fontfamily of the text.</param>
            <param name="fontSize">Fontsize of the text.</param>
            <param name="foreground">Foreground of the text.</param>
            <returns>
            Returns the formatted text width.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Utils.GetFormattedText(System.String,System.Windows.Media.FontFamily,System.Double,System.Windows.Media.Brush)">
            <summary>
            GetFormattedText methods is used to get the formatted text based on the text, fontfamily, fontsize,
            foreground parameters.
            </summary>
            <remarks>
            This method used to get the formatted text with the specified fontfamily,
            fontsize and foreground.
            </remarks>
            <param name="text">The text to be format.</param>
            <param name="fontFamily">Fontfamily of the text.</param>
            <param name="fontSize">Fontsize of the text.</param>
            <param name="foreground">Foreground of the text.</param>
            <returns>
            Returns the formatted text.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Utils.GetFormattedTextDecoration(System.String,System.Windows.Media.FontFamily,System.Double,System.Windows.Media.Brush,Syncfusion.Windows.Edit.Interfaces.ISnippetFormat)">
            <summary>
            GetFormattedTextDecoration method used to get the formatted text and text decoration based on the text, fontfamily, fontsize,
            foreground,format parameters.
            </summary>
            <param name="text"></param>
            <param name="fontFamily"></param>
            <param name="fontSize"></param>
            <param name="foreground"></param>
            <param name="format"></param>
            <returns>Returns the formatted and decorated text</returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Utils.BindObjects(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.String,System.Object,System.Windows.Data.BindingMode,System.Windows.Data.UpdateSourceTrigger)">
            <summary>
            Helper method to bind objects with updatesourcetrigger
            </summary>
            <remarks>
            This method used to bind the target object from the source object.
            </remarks>
            <param name="target">The target.</param>
            <param name="property">Dependency property.</param>
            <param name="path">The path of the Source.</param>
            <param name="source">The source to bind.</param>
            <param name="mode">The mode of binding.</param>
            <param name="trigger">The update source trigger.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Utils.BindObjects(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.String,System.Object)">
            <summary>
            Helper method to bind objects with source, property, target and propertypath
            </summary>
            <param name="target">The target.</param>
            <param name="property">Dependency property.</param>
            <param name="path">The path of the Source.</param>
            <param name="source">The source to bind.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Utils.BindObjectsToControl(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.String)">
            <summary>
            Bind a EditControl property with the the target object property.
            </summary>
            <param name="target">The target.</param>
            <param name="property">Dependency property.</param>
            <param name="path">The path of the Source.</param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.Utils.BindObjectsToControl(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.String,System.Windows.Data.BindingMode,System.Windows.Data.UpdateSourceTrigger)">
            <summary>
            Bind a EditControl property with the target object property.
            </summary>
            <param name="target">The target.</param>
            <param name="property">Dependency property.</param>
            <param name="path">The path of the Source.</param>
            <param name="mode">The mode of binding.</param>
            <param name="trigger">The trigger.</param>
        </member>
        <member name="T:Syncfusion.Windows.Edit.VariableLineWidthProvider">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.VariableLineWidthProvider.#ctor(Syncfusion.Windows.Edit.EditScrollControl,Syncfusion.Windows.Controls.Scroll.LineSizeCollection,System.Boolean)">
             <summary>
            
             </summary>
             <param name="presenter"></param>
             <param name="collection"></param>
             <param name="isRowItem"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.VariableLineWidthProvider.GetNestedLines(System.Int32)">
             <summary>
            
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.VariableLineWidthProvider.SetNestedLines(System.Int32,Syncfusion.Windows.Controls.Scroll.IEditableLineSizeHost)">
             <summary>
            
             </summary>
             <param name="index"></param>
             <param name="nestedLines"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.VariableLineWidthProvider.InsertLines(System.Int32,System.Int32,Syncfusion.Windows.Controls.Scroll.IEditableLineSizeHost)">
             <summary>
            
             </summary>
             <param name="insertAtLine"></param>
             <param name="count"></param>
             <param name="moveLines"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.VariableLineWidthProvider.RemoveLines(System.Int32,System.Int32,Syncfusion.Windows.Controls.Scroll.IEditableLineSizeHost)">
             <summary>
            
             </summary>
             <param name="removeAtLine"></param>
             <param name="count"></param>
             <param name="moveLines"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.VariableLineWidthProvider.CreateMoveLines">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.VariableLineWidthProvider.SetHidden(System.Int32,System.Int32,System.Boolean)">
             <summary>
            
             </summary>
             <param name="from"></param>
             <param name="to"></param>
             <param name="hide"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.VariableLineWidthProvider.SetRange(System.Int32,System.Int32,System.Double)">
             <summary>
            
             </summary>
             <param name="from"></param>
             <param name="to"></param>
             <param name="size"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.VariableLineWidthProvider.GetDefaultLineSize">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.VariableLineWidthProvider.GetLineCount">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.VariableLineWidthProvider.GetSize(System.Int32,System.Int32@)">
             <summary>
            
             </summary>
             <param name="index"></param>
             <param name="repeatValueCount"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.VariableLineWidthProvider.GetHeaderLineCount">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.VariableLineWidthProvider.GetFooterLineCount">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.VariableLineWidthProvider.GetHidden(System.Int32,System.Int32@)">
             <summary>
            
             </summary>
             <param name="index"></param>
             <param name="repeatValueCount"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Edit.VariableLineWidthProvider.InitializeScrollAxis(Syncfusion.Windows.Controls.Scroll.ScrollAxisBase)">
             <summary>
            
             </summary>
             <param name="scrollAxis"></param>
        </member>
        <member name="M:Syncfusion.Windows.Edit.VariableLineWidthProvider.Dispose">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.VariableLineWidthProvider.TotalExtent">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.VariableLineWidthProvider.SupportsNestedLines">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.VariableLineWidthProvider.SupportsInsertRemove">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.VariableLineWidthProvider.DefaultLineSize">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.VariableLineWidthProvider.FooterLineCount">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.VariableLineWidthProvider.HeaderLineCount">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.VariableLineWidthProvider.LineCount">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.VariableLineWidthProvider.Item(System.Int32)">
             <summary>
            
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="E:Syncfusion.Windows.Edit.VariableLineWidthProvider.LineSizeChanged">
             <summary>
            
             </summary>
        </member>
        <member name="E:Syncfusion.Windows.Edit.VariableLineWidthProvider.LineHiddenChanged">
             <summary>
            
             </summary>
        </member>
        <member name="E:Syncfusion.Windows.Edit.VariableLineWidthProvider.DefaultLineSizeChanged">
             <summary>
            
             </summary>
        </member>
        <member name="E:Syncfusion.Windows.Edit.VariableLineWidthProvider.LineCountChanged">
             <summary>
            
             </summary>
        </member>
        <member name="E:Syncfusion.Windows.Edit.VariableLineWidthProvider.HeaderLineCountChanged">
             <summary>
            
             </summary>
        </member>
        <member name="E:Syncfusion.Windows.Edit.VariableLineWidthProvider.FooterLineCountChanged">
             <summary>
            
             </summary>
        </member>
        <member name="E:Syncfusion.Windows.Edit.VariableLineWidthProvider.LinesInserted">
             <summary>
            
             </summary>
        </member>
        <member name="E:Syncfusion.Windows.Edit.VariableLineWidthProvider.LinesRemoved">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.VariableLineWidthProvider.ParentControl">
             <summary>
            
             </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.ItemsRowHeightsEventArgs">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.ItemsRowHeightsEventArgs.#ctor(System.Int32,System.Boolean)">
             <summary>
            
             </summary>
             <param name="colIndex"></param>
             <param name="isRow"></param>
        </member>
        <member name="P:Syncfusion.Windows.Edit.ItemsRowHeightsEventArgs.Index">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.ItemsRowHeightsEventArgs.Value">
             <summary>
            
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.ItemsRowHeightsEventArgs.IsRow">
             <summary>
            
             </summary>
        </member>
        <member name="T:Syncfusion.Windows.Edit.WordDetails">
            <summary>
            Word Details class is used to store values related to tokens in the line
            </summary>
            <remarks>
            <para>The word details class contain the word properties like StartIndex,
            EndIndex, Foreground, Font etc.</para>
            </remarks>
            <example>
            <para></para>
            <para><b>XAML</b></para>
            <para></para>
            <para>&lt;Window x:Class=&quot;SampleApplication.Window1&quot; </para>
            <para> xmlns=&quot;http://
            schemas.microsoft.com/winfx/2006/xaml/presentation&quot; xmlns:x=&quot;http://
            schemas.microsoft.com/winfx/2006/xaml&quot; Title=&quot;Window1&quot;
            Height=&quot;300&quot; Width=&quot;300&quot;
            xmlns:syncfusion=&quot;http://schemas.syncfusion.com/wpf&quot;&gt;</para>
            <para>    &lt;Grid&gt;</para>
            <para>        &lt;syncfusion:WordDetails StartIndex=&quot;0&quot;
            EndIndex=&quot;12&quot; FontSize=&quot;12&quot; /&gt;</para>
            <para>    &lt;/Grid&gt;</para>
            <para>&lt;/Window&gt;</para>
            <para></para>
            <para><b>C#</b></para>
            <para></para>
            <para>WordDetails WordDetails = new WordDetails();</para>
            <para>WordDetails.StartIndex = 0;</para>
            <para>WordDetails.EndIndex = 10;</para>
            <para>WordDetails.FontSize = 12;</para>
            </example>
        </member>
        <member name="F:Syncfusion.Windows.Edit.WordDetails.mtext">
            <summary>
            instance for Text property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.WordDetails.mstartindex">
            <summary>
            instance for StartIndex property. property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.WordDetails.mendindex">
            <summary>
            instance for EndIndex property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.WordDetails.mstartlocation">
            <summary>
            instance for StartPosition property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.WordDetails.mendlocation">
            <summary>
            Point object for EndPosition property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.WordDetails.mforeground">
            <summary>
            Brush object for Foreground property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.WordDetails.mfont">
            <summary>
            FontFamily object for Font property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Edit.WordDetails.mfontsize">
            <summary>
            instance for FontSize property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.WordDetails.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Edit.WordDetails"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.WordDetails.Text">
            <summary>
            Gets or sets Token's text
            </summary>
            <value>
            Type: System.String
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.WordDetails.StartIndex">
            <summary>
            Gets or sets Token's Start Index with respect to LineItem
            </summary>
            <value>
            Type: System.Int32
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.WordDetails.EndIndex">
            <summary>
            Gets or sets Token's End Index with respect to LineItem
            </summary>
            <value>
            Type: System.Int32
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Edit.WordDetails.IsMatched">
            <summary>
            Gets / Sets the whether the word is Matched and split for Regex case
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.WordDetails.MatchedText">
            <summary>
            Gets / Sets the whether the word is Matched and split for Regex case
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.WordDetails.StartPosition">
            <summary>
            Gets or sets Token's Start Position with the screen points
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.WordDetails.EndPosition">
            <summary>
            Gets or sets Token's End Position with respect to screen points
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.WordDetails.Foreground">
            <summary>
            Gets or sets token's foreground brush
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.WordDetails.Font">
            <summary>
            Gets or sets token's FontFamily
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Edit.WordDetails.FontSize">
            <summary>
            Gets or sets token's FontSize
            </summary>
            <value>
            Type: System.Double
            </value>
        </member>
        <member name="T:Syncfusion.Windows.Edit.XAMLLanguage">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Edit.XAMLLanguage.#ctor(Syncfusion.Windows.Edit.EditControl)">
             <summary>
            
             </summary>
             <param name="control"></param>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
